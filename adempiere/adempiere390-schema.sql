--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.14
-- Dumped by pg_dump version 10.3 (Ubuntu 10.3-1.pgdg16.04+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: adempiere; Type: SCHEMA; Schema: -; Owner: adempiere
--

CREATE SCHEMA adempiere;


ALTER SCHEMA adempiere OWNER TO adempiere;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: acctbalance(numeric, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.acctbalance(p_account_id numeric, p_amtdr numeric, p_amtcr numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	v_balance	NUMERIC;
	v_AccountType   C_ElementValue.AccountType%TYPE;
    	v_AccountSign   C_ElementValue.AccountSign%TYPE;

BEGIN
	    v_balance := p_AmtDr - p_AmtCr;
	    --  
	    IF (p_Account_ID > 0) THEN
	        SELECT AccountType, AccountSign
	          INTO v_AccountType, v_AccountSign
	        FROM C_ElementValue
	        WHERE C_ElementValue_ID=p_Account_ID;
	   --   DBMS_OUTPUT.PUT_LINE('Type=' || v_AccountType || ' - Sign=' || v_AccountSign);
	        --  Natural Account Sign
	        IF (v_AccountSign='N') THEN
	            IF (v_AccountType IN ('A','E')) THEN
	                v_AccountSign := 'D';
	            ELSE
	                v_AccountSign := 'C';
	            END IF;
	        --  DBMS_OUTPUT.PUT_LINE('Type=' || v_AccountType || ' - Sign=' || v_AccountSign);
	        END IF;
	        --  Debit Balance
	        IF (v_AccountSign = 'C') THEN
	            v_balance := p_AmtCr - p_AmtDr;
	        END IF;
	    END IF;
	    --
	    RETURN v_balance;
	EXCEPTION WHEN OTHERS THEN
	    -- In case Acct not found
    	RETURN  p_AmtDr - p_AmtCr;
	
END;

$$;


ALTER FUNCTION adempiere.acctbalance(p_account_id numeric, p_amtdr numeric, p_amtcr numeric) OWNER TO adempiere;

--
-- Name: add_months(timestamp with time zone, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.add_months(datetime timestamp with time zone, months numeric) RETURNS date
    LANGUAGE plpgsql
    AS $$
declare duration varchar;
BEGIN
	if datetime is null or months is null then
		return null;
	end if;
	duration = months || ' month';	 
	return cast(datetime + cast(duration as interval) as date);
END;
$$;


ALTER FUNCTION adempiere.add_months(datetime timestamp with time zone, months numeric) OWNER TO adempiere;

--
-- Name: adddays(interval, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.adddays(inter interval, days numeric) RETURNS integer
    LANGUAGE plpgsql
    AS $$
BEGIN
RETURN ( EXTRACT( EPOCH FROM ( inter ) ) / 86400 ) + days;
END;
$$;


ALTER FUNCTION adempiere.adddays(inter interval, days numeric) OWNER TO adempiere;

--
-- Name: adddays(timestamp with time zone, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.adddays(datetime timestamp with time zone, days numeric) RETURNS date
    LANGUAGE plpgsql
    AS $$
declare duration varchar;
BEGIN
	if datetime is null or days is null then
		return null;
	end if;
	duration = days || ' day';	 
	return cast(date_trunc('day',datetime) + cast(duration as interval) as date);
END;
$$;


ALTER FUNCTION adempiere.adddays(datetime timestamp with time zone, days numeric) OWNER TO adempiere;

--
-- Name: altercolumn(name, name, name, character varying, character varying); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.altercolumn(tablename name, columnname name, datatype name, nullclause character varying, defaultclause character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
   command text;
   viewtext text[];
   viewname name[];
   dropviews name[];
   i int;
   j int;
   v record;
   sqltype       text;
   sqltype_short text;
   typename name;
begin
   if datatype is not null then
	select pg_type.typname, format_type(pg_type.oid, pg_attribute.atttypmod)
        into typename, sqltype
        from pg_class, pg_attribute, pg_type
        where relname = lower(tablename)
        and relkind = 'r'
        and pg_class.oid = pg_attribute.attrelid
        and attname = lower(columnname)
        and atttypid = pg_type.oid;
        sqltype_short := sqltype;
        if typename = 'numeric' then
	   sqltype_short := replace(sqltype, ',0', '');
        elsif strpos(sqltype,'character varying') = 1 then
	   sqltype_short := replace(sqltype, 'character varying', 'varchar');
        elsif sqltype = 'timestamp without time zone' then
           sqltype_short := 'timestamp';
        end if;
        if lower(datatype) <> sqltype and lower(datatype) <> sqltype_short then
		i := 0;
		for v in select a.relname, a.oid 
			from pg_class a, pg_depend b, pg_depend c, pg_class d, pg_attribute e
			where a.oid = b.refobjid
			and b.objid = c.objid
			and b.refobjid <> c.refobjid
			and b.deptype = 'n'
			and c.refobjid = d.oid
			and d.relname = lower(tablename)
			and d.relkind = 'r'
			and d.oid = e.attrelid
			and e.attname = lower(columnname)
			and c.refobjsubid = e.attnum
			and a.relkind = 'v'
		 loop
		    i := i + 1;
		    viewtext[i] := pg_get_viewdef(v.oid);
		    viewname[i] := v.relname;
		end loop;
		if i > 0 then
		   begin
		     for j in 1 .. i loop
		        command := 'drop view ' || viewname[j];
		        execute command;
		        dropviews[j] := viewname[j];
		     end loop;
                     exception
                        when others then
                          i := array_upper(dropviews, 1);
                          if i > 0 then
                             for j in 1 .. i loop
                                command := 'create or replace view ' || dropviews[j] || ' as ' || viewtext[j];
		                execute command;
                             end loop;
                          end if;
                          raise exception 'Failed to recreate dependent view';
                   end;
		end if;
		command := 'alter table ' || lower(tablename) || ' alter column ' || lower(columnname) || ' type ' || lower(datatype);
		execute command;
                i := array_upper(dropviews, 1);
		if i > 0 then
		   for j in 1 .. i loop
		     command := 'create or replace view ' || dropviews[j] || ' as ' || viewtext[j];
		     execute command;
		   end loop;
		end if;
        end if;
   end if;
   
   if defaultclause is not null then
       if lower(defaultclause) = 'null' then
          command := 'alter table ' || lower(tablename) || ' alter column ' || lower(columnname) || ' drop default ';
       else
	  command := 'alter table ' || lower(tablename) || ' alter column ' || lower(columnname) || ' set default ''' || defaultclause || '''';
       end if;
       execute command;
   end if;
   
   if nullclause is not null then
      if lower(nullclause) = 'not null' then
          command := 'alter table ' || lower(tablename) || ' alter column ' || lower(columnname) || ' set not null';
          execute command;
      elsif lower(nullclause) = 'null' then
          command := 'alter table ' || lower(tablename) || ' alter column ' || lower(columnname) || ' drop not null';
          execute command;
      end if;
   end if;
end;
$$;


ALTER FUNCTION adempiere.altercolumn(tablename name, columnname name, datatype name, nullclause character varying, defaultclause character varying) OWNER TO adempiere;

--
-- Name: bompricelimit(numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.bompricelimit(p_product_id numeric, p_pricelist_version_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	v_Price		numeric;
	v_ProductPrice	numeric;
	bom		record;
BEGIN
	--	Try to get price from PriceList directly
	SELECT	COALESCE (SUM(PriceLimit), 0)
        INTO	v_Price
   	FROM	M_PRODUCTPRICE
	WHERE M_PriceList_Version_ID=p_PriceList_Version_ID AND M_Product_ID=p_Product_ID;
	IF (v_Price = 0) THEN
		FOR bom in SELECT bl.M_Product_ID AS M_ProductBOM_ID, 
			CASE WHEN bl.IsQtyPercentage = 'N' THEN bl.QtyBOM ELSE bl.QtyBatch / 100 END AS BomQty , p.IsBOM 
		FROM PP_PRODUCT_BOM b
		INNER JOIN M_PRODUCT p ON (p.M_Product_ID=b.M_Product_ID)
		INNER JOIN PP_PRODUCT_BOMLINE bl ON (bl.PP_Product_BOM_ID=b.PP_Product_BOM_ID)
		WHERE b.M_Product_ID = p_Product_ID
		LOOP
			v_ProductPrice := Bompricelimit (bom.M_ProductBOM_ID, p_PriceList_Version_ID);
			v_Price := v_Price + (bom.BOMQty * v_ProductPrice);
		END LOOP;
	END IF;
	--
	RETURN v_Price;
END;
$$;


ALTER FUNCTION adempiere.bompricelimit(p_product_id numeric, p_pricelist_version_id numeric) OWNER TO adempiere;

--
-- Name: bompricelist(numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.bompricelist(product_id numeric, pricelist_version_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	v_Price		numeric;
	v_ProductPrice	numeric;
	bom 		record;
BEGIN
	--	Try to get price from pricelist directly
	SELECT	COALESCE (SUM(PriceList), 0)
	INTO	v_Price
   	FROM	M_PRODUCTPRICE
	WHERE M_PriceList_Version_ID=PriceList_Version_ID AND M_Product_ID=Product_ID;
--	DBMS_OUTPUT.PUT_LINE('Price=' || Price);

	--	No Price - Check if BOM
	IF (v_Price = 0) THEN
		FOR bom IN 
		--Get BOM Product info
		SELECT bl.M_Product_ID AS M_ProductBOM_ID, CASE WHEN bl.IsQtyPercentage = 'N' THEN bl.QtyBOM ELSE bl.QtyBatch / 100 END AS BomQty , p.IsBOM 
		FROM PP_PRODUCT_BOM b
				INNER JOIN M_PRODUCT p ON (p.M_Product_ID=b.M_Product_ID)
				INNER JOIN PP_PRODUCT_BOMLINE bl ON (bl.PP_Product_BOM_ID=b.PP_Product_BOM_ID)
		WHERE b.M_Product_ID = Product_ID  
		LOOP
			v_ProductPrice := Bompricelist (bom.M_ProductBOM_ID, PriceList_Version_ID);
			v_Price := v_Price + (bom.BOMQty * v_ProductPrice);
		--	DBMS_OUTPUT.PUT_LINE('Qry=' || bom.BOMQty || ' @ ' || v_ProductPrice || ', Price=' || v_Price);
		END LOOP;	--	BOM
	END IF;
	--
	RETURN v_Price;
END;
$$;


ALTER FUNCTION adempiere.bompricelist(product_id numeric, pricelist_version_id numeric) OWNER TO adempiere;

--
-- Name: bompricestd(numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.bompricestd(product_id numeric, pricelist_version_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	v_Price		numeric;
	v_ProductPrice	numeric;
	bom		record;
BEGIN
	--	Try to get price from pricelist directly
	SELECT	COALESCE(SUM(PriceStd), 0)
	INTO	v_Price
   	FROM	M_PRODUCTPRICE
	WHERE M_PriceList_Version_ID=PriceList_Version_ID AND M_Product_ID=Product_ID;
--	DBMS_OUTPUT.PUT_LINE('Price=' || v_Price);

	--	No Price - Check if BOM
	IF (v_Price = 0) THEN
		FOR bom IN 		--	Get BOM Product info
		SELECT bl.M_Product_ID AS M_ProductBOM_ID, CASE WHEN bl.IsQtyPercentage = 'N' THEN bl.QtyBOM ELSE bl.QtyBatch / 100 END AS BomQty , p.IsBOM 
		FROM PP_PRODUCT_BOM b
				INNER JOIN M_PRODUCT p ON (p.M_Product_ID=b.M_Product_ID)
				INNER JOIN PP_PRODUCT_BOMLINE bl ON (bl.PP_Product_BOM_ID=b.PP_Product_BOM_ID)
		WHERE b.M_Product_ID = Product_ID  
		LOOP
			v_ProductPrice := Bompricestd (bom.M_ProductBOM_ID, PriceList_Version_ID);
			v_Price := v_Price + (bom.BOMQty * v_ProductPrice);
		--	DBMS_OUTPUT.PUT_LINE('Price=' || v_Price);
		END LOOP;	--	BOM
	END IF;
	--
	RETURN v_Price;
END;
$$;


ALTER FUNCTION adempiere.bompricestd(product_id numeric, pricelist_version_id numeric) OWNER TO adempiere;

--
-- Name: bomqtyavailable(numeric, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.bomqtyavailable(product_id numeric, warehouse_id numeric, locator_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN bomQtyOnHand(Product_ID, Warehouse_ID, Locator_ID) - bomQtyReserved(Product_ID, Warehouse_ID, Locator_ID);
END;
$$;


ALTER FUNCTION adempiere.bomqtyavailable(product_id numeric, warehouse_id numeric, locator_id numeric) OWNER TO adempiere;

--
-- Name: bomqtyavailableasi(numeric, numeric, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.bomqtyavailableasi(product_id numeric, attributesetinstance_id numeric, warehouse_id numeric, locator_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN bomQtyOnHandASI(Product_ID, AttributeSetInstance_ID, Warehouse_ID, Locator_ID) -
	       bomQtyReservedASI(Product_ID, AttributeSetInstance_ID, Warehouse_ID, Locator_ID);
END;
$$;


ALTER FUNCTION adempiere.bomqtyavailableasi(product_id numeric, attributesetinstance_id numeric, warehouse_id numeric, locator_id numeric) OWNER TO adempiere;

--
-- Name: bomqtyonhand(numeric, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.bomqtyonhand(product_id numeric, warehouse_id numeric, locator_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	myWarehouse_ID		numeric;
 	v_Quantity		numeric := 99999;	--	unlimited
	v_IsBOM			CHAR(1);
	v_IsStocked		CHAR(1);
	v_ProductType		CHAR(1);
 	v_ProductQty		numeric;
	v_StdPrecision		int;
	bom			record;
	
BEGIN
	--	Check Parameters
	myWarehouse_ID := Warehouse_ID;
	IF (myWarehouse_ID IS NULL) THEN
		IF (Locator_ID IS NULL) THEN
			RETURN 0;
		ELSE
			SELECT 	SUM(M_Warehouse_ID) INTO myWarehouse_ID
			FROM	M_LOCATOR
			WHERE	M_Locator_ID=Locator_ID;
		END IF;
	END IF;
	IF (myWarehouse_ID IS NULL) THEN
		RETURN 0;
	END IF;
--	DBMS_OUTPUT.PUT_LINE('Warehouse=' || myWarehouse_ID);

	--	Check, if product exists and if it is stocked
	BEGIN
		SELECT	IsBOM, ProductType, IsStocked
	 	  INTO	v_IsBOM, v_ProductType, v_IsStocked
		FROM M_PRODUCT
		WHERE M_Product_ID=Product_ID;
		--
	EXCEPTION	--	not found
		WHEN OTHERS THEN
			RETURN 0;
	END;
	--	Unimited capacity if no item
	IF (v_IsBOM='N' AND (v_ProductType<>'I' OR v_IsStocked='N')) THEN
		RETURN v_Quantity;
	--	Stocked item
	ELSIF (v_IsStocked='Y') THEN
		--	Get ProductQty
		SELECT 	COALESCE(SUM(QtyOnHand), 0)
		  INTO	v_ProductQty
		FROM 	M_STORAGE s
		WHERE M_Product_ID=Product_ID
		  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE s.M_Locator_ID=l.M_Locator_ID
		  	AND l.M_Warehouse_ID=myWarehouse_ID);
		--
	--	DBMS_OUTPUT.PUT_LINE('Qty=' || v_ProductQty);
		RETURN v_ProductQty;
	END IF;

	--	Go though BOM
--	DBMS_OUTPUT.PUT_LINE('BOM');
	FOR bom IN 	--	Get BOM Product info
	SELECT bl.M_Product_ID AS M_ProductBOM_ID, CASE WHEN bl.IsQtyPercentage = 'N' THEN bl.QtyBOM ELSE bl.QtyBatch / 100 END AS BomQty , p.IsBOM , p.IsStocked, p.ProductType 
		FROM PP_PRODUCT_BOM b
			   INNER JOIN M_PRODUCT p ON (p.M_Product_ID=b.M_Product_ID)
			   INNER JOIN PP_PRODUCT_BOMLINE bl ON (bl.PP_Product_BOM_ID=b.PP_Product_BOM_ID)
		WHERE b.M_Product_ID = Product_ID
	LOOP
		--	Stocked Items "leaf node"
		IF (bom.ProductType = 'I' AND bom.IsStocked = 'Y') THEN
			--	Get v_ProductQty
			SELECT 	COALESCE(SUM(QtyOnHand), 0)
			  INTO	v_ProductQty
			FROM 	M_STORAGE s
			WHERE M_Product_ID=bom.M_ProductBOM_ID
			  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE s.M_Locator_ID=l.M_Locator_ID
			  	AND l.M_Warehouse_ID=myWarehouse_ID);
			--	Get Rounding Precision
			SELECT 	COALESCE(MAX(u.StdPrecision), 0)
			  INTO	v_StdPrecision
			FROM 	C_UOM u, M_PRODUCT p
			WHERE u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=bom.M_ProductBOM_ID;
			--	How much can we make with this product
			v_ProductQty := ROUND (v_ProductQty/bom.BOMQty, v_StdPrecision);
			--	How much can we make overall
			IF (v_ProductQty < v_Quantity) THEN
				v_Quantity := v_ProductQty;
			END IF;
		--	Another BOM
		ELSIF (bom.IsBOM = 'Y') THEN
			v_ProductQty := Bomqtyonhand (bom.M_ProductBOM_ID, myWarehouse_ID, Locator_ID);
			--	How much can we make overall
			IF (v_ProductQty < v_Quantity) THEN
				v_Quantity := v_ProductQty;
			END IF;
		END IF;
	END LOOP;	--	BOM

	IF (v_Quantity > 0) THEN
		--	Get Rounding Precision for Product
		SELECT 	COALESCE(MAX(u.StdPrecision), 0)
		  INTO	v_StdPrecision
		FROM 	C_UOM u, M_PRODUCT p
		WHERE u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=Product_ID;
		--
		RETURN ROUND (v_Quantity, v_StdPrecision);
	END IF;
	RETURN 0;
END;
$$;


ALTER FUNCTION adempiere.bomqtyonhand(product_id numeric, warehouse_id numeric, locator_id numeric) OWNER TO adempiere;

--
-- Name: bomqtyonhandasi(numeric, numeric, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.bomqtyonhandasi(product_id numeric, attributesetinstance_id numeric, warehouse_id numeric, locator_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	myWarehouse_ID		numeric;
 	v_Quantity		numeric := 99999;	--	unlimited
	v_IsBOM			CHAR(1);
	v_IsStocked		CHAR(1);
	v_ProductType		CHAR(1);
 	v_ProductQty		numeric;
	v_StdPrecision		numeric;
	bom 			record; 
BEGIN
	--	Check Parameters
	myWarehouse_ID := Warehouse_ID;
	IF (myWarehouse_ID IS NULL) THEN
		IF (Locator_ID IS NULL) THEN
			RETURN 0;
		ELSE
			SELECT 	SUM(M_Warehouse_ID) INTO myWarehouse_ID
			FROM	M_LOCATOR
			WHERE	M_Locator_ID=Locator_ID;
		END IF;
	END IF;
	IF (myWarehouse_ID IS NULL) THEN
		RETURN 0;
	END IF;
--	DBMS_OUTPUT.PUT_LINE('Warehouse=' || myWarehouse_ID);

	--	Check, if product exists and if it is stocked
	BEGIN
		SELECT	IsBOM, ProductType, IsStocked
	 	  INTO	v_IsBOM, v_ProductType, v_IsStocked
		FROM M_PRODUCT
		WHERE M_Product_ID=Product_ID;
		--
	EXCEPTION	--	not found
		WHEN OTHERS THEN
			RETURN 0;
	END;
	--	Unimited capacity if no item
	IF (v_IsBOM='N' AND (v_ProductType<>'I' OR v_IsStocked='N')) THEN
		RETURN v_Quantity;
	--	Stocked item
	ELSIF (v_IsStocked='Y') THEN
		--	Get v_ProductQty
		SELECT 	COALESCE(SUM(QtyOnHand), 0)
		  INTO	v_ProductQty
		FROM 	M_STORAGE s
		WHERE M_Product_ID=Product_ID
		  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE s.M_Locator_ID=l.M_Locator_ID
		  	AND l.M_Warehouse_ID=myWarehouse_ID)
		  AND (s.M_AttributeSetInstance_ID = AttributeSetInstance_ID OR COALESCE(AttributeSetInstance_ID,0) = 0);
		--
	--	DBMS_OUTPUT.PUT_LINE('Qty=' || v_ProductQty);
		RETURN v_ProductQty;
	END IF;

	--	Go though BOM
--	DBMS_OUTPUT.PUT_LINE('BOM');
	FOR bom IN 
	--	Get BOM Product info
		SELECT bl.M_Product_ID AS M_ProductBOM_ID, CASE WHEN bl.IsQtyPercentage = 'N' THEN bl.QtyBOM ELSE bl.QtyBatch / 100 END AS BomQty , p.IsBOM , p.IsStocked, p.ProductType 
		FROM PP_PRODUCT_BOM b
			   INNER JOIN M_PRODUCT p ON (p.M_Product_ID=b.M_Product_ID)
			   INNER JOIN PP_PRODUCT_BOMLINE bl ON (bl.PP_Product_BOM_ID=b.PP_Product_BOM_ID)
		WHERE b.M_Product_ID = Product_ID
	LOOP
		--	Stocked Items "leaf node"
		IF (bom.ProductType = 'I' AND bom.IsStocked = 'Y') THEN
			--	Get v_ProductQty
			SELECT 	COALESCE(SUM(QtyOnHand), 0)
			  INTO	v_ProductQty
			FROM 	M_STORAGE s
			WHERE M_Product_ID=bom.M_ProductBOM_ID
			  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE s.M_Locator_ID=l.M_Locator_ID
			  	AND l.M_Warehouse_ID=myWarehouse_ID)
	   		  AND (s.M_AttributeSetInstance_ID = AttributeSetInstance_ID OR COALESCE(AttributeSetInstance_ID,0) = 0);
			--	Get Rounding Precision
			SELECT 	COALESCE(MAX(u.StdPrecision), 0)
			  INTO	v_StdPrecision
			FROM 	C_UOM u, M_PRODUCT p
			WHERE u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=bom.M_ProductBOM_ID;
			--	How much can we make with this product
			v_ProductQty := ROUND (v_ProductQty/bom.BOMQty, v_StdPrecision);
			--	How much can we make overall
			IF (v_ProductQty < v_Quantity) THEN
				v_Quantity := v_ProductQty;
			END IF;
		--	Another BOM
		ELSIF (bom.IsBOM = 'Y') THEN
			v_ProductQty := BomqtyonhandASI (bom.M_ProductBOM_ID, AttributeSetInstance_ID, myWarehouse_ID, Locator_ID);
			--	How much can we make overall
			IF (v_ProductQty < v_Quantity) THEN
				v_Quantity := v_ProductQty;
			END IF;
		END IF;
	END LOOP;	--	BOM

	IF (v_Quantity > 0) THEN
		--	Get Rounding Precision for Product
		SELECT 	COALESCE(MAX(u.StdPrecision), 0)
		  INTO	v_StdPrecision
		FROM 	C_UOM u, M_PRODUCT p
		WHERE u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=Product_ID;
		--
		RETURN ROUND (v_Quantity, v_StdPrecision );
	END IF;
	RETURN 0;
END;
$$;


ALTER FUNCTION adempiere.bomqtyonhandasi(product_id numeric, attributesetinstance_id numeric, warehouse_id numeric, locator_id numeric) OWNER TO adempiere;

--
-- Name: bomqtyordered(numeric, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.bomqtyordered(p_product_id numeric, p_warehouse_id numeric, p_locator_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	v_Warehouse_ID		numeric;
 	v_Quantity		numeric := 99999;	--	unlimited
	v_IsBOM			CHAR(1);
	v_IsStocked		CHAR(1);
	v_ProductType		CHAR(1);
 	v_ProductQty		numeric;
	v_StdPrecision		int;
	bom 			record;	
BEGIN
	--	Check Parameters
	v_Warehouse_ID := p_Warehouse_ID;
	IF (v_Warehouse_ID IS NULL) THEN
		IF (p_Locator_ID IS NULL) THEN
			RETURN 0;
		ELSE
			SELECT 	MAX(M_Warehouse_ID) INTO v_Warehouse_ID
			FROM	M_LOCATOR
			WHERE	M_Locator_ID=p_Locator_ID;
		END IF;
	END IF;
	IF (v_Warehouse_ID IS NULL) THEN
		RETURN 0;
	END IF;
--	DBMS_OUTPUT.PUT_LINE('Warehouse=' || v_Warehouse_ID);

	--	Check, if product exists and if it is stocked
	BEGIN
		SELECT	IsBOM, ProductType, IsStocked
		  INTO	v_IsBOM, v_ProductType, v_IsStocked
		FROM 	M_PRODUCT
		WHERE 	M_Product_ID=p_Product_ID;
		--
	EXCEPTION	--	not found
		WHEN OTHERS THEN
			RETURN 0;
	END;

	--	No reservation for non-stocked
	IF (v_IsBOM='N' AND (v_ProductType<>'I' OR v_IsStocked='N')) THEN
		RETURN 0;
	--	Stocked item
	ELSIF (v_IsStocked='Y') THEN
		--	Get ProductQty
		SELECT 	COALESCE(SUM(QtyOrdered), 0)
		  INTO	v_ProductQty
		FROM 	M_STORAGE s
		WHERE 	M_Product_ID=p_Product_ID
		  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE s.M_Locator_ID=l.M_Locator_ID
		  	AND l.M_Warehouse_ID=v_Warehouse_ID);
		--
		RETURN v_ProductQty;
	END IF;

	--	Go though BOM
--	DBMS_OUTPUT.PUT_LINE('BOM');
	FOR bom IN  		
	--	Get BOM Product info
	SELECT bl.M_Product_ID AS M_ProductBOM_ID, CASE WHEN bl.IsQtyPercentage = 'N' THEN bl.QtyBOM ELSE bl.QtyBatch / 100 END AS BomQty , p.IsBOM , p.IsStocked, p.ProductType 
		FROM PP_PRODUCT_BOM b
			   INNER JOIN M_PRODUCT p ON (p.M_Product_ID=b.M_Product_ID)
			   INNER JOIN PP_PRODUCT_BOMLINE bl ON (bl.PP_Product_BOM_ID=b.PP_Product_BOM_ID)
		WHERE b.M_Product_ID = p_Product_ID
	LOOP
		--	Stocked Items "leaf node"
		IF (bom.ProductType = 'I' AND bom.IsStocked = 'Y') THEN
			--	Get ProductQty
			SELECT 	COALESCE(SUM(QtyOrdered), 0)
			  INTO	v_ProductQty
			FROM 	M_STORAGE s
			WHERE 	M_Product_ID=bom.M_ProductBOM_ID
			  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE s.M_Locator_ID=l.M_Locator_ID
			  	AND l.M_Warehouse_ID=v_Warehouse_ID);
			--	Get Rounding Precision
			SELECT 	COALESCE(MAX(u.StdPrecision), 0)
			  INTO	v_StdPrecision
			FROM 	C_UOM u, M_PRODUCT p
			WHERE 	u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=bom.M_ProductBOM_ID;
			--	How much can we make with this product
			v_ProductQty := ROUND (v_ProductQty/bom.BOMQty, v_StdPrecision );

			--	How much can we make overall
			IF (v_ProductQty < v_Quantity) THEN
				v_Quantity := v_ProductQty;
			END IF;
		--	Another BOM
		ELSIF (bom.IsBOM = 'Y') THEN
			v_ProductQty := Bomqtyordered (bom.M_ProductBOM_ID, v_Warehouse_ID, p_Locator_ID);
			--	How much can we make overall
			IF (v_ProductQty < v_Quantity) THEN
				v_Quantity := v_ProductQty;
			END IF;
		END IF;
	END LOOP;	--	BOM

	--	Unlimited (e.g. only services)
	IF (v_Quantity = 99999) THEN
		RETURN 0;
	END IF;

	IF (v_Quantity > 0) THEN
		--	Get Rounding Precision for Product
		SELECT 	COALESCE(MAX(u.StdPrecision), 0)
		  INTO	v_StdPrecision
		FROM 	C_UOM u, M_PRODUCT p
		WHERE 	u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=p_Product_ID;
		--
		RETURN ROUND (v_Quantity, v_StdPrecision );
	END IF;
	--
	RETURN 0;
END;
$$;


ALTER FUNCTION adempiere.bomqtyordered(p_product_id numeric, p_warehouse_id numeric, p_locator_id numeric) OWNER TO adempiere;

--
-- Name: bomqtyorderedasi(numeric, numeric, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.bomqtyorderedasi(p_product_id numeric, attributesetinstance_id numeric, p_warehouse_id numeric, p_locator_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	v_Warehouse_ID		numeric;
 	v_Quantity		numeric := 99999;	--	unlimited
	v_IsBOM			CHAR(1);
	v_IsStocked		CHAR(1);
	v_ProductType		CHAR(1);
 	v_ProductQty		numeric;
	v_StdPrecision		int;
	bom 			record;
BEGIN
	--	Check Parameters
	v_Warehouse_ID := p_Warehouse_ID;
	IF (v_Warehouse_ID IS NULL) THEN
		IF (p_Locator_ID IS NULL) THEN
			RETURN 0;
		ELSE
			SELECT 	MAX(M_Warehouse_ID) INTO v_Warehouse_ID
			FROM	M_LOCATOR
			WHERE	M_Locator_ID=p_Locator_ID;
		END IF;
	END IF;
	IF (v_Warehouse_ID IS NULL) THEN
		RETURN 0;
	END IF;
--	DBMS_OUTPUT.PUT_LINE('Warehouse=' || v_Warehouse_ID);

	--	Check, if product exists and if it is stocked
	BEGIN
		SELECT	IsBOM, ProductType, IsStocked
		  INTO	v_IsBOM, v_ProductType, v_IsStocked
		FROM 	M_PRODUCT
		WHERE 	M_Product_ID=p_Product_ID;
		--
	EXCEPTION	--	not found
		WHEN OTHERS THEN
			RETURN 0;
	END;

	--	No reservation for non-stocked
	IF (v_IsBOM='N' AND (v_ProductType<>'I' OR v_IsStocked='N')) THEN
		RETURN 0;
	--	Stocked item
	ELSIF (v_IsStocked='Y') THEN
		--	Get ProductQty
		SELECT 	COALESCE(SUM(QtyOrdered), 0)
		  INTO	v_ProductQty
		FROM 	M_STORAGE s
		WHERE 	M_Product_ID=p_Product_ID
		  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE s.M_Locator_ID=l.M_Locator_ID
		  	AND l.M_Warehouse_ID=v_Warehouse_ID)
		  AND (s.M_AttributeSetInstance_ID = AttributeSetInstance_ID OR COALESCE(AttributeSetInstance_ID,0) = 0);
		--
		RETURN v_ProductQty;
	END IF;

	--	Go though BOM
--	DBMS_OUTPUT.PUT_LINE('BOM');
	FOR bom IN 
	--	Get BOM Product info
	SELECT bl.M_Product_ID AS M_ProductBOM_ID, CASE WHEN bl.IsQtyPercentage = 'N' THEN bl.QtyBOM ELSE bl.QtyBatch / 100 END AS BomQty , p.IsBOM , p.IsStocked, p.ProductType 
		FROM PP_PRODUCT_BOM b
			   INNER JOIN M_PRODUCT p ON (p.M_Product_ID=b.M_Product_ID)
			   INNER JOIN PP_PRODUCT_BOMLINE bl ON (bl.PP_Product_BOM_ID=b.PP_Product_BOM_ID)
		WHERE b.M_Product_ID = p_Product_ID
	LOOP
		--	Stocked Items "leaf node"
		IF (bom.ProductType = 'I' AND bom.IsStocked = 'Y') THEN
			--	Get ProductQty
			SELECT 	COALESCE(SUM(QtyOrdered), 0)
			  INTO	v_ProductQty
			FROM 	M_STORAGE s
			WHERE 	M_Product_ID=bom.M_ProductBOM_ID
			  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE s.M_Locator_ID=l.M_Locator_ID
			  	AND l.M_Warehouse_ID=v_Warehouse_ID)
		      AND (s.M_AttributeSetInstance_ID = AttributeSetInstance_ID OR COALESCE(AttributeSetInstance_ID,0) = 0);
			--	Get Rounding Precision
			SELECT 	COALESCE(MAX(u.StdPrecision), 0)
			  INTO	v_StdPrecision
			FROM 	C_UOM u, M_PRODUCT p
			WHERE 	u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=bom.M_ProductBOM_ID;
			--	How much can we make with this product
			v_ProductQty := ROUND (v_ProductQty/bom.BOMQty, v_StdPrecision);
			--	How much can we make overall
			IF (v_ProductQty < v_Quantity) THEN
				v_Quantity := v_ProductQty;
			END IF;
		--	Another BOM
		ELSIF (bom.IsBOM = 'Y') THEN
			v_ProductQty := BomqtyorderedASI (bom.M_ProductBOM_ID, AttributeSetInstance_ID, v_Warehouse_ID, p_Locator_ID);
			--	How much can we make overall
			IF (v_ProductQty < v_Quantity) THEN
				v_Quantity := v_ProductQty;
			END IF;
		END IF;
	END LOOP;	--	BOM

	--	Unlimited (e.g. only services)
	IF (v_Quantity = 99999) THEN
		RETURN 0;
	END IF;

	IF (v_Quantity > 0) THEN
		--	Get Rounding Precision for Product
		SELECT 	COALESCE(MAX(u.StdPrecision), 0)
		  INTO	v_StdPrecision
		FROM 	C_UOM u, M_PRODUCT p
		WHERE 	u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=p_Product_ID;
		--
		RETURN ROUND (v_Quantity, v_StdPrecision);
	END IF;
	--
	RETURN 0;
END;
$$;


ALTER FUNCTION adempiere.bomqtyorderedasi(p_product_id numeric, attributesetinstance_id numeric, p_warehouse_id numeric, p_locator_id numeric) OWNER TO adempiere;

--
-- Name: bomqtyreserved(numeric, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.bomqtyreserved(p_product_id numeric, p_warehouse_id numeric, p_locator_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	v_Warehouse_ID			numeric;
 	v_Quantity			numeric := 99999;	--	unlimited
	v_IsBOM				CHAR(1);
	v_IsStocked			CHAR(1);
	v_ProductType			CHAR(1);
 	v_ProductQty			numeric;
	v_StdPrecision			int;
	bom				record;
BEGIN
	--	Check Parameters
	v_Warehouse_ID := p_Warehouse_ID;
	IF (v_Warehouse_ID IS NULL) THEN
		IF (p_Locator_ID IS NULL) THEN
			RETURN 0;
		ELSE
			SELECT 	MAX(M_Warehouse_ID) INTO v_Warehouse_ID
			FROM	M_LOCATOR
			WHERE	M_Locator_ID=p_Locator_ID;
		END IF;
	END IF;
	IF (v_Warehouse_ID IS NULL) THEN
		RETURN 0;
	END IF;
--	DBMS_OUTPUT.PUT_LINE('Warehouse=' || v_Warehouse_ID);

	--	Check, if product exists and if it is stocked
	BEGIN
		SELECT	IsBOM, ProductType, IsStocked
		  INTO	v_IsBOM, v_ProductType, v_IsStocked
		FROM M_PRODUCT
		WHERE M_Product_ID=p_Product_ID;
		--
	EXCEPTION	--	not found
		WHEN OTHERS THEN
			RETURN 0;
	END;

	--	No reservation for non-stocked
	IF (v_IsBOM='N' AND (v_ProductType<>'I' OR v_IsStocked='N')) THEN
		RETURN 0;
	--	Stocked item
	ELSIF (v_IsStocked='Y') THEN
		--	Get ProductQty
		SELECT 	COALESCE(SUM(QtyReserved), 0)
		  INTO	v_ProductQty
		FROM 	M_STORAGE s
		WHERE M_Product_ID=p_Product_ID
		  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE s.M_Locator_ID=l.M_Locator_ID
		  	AND l.M_Warehouse_ID=v_Warehouse_ID);
		--
		RETURN v_ProductQty;
	END IF;

	--	Go though BOM
--	DBMS_OUTPUT.PUT_LINE('BOM');
	FOR bom IN 
	--	Get BOM Product info
	SELECT bl.M_Product_ID AS M_ProductBOM_ID, CASE WHEN bl.IsQtyPercentage = 'N' THEN bl.QtyBOM ELSE bl.QtyBatch / 100 END AS BomQty , p.IsBOM , p.IsStocked, p.ProductType 
		FROM PP_PRODUCT_BOM b
			   INNER JOIN M_PRODUCT p ON (p.M_Product_ID=b.M_Product_ID)
			   INNER JOIN PP_PRODUCT_BOMLINE bl ON (bl.PP_Product_BOM_ID=b.PP_Product_BOM_ID)
		WHERE b.M_Product_ID = p_Product_ID
	LOOP
		--	Stocked Items "leaf node"
		IF (bom.ProductType = 'I' AND bom.IsStocked = 'Y') THEN
			--	Get ProductQty
			SELECT 	COALESCE(SUM(QtyReserved), 0)
			  INTO	v_ProductQty
			FROM 	M_STORAGE s
			WHERE 	M_Product_ID=bom.M_ProductBOM_ID
			  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE s.M_Locator_ID=l.M_Locator_ID
			  	AND l.M_Warehouse_ID=v_Warehouse_ID);
			--	Get Rounding Precision
			SELECT 	COALESCE(MAX(u.StdPrecision), 0)
			  INTO	v_StdPrecision
			FROM 	C_UOM u, M_PRODUCT p
			WHERE 	u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=bom.M_ProductBOM_ID;
			--	How much can we make with this product
			v_ProductQty := ROUND (v_ProductQty/bom.BOMQty, v_StdPrecision);
			--	How much can we make overall
			IF (v_ProductQty < v_Quantity) THEN
				v_Quantity := v_ProductQty;
			END IF;
		--	Another BOM
		ELSIF (bom.IsBOM = 'Y') THEN
			v_ProductQty := Bomqtyreserved (bom.M_ProductBOM_ID, v_Warehouse_ID, p_Locator_ID);
			--	How much can we make overall
			IF (v_ProductQty < v_Quantity) THEN
				v_Quantity := v_ProductQty;
			END IF;
		END IF;
	END LOOP;	--	BOM

	--	Unlimited (e.g. only services)
	IF (v_Quantity = 99999) THEN
		RETURN 0;
	END IF;

	IF (v_Quantity > 0) THEN
		--	Get Rounding Precision for Product
		SELECT 	COALESCE(MAX(u.StdPrecision), 0)
		  INTO	v_StdPrecision
		FROM 	C_UOM u, M_PRODUCT p
		WHERE 	u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=p_Product_ID;
		--
		RETURN ROUND (v_Quantity, v_StdPrecision);
	END IF;
	RETURN 0;
END;
$$;


ALTER FUNCTION adempiere.bomqtyreserved(p_product_id numeric, p_warehouse_id numeric, p_locator_id numeric) OWNER TO adempiere;

--
-- Name: bomqtyreservedasi(numeric, numeric, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.bomqtyreservedasi(p_product_id numeric, attributesetinstance_id numeric, p_warehouse_id numeric, p_locator_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	v_Warehouse_ID		numeric;
 	v_Quantity		numeric := 99999;	--	unlimited
	v_IsBOM			CHAR(1);
	v_IsStocked		CHAR(1);
	v_ProductType		CHAR(1);
 	v_ProductQty		numeric;
	v_StdPrecision		int;
	bom 			record;
	--
BEGIN
	--	Check Parameters
	v_Warehouse_ID := p_Warehouse_ID;
	IF (v_Warehouse_ID IS NULL) THEN
		IF (p_Locator_ID IS NULL) THEN
			RETURN 0;
		ELSE
			SELECT 	MAX(M_Warehouse_ID) INTO v_Warehouse_ID
			FROM	M_LOCATOR
			WHERE	M_Locator_ID=p_Locator_ID;
		END IF;
	END IF;
	IF (v_Warehouse_ID IS NULL) THEN
		RETURN 0;
	END IF;
--	DBMS_OUTPUT.PUT_LINE('Warehouse=' || v_Warehouse_ID);

	--	Check, if product exists and if it is stocked
	BEGIN
		SELECT	IsBOM, ProductType, IsStocked
		  INTO	v_IsBOM, v_ProductType, v_IsStocked
		FROM M_PRODUCT
		WHERE M_Product_ID=p_Product_ID;
		--
	EXCEPTION	--	not found
		WHEN OTHERS THEN
			RETURN 0;
	END;

	--	No reservation for non-stocked
	IF (v_IsBOM='N' AND (v_ProductType<>'I' OR v_IsStocked='N')) THEN
		RETURN 0;
	--	Stocked item
	ELSIF (v_IsStocked='Y') THEN
		--	Get ProductQty
		SELECT 	COALESCE(SUM(QtyReserved), 0)
		  INTO	v_ProductQty
		FROM 	M_STORAGE s
		WHERE M_Product_ID=p_Product_ID
		  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE s.M_Locator_ID=l.M_Locator_ID
		  	AND l.M_Warehouse_ID=v_Warehouse_ID)
		  AND (s.M_AttributeSetInstance_ID = AttributeSetInstance_ID OR COALESCE(AttributeSetInstance_ID,0) = 0);
		--
		RETURN v_ProductQty;
	END IF;

	--	Go though BOM
--	DBMS_OUTPUT.PUT_LINE('BOM');
	FOR bom IN 
	--Get BOM Product info
	SELECT bl.M_Product_ID AS M_ProductBOM_ID, CASE WHEN bl.IsQtyPercentage = 'N' THEN bl.QtyBOM ELSE bl.QtyBatch / 100 END AS BomQty , p.IsBOM , p.IsStocked, p.ProductType 
		FROM PP_PRODUCT_BOM b
			   INNER JOIN M_PRODUCT p ON (p.M_Product_ID=b.M_Product_ID)
			   INNER JOIN PP_PRODUCT_BOMLINE bl ON (bl.PP_Product_BOM_ID=b.PP_Product_BOM_ID)
		WHERE b.M_Product_ID = p_Product_ID
	LOOP
		--	Stocked Items "leaf node"
		IF (bom.ProductType = 'I' AND bom.IsStocked = 'Y') THEN
			--	Get ProductQty
			SELECT 	COALESCE(SUM(QtyReserved), 0)
			  INTO	v_ProductQty
			FROM 	M_STORAGE s
			WHERE 	M_Product_ID=bom.M_ProductBOM_ID
			  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE s.M_Locator_ID=l.M_Locator_ID
			  	AND l.M_Warehouse_ID=v_Warehouse_ID)
		  AND (s.M_AttributeSetInstance_ID = AttributeSetInstance_ID OR COALESCE(AttributeSetInstance_ID,0) = 0);
			--	Get Rounding Precision
			SELECT 	COALESCE(MAX(u.StdPrecision), 0)
			  INTO	v_StdPrecision
			FROM 	C_UOM u, M_PRODUCT p
			WHERE 	u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=bom.M_ProductBOM_ID;
			--	How much can we make with this product
			v_ProductQty := ROUND (v_ProductQty/bom.BOMQty, v_StdPrecision);
			--	How much can we make overall
			IF (v_ProductQty < v_Quantity) THEN
				v_Quantity := v_ProductQty;
			END IF;
		--	Another BOM
		ELSIF (bom.IsBOM = 'Y') THEN
			v_ProductQty := BomqtyreservedASI (bom.M_ProductBOM_ID, AttributeSetInstance_ID, v_Warehouse_ID, p_Locator_ID);
			--	How much can we make overall
			IF (v_ProductQty < v_Quantity) THEN
				v_Quantity := v_ProductQty;
			END IF;
		END IF;
	END LOOP;	--	BOM

	--	Unlimited (e.g. only services)
	IF (v_Quantity = 99999) THEN
		RETURN 0;
	END IF;

	IF (v_Quantity > 0) THEN
		--	Get Rounding Precision for Product
		SELECT 	COALESCE(MAX(u.StdPrecision), 0)
		  INTO	v_StdPrecision
		FROM 	C_UOM u, M_PRODUCT p
		WHERE 	u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=p_Product_ID;
		--
		RETURN ROUND (v_Quantity, v_StdPrecision );
	END IF;
	RETURN 0;
END;
$$;


ALTER FUNCTION adempiere.bomqtyreservedasi(p_product_id numeric, attributesetinstance_id numeric, p_warehouse_id numeric, p_locator_id numeric) OWNER TO adempiere;

--
-- Name: bpartnerremitlocation(numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.bpartnerremitlocation(p_c_bpartner_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$

DECLARE
	v_C_Location_ID	NUMERIC := NULL;
	l RECORD;

BEGIN
	FOR l IN 
		SELECT	IsRemitTo, C_Location_ID
		FROM	C_BPartner_Location
		WHERE	C_BPartner_ID=p_C_BPartner_ID
		ORDER BY IsRemitTo DESC
	LOOP
		IF (v_C_Location_ID IS NULL) THEN
			v_C_Location_ID := l.C_Location_ID;
		END IF;
	END LOOP;
	RETURN v_C_Location_ID;
	
END;

$$;


ALTER FUNCTION adempiere.bpartnerremitlocation(p_c_bpartner_id numeric) OWNER TO adempiere;

--
-- Name: charat(character varying, integer); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.charat(character varying, integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
 BEGIN
 RETURN SUBSTR($1, $2, 1);
 END;
$_$;


ALTER FUNCTION adempiere.charat(character varying, integer) OWNER TO adempiere;

--
-- Name: currencybase(numeric, numeric, timestamp with time zone, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.currencybase(p_amount numeric, p_curfrom_id numeric, p_convdate timestamp with time zone, p_client_id numeric, p_org_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html 
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either 
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 * 
 ***
 * Title:	Convert Amount to Base Currency of Client
 * Description:
 *		Get CurrencyTo from Client
 *		Returns NULL, if conversion not found
 *		Standard Rounding
 * Test:
 *		SELECT currencyBase(100,116,null,11,null) FROM AD_System; => 64.72
 ************************************************************************/
DECLARE
	v_CurTo_ID	NUMERIC;
BEGIN
	--	Get Currency
	SELECT	MAX(ac.C_Currency_ID)
	  INTO	v_CurTo_ID
	FROM	AD_ClientInfo ci, C_AcctSchema ac
	WHERE	ci.C_AcctSchema1_ID=ac.C_AcctSchema_ID
	  AND	ci.AD_Client_ID=p_Client_ID;
	--	Same as Currency_Conversion - if currency/rate not found - return 0
	IF (v_CurTo_ID IS NULL) THEN
		RETURN NULL;
	END IF;
	--	Same currency
	IF (p_CurFrom_ID = v_CurTo_ID) THEN
		RETURN p_Amount;
	END IF;

	RETURN currencyConvert (p_Amount, p_CurFrom_ID, v_CurTo_ID, p_ConvDate, null, p_Client_ID, p_Org_ID);
END;

$$;


ALTER FUNCTION adempiere.currencybase(p_amount numeric, p_curfrom_id numeric, p_convdate timestamp with time zone, p_client_id numeric, p_org_id numeric) OWNER TO adempiere;

--
-- Name: currencyconvert(numeric, numeric, numeric, timestamp with time zone, numeric, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.currencyconvert(p_amount numeric, p_curfrom_id numeric, p_curto_id numeric, p_convdate timestamp with time zone, p_conversiontype_id numeric, p_client_id numeric, p_org_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
	
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html 
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either 
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 ***
 * Title:	Convert Amount (using IDs)
 * Description:
 *		from CurrencyFrom_ID to CurrencyTo_ID
 *		Returns NULL, if conversion not found
 *		Standard Rounding
 * Test:
 *	SELECT currencyConvert(100,116,100,null,null,null,null) FROM AD_System;  => 64.72
 ************************************************************************/	
	
	
DECLARE
	v_Rate				NUMERIC;

BEGIN
	--	Return Amount
		IF (p_Amount = 0 OR p_CurFrom_ID = p_CurTo_ID) THEN
			RETURN p_Amount;
		END IF;
		--	Return NULL
		IF (p_Amount IS NULL OR p_CurFrom_ID IS NULL OR p_CurTo_ID IS NULL) THEN
			RETURN NULL;
		END IF;
	
		--	Get Rate
		v_Rate := currencyRate (p_CurFrom_ID, p_CurTo_ID, p_ConvDate, p_ConversionType_ID, p_Client_ID, p_Org_ID);
		IF (v_Rate IS NULL) THEN
			RETURN NULL;
		END IF;
	
		--	Standard Precision
	RETURN currencyRound(p_Amount * v_Rate, p_CurTo_ID, null);
	
END;

$$;


ALTER FUNCTION adempiere.currencyconvert(p_amount numeric, p_curfrom_id numeric, p_curto_id numeric, p_convdate timestamp with time zone, p_conversiontype_id numeric, p_client_id numeric, p_org_id numeric) OWNER TO adempiere;

--
-- Name: currencyrate(numeric, numeric, timestamp with time zone, numeric, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.currencyrate(p_curfrom_id numeric, p_curto_id numeric, p_convdate timestamp with time zone, p_conversiontype_id numeric, p_client_id numeric, p_org_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
	
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html 
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either 
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 ***
 * Title:	Return Conversion Rate
 * Description:
 *		from CurrencyFrom_ID to CurrencyTo_ID
 *		Returns NULL, if rate not found
 * Test
 *		SELECT currencyrate(116, 100, null, null, null, null) FROM AD_System;  => .647169
 ************************************************************************/
	
	
DECLARE
	--	Currency From variables
	cf_IsEuro		CHAR(1);
	cf_IsEMUMember		CHAR(1);
	cf_EMUEntryDate		timestamp with time zone;
	cf_EMURate		NUMERIC;
	--	Currency To variables
	ct_IsEuro		CHAR(1);
	ct_IsEMUMember		CHAR(1);
	ct_EMUEntryDate	DATE;
	ct_EMURate		NUMERIC;
	--	Triangle
	v_CurrencyFrom		NUMERIC;
	v_CurrencyTo		NUMERIC;
	v_CurrencyEuro		NUMERIC;
	--
	v_ConvDate		timestamp with time zone := now();
	v_ConversionType_ID	NUMERIC := 0;
	v_Rate			NUMERIC;
	c			RECORD;			

BEGIN
--	No Conversion
	IF (p_CurFrom_ID = p_CurTo_ID) THEN
		RETURN 1;
	END IF;
	--	Default Date Parameter
	IF (p_ConvDate IS NOT NULL) THEN
		v_ConvDate := p_ConvDate;   --  SysDate
	END IF;
    --  Default Conversion Type
	IF (p_ConversionType_ID IS NULL OR p_ConversionType_ID = 0) THEN
		BEGIN
		    SELECT C_ConversionType_ID 
		      INTO v_ConversionType_ID
		    FROM C_ConversionType 
		    WHERE IsDefault='Y'
		      AND AD_Client_ID IN (0,p_Client_ID)
		    ORDER BY AD_Client_ID DESC
		    LIMIT 1;
		EXCEPTION WHEN OTHERS THEN
		    RAISE NOTICE 'Conversion Type Not Found';
		END;
    	ELSE
        	v_ConversionType_ID := p_ConversionType_ID;
	END IF;

	--	Get Currency Info
	SELECT	MAX(IsEuro), MAX(IsEMUMember), MAX(EMUEntryDate), MAX(EMURate)
	  INTO	cf_IsEuro, cf_IsEMUMember, cf_EMUEntryDate, cf_EMURate
	FROM		C_Currency
	  WHERE	C_Currency_ID = p_CurFrom_ID;
	-- Not Found
	IF (cf_IsEuro IS NULL) THEN
		RAISE NOTICE 'From Currency Not Found';
		RETURN NULL;
	END IF;
	SELECT	MAX(IsEuro), MAX(IsEMUMember), MAX(EMUEntryDate), MAX(EMURate)
	  INTO	ct_IsEuro, ct_IsEMUMember, ct_EMUEntryDate, ct_EMURate
	FROM		C_Currency
	  WHERE	C_Currency_ID = p_CurTo_ID;
	-- Not Found
	IF (ct_IsEuro IS NULL) THEN
		RAISE NOTICE 'To Currency Not Found';
		RETURN NULL;
	END IF;

	--	Fixed - From Euro to EMU
	IF (cf_IsEuro = 'Y' AND ct_IsEMUMember ='Y' AND v_ConvDate >= ct_EMUEntryDate) THEN
		RETURN ct_EMURate;
	END IF;

	--	Fixed - From EMU to Euro
	IF (ct_IsEuro = 'Y' AND cf_IsEMUMember ='Y' AND v_ConvDate >= cf_EMUEntryDate) THEN
		RETURN 1 / cf_EMURate;
	END IF;

	--	Fixed - From EMU to EMU
	IF (cf_IsEMUMember = 'Y' AND cf_IsEMUMember ='Y'
			AND v_ConvDate >= cf_EMUEntryDate AND v_ConvDate >= ct_EMUEntryDate) THEN
		RETURN ct_EMURate / cf_EMURate;
	END IF;

	--	Flexible Rates
	v_CurrencyFrom := p_CurFrom_ID;
	v_CurrencyTo := p_CurTo_ID;

	-- if EMU Member involved, replace From/To Currency
	IF ((cf_isEMUMember = 'Y' AND v_ConvDate >= cf_EMUEntryDate)
	  OR (ct_isEMUMember = 'Y' AND v_ConvDate >= ct_EMUEntryDate)) THEN
		SELECT	MAX(C_Currency_ID)
		  INTO	v_CurrencyEuro
		FROM		C_Currency
		WHERE	IsEuro = 'Y';
		-- Conversion Rate not Found
		IF (v_CurrencyEuro IS NULL) THEN
			RAISE NOTICE 'Euro Not Found';
			RETURN NULL;
		END IF;
		IF (cf_isEMUMember = 'Y' AND v_ConvDate >= cf_EMUEntryDate) THEN
			v_CurrencyFrom := v_CurrencyEuro;
		ELSE
			v_CurrencyTo := v_CurrencyEuro;
		END IF;
	END IF;

	--	Get Rate

	BEGIN
		FOR c IN SELECT	MultiplyRate
			FROM	C_Conversion_Rate
			WHERE	C_Currency_ID=v_CurrencyFrom AND C_Currency_ID_To=v_CurrencyTo
			  AND	C_ConversionType_ID=v_ConversionType_ID
			  AND	v_ConvDate BETWEEN ValidFrom AND ValidTo
			  AND	AD_Client_ID IN (0,p_Client_ID) AND AD_Org_ID IN (0,p_Org_ID)
			ORDER BY AD_Client_ID DESC, AD_Org_ID DESC, ValidFrom DESC
		LOOP
			v_Rate := c.MultiplyRate;
			EXIT;	--	only first
		END LOOP;
	END;
	--	Not found
	IF (v_Rate IS NULL) THEN
		RAISE NOTICE 'Conversion Rate Not Found';
		RETURN NULL;
	END IF;

	--	Currency From was EMU
	IF (cf_isEMUMember = 'Y' AND v_ConvDate >= cf_EMUEntryDate) THEN
		RETURN v_Rate / cf_EMURate;
	END IF;

	--	Currency To was EMU
	IF (ct_isEMUMember = 'Y' AND v_ConvDate >= ct_EMUEntryDate) THEN
		RETURN v_Rate * ct_EMURate;
	END IF;

	RETURN v_Rate;

EXCEPTION WHEN OTHERS THEN
	RAISE NOTICE '%', SQLERRM;
	RETURN NULL;

	
END;

$$;


ALTER FUNCTION adempiere.currencyrate(p_curfrom_id numeric, p_curto_id numeric, p_convdate timestamp with time zone, p_conversiontype_id numeric, p_client_id numeric, p_org_id numeric) OWNER TO adempiere;

--
-- Name: currencyround(numeric, numeric, character varying); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.currencyround(p_amount numeric, p_curto_id numeric, p_costing character varying) RETURNS numeric
    LANGUAGE plpgsql
    AS $$

/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 ***
 * Title:	Round amount for Traget Currency
 * Description:
 *		Round Amount using Costing or Standard Precision
 *		Returns unmodified amount if currency not found
 * Test:
 *		SELECT currencyRound(currencyConvert(100,116,100,null,null),100,null) FROM AD_System => 64.72 
 ************************************************************************/
	
	
DECLARE
	v_StdPrecision		int;
	v_CostPrecision		int;

BEGIN
	--	Nothing to convert
	IF (p_Amount IS NULL OR p_CurTo_ID IS NULL) THEN
		RETURN p_Amount;
	END IF;

	--	Ger Precision
	SELECT	MAX(StdPrecision), MAX(CostingPrecision)
	  INTO	v_StdPrecision, v_CostPrecision
	FROM	C_Currency
	  WHERE	C_Currency_ID = p_CurTo_ID;
	--	Currency Not Found
	IF (v_StdPrecision IS NULL) THEN
		RETURN p_Amount;
	END IF;

	IF (p_Costing = 'Y') THEN
		RETURN ROUND (p_Amount, v_CostPrecision);
	END IF;

	RETURN ROUND (p_Amount, v_StdPrecision);
	
END;

$$;


ALTER FUNCTION adempiere.currencyround(p_amount numeric, p_curto_id numeric, p_costing character varying) OWNER TO adempiere;

--
-- Name: dailysalary(numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.dailysalary(p_c_bpartner_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
/******************************************************************************
 * Product: Adempiere ERP & CRM Smart Business Solution                       *
 * This program is free software; you can redistribute it and/or modify it    *
 * under the terms version 2 of the GNU General Public License as published   *
 * by the Free Software Foundation. This program is distributed in the hope   *
 * that it will be useful, but WITHOUT ANY WARRANTY; without even the implied *
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.           *
 * See the GNU General Public License for more details.                       *
 * You should have received a copy of the GNU General Public License along    *
 * with this program; if not, write to the Free Software Foundation, Inc.,    *
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.                     *
 * For the text or an alternative of this public license, you may reach us    *
 * Copyright (C) 2003-2015 E.R.P. Consultores y Asociados, C.A.               *
 * All Rights Reserved.                                                       *
 * Contributor(s): Yamel Senih www.erpcya.com                                 *
 *****************************************************************************
 ***
 * Title:	Get Daily Salary 
 * Description:
 *	Get Daily Salary for a business partner flagged as employee, it search on 
 * employee detail for get result if the column DailySalary not is zero or null, else
 * get a concept for Daily Salary
 *
 * Test:
 * 	SELECT dailySalary (113); - Get daily salary for GardenAdmin BP now
 * 	SELECT dailySalary (113); - Get daily salary for GardenAdmin BP now
 ************************************************************************/
BEGIN
	RETURN dailySalaryToDate(p_C_BPartner_ID, now());
END;

$$;


ALTER FUNCTION adempiere.dailysalary(p_c_bpartner_id numeric) OWNER TO adempiere;

--
-- Name: dailysalarytodate(numeric, timestamp with time zone); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.dailysalarytodate(p_c_bpartner_id numeric, dateto timestamp with time zone) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
/******************************************************************************
 * Product: Adempiere ERP & CRM Smart Business Solution                       *
 * This program is free software; you can redistribute it and/or modify it    *
 * under the terms version 2 of the GNU General Public License as published   *
 * by the Free Software Foundation. This program is distributed in the hope   *
 * that it will be useful, but WITHOUT ANY WARRANTY; without even the implied *
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.           *
 * See the GNU General Public License for more details.                       *
 * You should have received a copy of the GNU General Public License along    *
 * with this program; if not, write to the Free Software Foundation, Inc.,    *
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.                     *
 * For the text or an alternative of this public license, you may reach us    *
 * Copyright (C) 2003-2015 E.R.P. Consultores y Asociados, C.A.               *
 * All Rights Reserved.                                                       *
 * Contributor(s): Yamel Senih www.erpcya.com                                 *
 *****************************************************************************
 ***
 * Title:	Get Monthly Salary 
 * Description:
 *	Get Monthly Salary for a business partner flagged as employee, it search on 
 * employee detail for get result if the column MonthlySalary not is zero or null, else
 * get a concept for Monthly Salary
 *
 * Test:
 * 	SELECT dailySalaryToDate (113, null); - Get monthly salary for GardenAdmin BP now
 * 	SELECT dailySalaryToDate (113, now()); - Get monthly salary for GardenAdmin BP now
 ************************************************************************/
DECLARE
	v_DailySalary  	NUMERIC := 0;
	v_HR_Employee_ID	NUMERIC := 0;
BEGIN
	SELECT e.DailySalary, e.HR_Employee_ID 
	INTO v_DailySalary, v_HR_Employee_ID
	FROM HR_Employee e
	WHERE e.C_BPartner_ID = p_C_BPartner_ID
	AND e.IsActive = 'Y'
	AND e.StartDate <= COALESCE(DateTo, now())
	ORDER BY e.StartDate DESC
	LIMIT 1;

	--  Do we have a Payment Schedule ?
	IF (v_DailySalary IS NULL OR v_DailySalary = 0) THEN --   if it don't have employee salary
		SELECT ca.Amount INTO v_DailySalary
		FROM HR_Attribute ca
		WHERE ca.C_BPartner_ID = p_C_BPartner_ID
		AND ca.IsActive = 'Y'
		AND ca.ValidFrom <= COALESCE(DateTo, now())
		AND EXISTS(SELECT 1 
				FROM HR_Employee e 
				INNER JOIN HR_Payroll p ON(p.HR_Payroll_ID = e.HR_Payroll_ID)
				INNER JOIN HR_Contract c ON(c.HR_Contract_ID = p.HR_Contract_ID)
				WHERE e.HR_Employee_ID = v_HR_Employee_ID
				AND c.DailySalary_ID = ca.HR_Concept_ID)
		ORDER BY ca.ValidFrom DESC
		LIMIT 1;
	END IF;

	RETURN v_DailySalary;
END;

$$;


ALTER FUNCTION adempiere.dailysalarytodate(p_c_bpartner_id numeric, dateto timestamp with time zone) OWNER TO adempiere;

--
-- Name: daysbetween(timestamp with time zone, timestamp with time zone); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.daysbetween(p_date1 timestamp with time zone, p_date2 timestamp with time zone) RETURNS integer
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN CAST(p_date1 AS DATE) - CAST(p_date2 as DATE);
END;
$$;


ALTER FUNCTION adempiere.daysbetween(p_date1 timestamp with time zone, p_date2 timestamp with time zone) OWNER TO adempiere;

--
-- Name: documentno(numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.documentno(p_pp_mrp_id numeric) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
	v_DocumentNo PP_MRP.Value%TYPE := '';
BEGIN
	-- If NO id return empty string
	IF p_PP_MRP_ID <= 0 THEN
		RETURN '';
	END IF;
	SELECT --ordertype, m_forecast_id, c_order_id, dd_order_id, pp_order_id, m_requisition_id,
	CASE
			WHEN trim(mrp.ordertype) = 'FTC' THEN (SELECT f.Name FROM M_Forecast f WHERE f.M_Forecast_ID=mrp.M_Forecast_ID)
			WHEN trim(mrp.ordertype) = 'POO' THEN (SELECT co.DocumentNo  FROM C_Order co WHERE co.C_Order_ID=mrp.C_Order_ID)
			WHEN trim(mrp.ordertype) = 'DOO' THEN (SELECT dd.DocumentNo  FROM DD_Order dd WHERE dd.DD_Order_ID=mrp.DD_Order_ID)
			WHEN trim(mrp.ordertype) = 'SOO' THEN (SELECT co.DocumentNo  FROM C_Order co WHERE co.C_Order_ID=mrp.C_Order_ID)
			WHEN trim(mrp.ordertype) = 'MOP' THEN (SELECT po.DocumentNo FROM PP_Order po WHERE po.PP_Order_ID=mrp.PP_Order_ID)
			WHEN trim(mrp.ordertype) = 'POR' THEN (SELECT r.DocumentNo  FROM M_Requisition r WHERE r.M_Requisition_ID=mrp.M_Requisition_ID)
			
	END INTO v_DocumentNo
	FROM pp_mrp mrp
	WHERE mrp.pp_mrp_id = p_PP_MRP_ID;
	RETURN v_DocumentNo;
END;	
$$;


ALTER FUNCTION adempiere.documentno(p_pp_mrp_id numeric) OWNER TO adempiere;

--
-- Name: firstof(timestamp with time zone, character varying); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.firstof(timestamp with time zone, character varying) RETURNS date
    LANGUAGE plpgsql
    AS $_$
DECLARE
datepart VARCHAR;
datetime TIMESTAMP WITH TIME ZONE;
offsetdays INTEGER;
BEGIN
	datepart = $2;
	offsetdays = 0;
	IF $2 IN ('') THEN
		datepart = 'millennium';
	ELSEIF $2 IN ('') THEN
		datepart = 'century';
	ELSEIF $2 IN ('') THEN
		datepart = 'decade';
	ELSEIF $2 IN ('IYYY','IY','I') THEN
		datepart = 'year';
	ELSEIF $2 IN ('SYYYY','YYYY','YEAR','SYEAR','YYY','YY','Y') THEN
		datepart = 'year';
	ELSEIF $2 IN ('Q') THEN
		datepart = 'quarter';
	ELSEIF $2 IN ('MONTH','MON','MM','RM') THEN
		datepart = 'month';
	ELSEIF $2 IN ('IW') THEN
		datepart = 'week';
	ELSEIF $2 IN ('W') THEN
		datepart = 'week';
	ELSEIF $2 IN ('DDD','DD','J') THEN
		datepart = 'day';
	ELSEIF $2 IN ('DAY','DY','D') THEN
		datepart = 'week';
		-- move to sunday to make it compatible with oracle and SQLJ
		offsetdays = -1;
	ELSEIF $2 IN ('HH','HH12','HH24') THEN
		datepart = 'hour';
	ELSEIF $2 IN ('MI') THEN
		datepart = 'minute';
	ELSEIF $2 IN ('') THEN
		datepart = 'second';
	ELSEIF $2 IN ('') THEN
		datepart = 'milliseconds';
	ELSEIF $2 IN ('') THEN
		datepart = 'microseconds';
	END IF;
	datetime = date_trunc(datepart, $1); 
RETURN cast(datetime as date) + offsetdays;
END;
$_$;


ALTER FUNCTION adempiere.firstof(timestamp with time zone, character varying) OWNER TO adempiere;

--
-- Name: get_sysconfig(character varying, character varying, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.get_sysconfig(sysconfig_name character varying, defaultvalue character varying, client_id numeric, org_id numeric) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
 	v_value ad_sysconfig.value%TYPE;
BEGIN
    BEGIN
	    SELECT Value
	      INTO STRICT v_value
	      FROM AD_SysConfig WHERE Name=sysconfig_name AND AD_Client_ID IN (0, client_id) AND AD_Org_ID IN (0, org_id) AND IsActive='Y' 
	     ORDER BY AD_Client_ID DESC, AD_Org_ID DESC
	     LIMIT 1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            v_value := defaultvalue;
    END;
	RETURN v_value;
END;
$$;


ALTER FUNCTION adempiere.get_sysconfig(sysconfig_name character varying, defaultvalue character varying, client_id numeric, org_id numeric) OWNER TO adempiere;

--
-- Name: getdate(); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.getdate() RETURNS timestamp with time zone
    LANGUAGE plpgsql
    AS $$
BEGIN
    RETURN now();
END;
$$;


ALTER FUNCTION adempiere.getdate() OWNER TO adempiere;

--
-- Name: instr(character varying, character varying); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.instr(character varying, character varying) RETURNS integer
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
    pos integer;
BEGIN
    pos:= instr($1, $2, 1);
    RETURN pos;
END;
$_$;


ALTER FUNCTION adempiere.instr(character varying, character varying) OWNER TO adempiere;

--
-- Name: instr(character varying, character varying, integer); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.instr(string character varying, string_to_search character varying, beg_index integer) RETURNS integer
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $$
DECLARE
    pos integer NOT NULL DEFAULT 0;
    temp_str varchar;
    beg integer;
    length integer;
    ss_length integer;
BEGIN
    IF beg_index > 0 THEN
        temp_str := substring(string FROM beg_index);
        pos := position(string_to_search IN temp_str);

        IF pos = 0 THEN
            RETURN 0;
        ELSE
            RETURN pos + beg_index - 1;
        END IF;
    ELSE
        ss_length := char_length(string_to_search);
        length := char_length(string);
        beg := length + beg_index - ss_length + 2;

        WHILE beg > 0 LOOP
            temp_str := substring(string FROM beg FOR ss_length);
            pos := position(string_to_search IN temp_str);

            IF pos > 0 THEN
                RETURN beg;
            END IF;

            beg := beg - 1;
        END LOOP;

        RETURN 0;
    END IF;
END;
$$;


ALTER FUNCTION adempiere.instr(string character varying, string_to_search character varying, beg_index integer) OWNER TO adempiere;

--
-- Name: instr(character varying, character varying, integer, integer); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.instr(string character varying, string_to_search character varying, beg_index integer, occur_index integer) RETURNS integer
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $$
DECLARE
    pos integer NOT NULL DEFAULT 0;
    occur_number integer NOT NULL DEFAULT 0;
    temp_str varchar;
    beg integer;
    i integer;
    length integer;
    ss_length integer;
BEGIN
    IF beg_index > 0 THEN
        beg := beg_index;
        temp_str := substring(string FROM beg_index);

        FOR i IN 1..occur_index LOOP
            pos := position(string_to_search IN temp_str);

            IF i = 1 THEN
                beg := beg + pos - 1;
            ELSE
                beg := beg + pos;
            END IF;

            temp_str := substring(string FROM beg + 1);
        END LOOP;

        IF pos = 0 THEN
            RETURN 0;
        ELSE
            RETURN beg;
        END IF;
    ELSE
        ss_length := char_length(string_to_search);
        length := char_length(string);
        beg := length + beg_index - ss_length + 2;

        WHILE beg > 0 LOOP
            temp_str := substring(string FROM beg FOR ss_length);
            pos := position(string_to_search IN temp_str);

            IF pos > 0 THEN
                occur_number := occur_number + 1;

                IF occur_number = occur_index THEN
                    RETURN beg;
                END IF;
            END IF;

            beg := beg - 1;
        END LOOP;

        RETURN 0;
    END IF;
END;
$$;


ALTER FUNCTION adempiere.instr(string character varying, string_to_search character varying, beg_index integer, occur_index integer) OWNER TO adempiere;

--
-- Name: invoicediscount(numeric, timestamp with time zone, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.invoicediscount(p_c_invoice_id numeric, p_paydate timestamp with time zone, p_c_invoicepayschedule_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 ***
 * Title:	Calculate Payment Discount Amount
 * Description:
 *			- Calculate discountable amount (i.e. with or without tax)
 *			- Calculate and return payment discount
 * Test:
 * 		select invoiceDiscount(109, now(), 103) from ad_system; => 0
 ************************************************************************/
DECLARE
	v_Amount		NUMERIC;
	v_IsDiscountLineAmt	CHAR(1);
	v_GrandTotal		NUMERIC;
	v_TotalLines		NUMERIC;
	v_C_PaymentTerm_ID	NUMERIC(10);
	v_DocDate		timestamp with time zone;
	v_PayDate		timestamp with time zone := now();
    	v_IsPayScheduleValid    CHAR(1);

BEGIN
	SELECT 	ci.IsDiscountLineAmt, i.GrandTotal, i.TotalLines,
		i.C_PaymentTerm_ID, i.DateInvoiced, i.IsPayScheduleValid
	INTO 	v_IsDiscountLineAmt, v_GrandTotal, v_TotalLines,
		v_C_PaymentTerm_ID, v_DocDate, v_IsPayScheduleValid
	FROM 	AD_ClientInfo ci, C_Invoice i
	WHERE 	ci.AD_Client_ID=i.AD_Client_ID
	  AND 	i.C_Invoice_ID=p_C_Invoice_ID;
	  
	--	What Amount is the Discount Base?
 	IF (v_IsDiscountLineAmt = 'Y') THEN
		v_Amount := v_TotalLines;
	ELSE
		v_Amount := v_GrandTotal;
	END IF;

	--	Anything to discount?
	IF (v_Amount = 0) THEN
		RETURN 0;
   	END IF;
	IF (p_PayDate IS NOT NULL) THEN
		v_PayDate := p_PayDate;
  	END IF;

    --  Valid Payment Schedule
    IF (v_IsPayScheduleValid='Y' AND p_C_InvoicePaySchedule_ID > 0) THEN
        SELECT COALESCE(MAX(DiscountAmt),0)
          INTO v_Amount
        FROM C_InvoicePaySchedule
        WHERE C_InvoicePaySchedule_ID=p_C_InvoicePaySchedule_ID
          AND DiscountDate <= v_PayDate;
        --
        RETURN v_Amount;
    END IF;

	--	return discount amount	
	RETURN paymentTermDiscount (v_Amount, 0, v_C_PaymentTerm_ID, v_DocDate, p_PayDate);

--	Most likely if invoice not found
EXCEPTION
	WHEN OTHERS THEN
		RETURN NULL;
END;

$$;


ALTER FUNCTION adempiere.invoicediscount(p_c_invoice_id numeric, p_paydate timestamp with time zone, p_c_invoicepayschedule_id numeric) OWNER TO adempiere;

--
-- Name: invoiceopen(numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.invoiceopen(p_c_invoice_id numeric, p_c_invoicepayschedule_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 ***
 * Title:	Calculate Open Item Amount in Invoice Currency
 * Description:
 *	Add up total amount open for C_Invoice_ID if no split payment.
 *  Grand Total minus Sum of Allocations in Invoice Currency
 *
 *  For Split Payments:
 *  Allocate Payments starting from first schedule.
 *  Cannot be used for IsPaid as mutating
 *
 * Test:
 * 	SELECT C_InvoicePaySchedule_ID, DueAmt FROM C_InvoicePaySchedule WHERE C_Invoice_ID=109 ORDER BY DueDate;
 * 	SELECT invoiceOpen (109, null) FROM AD_System; - converted to default client currency
 * 	SELECT invoiceOpen (109, 11) FROM AD_System; - converted to default client currency
 * 	SELECT invoiceOpen (109, 102) FROM AD_System;
 * 	SELECT invoiceOpen (109, 103) FROM AD_System;
 ************************************************************************/
DECLARE
	v_Currency_ID		NUMERIC(10);
	v_TotalOpenAmt  	NUMERIC := 0;
	v_PaidAmt  	        NUMERIC := 0;
	v_Remaining	        NUMERIC := 0;
    	v_MultiplierAP      	NUMERIC := 0;
    	v_MultiplierCM      	NUMERIC := 0;
    	v_Temp              	NUMERIC := 0;
    	v_Precision            	NUMERIC := 0;
    	v_Min            	NUMERIC := 0;
    	ar			RECORD;
    	s			RECORD;

BEGIN
	--	Get Currency
	BEGIN
		SELECT	MAX(C_Currency_ID), SUM(GrandTotal), MAX(MultiplierAP), MAX(Multiplier)
		INTO	v_Currency_ID, v_TotalOpenAmt, v_MultiplierAP, v_MultiplierCM
		FROM	C_Invoice_v		--	corrected for CM / Split Payment
		WHERE	C_Invoice_ID = p_C_Invoice_ID;
	EXCEPTION	--	Invoice in draft form
		WHEN OTHERS THEN
            	RAISE NOTICE 'InvoiceOpen - %', SQLERRM;
			RETURN NULL;
	END;

	SELECT StdPrecision
	    INTO v_Precision
	    FROM C_Currency
	    WHERE C_Currency_ID = v_Currency_ID;

	SELECT 1/10^v_Precision INTO v_Min;

	--	Calculate Allocated Amount
	FOR ar IN 
		SELECT	a.AD_Client_ID, a.AD_Org_ID,
		al.Amount, al.DiscountAmt, al.WriteOffAmt,
		a.C_Currency_ID, a.DateTrx
		FROM	C_AllocationLine al
		INNER JOIN C_AllocationHdr a ON (al.C_AllocationHdr_ID=a.C_AllocationHdr_ID)
		WHERE	al.C_Invoice_ID = p_C_Invoice_ID
          	AND   a.DocStatus IN('CO', 'CL')
	LOOP
        v_Temp := ar.Amount + ar.DisCountAmt + ar.WriteOffAmt;
		v_PaidAmt := v_PaidAmt
        -- Allocation
			+ currencyConvert(v_Temp * v_MultiplierAP,
				ar.C_Currency_ID, v_Currency_ID, ar.DateTrx, null, ar.AD_Client_ID, ar.AD_Org_ID);
      	RAISE NOTICE '   PaidAmt=% , Allocation= % * %', v_PaidAmt, v_Temp, v_MultiplierAP;
	END LOOP;

    --  Do we have a Payment Schedule ?
    IF (p_C_InvoicePaySchedule_ID > 0) THEN --   if not valid = lists invoice amount
        v_Remaining := v_PaidAmt;
        FOR s IN 
        	SELECT  C_InvoicePaySchedule_ID, DueAmt
	        FROM    C_InvoicePaySchedule
		WHERE	C_Invoice_ID = p_C_Invoice_ID
	        AND   IsValid='Y'
        	ORDER BY DueDate
        LOOP
            IF (s.C_InvoicePaySchedule_ID = p_C_InvoicePaySchedule_ID) THEN
                v_TotalOpenAmt := (s.DueAmt*v_MultiplierCM) - v_Remaining;
                IF (s.DueAmt - v_Remaining < 0) THEN
                    v_TotalOpenAmt := 0;
                END IF;
            ELSE -- calculate amount, which can be allocated to next schedule
                v_Remaining := v_Remaining - s.DueAmt;
                IF (v_Remaining < 0) THEN
                    v_Remaining := 0;
                END IF;
            END IF;
        END LOOP;
    ELSE
        v_TotalOpenAmt := v_TotalOpenAmt - v_PaidAmt;
    END IF;
--  RAISE NOTICE ''== Total='' || v_TotalOpenAmt;

	--	Ignore Rounding
	IF (v_TotalOpenAmt > -v_Min AND v_TotalOpenAmt < v_Min) THEN
		v_TotalOpenAmt := 0;
	END IF;

	--	Round to currency precision
	v_TotalOpenAmt := ROUND(COALESCE(v_TotalOpenAmt,0), v_Precision);
	RETURN	v_TotalOpenAmt;
END;

$$;


ALTER FUNCTION adempiere.invoiceopen(p_c_invoice_id numeric, p_c_invoicepayschedule_id numeric) OWNER TO adempiere;

--
-- Name: invoiceopentodate(numeric, numeric, date); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.invoiceopentodate(p_c_invoice_id numeric, p_c_invoicepayschedule_id numeric, p_dateacct date) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 * Title:	Get Due timestamp with time zone
 * Description:
 *	Returns the due timestamp with time zone
 * Test:
 *	select paymenttermDueDate(106, now()) from Test; => now()+30 days
 ************************************************************************/
BEGIN
	RETURN InvoiceopenToDate(p_c_invoice_id, p_c_invoicepayschedule_id, p_dateacct::timestamp with time zone);
END;
$$;


ALTER FUNCTION adempiere.invoiceopentodate(p_c_invoice_id numeric, p_c_invoicepayschedule_id numeric, p_dateacct date) OWNER TO adempiere;

--
-- Name: invoiceopentodate(numeric, numeric, timestamp with time zone); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.invoiceopentodate(p_c_invoice_id numeric, p_c_invoicepayschedule_id numeric, p_dateacct timestamp with time zone) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	v_Currency_ID  numeric(10);
	v_TotalOpenAmt   numeric := 0;
	v_PaidAmt           numeric := 0;
	v_Remaining         numeric := 0;
	v_MultiplierAP      numeric := 0;
	v_MultiplierCM      numeric := 0;
	v_Temp              numeric := 0;
	allocationline	    record;
	invoiceschedule	    record;
BEGIN
 -- Get Currency
 BEGIN
  SELECT MAX(C_Currency_ID), SUM(GrandTotal), MAX(MultiplierAP), MAX(Multiplier)
    INTO v_Currency_ID, v_TotalOpenAmt, v_MultiplierAP, v_MultiplierCM
  FROM C_Invoice_v  -- corrected for CM / Split Payment
  WHERE C_Invoice_ID = p_C_Invoice_ID
    AND DateAcct <= p_DateAcct;
 EXCEPTION -- Invoice in draft form
  WHEN OTHERS THEN
            --DBMS_OUTPUT.PUT_LINE('InvoiceOpen - ' || SQLERRM);
   RETURN NULL;
 END;
--  DBMS_OUTPUT.PUT_LINE('== C_Invoice_ID=' || p_C_Invoice_ID || ', Total=' || v_TotalOpenAmt || ', AP=' || v_MultiplierAP || ', CM=' || v_MultiplierCM);

 -- Calculate Allocated Amount
 FOR allocationline IN  
  SELECT a.AD_Client_ID, a.AD_Org_ID,
            al.Amount, al.DiscountAmt, al.WriteOffAmt,
            a.C_Currency_ID, a.DateTrx
  FROM C_ALLOCATIONLINE al
          INNER JOIN C_ALLOCATIONHDR a ON (al.C_AllocationHdr_ID=a.C_AllocationHdr_ID)
  WHERE al.C_Invoice_ID = p_C_Invoice_ID
    AND a.DateAcct <= p_DateAcct
    AND   a.DocStatus IN('CO', 'CL')
 LOOP
        v_Temp := allocationline.Amount + allocationline.DisCountAmt + allocationline.WriteOffAmt;
  v_PaidAmt := v_PaidAmt
        -- Allocation
   + Currencyconvert(v_Temp * v_MultiplierAP,
    allocationline.C_Currency_ID, v_Currency_ID, allocationline.DateTrx, NULL, allocationline.AD_Client_ID, allocationline.AD_Org_ID);
      --DBMS_OUTPUT.PUT_LINE('   PaidAmt=' || v_PaidAmt || ', Allocation=' || v_Temp || ' * ' || v_MultiplierAP);
 END LOOP;

    --  Do we have a Payment Schedule ?
    IF (p_C_InvoicePaySchedule_ID > 0) THEN --   if not valid = lists invoice amount
        v_Remaining := v_PaidAmt;
        FOR invoiceschedule IN 
        SELECT  C_InvoicePaySchedule_ID, DueAmt FROM    C_INVOICEPAYSCHEDULE WHERE C_Invoice_ID = p_C_Invoice_ID AND IsValid='Y'
        ORDER BY DueDate
        LOOP
            IF (invoiceschedule.C_InvoicePaySchedule_ID = p_C_InvoicePaySchedule_ID) THEN
                v_TotalOpenAmt := (invoiceschedule.DueAmt*v_MultiplierCM) - v_Remaining;
                IF (invoiceschedule.DueAmt - v_Remaining < 0) THEN
                    v_TotalOpenAmt := 0;
                END IF;
            --  DBMS_OUTPUT.PUT_LINE('Sched Total=' || v_TotalOpenAmt || ', Due=' || s.DueAmt || ',Remaining=' || v_Remaining || ',CM=' || v_MultiplierCM);
            ELSE -- calculate amount, which can be allocated to next schedule
                v_Remaining := v_Remaining - invoiceschedule.DueAmt;
                IF (v_Remaining < 0) THEN
                    v_Remaining := 0;
                END IF;
            --  DBMS_OUTPUT.PUT_LINE('Remaining=' || v_Remaining);
            END IF;
        END LOOP;
    ELSE
        v_TotalOpenAmt := v_TotalOpenAmt - v_PaidAmt;
    END IF;
--  DBMS_OUTPUT.PUT_LINE('== Total=' || v_TotalOpenAmt);

 -- Ignore Rounding
 IF (v_TotalOpenAmt BETWEEN -0.00999 AND 0.00999) THEN
  v_TotalOpenAmt := 0;
 END IF;

 -- Round to penny
 v_TotalOpenAmt := ROUND(COALESCE(v_TotalOpenAmt,0), 2);
 RETURN v_TotalOpenAmt;
END;
$$;


ALTER FUNCTION adempiere.invoiceopentodate(p_c_invoice_id numeric, p_c_invoicepayschedule_id numeric, p_dateacct timestamp with time zone) OWNER TO adempiere;

--
-- Name: invoicepaid(numeric, numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.invoicepaid(p_c_invoice_id numeric, p_c_currency_id numeric, p_multiplierap numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html 
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either 
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 ***
 * Title:	Calculate Paid/Allocated amount in Currency
 * Description:
 *	Add up total amount paid for for C_Invoice_ID.
 *  Split Payments are ignored.
 *  all allocation amounts  converted to invoice C_Currency_ID
 *	round it to the nearest cent
 *	and adjust for CreditMemos by using C_Invoice_v
 *  and for Payments with the multiplierAP (-1, 1)
 *
 *
 * Test:
    SELECT C_Invoice_ID, IsPaid, IsSOTrx, GrandTotal, 
    invoicePaid (C_Invoice_ID, C_Currency_ID, MultiplierAP)
    FROM C_Invoice_v;
 *	
 ************************************************************************/
DECLARE
	v_MultiplierAP		NUMERIC := 1;
	v_PaymentAmt		NUMERIC := 0;
	ar			RECORD;

BEGIN
	--	Default
	IF (p_MultiplierAP IS NOT NULL) THEN
		v_MultiplierAP := p_MultiplierAP;
	END IF;
	--	Calculate Allocated Amount
	FOR ar IN 
		SELECT	a.AD_Client_ID, a.AD_Org_ID, 
		al.Amount, al.DiscountAmt, al.WriteOffAmt, 
		a.C_Currency_ID, a.DateTrx
		FROM	C_AllocationLine al
		INNER JOIN C_AllocationHdr a ON (al.C_AllocationHdr_ID=a.C_AllocationHdr_ID)
		WHERE	al.C_Invoice_ID = p_C_Invoice_ID
		AND   a.DocStatus IN('CO', 'CL')
	LOOP
		v_PaymentAmt := v_PaymentAmt
			+ currencyConvert(ar.Amount + ar.DisCountAmt + ar.WriteOffAmt,
				ar.C_Currency_ID, p_C_Currency_ID, ar.DateTrx, null, ar.AD_Client_ID, ar.AD_Org_ID);
	END LOOP;
	--
	RETURN	ROUND(COALESCE(v_PaymentAmt,0), 2) * v_MultiplierAP;
END;

$$;


ALTER FUNCTION adempiere.invoicepaid(p_c_invoice_id numeric, p_c_currency_id numeric, p_multiplierap numeric) OWNER TO adempiere;

--
-- Name: invoicepaidtodate(numeric, numeric, numeric, timestamp with time zone); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.invoicepaidtodate(p_c_invoice_id numeric, p_c_currency_id numeric, p_multiplierap numeric, p_dateacct timestamp with time zone) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	v_MultiplierAP		numeric := 1;
	v_PaymentAmt		numeric := 0;
	allocation 		record;
BEGIN
	--	Default
	IF (p_MultiplierAP IS NOT NULL) THEN
		v_MultiplierAP := p_MultiplierAP;
	END IF;
	--	Calculate Allocated Amount
	FOR allocation IN 
	SELECT	al.AD_Client_ID, al.AD_Org_ID,al.Amount, al.DiscountAmt, al.WriteOffAmt,a.C_Currency_ID, a.DateTrx
	FROM	C_ALLOCATIONLINE al
	INNER JOIN C_ALLOCATIONHDR a ON (al.C_AllocationHdr_ID=a.C_AllocationHdr_ID)
    WHERE	al.C_Invoice_ID = p_C_Invoice_ID 
    AND   a.DocStatus IN('CO', 'CL') 
    AND a.DateAcct <= p_DateAcct
	LOOP
		v_PaymentAmt := v_PaymentAmt
			+ Currencyconvert(allocation.Amount + allocation.DisCountAmt + allocation.WriteOffAmt,
				allocation.C_Currency_ID, p_C_Currency_ID, allocation.DateTrx, NULL, allocation.AD_Client_ID, allocation.AD_Org_ID);
	END LOOP;
	--
	RETURN	ROUND(COALESCE(v_PaymentAmt,0), 2) * v_MultiplierAP;
END;	
$$;


ALTER FUNCTION adempiere.invoicepaidtodate(p_c_invoice_id numeric, p_c_currency_id numeric, p_multiplierap numeric, p_dateacct timestamp with time zone) OWNER TO adempiere;

--
-- Name: monthlysalary(numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.monthlysalary(p_c_bpartner_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
/******************************************************************************
 * Product: Adempiere ERP & CRM Smart Business Solution                       *
 * This program is free software; you can redistribute it and/or modify it    *
 * under the terms version 2 of the GNU General Public License as published   *
 * by the Free Software Foundation. This program is distributed in the hope   *
 * that it will be useful, but WITHOUT ANY WARRANTY; without even the implied *
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.           *
 * See the GNU General Public License for more details.                       *
 * You should have received a copy of the GNU General Public License along    *
 * with this program; if not, write to the Free Software Foundation, Inc.,    *
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.                     *
 * For the text or an alternative of this public license, you may reach us    *
 * Copyright (C) 2003-2015 E.R.P. Consultores y Asociados, C.A.               *
 * All Rights Reserved.                                                       *
 * Contributor(s): Yamel Senih www.erpcya.com                                 *
 *****************************************************************************
 ***
 * Title:	Get Monthly Salary 
 * Description:
 *	Get Monthly Salary for a business partner flagged as employee, it search on 
 * employee detail for get result if the column MonthlySalary not is zero or null, else
 * get a concept for Monthly Salary
 *
 * Test:
 * 	SELECT monthlySalary (113); - Get monthly salary for GardenAdmin BP now
 * 	SELECT monthlySalary (113); - Get monthly salary for GardenAdmin BP now
 ************************************************************************/
BEGIN
	RETURN monthlySalaryToDate(p_C_BPartner_ID, now());
END;

$$;


ALTER FUNCTION adempiere.monthlysalary(p_c_bpartner_id numeric) OWNER TO adempiere;

--
-- Name: monthlysalarytodate(numeric, timestamp with time zone); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.monthlysalarytodate(p_c_bpartner_id numeric, dateto timestamp with time zone) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
/******************************************************************************
 * Product: Adempiere ERP & CRM Smart Business Solution                       *
 * This program is free software; you can redistribute it and/or modify it    *
 * under the terms version 2 of the GNU General Public License as published   *
 * by the Free Software Foundation. This program is distributed in the hope   *
 * that it will be useful, but WITHOUT ANY WARRANTY; without even the implied *
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.           *
 * See the GNU General Public License for more details.                       *
 * You should have received a copy of the GNU General Public License along    *
 * with this program; if not, write to the Free Software Foundation, Inc.,    *
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.                     *
 * For the text or an alternative of this public license, you may reach us    *
 * Copyright (C) 2003-2015 E.R.P. Consultores y Asociados, C.A.               *
 * All Rights Reserved.                                                       *
 * Contributor(s): Yamel Senih www.erpcya.com                                 *
 *****************************************************************************
 ***
 * Title:	Get Monthly Salary 
 * Description:
 *	Get Monthly Salary for a business partner flagged as employee, it search on 
 * employee detail for get result if the column MonthlySalary not is zero or null, else
 * get a concept for Monthly Salary
 *
 * Test:
 * 	SELECT monthlySalaryToDate (113, null); - Get monthly salary for GardenAdmin BP now
 * 	SELECT monthlySalaryToDate (113, now()); - Get monthly salary for GardenAdmin BP now
 ************************************************************************/
DECLARE
	v_MonthlySalary  	NUMERIC := 0;
	v_HR_Employee_ID	NUMERIC := 0;
BEGIN
	SELECT e.MonthlySalary, e.HR_Employee_ID 
	INTO v_MonthlySalary, v_HR_Employee_ID
	FROM HR_Employee e
	WHERE e.C_BPartner_ID = p_C_BPartner_ID
	AND e.IsActive = 'Y'
	AND e.StartDate <= COALESCE(DateTo, now())
	ORDER BY e.StartDate DESC
	LIMIT 1;

	--  Do we have a Payment Schedule ?
	IF (v_MonthlySalary IS NULL OR v_MonthlySalary = 0) THEN --   if it don't have employee salary
		SELECT ca.Amount INTO v_MonthlySalary
		FROM HR_Attribute ca
		WHERE ca.C_BPartner_ID = p_C_BPartner_ID
		AND ca.IsActive = 'Y'
		AND ca.ValidFrom <= COALESCE(DateTo, now())
		AND EXISTS(SELECT 1 
				FROM HR_Employee e 
				INNER JOIN HR_Payroll p ON(p.HR_Payroll_ID = e.HR_Payroll_ID)
				INNER JOIN HR_Contract c ON(c.HR_Contract_ID = p.HR_Contract_ID)
				WHERE e.HR_Employee_ID = v_HR_Employee_ID
				AND c.MonthlySalary_ID = ca.HR_Concept_ID)
		ORDER BY ca.ValidFrom DESC
		LIMIT 1;
	END IF;

	RETURN v_MonthlySalary;
END;

$$;


ALTER FUNCTION adempiere.monthlysalarytodate(p_c_bpartner_id numeric, dateto timestamp with time zone) OWNER TO adempiere;

--
-- Name: nextbusinessday(timestamp with time zone, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.nextbusinessday(p_date timestamp with time zone, p_ad_client_id numeric) RETURNS timestamp with time zone
    LANGUAGE plpgsql
    AS $$
/**
*This file is part of Adempiere ERP Bazaar
*http://www.adempiere.org
*
*Copyright (C) 2007 Teo Sarca
*
*This program is free software; you can redistribute it and/or
*modify it under the terms of the GNU General Public License
*as published by the Free Software Foundation; either version 2
*of the License, or (at your option) any later version.
*
*This program is distributed in the hope that it will be useful,
*but WITHOUT ANY WARRANTY; without even the implied warranty of
*MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
*GNU General Public License for more details.
*
*You should have received a copy of the GNU General Public License
*along with this program; if not, write to the Free Software
*Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.of
*
* Converted to PostgreSQL by Tony Snook, 
* tspc@dodo.com.au 
*/
DECLARE
	v_nextDate	date := trunc(p_Date);
	v_offset	numeric	:= 0;
	v_Saturday	numeric	:= TO_CHAR(TO_DATE('2000-01-01', 'YYYY-MM-DD'), 'D');
	v_Sunday	numeric	:= (case when v_Saturday = 7 then 1 else v_Saturday + 1 end);
	v_isHoliday	boolean	:= true;
	nbd C_NonBusinessDay%ROWTYPE;
begin
	v_isHoliday := true;
	loop
		SELECT	CASE TO_CHAR(v_nextDate,'D')::numeric 
					WHEN v_Saturday THEN 2
					WHEN v_Sunday THEN 1
					ELSE 0
				END INTO v_offset;
		v_nextDate := v_nextDate + v_offset::integer;
		v_isHoliday := false;
		FOR nbd IN	SELECT * 
					FROM C_NonBusinessDay 
					WHERE AD_Client_ID=p_AD_Client_ID and IsActive ='Y' and Date1 >= v_nextDate
					ORDER BY Date1
		LOOP
			exit when v_nextDate <> trunc(nbd.Date1);
			v_nextDate := v_nextDate + 1;
			v_isHoliday := true;
		end loop;
		exit when v_isHoliday=false;
	end loop;
	--
	return v_nextDate::timestamp with time zone;
end;
$$;


ALTER FUNCTION adempiere.nextbusinessday(p_date timestamp with time zone, p_ad_client_id numeric) OWNER TO adempiere;

--
-- Name: nextid(integer, character varying); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.nextid(p_ad_sequence_id integer, p_system character varying, OUT o_nextid integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2005 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 ***
 * Title:	Get Next ID - no Commit
 * Description: Returns the next id of the sequence.
 * Test:
 *	select * from nextid((select ad_sequence_id from ad_sequence where name = 'Test')::Integer, 'Y'::Varchar);
 * 
 ************************************************************************/

BEGIN
    IF (p_System = 'Y') THEN
	RAISE NOTICE 'system';
        SELECT CurrentNextSys
            INTO o_NextID
        FROM AD_Sequence
        WHERE AD_Sequence_ID=p_AD_Sequence_ID;
        --
        UPDATE AD_Sequence
          SET CurrentNextSys = CurrentNextSys + IncrementNo
        WHERE AD_Sequence_ID=p_AD_Sequence_ID;
    ELSE
        SELECT CurrentNext
            INTO o_NextID
        FROM AD_Sequence
        WHERE AD_Sequence_ID=p_AD_Sequence_ID;
        --
        UPDATE AD_Sequence
          SET CurrentNext = CurrentNext + IncrementNo
        WHERE AD_Sequence_ID=p_AD_Sequence_ID;
    END IF;
    --
EXCEPTION
    WHEN  OTHERS THEN
    	RAISE NOTICE '%',SQLERRM;
END;

$$;


ALTER FUNCTION adempiere.nextid(p_ad_sequence_id integer, p_system character varying, OUT o_nextid integer) OWNER TO adempiere;

--
-- Name: nextidbyyear(numeric, numeric, character varying); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.nextidbyyear(p_ad_sequence_id numeric, p_incrementno numeric, p_calendaryear character varying) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
    o_NextID numeric;
BEGIN
   SELECT CurrentNext
		INTO o_NextID
	FROM ad_sequence_no
	WHERE AD_Sequence_ID=p_AD_Sequence_ID 
	AND CalendarYear = p_CalendarYear 
	FOR UPDATE OF ad_sequence_no;
	--
	UPDATE ad_sequence_no
	  SET CurrentNext = CurrentNext + p_IncrementNo
	WHERE AD_Sequence_ID=p_AD_Sequence_ID
	AND CalendarYear = p_CalendarYear;
	RETURN o_NextID;
END
$$;


ALTER FUNCTION adempiere.nextidbyyear(p_ad_sequence_id numeric, p_incrementno numeric, p_calendaryear character varying) OWNER TO adempiere;

--
-- Name: nextidfunc(integer, character varying); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.nextidfunc(p_ad_sequence_id integer, p_system character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
          o_NextIDFunc INTEGER;
	  dummy INTEGER;
BEGIN
    o_NextIDFunc := nextid(p_AD_Sequence_ID, p_System);
    RETURN o_NextIDFunc;
END;
$$;


ALTER FUNCTION adempiere.nextidfunc(p_ad_sequence_id integer, p_system character varying) OWNER TO adempiere;

--
-- Name: paymentallocated(numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.paymentallocated(p_c_payment_id numeric, p_c_currency_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 * Title:	Calculate Allocated Payment Amount in Payment Currency
 * Description:
    --
    SELECT paymentAllocated(C_Payment_ID,C_Currency_ID), PayAmt, IsAllocated
    FROM C_Payment_v 
    WHERE C_Payment_ID<1000000;
    --
    UPDATE C_Payment_v 
    SET IsAllocated=CASE WHEN paymentAllocated(C_Payment_ID, C_Currency_ID)=PayAmt THEN 'Y' ELSE 'N' END
    WHERE C_Payment_ID>=1000000;
 
 ************************************************************************/
DECLARE
	v_AllocatedAmt		NUMERIC := 0;
    	v_PayAmt        	NUMERIC;
    	r   			RECORD;
BEGIN
    --  Charge - nothing available
    SELECT 
      INTO v_PayAmt MAX(PayAmt) 
    FROM C_Payment 
    WHERE C_Payment_ID=p_C_Payment_ID AND C_Charge_ID > 0;
    
    IF (v_PayAmt IS NOT NULL) THEN
        RETURN v_PayAmt;
    END IF;
    
	--	Calculate Allocated Amount
	FOR r IN
		SELECT	a.AD_Client_ID, a.AD_Org_ID, al.Amount, a.C_Currency_ID, a.DateTrx
			FROM	C_AllocationLine al
	          INNER JOIN C_AllocationHdr a ON (al.C_AllocationHdr_ID=a.C_AllocationHdr_ID)
			WHERE	al.C_Payment_ID = p_C_Payment_ID
          	AND   a.DocStatus IN('CO', 'CL')
	LOOP
		v_AllocatedAmt := v_AllocatedAmt
			+ currencyConvert(r.Amount, r.C_Currency_ID, p_C_Currency_ID, r.DateTrx, null, r.AD_Client_ID, r.AD_Org_ID);
	END LOOP;
	--	Round to penny
	v_AllocatedAmt := ROUND(COALESCE(v_AllocatedAmt,0), 2);
	RETURN	v_AllocatedAmt;
END;

$$;


ALTER FUNCTION adempiere.paymentallocated(p_c_payment_id numeric, p_c_currency_id numeric) OWNER TO adempiere;

--
-- Name: paymentavailable(numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.paymentavailable(p_c_payment_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 * Title:	Calculate Available Payment Amount in Payment Currency
 * Description:
 *		similar to C_Invoice_Open
 ************************************************************************/
DECLARE
	v_Currency_ID		NUMERIC(10);
	v_AvailableAmt		NUMERIC := 0;
    	v_IsReceipt         	C_Payment.IsReceipt%TYPE;
    	v_Amt               	NUMERIC := 0;
    	r   			RECORD;

BEGIN
    --  Charge - fully allocated
    SELECT MAX(PayAmt) 
      INTO v_Amt
    FROM C_Payment 
    WHERE C_Payment_ID=p_C_Payment_ID AND C_Charge_ID > 0;
    IF (v_Amt IS NOT NULL) THEN
        RETURN 0;
    END IF;

	--	Get Currency
	SELECT	C_Currency_ID, PayAmt, IsReceipt
	  INTO	v_Currency_ID, v_AvailableAmt, v_IsReceipt
	FROM	C_Payment_v     -- corrected for AP/AR
	WHERE	C_Payment_ID = p_C_Payment_ID;
--  DBMS_OUTPUT.PUT_LINE('== C_Payment_ID=' || p_C_Payment_ID || ', PayAmt=' || v_AvailableAmt || ', Receipt=' || v_IsReceipt);

	--	Calculate Allocated Amount
	FOR r IN
		SELECT	a.AD_Client_ID, a.AD_Org_ID, al.Amount, a.C_Currency_ID, a.DateTrx
		FROM	C_AllocationLine al
	        INNER JOIN C_AllocationHdr a ON (al.C_AllocationHdr_ID=a.C_AllocationHdr_ID)
		WHERE	al.C_Payment_ID = p_C_Payment_ID
          	AND   a.DocStatus IN('CO', 'CL')
	LOOP
        v_Amt := currencyConvert(r.Amount, r.C_Currency_ID, v_Currency_ID, r.DateTrx, null, r.AD_Client_ID, r.AD_Org_ID);
	    v_AvailableAmt := v_AvailableAmt - v_Amt;
--      DBMS_OUTPUT.PUT_LINE('  Allocation=' || a.Amount || ' - Available=' || v_AvailableAmt);
	END LOOP;
	--	Ignore Rounding
	IF (v_AvailableAmt BETWEEN -0.00999 AND 0.00999) THEN
		v_AvailableAmt := 0;
	END IF;
	--	Round to penny
	v_AvailableAmt := ROUND(COALESCE(v_AvailableAmt,0), 2);
	RETURN	v_AvailableAmt;
END;

$$;


ALTER FUNCTION adempiere.paymentavailable(p_c_payment_id numeric) OWNER TO adempiere;

--
-- Name: paymentavailabletodate(numeric, timestamp with time zone); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.paymentavailabletodate(p_c_payment_id numeric, p_dateacct timestamp with time zone) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 * Title:	Calculate Available Payment Amount in Payment Currency
 * Description:
 *		similar to C_Invoice_Open
 ************************************************************************/
DECLARE
	v_Currency_ID		NUMERIC(10);
	v_AvailableAmt		NUMERIC := 0;
    	v_IsReceipt         	C_Payment.IsReceipt%TYPE;
    	v_Amt               	NUMERIC := 0;
    	r   			RECORD;

BEGIN
    --  Charge - fully allocated
    SELECT MAX(PayAmt) 
      INTO v_Amt
    FROM C_Payment 
    WHERE C_Payment_ID=p_C_Payment_ID AND C_Charge_ID > 0;
    IF (v_Amt IS NOT NULL) THEN
        RETURN 0;
    END IF;

	--	Get Currency
	SELECT	C_Currency_ID, PayAmt, IsReceipt
	  INTO	v_Currency_ID, v_AvailableAmt, v_IsReceipt
	FROM	C_Payment_v     -- corrected for AP/AR
	WHERE	C_Payment_ID = p_C_Payment_ID;
--  DBMS_OUTPUT.PUT_LINE('== C_Payment_ID=' || p_C_Payment_ID || ', PayAmt=' || v_AvailableAmt || ', Receipt=' || v_IsReceipt);

	--	Calculate Allocated Amount
	FOR r IN
		SELECT	a.AD_Client_ID, a.AD_Org_ID, al.Amount, a.C_Currency_ID, a.DateTrx
		FROM	C_AllocationLine al
	        INNER JOIN C_AllocationHdr a ON (al.C_AllocationHdr_ID=a.C_AllocationHdr_ID)
		WHERE	al.C_Payment_ID = p_C_Payment_ID
          	AND   a.IsActive='Y'
          	AND a.DateAcct <= p_DateAcct
	LOOP
        v_Amt := currencyConvert(r.Amount, r.C_Currency_ID, v_Currency_ID, r.DateTrx, null, r.AD_Client_ID, r.AD_Org_ID);
	    v_AvailableAmt := v_AvailableAmt - v_Amt;
--      DBMS_OUTPUT.PUT_LINE('  Allocation=' || a.Amount || ' - Available=' || v_AvailableAmt);
	END LOOP;
	--	Ignore Rounding
	IF (v_AvailableAmt BETWEEN -0.00999 AND 0.00999) THEN
		v_AvailableAmt := 0;
	END IF;
	--	Round to penny
	v_AvailableAmt := ROUND(COALESCE(v_AvailableAmt,0), 2);
	RETURN	v_AvailableAmt;
END;

$$;


ALTER FUNCTION adempiere.paymentavailabletodate(p_c_payment_id numeric, p_dateacct timestamp with time zone) OWNER TO adempiere;

--
-- Name: paymenttermdiscount(numeric, numeric, numeric, timestamp with time zone, timestamp with time zone); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.paymenttermdiscount(amount numeric, currency_id numeric, paymentterm_id numeric, docdate timestamp with time zone, paydate timestamp with time zone) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 * Title:	Calculate Discount
 * Description:
 *	Calculate the allowable Discount Amount of the Payment Term
 *
 *	Test:	SELECT paymenttermDiscount(110, 103, 106, now(), now()) FROM TEST; => 2.20
 ************************************************************************/

DECLARE
	Discount		NUMERIC := 0;
	Discount1Date		timestamp with time zone;
	Discount2Date		timestamp with time zone;
	Add1Date		NUMERIC := 0;
	Add2Date		NUMERIC := 0;
	p   			RECORD;
BEGIN
	--	No Data - No Discount
	IF (Amount IS NULL OR PaymentTerm_ID IS NULL OR DocDate IS NULL) THEN
		RETURN 0;
	END IF;

	FOR p IN 
		SELECT	*
		FROM	C_PaymentTerm
		WHERE	C_PaymentTerm_ID = PaymentTerm_ID
	LOOP	--	for convineance only
		Discount1Date := TRUNC(DocDate + p.DiscountDays + p.GraceDays);
		Discount2Date := TRUNC(DocDate + p.DiscountDays2 + p.GraceDays);

		--	Next Business Day
		IF (p.IsNextBusinessDay='Y') THEN
			Discount1Date := nextBusinessDay(Discount1Date, p.AD_Client_ID);
			Discount2Date := nextBusinessDay(Discount2Date, p.AD_Client_ID);
		END IF;

		--	Discount 1
		IF (Discount1Date >= TRUNC(PayDate)) THEN
			Discount := Amount * p.Discount / 100;
		--	Discount 2
		ELSIF (Discount2Date >= TRUNC(PayDate)) THEN
			Discount := Amount * p.Discount2 / 100;
		END IF;	
	END LOOP;
	--
    RETURN ROUND(COALESCE(Discount,0), 2);	--	fixed rounding
END;

$$;


ALTER FUNCTION adempiere.paymenttermdiscount(amount numeric, currency_id numeric, paymentterm_id numeric, docdate timestamp with time zone, paydate timestamp with time zone) OWNER TO adempiere;

--
-- Name: paymenttermduedate(numeric, timestamp with time zone); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.paymenttermduedate(paymentterm_id numeric, docdate timestamp with time zone) RETURNS timestamp with time zone
    LANGUAGE plpgsql
    AS $$
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 * Title:	Get Due timestamp with time zone
 * Description:
 *	Returns the due timestamp with time zone
 * Test:
 *	select paymenttermDueDate(106, now()) from Test; => now()+30 days
 ************************************************************************/
DECLARE
 	Days				NUMERIC := 0;
	DueDate				timestamp with time zone := TRUNC(DocDate);
	--
	FirstDay			timestamp with time zone;
	NoDays				NUMERIC;
	p   			RECORD;
BEGIN
	FOR p IN 
		SELECT	*
		FROM	C_PaymentTerm
		WHERE	C_PaymentTerm_ID = PaymentTerm_ID
	LOOP	--	for convineance only
		--	Due 15th of following month
		IF (p.IsDueFixed = 'Y') THEN		
			FirstDay := TRUNC(DocDate, 'MM');
			NoDays := EXTRACT(day FROM TRUNC(DocDate) - FirstDay);
			DueDate := FirstDay + (p.FixMonthDay-1);	--	starting on 1st
			DueDate := ADD_MONTHS(DueDate, p.FixMonthOffset);
			IF (NoDays > p.FixMonthCutoff) THEN
				DueDate := ADD_MONTHS(DueDate, 1);
			END IF;
		ELSE
			DueDate := TRUNC(DocDate) + p.NetDays;
		END IF;
	END LOOP;
	RETURN DueDate;
END;
$$;


ALTER FUNCTION adempiere.paymenttermduedate(paymentterm_id numeric, docdate timestamp with time zone) OWNER TO adempiere;

--
-- Name: paymenttermduedays(numeric, timestamp with time zone, timestamp with time zone); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.paymenttermduedays(paymentterm_id numeric, docdate timestamp with time zone, paydate timestamp with time zone) RETURNS integer
    LANGUAGE plpgsql
    AS $$
/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 *************************************************************************
 * Title:	Get Due Days
 * Description:
 *	Returns the days due (positive) or the days till due (negative)
 *	Grace days are not considered!
 *	If record is not found it assumes due immediately
 *
 *	Test:	SELECT paymenttermDueDays(103, now(), now());
 *
 * Contributor(s): Carlos Ruiz - globalqss - match with SQLJ version
 ************************************************************************/
DECLARE
 	Days			NUMERIC := 0;
	DueDate			timestamp with time zone := NULL;
	calDueDate		timestamp with time zone;
	FixMonthOffset		C_PaymentTerm.FixMonthOffset%TYPE;
	MaxDayCut		NUMERIC;
	MaxDay			NUMERIC;
	v_PayDate		timestamp with time zone;
	p   			RECORD;
	--
	FirstDay			timestamp with time zone;
	NoDays				NUMERIC;
BEGIN

    	IF PaymentTerm_ID = 0 OR DocDate IS NULL THEN
	    RETURN 0;
	END IF;

    	v_PayDate := PayDate;
	IF v_PayDate IS NULL THEN
	    v_PayDate := TRUNC(now());
	END IF;

	FOR p IN 
		SELECT	*
		FROM	C_PaymentTerm
		WHERE	C_PaymentTerm_ID = PaymentTerm_ID
	LOOP	--	for convineance only

		--	Due 15th of following month
		IF (p.IsDueFixed = 'Y') THEN
			FirstDay := TRUNC(DocDate, 'MM');
			NoDays := extract (day from (TRUNC(DocDate) - FirstDay));
			DueDate := FirstDay + (p.FixMonthDay-1);	--	starting on 1st
			DueDate := DueDate + (p.FixMonthOffset || ' month')::interval;
			
			IF (NoDays > p.FixMonthCutoff) THEN
				DueDate := DueDate + '1 month'::interval;
			END IF;
			-- raise notice 'FirstDay: %, NoDays: %, DueDate: %', FirstDay, NoDays, DueDate;
			
			calDueDate := TRUNC(DocDate);
			MaxDayCut := extract (day from (cast(date_trunc('month', calDueDate) + '1 month'::interval as date) - 1));
			-- raise notice 'last day(MaxDayCut): %' , MaxDayCut;

			IF p.FixMonthCutoff > MaxDayCut THEN
				-- raise notice 'p.FixMonthCutoff > MaxDayCut';
			    calDueDate := cast(date_trunc('month', TRUNC(calDueDate)) + '1 month'::interval as date) - 1;
				-- raise notice 'last day(calDueDate): %' , calDueDate;
			ELSE
			    -- set day fixmonthcutoff on duedate
			    calDueDate := TRUNC(calDueDate, 'MM') + (((p.FixMonthCutoff-1)|| ' days')::interval);
			    -- raise notice 'calDueDate: %' , calDueDate;
			    
			END IF;
			FixMonthOffset := p.FixMonthOffset;
			IF DocDate > calDueDate THEN
			    FixMonthOffset := FixMonthOffset + 1;
				raise notice 'FixMonthOffset: %' , FixMonthOffset;
			END IF;

			calDueDate := calDueDate + (FixMonthOffset || ' month')::interval;
			-- raise notice 'calDueDate: %' , calDueDate;

			MaxDay := extract (day from (cast(date_trunc('month', calDueDate) + '1 month'::interval as date) - 1));


			IF    (p.FixMonthDay > MaxDay)    --	32 -> 28
			   OR (p.FixMonthDay >= 30 AND MaxDay > p.FixMonthDay) THEN  	--	30 -> 31
				calDueDate := TRUNC(calDueDate, 'MM') + (((MaxDay-1)|| ' days')::interval);
				-- raise notice 'calDueDate: %' , calDueDate;			
			ELSE
				calDueDate := TRUNC(calDueDate, 'MM') + (((p.FixMonthDay-1)|| ' days')::interval);
				-- raise notice 'calDueDate: %' , calDueDate;			
			END IF;
			DueDate := calDueDate; 

		ELSE
			DueDate := TRUNC(DocDate) + p.NetDays;
		END IF;
	END LOOP;

    IF DueDate IS NULL THEN
	    RETURN 0;
	END IF;


	Days := EXTRACT(day from (TRUNC(v_PayDate) - DueDate));
	RETURN Days;
END;

$$;


ALTER FUNCTION adempiere.paymenttermduedays(paymentterm_id numeric, docdate timestamp with time zone, paydate timestamp with time zone) OWNER TO adempiere;

--
-- Name: prodqtyordered(numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.prodqtyordered(p_product_id numeric, p_warehouse_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	v_Warehouse_ID			numeric;
 	v_Quantity			numeric := 99999;	--	unlimited
	v_IsBOM				CHAR(1);
	v_IsStocked				CHAR(1);
	v_ProductType			CHAR(1);
 	v_ProductQty			numeric;
	v_StdPrecision			int;
BEGIN
	--	Check Parameters
	v_Warehouse_ID := p_Warehouse_ID;
	IF (v_Warehouse_ID IS NULL) THEN
		RETURN 0;
	END IF;
--	DBMS_OUTPUT.PUT_LINE('Warehouse=' || v_Warehouse_ID);

	--	Check, if product exists and if it is stocked
	BEGIN
		SELECT	IsBOM, ProductType, IsStocked
		  INTO	v_IsBOM, v_ProductType, v_IsStocked
		FROM M_PRODUCT
		WHERE M_Product_ID=p_Product_ID;
		--
	EXCEPTION	--	not found
		WHEN OTHERS THEN
			RETURN 0;
	END;

	--	No reservation for non-stocked
	IF (v_IsStocked='Y') THEN
		--	Get ProductQty
		SELECT 	COALESCE(SUM(MovementQty), 0)
		  INTO	v_ProductQty
		FROM 	M_ProductionLine p
		WHERE M_Product_ID=p_Product_ID AND MovementQty > 0 AND p.Processed = 'N'
		  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE p.M_Locator_ID=l.M_Locator_ID
		  	AND l.M_Warehouse_ID=v_Warehouse_ID);
		--
		RETURN v_ProductQty;
	END IF;

	--	Unlimited (e.g. only services)
	IF (v_Quantity = 99999) THEN
		RETURN 0;
	END IF;

	IF (v_Quantity > 0) THEN
		--	Get Rounding Precision for Product
		SELECT 	COALESCE(MAX(u.StdPrecision), 0)
		  INTO	v_StdPrecision
		FROM 	C_UOM u, M_PRODUCT p
		WHERE 	u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=p_Product_ID;
		--
		RETURN ROUND (v_Quantity, v_StdPrecision);
	END IF;
	RETURN 0;
END;
$$;


ALTER FUNCTION adempiere.prodqtyordered(p_product_id numeric, p_warehouse_id numeric) OWNER TO adempiere;

--
-- Name: prodqtyreserved(numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.prodqtyreserved(p_product_id numeric, p_warehouse_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	v_Warehouse_ID			numeric;
 	v_Quantity			numeric := 99999;	--	unlimited
	v_IsBOM				CHAR(1);
	v_IsStocked			CHAR(1);
	v_ProductType			CHAR(1);
 	v_ProductQty			numeric;
	v_StdPrecision			int;
BEGIN
	--	Check Parameters
	v_Warehouse_ID := p_Warehouse_ID;
	IF (v_Warehouse_ID IS NULL) THEN
		RETURN 0;
	END IF;
--	DBMS_OUTPUT.PUT_LINE('Warehouse=' || v_Warehouse_ID);

	--	Check, if product exists and if it is stocked
	BEGIN
		SELECT	IsBOM, ProductType, IsStocked
		  INTO	v_IsBOM, v_ProductType, v_IsStocked
		FROM M_PRODUCT
		WHERE M_Product_ID=p_Product_ID;
		--
	EXCEPTION	--	not found
		WHEN OTHERS THEN
			RETURN 0;
	END;

	--	No reservation for non-stocked
	IF (v_IsStocked='Y') THEN
		--	Get ProductQty
		SELECT 	-1*COALESCE(SUM(MovementQty), 0)
		  INTO	v_ProductQty
		FROM 	M_ProductionLine p
		WHERE M_Product_ID=p_Product_ID AND MovementQty < 0 AND p.Processed = 'N'
		  AND EXISTS (SELECT * FROM M_LOCATOR l WHERE p.M_Locator_ID=l.M_Locator_ID
		  	AND l.M_Warehouse_ID=v_Warehouse_ID);
		--
		RETURN v_ProductQty;
	END IF;

	--	Unlimited (e.g. only services)
	IF (v_Quantity = 99999) THEN
		RETURN 0;
	END IF;

	IF (v_Quantity > 0) THEN
		--	Get Rounding Precision for Product
		SELECT 	COALESCE(MAX(u.StdPrecision), 0)
		  INTO	v_StdPrecision
		FROM 	C_UOM u, M_PRODUCT p
		WHERE 	u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=p_Product_ID;
		--
		RETURN ROUND (v_Quantity, v_StdPrecision);
	END IF;
	RETURN 0;
END;
$$;


ALTER FUNCTION adempiere.prodqtyreserved(p_product_id numeric, p_warehouse_id numeric) OWNER TO adempiere;

--
-- Name: prodqtyreserved(numeric, numeric, integer); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.prodqtyreserved(p_product_id numeric, p_warehouse_id numeric, p_dummy integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_Warehouse_ID            numeric;
     v_Quantity            numeric := 99999;    --    unlimited
    v_IsBOM                CHAR(1);
    v_IsStocked            CHAR(1);
    v_ProductType            CHAR(1);
     v_ProductQty            numeric;
    v_StdPrecision            int;
BEGIN
    --    Check Parameters
    v_Warehouse_ID := p_Warehouse_ID;
    IF (v_Warehouse_ID IS NULL) THEN
        RETURN 0;
    END IF;
--    DBMS_OUTPUT.PUT_LINE('Warehouse=' || v_Warehouse_ID);

    --    Check, if product exists and if it is stocked
    BEGIN
        SELECT    IsBOM, ProductType, IsStocked
          INTO    v_IsBOM, v_ProductType, v_IsStocked
        FROM M_PRODUCT
        WHERE M_Product_ID=p_Product_ID;
        --
    EXCEPTION    --    not found
        WHEN OTHERS THEN
            RETURN 0;
    END;

    --    No reservation for non-stocked
    IF (v_IsStocked='Y') THEN
        --    Get ProductQty
        SELECT     -1*COALESCE(SUM(MovementQty), 0)
          INTO    v_ProductQty
        FROM     M_ProductionLine p
        WHERE M_Product_ID=p_Product_ID AND MovementQty < 0 AND p.Processed = 'N'
          AND EXISTS (SELECT * FROM M_LOCATOR l WHERE p.M_Locator_ID=l.M_Locator_ID
              AND l.M_Warehouse_ID=v_Warehouse_ID);
        --
        RETURN v_ProductQty;
    END IF;

    --    Unlimited (e.g. only services)
    IF (v_Quantity = 99999) THEN
        RETURN 0;
    END IF;

    IF (v_Quantity > 0) THEN
        --    Get Rounding Precision for Product
        SELECT     COALESCE(MAX(u.StdPrecision), 0)
          INTO    v_StdPrecision
        FROM     C_UOM u, M_PRODUCT p
        WHERE     u.C_UOM_ID=p.C_UOM_ID AND p.M_Product_ID=p_Product_ID;
        --
        RETURN ROUND (v_Quantity, v_StdPrecision);
    END IF;
    RETURN 0;
END;
$$;


ALTER FUNCTION adempiere.prodqtyreserved(p_product_id numeric, p_warehouse_id numeric, p_dummy integer) OWNER TO adempiere;

--
-- Name: productattribute(numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.productattribute(p_m_attributesetinstance_id numeric) RETURNS character varying
    LANGUAGE plpgsql
    AS $$

/*************************************************************************
 * The contents of this file are subject to the Compiere License.  You may
 * obtain a copy of the License at    http://www.compiere.org/license.html 
 * Software is on an  "AS IS" basis,  WITHOUT WARRANTY OF ANY KIND, either 
 * express or implied. See the License for details. Code: Compiere ERP+CRM
 * Copyright (C) 1999-2001 Jorg Janke, ComPiere, Inc. All Rights Reserved.
 *
 * converted to postgreSQL by Karsten Thiemann (Schaeffer AG), 
 * kthiemann@adempiere.org
 * 
 * Format v_GuaranteeDate as date 
 *************************************************************************
 * Title: Return Instance Attribute Info
 * Description:
 *  
 * Test:
    SELECT ProductAttribute (M_AttributeSetInstance_ID) 
    FROM M_InOutLine WHERE M_AttributeSetInstance_ID > 0
    --
    SELECT p.Name
    FROM C_InvoiceLine il LEFT OUTER JOIN M_Product p ON (il.M_Product_ID=p.M_Product_ID);
    SELECT p.Name || ProductAttribute (il.M_AttributeSetInstance_ID) 
    FROM C_InvoiceLine il LEFT OUTER JOIN M_Product p ON (il.M_Product_ID=p.M_Product_ID);
    
 ************************************************************************/

	
DECLARE

    v_Name          VARCHAR(2000) := '';
    v_NameAdd       VARCHAR(2000) := '';
    --
    v_Lot           M_AttributeSetInstance.Lot%TYPE;
    v_LotStart      M_AttributeSet.LotCharSOverwrite%TYPE;
    v_LotEnd        M_AttributeSet.LotCharEOverwrite%TYPE;
    v_SerNo         M_AttributeSetInstance.SerNo%TYPE;
    v_SerNoStart    M_AttributeSet.SerNoCharSOverwrite%TYPE;
    v_SerNoEnd      M_AttributeSet.SerNoCharEOverwrite%TYPE;
    v_GuaranteeDate M_AttributeSetInstance.GuaranteeDate%TYPE;
    
    r   RECORD;
    --

BEGIN
    --  Get Product Attribute Set Instance
    IF (p_M_AttributeSetInstance_ID > 0) THEN
        SELECT asi.Lot, asi.SerNo, asi.GuaranteeDate,
            COALESCE(a.SerNoCharSOverwrite, '#'::CHAR(1)), COALESCE(a.SerNoCharEOverwrite, ''::CHAR(1)),
            COALESCE(a.LotCharSOverwrite, '�'::CHAR(1)), COALESCE(a.LotCharEOverwrite, '�'::CHAR(1))
          INTO v_Lot, v_SerNo, v_GuaranteeDate,
            v_SerNoStart, v_SerNoEnd, v_LotStart, v_LotEnd
        FROM M_AttributeSetInstance asi
          INNER JOIN M_AttributeSet a ON (asi.M_AttributeSet_ID=a.M_AttributeSet_ID)
        WHERE asi.M_AttributeSetInstance_ID=p_M_AttributeSetInstance_ID;
        --
        IF (v_SerNo IS NOT NULL) THEN
            v_NameAdd := v_NameAdd || v_SerNoStart || v_SerNo || v_SerNoEnd || ' ';
        END IF;
        IF (v_Lot IS NOT NULL) THEN
            v_NameAdd := v_NameAdd || v_LotStart || v_Lot || v_LotEnd || ' ';
        END IF;
        IF (v_GuaranteeDate IS NOT NULL) THEN
            v_NameAdd := v_NameAdd || CAST(v_GuaranteeDate AS DATE) || ' ';
        END IF;
        --
        
        FOR r IN
	     SELECT ai.Value, a.Name
	        FROM M_AttributeInstance ai
	        INNER JOIN M_Attribute a ON (ai.M_Attribute_ID=a.M_Attribute_ID AND a.IsInstanceAttribute='Y')
        	WHERE ai.M_AttributeSetInstance_ID=p_M_AttributeSetInstance_ID
    	LOOP
            v_NameAdd := v_NameAdd || r.Name || ':' || r.Value || ' ';
        END LOOP;
        --
        IF (LENGTH(v_NameAdd) > 0) THEN
            v_Name := v_Name || ' (' || TRIM(v_NameAdd) || ')';
	ELSE 
	    v_Name := NULL;
        END IF;
    END IF;
    RETURN v_Name;
END;

$$;


ALTER FUNCTION adempiere.productattribute(p_m_attributesetinstance_id numeric) OWNER TO adempiere;

--
-- Name: round(numeric, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.round(numeric, numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $_$
 BEGIN
	RETURN ROUND($1, cast($2 as integer));
 END;
$_$;


ALTER FUNCTION adempiere.round(numeric, numeric) OWNER TO adempiere;

--
-- Name: subtractdays(interval, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.subtractdays(inter interval, days numeric) RETURNS integer
    LANGUAGE plpgsql
    AS $$
BEGIN
RETURN ( EXTRACT( EPOCH FROM ( inter ) ) / 86400 ) - days;
END;
$$;


ALTER FUNCTION adempiere.subtractdays(inter interval, days numeric) OWNER TO adempiere;

--
-- Name: subtractdays(timestamp with time zone, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.subtractdays(day timestamp with time zone, days numeric) RETURNS date
    LANGUAGE plpgsql
    AS $$
BEGIN
    RETURN addDays(day,(days * -1));
END;
$$;


ALTER FUNCTION adempiere.subtractdays(day timestamp with time zone, days numeric) OWNER TO adempiere;

--
-- Name: trunc(interval); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.trunc(i interval) RETURNS integer
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN EXTRACT(DAY FROM i);
END;
$$;


ALTER FUNCTION adempiere.trunc(i interval) OWNER TO adempiere;

--
-- Name: trunc(timestamp with time zone); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.trunc(datetime timestamp with time zone) RETURNS timestamp with time zone
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN CAST(datetime AS DATE);
END;
$$;


ALTER FUNCTION adempiere.trunc(datetime timestamp with time zone) OWNER TO adempiere;

--
-- Name: trunc(timestamp with time zone, character varying); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.trunc(datetime timestamp with time zone, format character varying) RETURNS date
    LANGUAGE plpgsql
    AS $$
BEGIN
	IF format = 'Q' THEN
		RETURN CAST(DATE_Trunc('quarter',datetime) as DATE);
	ELSIF format = 'Y' or format = 'YEAR' THEN
		RETURN CAST(DATE_Trunc('year',datetime) as DATE);
	ELSIF format = 'MM' or format = 'MONTH' THEN
		RETURN CAST(DATE_Trunc('month',datetime) as DATE);
	ELSIF format = 'DD' THEN
		RETURN CAST(DATE_Trunc('day',datetime) as DATE);
	ELSIF format = 'DY' THEN
		RETURN CAST(DATE_Trunc('day',datetime) as DATE);
	ELSE
		RETURN CAST(datetime AS DATE);
	END IF;
END;
$$;


ALTER FUNCTION adempiere.trunc(datetime timestamp with time zone, format character varying) OWNER TO adempiere;

--
-- Name: unaccent_string(text); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.unaccent_string(p_text text) RETURNS text
    LANGUAGE plpgsql
    AS $$
BEGIN
	return unaccent_string(p_text, 1);
END;
$$;


ALTER FUNCTION adempiere.unaccent_string(p_text text) OWNER TO adempiere;

--
-- Name: FUNCTION unaccent_string(p_text text); Type: COMMENT; Schema: adempiere; Owner: adempiere
--

COMMENT ON FUNCTION adempiere.unaccent_string(p_text text) IS 'Remove diacritings from given text';


--
-- Name: unaccent_string(text, numeric); Type: FUNCTION; Schema: adempiere; Owner: adempiere
--

CREATE FUNCTION adempiere.unaccent_string(text, numeric) RETURNS text
    LANGUAGE plpgsql
    AS $_$
DECLARE
    input_string text := $1;
    output_string text;
    version numeric := $2;
BEGIN

input_string := translate(input_string, 'âaaaaaÁÂAAAAAA', 'aaaaaaaaaaaaaa');
input_string := translate(input_string, 'eééeëeeeeeEËEEE', 'eeeeeeeeeeeeeee');
input_string := translate(input_string, 'iíîiiiiïÏÍÎIIIII', 'iiiiiiiiiiiiiiii');
input_string := translate(input_string, 'óôooooOÓÔOOOOO', 'oooooooooooooo');
input_string := translate(input_string, 'uúuuuuuUÚUUUUUU', 'uuuuuuuuuuuuuuu');
input_string := translate(input_string, 'ç', 'c');
if version = 1 then
 input_string := replace(lower(input_string),'ß','ss');
 input_string := replace(lower(input_string),'ä','ae');
 input_string := replace(lower(input_string),'ö','oe');
 input_string := replace(lower(input_string),'ü','ue');
else
 input_string := replace(lower(input_string),'ss','ß');
 input_string := replace(lower(input_string),'ae','ä');
 input_string := replace(lower(input_string),'oe','ö');
 input_string := replace(lower(input_string),'ue','ü');
end if;
return input_string;
END;
$_$;


ALTER FUNCTION adempiere.unaccent_string(text, numeric) OWNER TO adempiere;

--
-- Name: FUNCTION unaccent_string(text, numeric); Type: COMMENT; Schema: adempiere; Owner: adempiere
--

COMMENT ON FUNCTION adempiere.unaccent_string(text, numeric) IS 'Remove diacritings from given text. 1 - strip, 2 - unstrip';


--
-- Name: +; Type: OPERATOR; Schema: adempiere; Owner: adempiere
--

CREATE OPERATOR adempiere.+ (
    PROCEDURE = adempiere.adddays,
    LEFTARG = timestamp with time zone,
    RIGHTARG = numeric,
    COMMUTATOR = OPERATOR(adempiere.+)
);


ALTER OPERATOR adempiere.+ (timestamp with time zone, numeric) OWNER TO adempiere;

--
-- Name: -; Type: OPERATOR; Schema: adempiere; Owner: adempiere
--

CREATE OPERATOR adempiere.- (
    PROCEDURE = adempiere.subtractdays,
    LEFTARG = timestamp with time zone,
    RIGHTARG = numeric,
    COMMUTATOR = OPERATOR(adempiere.-)
);


ALTER OPERATOR adempiere.- (timestamp with time zone, numeric) OWNER TO adempiere;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: a_asset; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset (
    a_asset_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    a_asset_group_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    serno character varying(255),
    lot character varying(255),
    versionno character varying(20),
    guaranteedate timestamp without time zone,
    assetservicedate timestamp without time zone,
    isowned character(1) DEFAULT 'Y'::bpchar NOT NULL,
    assetdepreciationdate timestamp without time zone,
    uselifeyears numeric(10,0),
    uselifemonths numeric(10,0),
    lifeuseunits numeric,
    useunits numeric,
    isdisposed character(1) DEFAULT 'N'::bpchar NOT NULL,
    assetdisposaldate timestamp without time zone,
    isinposession character(1) DEFAULT 'Y'::bpchar NOT NULL,
    locationcomment character varying(255),
    m_locator_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_bpartner_location_id numeric(10,0),
    c_location_id numeric(10,0),
    processing character(1) DEFAULT 'N'::bpchar,
    isdepreciated character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isfullydepreciated character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_user_id numeric(10,0),
    m_attributesetinstance_id numeric(10,0) DEFAULT 0,
    qty numeric,
    c_project_id numeric(10,0),
    c_bpartnersr_id numeric(10,0),
    m_inoutline_id numeric(10,0),
    lastmaintenencedate timestamp without time zone,
    nextmaintenencedate timestamp without time zone,
    lastmaintenanceuseunit numeric(10,0),
    nextmaintenanceuseunit numeric(10,0),
    leaseterminationdate timestamp without time zone,
    lease_bpartner_id numeric(10,0),
    lastmaintenancenote character varying(60),
    lastmaintenancedate timestamp without time zone,
    lastmaintenanceunit numeric(10,0),
    nextmaintenenceunit numeric(10,0),
    a_asset_createdate timestamp without time zone,
    a_asset_revaldate timestamp without time zone,
    a_parent_asset_id numeric(10,0),
    a_qty_current numeric,
    a_qty_original numeric,
    a_asset_class_id numeric(10,0) DEFAULT NULL::numeric,
    a_asset_status character varying(2) DEFAULT 'NW'::character varying NOT NULL,
    a_asset_action character varying(2) DEFAULT 'MD'::character varying NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    assetactivationdate timestamp without time zone,
    inventoryno character varying(30) DEFAULT NULL::character varying,
    a_asset_type_id numeric(10,0),
    a_assettype character varying(3) DEFAULT 'MFX'::character varying NOT NULL,
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    manufacturer character varying(30) DEFAULT NULL::character varying,
    manufacturedyear numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_isdisposed_check CHECK ((isdisposed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_isinposession_check CHECK ((isinposession = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_isowned_check CHECK ((isowned = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset OWNER TO adempiere;

--
-- Name: a_asset_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_acct (
    a_asset_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    a_depreciation_id numeric(10,0) NOT NULL,
    a_depreciation_acct numeric(10,0) NOT NULL,
    a_accumdepreciation_acct numeric(10,0) NOT NULL,
    a_disposal_loss character varying(40),
    a_disposal_gain character varying(10),
    a_asset_acct numeric(10,0) NOT NULL,
    a_asset_acct_id numeric(10,0) NOT NULL,
    a_depreciation_manual_period character varying(2),
    a_depreciation_table_header_id numeric(10,0),
    a_reval_cost_offset_prior character varying(22),
    a_reval_cost_offset character varying(22),
    a_reval_cal_method character varying(3),
    a_reval_accumdep_offset_prior character varying(22),
    a_reval_accumdep_offset_cur character varying(22),
    a_period_start numeric(10,0) NOT NULL,
    a_period_end numeric(10,0) NOT NULL,
    a_disposal_revenue character varying(40),
    processing character(1) DEFAULT 'Y'::bpchar,
    postingtype character(1) DEFAULT 'A'::bpchar NOT NULL,
    a_split_percent numeric DEFAULT (1)::numeric NOT NULL,
    a_salvage_value numeric DEFAULT (0)::numeric,
    a_reval_depexp_offset character varying(22),
    a_depreciation_variable_perc numeric,
    a_depreciation_method_id numeric(10,0),
    a_depreciation_manual_amount numeric,
    a_depreciation_conv_id numeric(10,0),
    a_asset_spread_id numeric(10,0),
    a_disposal_gain_acct numeric(10,0) DEFAULT NULL::numeric,
    a_reval_cost_offset_prior_acct numeric(10,0) DEFAULT NULL::numeric,
    a_reval_cost_offset_acct numeric(10,0) DEFAULT NULL::numeric,
    a_reval_adep_offset_prior_acct numeric(10,0) DEFAULT NULL::numeric,
    a_reval_adep_offset_cur_acct numeric(10,0) DEFAULT NULL::numeric,
    a_disposal_revenue_acct numeric(10,0) NOT NULL,
    a_disposal_loss_acct numeric(10,0) NOT NULL,
    a_reval_depexp_offset_acct numeric(10,0) DEFAULT NULL::numeric,
    a_depreciation_method_f_id numeric(10,0),
    a_depreciation_f_id numeric(10,0) NOT NULL,
    a_depreciation_conv_f_id numeric(10,0),
    a_depreciation_variable_perc_f numeric,
    validfrom timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_acct_processing_check CHECK ((processing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_acct OWNER TO adempiere;

--
-- Name: a_asset_addition; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_addition (
    a_asset_addition_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0) NOT NULL,
    assetvalueamt numeric NOT NULL,
    c_invoiceline_id numeric(10,0),
    a_qty_current numeric DEFAULT (0)::numeric NOT NULL,
    description character varying(510),
    gl_journalbatch_id numeric(10,0),
    line numeric(10,0),
    postingtype character(1) DEFAULT 'A'::bpchar NOT NULL,
    m_inoutline_id numeric(10,0),
    documentno character varying(30),
    c_invoice_id numeric(10,0),
    a_sourcetype character varying(3) DEFAULT 'INV'::character varying NOT NULL,
    a_capvsexp character varying(3) DEFAULT 'Cap'::character varying NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    docstatus character varying(2) DEFAULT 'DR'::character varying NOT NULL,
    docaction character(2) DEFAULT 'CO'::bpchar,
    a_createasset character(1) DEFAULT 'N'::bpchar NOT NULL,
    isapproved character(1) NOT NULL,
    m_matchinv_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_id numeric(10,0) DEFAULT NULL::numeric,
    m_attributesetinstance_id numeric(10,0) DEFAULT NULL::numeric,
    m_locator_id numeric(10,0) DEFAULT NULL::numeric,
    c_currency_id numeric(10,0) NOT NULL,
    c_conversiontype_id numeric(10,0),
    assetsourceamt numeric,
    deltauselifeyears numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    deltauselifeyears_f numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    datedoc timestamp without time zone NOT NULL,
    i_fixedasset_id numeric(10,0) DEFAULT NULL::numeric,
    dateacct timestamp without time zone,
    currencyrate numeric,
    a_accumulated_depr numeric DEFAULT (0)::numeric NOT NULL,
    a_accumulated_depr_f numeric DEFAULT (0)::numeric NOT NULL,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    processing character(1) DEFAULT NULL::bpchar,
    a_accumulated_depr_adjust character(1) DEFAULT 'N'::bpchar NOT NULL,
    assetamtentered numeric DEFAULT (0)::numeric NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    a_period_start numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    c_charge_id numeric(10,0) DEFAULT NULL::numeric,
    processedon numeric,
    a_salvage_value numeric,
    c_doctype_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_addition_a_accumulated_depr_adjust_check CHECK ((a_accumulated_depr_adjust = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_addition_a_createasset_check CHECK ((a_createasset = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_addition_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_addition_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_addition_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_addition_processing_check CHECK ((processing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_addition OWNER TO adempiere;

--
-- Name: a_asset_change; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_change (
    a_asset_change_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0) NOT NULL,
    changetype character varying(3) NOT NULL,
    changedate timestamp without time zone,
    changeamt numeric,
    uselifeyears numeric(10,0),
    uselifemonths numeric(10,0),
    lifeuseunits numeric(10,0),
    assetdepreciationdate timestamp without time zone,
    a_asset_retirement_id numeric(10,0),
    a_asset_addition_id numeric(10,0),
    serno character varying(40),
    lot character varying(40),
    versionno character varying(40),
    a_accumdepreciation_acct numeric(10,0),
    a_asset_createdate timestamp without time zone,
    a_asset_spread_type character varying(10),
    a_depreciation_calc_type character varying(10),
    a_depreciation_manual_period character varying(2),
    a_qty_original numeric,
    a_qty_current numeric,
    a_period_start numeric(10,0),
    a_period_end numeric(10,0),
    a_parent_asset_id numeric(10,0),
    a_disposal_revenue character varying(22),
    a_disposal_loss character varying(22),
    a_depreciation_variable_perc numeric,
    a_depreciation_table_header_id numeric(10,0),
    c_acctschema_id numeric(10,0),
    assetvalueamt numeric DEFAULT (0)::numeric NOT NULL,
    assetservicedate timestamp without time zone,
    assetmarketvalueamt numeric,
    assetdisposaldate timestamp without time zone,
    assetbookvalueamt numeric,
    assetaccumdepreciationamt numeric,
    ad_user_id numeric(10,0),
    isinposession character(1),
    isfullydepreciated character(1),
    isdisposed character(1),
    isdepreciated character(1),
    depreciationtype character varying(10),
    dateacct timestamp without time zone,
    useunits numeric(10,0),
    textdetails character varying(60) NOT NULL,
    postingtype character varying(10) DEFAULT 'A'::character varying,
    isowned character(1),
    conventiontype character varying(10),
    c_validcombination_id numeric(10,0),
    c_location_id numeric(10,0),
    c_bpartner_location_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    a_split_percent numeric DEFAULT (1)::numeric,
    a_salvage_value numeric,
    a_reval_depexp_offset numeric(10,0),
    a_reval_cost_offset_prior numeric(10,0),
    a_reval_cost_offset numeric(10,0),
    a_reval_cal_method character varying(3),
    a_reval_accumdep_offset_prior numeric(10,0),
    a_reval_accumdep_offset_cur numeric(10,0),
    a_depreciation_manual_amount numeric,
    a_depreciation_acct numeric(10,0),
    a_asset_revaldate timestamp without time zone,
    a_asset_acct numeric(10,0),
    a_asset_acct_id numeric(10,0),
    a_disposal_revenue_acct numeric(10,0) DEFAULT NULL::numeric,
    a_disposal_loss_acct numeric(10,0) DEFAULT NULL::numeric,
    a_reval_depexp_offset_acct numeric(10,0) DEFAULT NULL::numeric,
    a_reval_cost_offset_prior_acct numeric(10,0) DEFAULT NULL::numeric,
    a_reval_cost_offset_acct numeric(10,0) DEFAULT NULL::numeric,
    a_reval_adep_offset_prior_acct numeric(10,0) DEFAULT NULL::numeric,
    a_reval_adep_offset_cur_acct numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_change_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_change_isdepreciated_check CHECK ((isdepreciated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_change_isdisposed_check CHECK ((isdisposed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_change_isfullydepreciated_check CHECK ((isfullydepreciated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_change_isinposession_check CHECK ((isinposession = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_change_isowned_check CHECK ((isowned = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_change OWNER TO adempiere;

--
-- Name: a_asset_change_amt; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_change_amt (
    a_asset_change_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    assetvalueamt numeric DEFAULT 0 NOT NULL,
    assetmarketvalueamt numeric DEFAULT 0 NOT NULL,
    assetbookvalueamt numeric DEFAULT 0 NOT NULL,
    assetaccumdepreciationamt numeric DEFAULT 0 NOT NULL,
    CONSTRAINT a_asset_change_amt_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_change_amt OWNER TO adempiere;

--
-- Name: a_asset_class; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_class (
    a_asset_class_id numeric(10,0) NOT NULL,
    description character varying(2000),
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) DEFAULT NULL::numeric,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT NULL::bpchar,
    value character varying(40) NOT NULL,
    name character varying(2000) NOT NULL,
    a_life_period_min numeric(10,0) NOT NULL,
    a_life_period_max numeric(10,0) NOT NULL,
    a_value_2004 character varying(40) DEFAULT NULL::character varying,
    a_life_period_2004 numeric(10,0) DEFAULT NULL::numeric,
    mfx_grupa numeric(10,0) DEFAULT NULL::numeric,
    mfx_subgrupa numeric(10,0) DEFAULT NULL::numeric,
    mfx_clasa numeric(10,0) DEFAULT NULL::numeric,
    mfx_subclasa numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_class_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_class OWNER TO adempiere;

--
-- Name: a_asset_delivery; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_delivery (
    a_asset_delivery_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0) NOT NULL,
    movementdate timestamp without time zone NOT NULL,
    serno character varying(40),
    lot character varying(40),
    versionno character varying(20),
    m_inoutline_id numeric(10,0),
    email character varying(60),
    messageid character varying(120),
    deliveryconfirmation character varying(120),
    url character varying(120),
    remote_addr character varying(60),
    remote_host character varying(60),
    referrer character varying(255),
    ad_user_id numeric(10,0),
    description character varying(255),
    m_productdownload_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_delivery_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_delivery OWNER TO adempiere;

--
-- Name: a_asset_disposed; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_disposed (
    a_asset_disposed_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0) NOT NULL,
    a_disposed_date timestamp without time zone NOT NULL,
    a_disposed_reason character varying(10),
    c_period_id numeric(10,0),
    createdby numeric(10,0) NOT NULL,
    datedoc timestamp without time zone NOT NULL,
    processed character(1) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    processing character(1) NOT NULL,
    isactive character(1) NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    created timestamp without time zone NOT NULL,
    a_proceeds numeric,
    a_disposed_method character varying(2) NOT NULL,
    a_asset_trade_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    docaction character(2) DEFAULT 'CO'::bpchar,
    docstatus character varying(2) DEFAULT 'DR'::character varying,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    documentno character varying(30) NOT NULL,
    a_activation_method character varying(2) DEFAULT 'AA'::character varying NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    isdisposed character(1) DEFAULT NULL::bpchar,
    a_asset_status character varying(2) DEFAULT NULL::character varying,
    a_disposal_amt numeric DEFAULT (0)::numeric NOT NULL,
    expense numeric DEFAULT (0)::numeric NOT NULL,
    a_accumulated_depr numeric DEFAULT (0)::numeric NOT NULL,
    postingtype character(1) DEFAULT 'A'::bpchar NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    a_accumulated_depr_delta numeric DEFAULT (0)::numeric NOT NULL,
    a_asset_cost numeric,
    processedon numeric,
    c_invoice_id numeric(10,0) DEFAULT NULL::numeric,
    c_invoiceline_id numeric(10,0) DEFAULT NULL::numeric,
    c_doctype_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_disposed_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_disposed_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_disposed_isdisposed_check CHECK ((isdisposed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_disposed_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_disposed OWNER TO adempiere;

--
-- Name: a_asset_group; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_group (
    a_asset_group_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isowned character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isdepreciated character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isoneassetperuom character(1) DEFAULT 'N'::bpchar NOT NULL,
    iscreateasactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    istrackissues character(1) DEFAULT 'N'::bpchar NOT NULL,
    a_asset_class_id numeric(10,0) DEFAULT NULL::numeric,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    a_asset_type_id numeric(10,0),
    isfixedasset character(1) DEFAULT 'Y'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_group_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_group_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_group_isfixedasset_check CHECK ((isfixedasset = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_group_isowned_check CHECK ((isowned = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_group OWNER TO adempiere;

--
-- Name: a_asset_group_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_group_acct (
    a_asset_group_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0),
    a_asset_acct numeric(10,0) NOT NULL,
    a_depreciation_acct numeric(10,0) NOT NULL,
    a_accumdepreciation_acct numeric(10,0) NOT NULL,
    a_depreciation_id numeric(10,0) NOT NULL,
    a_asset_group_acct_id numeric(10,0) NOT NULL,
    a_depreciation_manual_period character varying(2),
    a_depreciation_variable_perc numeric,
    a_split_percent numeric DEFAULT (1)::numeric NOT NULL,
    a_reval_depexp_offset character varying(22),
    a_reval_cost_offset_prior character varying(22),
    a_reval_cost_offset character varying(22),
    a_reval_cal_method character varying(22),
    a_reval_accumdep_offset_prior character varying(22),
    a_reval_accumdep_offset_cur character varying(22),
    uselifeyears numeric(10,0) DEFAULT (0)::numeric,
    uselifemonths numeric(10,0) DEFAULT (0)::numeric,
    processing character(1),
    postingtype character(1) DEFAULT 'A'::bpchar NOT NULL,
    depreciationtype character varying(10),
    conventiontype character varying(10),
    a_depreciation_table_header_id numeric(10,0),
    a_depreciation_manual_amount numeric,
    a_depreciation_calc_type character varying(10),
    a_asset_spread_type character varying(10),
    a_reval_depexp_offset_acct numeric(10,0) DEFAULT NULL::numeric,
    a_reval_cost_offset_prior_acct numeric(10,0) DEFAULT NULL::numeric,
    a_reval_cost_offset_acct numeric(10,0) DEFAULT NULL::numeric,
    a_reval_adep_offset_prior_acct numeric(10,0) DEFAULT NULL::numeric,
    a_reval_adep_offset_cur_acct numeric(10,0) DEFAULT NULL::numeric,
    a_depreciation_method_id numeric(10,0),
    a_depreciation_conv_f_id numeric(10,0),
    a_depreciation_conv_id numeric(10,0),
    a_depreciation_method_f_id numeric(10,0),
    a_depreciation_variable_perc_f numeric,
    a_depreciation_f_id numeric(10,0) NOT NULL,
    uselifeyears_f numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    uselifemonths_f numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    a_disposal_revenue_acct numeric(10,0) DEFAULT NULL::numeric,
    a_disposal_loss_acct numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT aassetgroupacctisactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT aassetgroupacctprocessingchck CHECK ((processing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_group_acct OWNER TO adempiere;

--
-- Name: a_asset_info_fin; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_info_fin (
    a_asset_info_fin_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    a_due_on character varying(22),
    a_finance_meth character varying(2),
    a_purchase_option character(1),
    a_purchase_option_credit_per numeric,
    c_bpartner_id numeric(10,0),
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    textmsg character varying(510),
    isactive character(1) NOT NULL,
    created timestamp without time zone NOT NULL,
    a_purchase_price numeric,
    a_purchase_option_credit numeric(10,0),
    a_monthly_payment numeric,
    a_expired_date timestamp without time zone,
    a_contract_date timestamp without time zone,
    a_asset_id numeric(10,0) NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_info_fin_a_purchase_option_check CHECK ((a_purchase_option = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_info_fin_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_info_fin_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_info_fin OWNER TO adempiere;

--
-- Name: a_asset_info_ins; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_info_ins (
    a_asset_info_ins_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    a_ins_value numeric,
    a_policy_no character varying(100),
    a_replace_cost numeric,
    createdby numeric(10,0) NOT NULL,
    text character varying(510),
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    isactive character(1) NOT NULL,
    created timestamp without time zone NOT NULL,
    a_renewal_date timestamp without time zone,
    a_insurance_co character varying(22),
    a_ins_premium numeric,
    a_asset_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_info_ins_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_info_ins OWNER TO adempiere;

--
-- Name: a_asset_info_lic; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_info_lic (
    a_asset_info_lic_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    a_license_fee numeric,
    a_renewal_date timestamp without time zone,
    created timestamp without time zone NOT NULL,
    isactive character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    text character varying(510),
    createdby numeric(10,0) NOT NULL,
    a_state character varying(60),
    a_license_no character varying(120),
    a_issuing_agency character varying(22),
    a_asset_id numeric(10,0) NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_info_lic_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_info_lic_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_info_lic OWNER TO adempiere;

--
-- Name: a_asset_info_oth; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_info_oth (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0) NOT NULL,
    a_asset_info_oth_id numeric(10,0) NOT NULL,
    a_user1 character varying(3),
    a_user10 character varying(3),
    a_user11 character varying(10),
    a_user12 character varying(10),
    a_user13 character varying(10),
    a_user14 character varying(10),
    a_user15 character varying(10),
    a_user2 character varying(3),
    a_user3 character varying(3),
    a_user4 character varying(3),
    a_user5 character varying(3),
    a_user6 character varying(3),
    a_user7 character varying(3),
    a_user8 character varying(3),
    a_user9 character varying(3),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    text character varying(510),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_info_oth_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_info_oth OWNER TO adempiere;

--
-- Name: a_asset_info_tax; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_info_tax (
    a_asset_info_tax_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    a_investment_cr numeric(10,0),
    a_state character varying(60),
    created timestamp without time zone NOT NULL,
    isactive character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    textmsg character varying(510),
    createdby numeric(10,0) NOT NULL,
    a_tax_entity character varying(22),
    a_new_used character(1),
    a_finance_meth character varying(2),
    a_asset_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_info_tax_a_new_used_check CHECK ((a_new_used = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_info_tax_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_info_tax OWNER TO adempiere;

--
-- Name: a_asset_product; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_product (
    a_asset_product_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    m_locator_id numeric(10,0) DEFAULT NULL::numeric,
    description character varying(255) DEFAULT NULL::character varying,
    a_qty_current numeric DEFAULT (0)::numeric NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_product_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_product OWNER TO adempiere;

--
-- Name: a_asset_retirement; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_retirement (
    a_asset_retirement_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0) NOT NULL,
    assetvalueamt numeric DEFAULT 0 NOT NULL,
    assetmarketvalueamt numeric DEFAULT 0 NOT NULL,
    c_invoiceline_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_retirement_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_retirement OWNER TO adempiere;

--
-- Name: a_asset_reval; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_reval (
    a_asset_reval_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    datedoc timestamp without time zone,
    docstatus character varying(2) DEFAULT 'DR'::character varying NOT NULL,
    documentno character varying(30) DEFAULT NULL::character varying,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    posted character(1) DEFAULT NULL::bpchar,
    postingtype character(1) DEFAULT 'A'::bpchar NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1) DEFAULT 'N'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    a_asset_cost numeric,
    a_accumulated_depr numeric,
    a_asset_cost_change numeric DEFAULT (0)::numeric NOT NULL,
    a_change_acumulated_depr numeric DEFAULT (0)::numeric NOT NULL,
    docaction character(2) DEFAULT 'CO'::bpchar NOT NULL,
    processedon numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_reval_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_reval_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_reval_processing_check CHECK ((processing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_reval OWNER TO adempiere;

--
-- Name: a_asset_reval_entry; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_reval_entry (
    a_asset_reval_entry_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    a_effective_date timestamp without time zone NOT NULL,
    a_reval_cal_method character varying(3) NOT NULL,
    a_reval_multiplier character varying(3) NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    c_period_id numeric(10,0),
    createdby numeric(10,0) NOT NULL,
    datedoc timestamp without time zone,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    processing character(1) NOT NULL,
    processed character(1) NOT NULL,
    postingtype character(1) NOT NULL,
    isactive character(1) NOT NULL,
    gl_category_id numeric(10,0),
    documentno character varying(60) NOT NULL,
    description character varying(510) NOT NULL,
    dateacct timestamp without time zone,
    created timestamp without time zone NOT NULL,
    c_doctype_id numeric(10,0),
    c_acctschema_id numeric(10,0),
    a_reval_effective_date character varying(2) NOT NULL,
    a_rev_code character varying(3) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_reval_entry_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_reval_entry_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_reval_entry OWNER TO adempiere;

--
-- Name: a_asset_reval_index; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_reval_index (
    a_asset_reval_index_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    a_effective_date timestamp without time zone NOT NULL,
    a_reval_multiplier character varying(3) NOT NULL,
    created timestamp without time zone NOT NULL,
    isactive character(1) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    a_reval_rate numeric NOT NULL,
    a_reval_code character varying(3) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_reval_index_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_reval_index OWNER TO adempiere;

--
-- Name: a_asset_split; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_split (
    a_asset_split_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    a_amount_split numeric,
    a_asset_acct_id numeric(10,0) NOT NULL,
    a_percent_original numeric,
    a_qty_current numeric NOT NULL,
    a_split_type character varying(3) NOT NULL,
    c_period_id numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    processing character(1) NOT NULL,
    processed character(1) NOT NULL,
    postingtype character(1) NOT NULL,
    isactive character(1) NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    a_transfer_balance_is character(1) NOT NULL,
    a_qty_split numeric,
    a_percent_split numeric,
    a_depreciation_workfile_id numeric(10,0) NOT NULL,
    a_asset_cost numeric,
    a_asset_id numeric(10,0) NOT NULL,
    a_asset_id_to character varying(22),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_split_a_transfer_balance_is_check CHECK ((a_transfer_balance_is = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_split_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_split_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_split OWNER TO adempiere;

--
-- Name: a_asset_spread; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_spread (
    a_asset_spread_id numeric(10,0) NOT NULL,
    description character varying(255),
    ad_client_id numeric(10,0) NOT NULL,
    a_asset_spread_type character varying(20),
    a_period_10 numeric NOT NULL,
    a_period_12 numeric NOT NULL,
    a_period_14 numeric NOT NULL,
    a_period_3 numeric NOT NULL,
    a_period_5 numeric NOT NULL,
    a_period_7 numeric NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    isactive character(1) NOT NULL,
    createdby numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    a_period_9 numeric NOT NULL,
    a_period_8 numeric NOT NULL,
    a_period_6 numeric NOT NULL,
    a_period_4 numeric NOT NULL,
    a_period_2 numeric NOT NULL,
    a_period_13 numeric NOT NULL,
    a_period_11 numeric NOT NULL,
    a_period_1 numeric NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_spread_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_spread OWNER TO adempiere;

--
-- Name: a_asset_transfer; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_transfer (
    a_asset_acct_id numeric(10,0),
    a_asset_transfer_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    a_accumdepreciation_acct numeric(10,0),
    a_asset_acct_new character varying(22),
    a_depreciation_acct numeric(10,0),
    a_depreciation_acct_str character varying(40),
    a_disposal_loss_new character varying(22),
    a_transfer_balance_is character(1) NOT NULL,
    a_transfer_balance character(1) DEFAULT 'Y'::bpchar NOT NULL,
    a_split_percent numeric DEFAULT (1)::numeric NOT NULL,
    a_period_start numeric(10,0) NOT NULL,
    a_period_end numeric(10,0) NOT NULL,
    a_disposal_revenue_str character varying(40),
    a_disposal_revenue_new character varying(22),
    a_disposal_revenue numeric(10,0),
    a_disposal_loss_str character varying(40),
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    processing character(1) DEFAULT 'N'::bpchar NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    postingtype character(1) DEFAULT 'A'::bpchar NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    c_period_id numeric(10,0),
    c_acctschema_id numeric(10,0) NOT NULL,
    a_disposal_loss numeric(10,0),
    a_depreciation_acct_new character varying(22),
    a_asset_id numeric(10,0) NOT NULL,
    a_asset_acct_str character varying(40),
    a_accumdepreciation_acct_new character varying(22),
    a_accumdepreciation_acct_str character varying(40),
    a_asset_acct numeric(10,0),
    a_accumdepreciation_new_acct numeric(10,0) NOT NULL,
    a_depreciation_new_acct numeric(10,0) NOT NULL,
    a_disposal_loss_acct numeric(10,0) DEFAULT NULL::numeric,
    a_disposal_revenue_new_acct numeric(10,0) NOT NULL,
    a_disposal_revenue_acct numeric(10,0) DEFAULT NULL::numeric,
    a_disposal_loss_new_acct numeric(10,0) NOT NULL,
    a_asset_new_acct numeric(10,0) NOT NULL,
    docaction character(2) DEFAULT 'CO'::bpchar NOT NULL,
    docstatus character varying(2) DEFAULT 'DR'::character varying NOT NULL,
    posted character(1) DEFAULT NULL::bpchar,
    a_capvsexp character varying(3) DEFAULT 'Cap'::character varying NOT NULL,
    a_accumulated_depr_f numeric,
    documentno character varying(30) DEFAULT NULL::character varying,
    datedoc timestamp without time zone,
    processedon numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_transfer_a_transfer_balance_check CHECK ((a_transfer_balance = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_transfer_a_transfer_balance_is_check CHECK ((a_transfer_balance_is = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_transfer_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_asset_transfer_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_transfer OWNER TO adempiere;

--
-- Name: a_asset_type; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_type (
    a_asset_type_id numeric(10,0) NOT NULL,
    name character varying(120) NOT NULL,
    value character varying(40) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    isowned character varying(2) DEFAULT 'XX'::character varying NOT NULL,
    isinposession character varying(2) DEFAULT 'XX'::character varying NOT NULL,
    isdepreciable character varying(2) DEFAULT 'XX'::character varying NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_type_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_type OWNER TO adempiere;

--
-- Name: a_asset_use; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_asset_use (
    a_asset_use_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0) NOT NULL,
    usedate timestamp without time zone NOT NULL,
    useunits numeric(10,0) NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_asset_use_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_asset_use OWNER TO adempiere;

--
-- Name: a_depreciation; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_depreciation (
    a_depreciation_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(120) NOT NULL,
    description character varying(510),
    depreciationtype character varying(10) NOT NULL,
    script character varying(2000),
    processed character(1) DEFAULT 'Y'::bpchar NOT NULL,
    text character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_depreciation_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_depreciation OWNER TO adempiere;

--
-- Name: a_depreciation_build; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_depreciation_build (
    a_depreciation_build_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    a_end_asset_id numeric(10,0),
    c_period_id numeric(10,0),
    createdby numeric(10,0),
    datedoc timestamp without time zone,
    periodno numeric(10,0),
    processed character(1),
    updated timestamp without time zone,
    updatedby numeric(10,0),
    processing character(1),
    postingtype character(1) DEFAULT 'A'::bpchar,
    isactive character(1),
    dateacct timestamp without time zone,
    created timestamp without time zone,
    a_start_asset_id numeric(10,0),
    ad_org_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_depreciation_build_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_depreciation_build_processing_check CHECK ((processing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_depreciation_build OWNER TO adempiere;

--
-- Name: a_depreciation_convention; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_depreciation_convention (
    a_depreciation_convention_id numeric(10,0) NOT NULL,
    description character varying(510),
    ad_client_id numeric(10,0) NOT NULL,
    conventiontype character varying(10),
    createdby numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    textmsg character varying(2000),
    name character varying(120),
    created timestamp without time zone NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_depreciation_convention_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_depreciation_convention OWNER TO adempiere;

--
-- Name: a_depreciation_entry; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_depreciation_entry (
    a_depreciation_entry_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    a_entry_type character varying(3),
    c_currency_id numeric(10,0) NOT NULL,
    c_period_id numeric(10,0) NOT NULL,
    createdby numeric(10,0) NOT NULL,
    datedoc timestamp without time zone NOT NULL,
    documentno character varying(60) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    processing character(1) NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    postingtype character(1) DEFAULT 'A'::bpchar NOT NULL,
    gl_category_id numeric(10,0),
    description character varying(510),
    dateacct timestamp without time zone NOT NULL,
    created timestamp without time zone NOT NULL,
    c_doctype_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    docstatus character varying(2) DEFAULT 'DR'::character varying NOT NULL,
    docaction character(2) DEFAULT 'CO'::bpchar NOT NULL,
    isapproved character(1) NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    processedon numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_depreciation_entry_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_depreciation_entry_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_depreciation_entry OWNER TO adempiere;

--
-- Name: a_depreciation_exp; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_depreciation_exp (
    a_depreciation_exp_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    a_entry_type character varying(3) NOT NULL,
    created timestamp without time zone NOT NULL,
    dateacct timestamp without time zone,
    expense numeric DEFAULT (0)::numeric NOT NULL,
    isdepreciated character(1) NOT NULL,
    processed character(1) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    postingtype character(1) DEFAULT 'A'::bpchar,
    isactive character(1) NOT NULL,
    description character varying(255) NOT NULL,
    createdby numeric(10,0) NOT NULL,
    a_period numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0) NOT NULL,
    dr_account_id numeric(10,0) DEFAULT NULL::numeric,
    cr_account_id numeric(10,0) DEFAULT NULL::numeric,
    expense_f numeric DEFAULT (0)::numeric NOT NULL,
    processing character(1) DEFAULT NULL::bpchar,
    help character varying(2000) DEFAULT NULL::character varying,
    a_asset_cost numeric,
    a_accumulated_depr numeric,
    a_accumulated_depr_f numeric,
    uselifemonths numeric(10,0) DEFAULT NULL::numeric,
    uselifemonths_f numeric(10,0) DEFAULT NULL::numeric,
    a_asset_remaining numeric,
    a_asset_remaining_f numeric,
    a_asset_cost_delta numeric DEFAULT (0)::numeric NOT NULL,
    a_accumulated_depr_delta numeric DEFAULT (0)::numeric NOT NULL,
    a_accumulated_depr_f_delta numeric DEFAULT (0)::numeric NOT NULL,
    a_asset_addition_id numeric(10,0) DEFAULT NULL::numeric,
    a_asset_disposed_id numeric(10,0) DEFAULT NULL::numeric,
    a_depreciation_entry_id numeric(10,0) DEFAULT NULL::numeric,
    a_account_number_acct numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_depreciation_exp_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_depreciation_exp_isdepreciated_check CHECK ((isdepreciated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_depreciation_exp_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_depreciation_exp OWNER TO adempiere;

--
-- Name: a_depreciation_forecast; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_depreciation_forecast (
    a_depreciation_forecast_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    a_end_asset_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    datedoc timestamp without time zone NOT NULL,
    postingtype character(1) NOT NULL,
    processing character(1),
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    processed character(1),
    isactive character(1) NOT NULL,
    createdby numeric(10,0) NOT NULL,
    a_start_asset_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_depreciation_forecast_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_depreciation_forecast_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_depreciation_forecast OWNER TO adempiere;

--
-- Name: a_depreciation_method; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_depreciation_method (
    a_depreciation_method_id numeric(10,0) NOT NULL,
    name character varying(120),
    ad_client_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    depreciationtype character varying(10),
    isactive character(1) NOT NULL,
    processed character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    text character varying(2000),
    description character varying(510),
    createdby numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_depreciation_method_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_depreciation_method OWNER TO adempiere;

--
-- Name: a_depreciation_table_detail; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_depreciation_table_detail (
    a_depreciation_table_detail_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    a_period numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    isactive character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    processed character(1) NOT NULL,
    createdby numeric(10,0) NOT NULL,
    a_table_rate_type character varying(2) DEFAULT 'RT'::character varying,
    a_depreciation_rate numeric NOT NULL,
    a_depreciation_table_code character varying(20) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_depreciation_table_detail_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_depreciation_table_detail_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_depreciation_table_detail OWNER TO adempiere;

--
-- Name: a_depreciation_table_header; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_depreciation_table_header (
    a_depreciation_table_header_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    a_term character varying(2) NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    processed character(1) NOT NULL,
    description character varying(510) NOT NULL,
    created timestamp without time zone NOT NULL,
    a_table_rate_type character varying(2) NOT NULL,
    a_depreciation_table_code character varying(20) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_depreciation_table_header_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_depreciation_table_header_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_depreciation_table_header OWNER TO adempiere;

--
-- Name: a_depreciation_workfile; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_depreciation_workfile (
    a_depreciation_workfile_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    a_accumulated_depr numeric DEFAULT (0)::numeric NOT NULL,
    a_asset_cost numeric DEFAULT (0)::numeric NOT NULL,
    a_asset_id numeric(10,0) NOT NULL,
    a_asset_life_current_year numeric DEFAULT (0)::numeric NOT NULL,
    a_period_forecast numeric,
    a_prior_year_accumulated_depr numeric,
    postingtype character(1) DEFAULT 'A'::bpchar,
    isdepreciated character(1),
    isactive character(1) NOT NULL,
    dateacct timestamp without time zone,
    createdby numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    assetdepreciationdate timestamp without time zone,
    a_salvage_value numeric DEFAULT (0)::numeric NOT NULL,
    a_qty_current numeric NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    processing character(1) DEFAULT 'N'::bpchar,
    a_period_posted numeric(10,0),
    a_life_period numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    a_asset_life_years numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    a_base_amount numeric,
    a_calc_accumulated_depr numeric DEFAULT 0,
    a_curr_dep_exp numeric DEFAULT (0)::numeric NOT NULL,
    a_current_period numeric(10,0),
    a_accumulated_depr_f numeric DEFAULT (0)::numeric NOT NULL,
    a_asset_life_years_f numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    a_life_period_f numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    uselifeyears numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    uselifemonths numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    uselifeyears_f numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    uselifemonths_f numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    a_asset_remaining numeric,
    a_asset_remaining_f numeric,
    a_tip_finantare character(1) DEFAULT 'P'::bpchar NOT NULL,
    a_valoare_cofinantare numeric,
    a_valoare_tert numeric,
    description character varying(255) DEFAULT NULL::character varying,
    a_fundingmode_id numeric(10,0) DEFAULT NULL::numeric,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_depreciation_workfile_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_depreciation_workfile_isdepreciated_check CHECK ((isdepreciated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_depreciation_workfile_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_depreciation_workfile_processing_check CHECK ((processing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_depreciation_workfile OWNER TO adempiere;

--
-- Name: a_fundingmode; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_fundingmode (
    a_fundingmode_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(30) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_fundingmode_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_fundingmode OWNER TO adempiere;

--
-- Name: a_fundingmode_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_fundingmode_acct (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    a_fundingmode_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    a_fundingmode_acct numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_fundingmode_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_fundingmode_acct OWNER TO adempiere;

--
-- Name: a_registration; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_registration (
    a_registration_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    a_asset_id numeric(10,0),
    m_product_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    ad_user_id numeric(10,0),
    isregistered character(1) DEFAULT 'N'::bpchar NOT NULL,
    isinproduction character(1) DEFAULT 'N'::bpchar NOT NULL,
    isallowpublish character(1) DEFAULT 'Y'::bpchar NOT NULL,
    remote_host character varying(120),
    remote_addr character varying(60),
    processing character(1),
    assetservicedate timestamp without time zone,
    note character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_registration_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_registration_isallowpublish_check CHECK ((isallowpublish = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_registration_isinproduction_check CHECK ((isinproduction = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT a_registration_isregistered_check CHECK ((isregistered = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_registration OWNER TO adempiere;

--
-- Name: a_registrationattribute; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_registrationattribute (
    a_registrationattribute_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    ad_reference_id numeric(10,0) NOT NULL,
    columnname character varying(30),
    ad_reference_value_id numeric(10,0),
    isselfservice character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_registrationattribute_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_registrationattribute OWNER TO adempiere;

--
-- Name: a_registrationproduct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_registrationproduct (
    a_registrationattribute_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_registrationproduct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_registrationproduct OWNER TO adempiere;

--
-- Name: a_registrationvalue; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.a_registrationvalue (
    a_registration_id numeric(10,0) NOT NULL,
    a_registrationattribute_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT a_registrationvalue_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.a_registrationvalue OWNER TO adempiere;

--
-- Name: ad_accesslog; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_accesslog (
    ad_accesslog_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0),
    ad_column_id numeric(10,0),
    record_id numeric(10,0),
    remote_addr character varying(60),
    remote_host character varying(60),
    description character varying(255),
    textmsg character varying(2000),
    reply character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_accesslog_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_accesslog OWNER TO adempiere;

--
-- Name: ad_alert; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_alert (
    ad_alert_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    alertsubject character varying(60) NOT NULL,
    alertmessage character varying(2000) NOT NULL,
    enforceclientsecurity character(1) DEFAULT 'Y'::bpchar NOT NULL,
    enforcerolesecurity character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ad_alertprocessor_id numeric(10,0),
    isvalid character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_alert_enforceclientsecurity_check CHECK ((enforceclientsecurity = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_alert_enforcerolesecurity_check CHECK ((enforcerolesecurity = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_alert_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_alert OWNER TO adempiere;

--
-- Name: ad_alertprocessor; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_alertprocessor (
    ad_alertprocessor_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    frequencytype character(1) NOT NULL,
    frequency numeric(10,0) NOT NULL,
    datelastrun timestamp without time zone,
    datenextrun timestamp without time zone,
    supervisor_id numeric(10,0) NOT NULL,
    keeplogdays numeric(10,0) NOT NULL,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_alertprocessor_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_alertprocessor OWNER TO adempiere;

--
-- Name: ad_alertprocessorlog; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_alertprocessorlog (
    ad_alertprocessor_id numeric(10,0) NOT NULL,
    ad_alertprocessorlog_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    iserror character(1) DEFAULT 'N'::bpchar NOT NULL,
    summary character varying(2000),
    reference character varying(60),
    description character varying(255),
    textmsg character varying(2000),
    binarydata bytea,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_alertprocessorlog_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_alertprocessorlog_iserror_check CHECK ((iserror = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_alertprocessorlog OWNER TO adempiere;

--
-- Name: ad_alertrecipient; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_alertrecipient (
    ad_alertrecipient_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_alert_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    ad_role_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_alertrecipient_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_alertrecipient OWNER TO adempiere;

--
-- Name: ad_alertrule; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_alertrule (
    ad_alertrule_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    ad_alert_id numeric(10,0) NOT NULL,
    selectclause character varying(2000) NOT NULL,
    fromclause character varying(2000) NOT NULL,
    whereclause character varying(2000),
    ad_table_id numeric(10,0),
    preprocessing character varying(2000),
    postprocessing character varying(2000),
    isvalid character(1) DEFAULT 'Y'::bpchar NOT NULL,
    errormsg character varying(2000),
    otherclause character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_alertrule_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_alertrule OWNER TO adempiere;

--
-- Name: ad_archive; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_archive (
    ad_archive_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ad_table_id numeric(10,0),
    record_id numeric(10,0),
    ad_process_id numeric(10,0),
    binarydata bytea,
    c_bpartner_id numeric(10,0),
    isreport character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_archive_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_archive OWNER TO adempiere;

--
-- Name: ad_attachment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_attachment (
    ad_attachment_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    record_id numeric(10,0) NOT NULL,
    title character varying(60) NOT NULL,
    binarydata bytea,
    textmsg character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_attachment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_attachment OWNER TO adempiere;

--
-- Name: ad_attachmentnote; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_attachmentnote (
    ad_attachmentnote_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_attachment_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    title character varying(60) NOT NULL,
    textmsg character varying(2000) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_attachmentnote_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_attachmentnote OWNER TO adempiere;

--
-- Name: ad_attribute; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_attribute (
    ad_attribute_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ad_table_id numeric(10,0) NOT NULL,
    ad_reference_id numeric(10,0) NOT NULL,
    ad_reference_value_id numeric(10,0),
    ad_val_rule_id numeric(10,0),
    callout character varying(60),
    valuemin character varying(20),
    valuemax character varying(20),
    defaultvalue character varying(2000),
    isreadonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    isupdateable character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismandatory character(1) DEFAULT 'N'::bpchar NOT NULL,
    isencrypted character(1) DEFAULT 'N'::bpchar NOT NULL,
    fieldlength numeric(10,0),
    displaylength numeric(10,0),
    displaylogic character varying(2000),
    vformat character varying(60),
    issameline character(1) DEFAULT 'N'::bpchar NOT NULL,
    isheading character(1) DEFAULT 'N'::bpchar NOT NULL,
    isfieldonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    seqno numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_attribute_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_attribute_isencrypted_check CHECK ((isencrypted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_attribute_isfieldonly_check CHECK ((isfieldonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_attribute_isheading_check CHECK ((isheading = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_attribute_ismandatory_check CHECK ((ismandatory = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_attribute_isreadonly_check CHECK ((isreadonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_attribute_issameline_check CHECK ((issameline = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_attribute_isupdateable_check CHECK ((isupdateable = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_attribute OWNER TO adempiere;

--
-- Name: ad_attribute_value; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_attribute_value (
    ad_attribute_id numeric(10,0) NOT NULL,
    record_id numeric(10,0) NOT NULL,
    v_number numeric,
    v_date timestamp without time zone,
    v_string character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_attribute_value OWNER TO adempiere;

--
-- Name: ad_browse; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_browse (
    ad_browse_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    entitytype character varying(40) NOT NULL,
    help character varying(2000) DEFAULT NULL::character varying,
    name character varying(255) NOT NULL,
    value character varying(60) DEFAULT NULL::character varying,
    ad_view_id numeric(10,0) NOT NULL,
    whereclause character varying(2000) DEFAULT NULL::character varying,
    processing character(1) DEFAULT NULL::bpchar,
    ad_process_id numeric(10,0) DEFAULT NULL::numeric,
    isbetafunctionality character(1) DEFAULT 'N'::bpchar,
    accesslevel character(1) DEFAULT '4'::bpchar NOT NULL,
    copyfrom character(1),
    isdeleteable character(1) DEFAULT 'N'::bpchar,
    iscollapsiblebydefault character(1) DEFAULT 'N'::bpchar,
    isselectedbydefault character(1) DEFAULT 'N'::bpchar,
    isexecutedquerybydefault character(1) DEFAULT 'N'::bpchar,
    ad_window_id numeric(10,0) DEFAULT NULL::numeric,
    isshowtotal character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_browse_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_isbetafunctionality_check CHECK ((isbetafunctionality = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_iscollapsiblebydefault_check CHECK ((iscollapsiblebydefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_isdeleteable_check CHECK ((isdeleteable = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_isexecutedquerybydefault_check CHECK ((isexecutedquerybydefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_isselectedbydefault_check CHECK ((isselectedbydefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_isshowtotal_check CHECK ((isshowtotal = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_browse OWNER TO adempiere;

--
-- Name: ad_browse_access; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_browse_access (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_browse_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    isreadwrite character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_browse_access_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_access_isreadwrite_check CHECK ((isreadwrite = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_browse_access OWNER TO adempiere;

--
-- Name: ad_browse_field; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_browse_field (
    ad_browse_field_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_element_id numeric(10,0) NOT NULL,
    ad_reference_id numeric(10,0) NOT NULL,
    ad_view_column_id numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    entitytype character varying(40) NOT NULL,
    help character varying(2000) DEFAULT NULL::character varying,
    iscentrallymaintained character(1) DEFAULT 'Y'::bpchar,
    isdisplayed character(1) DEFAULT 'Y'::bpchar,
    isidentifier character(1) DEFAULT NULL::bpchar,
    iskey character(1) DEFAULT NULL::bpchar,
    isquerycriteria character(1) DEFAULT 'N'::bpchar,
    isrange character(1) DEFAULT NULL::bpchar,
    name character varying(255) NOT NULL,
    seqno numeric(10,0) DEFAULT NULL::numeric,
    ad_browse_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    ad_reference_value_id numeric(10,0) DEFAULT NULL::numeric,
    ismandatory character(1) DEFAULT 'N'::bpchar,
    axis_column_id numeric(10,0) DEFAULT NULL::numeric,
    axis_parent_column_id numeric(10,0) DEFAULT NULL::numeric,
    isreadonly character(1) DEFAULT 'Y'::bpchar,
    sortno numeric,
    isorderby character(1) DEFAULT 'N'::bpchar,
    ad_val_rule_id numeric(10,0) DEFAULT NULL::numeric,
    defaultvalue character varying(2000) DEFAULT NULL::character varying,
    defaultvalue2 character varying(2000) DEFAULT NULL::character varying,
    displaylogic character varying(2000) DEFAULT NULL::character varying,
    fieldlength numeric(10,0) DEFAULT NULL::numeric,
    readonlylogic character varying(2000) DEFAULT NULL::character varying,
    vformat character varying(60) DEFAULT NULL::character varying,
    valuemax character varying(20) DEFAULT NULL::character varying,
    valuemin character varying(20) DEFAULT NULL::character varying,
    callout character varying(255) DEFAULT NULL::character varying,
    infofactoryclass character varying(255) DEFAULT NULL::character varying,
    seqnogrid numeric(10,0) DEFAULT '0'::numeric,
    isinfoonly character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_browse_field_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_field_iscentrallymaintained_check CHECK ((iscentrallymaintained = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_field_isdisplayed_check CHECK ((isdisplayed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_field_isidentifier_check CHECK ((isidentifier = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_field_isinfoonly_check CHECK ((isinfoonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_field_iskey_check CHECK ((iskey = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_field_ismandatory_check CHECK ((ismandatory = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_field_isorderby_check CHECK ((isorderby = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_field_isquerycriteria_check CHECK ((isquerycriteria = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_field_isrange_check CHECK ((isrange = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_field_isreadonly_check CHECK ((isreadonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_browse_field OWNER TO adempiere;

--
-- Name: ad_browse_field_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_browse_field_trl (
    ad_browse_field_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    help character varying(2000) DEFAULT NULL::character varying,
    istranslated character(1) NOT NULL,
    name character varying(60) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_browse_field_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_field_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_browse_field_trl OWNER TO adempiere;

--
-- Name: ad_browse_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_browse_trl (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_browse_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    help character varying(2000) DEFAULT NULL::character varying,
    istranslated character(1) NOT NULL,
    name character varying(60) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_browse_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_browse_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_browse_trl OWNER TO adempiere;

--
-- Name: ad_changelog; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_changelog (
    ad_changelog_id numeric(10,0) NOT NULL,
    ad_session_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    ad_column_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    record_id numeric(10,0) NOT NULL,
    oldvalue character varying(2000),
    newvalue character varying(2000),
    undo character(1),
    redo character(1),
    iscustomization character(1) DEFAULT 'N'::bpchar NOT NULL,
    trxname character varying(60),
    description character varying(255),
    eventchangelog character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_changelog_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_changelog_iscustomization_check CHECK ((iscustomization = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_changelog OWNER TO adempiere;

--
-- Name: ad_column; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_column (
    ad_column_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    version numeric NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    columnname character varying(30) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    ad_reference_id numeric(10,0) NOT NULL,
    ad_reference_value_id numeric(10,0),
    ad_val_rule_id numeric(10,0),
    fieldlength numeric(10,0),
    defaultvalue character varying(2000),
    iskey character(1) DEFAULT 'N'::bpchar NOT NULL,
    isparent character(1) DEFAULT 'N'::bpchar NOT NULL,
    ismandatory character(1) DEFAULT 'N'::bpchar NOT NULL,
    isupdateable character(1) DEFAULT 'Y'::bpchar NOT NULL,
    readonlylogic character varying(2000),
    isidentifier character(1) DEFAULT 'N'::bpchar NOT NULL,
    seqno numeric(10,0),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    isencrypted character(1) DEFAULT 'N'::bpchar NOT NULL,
    callout character varying(255),
    vformat character varying(60),
    valuemin character varying(20),
    valuemax character varying(20),
    isselectioncolumn character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_element_id numeric(10,0),
    ad_process_id numeric(10,0),
    issyncdatabase character(1) DEFAULT 'N'::bpchar,
    isalwaysupdateable character(1) DEFAULT 'N'::bpchar NOT NULL,
    columnsql character varying(2000),
    mandatorylogic character varying(2000),
    infofactoryclass character varying(255),
    isautocomplete character(1) DEFAULT 'N'::bpchar NOT NULL,
    isallowlogging character(1) DEFAULT 'Y'::bpchar,
    formatpattern character varying(22),
    ad_chart_id numeric(10,0) DEFAULT NULL::numeric,
    isrange character(1) DEFAULT 'N'::bpchar NOT NULL,
    isallowcopy character(1) DEFAULT 'Y'::bpchar,
    uuid character varying(36),
    CONSTRAINT ad_column_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_column_isallowcopy_check CHECK ((isallowcopy = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_column_isallowlogging_check CHECK ((isallowlogging = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_column_isautocomplete_check CHECK ((isautocomplete = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_column_isencrypted_check CHECK ((isencrypted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_column_isidentifier_check CHECK ((isidentifier = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_column_iskey_check CHECK ((iskey = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_column_ismandatory_check CHECK ((ismandatory = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_column_isparent_check CHECK ((isparent = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_column_isselectioncolumn_check CHECK ((isselectioncolumn = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_column_issyncdatabase_check CHECK ((issyncdatabase = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_column_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_column_isupdateable_check CHECK ((isupdateable = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_column OWNER TO adempiere;

--
-- Name: ad_table; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_table (
    ad_table_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    tablename character varying(40) NOT NULL,
    isview character(1) DEFAULT 'N'::bpchar NOT NULL,
    accesslevel character(1) NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    ad_window_id numeric(10,0),
    ad_val_rule_id numeric(10,0),
    loadseq numeric(10,0),
    issecurityenabled character(1) DEFAULT 'N'::bpchar NOT NULL,
    isdeleteable character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ishighvolume character(1) DEFAULT 'N'::bpchar NOT NULL,
    importtable character(1),
    ischangelog character(1) DEFAULT 'N'::bpchar NOT NULL,
    replicationtype character(1) DEFAULT 'L'::bpchar NOT NULL,
    po_window_id numeric(10,0),
    copycolumnsfromtable character varying(1),
    iscentrallymaintained character(1) DEFAULT 'Y'::bpchar,
    actriggerlength numeric(10,0) DEFAULT (0)::numeric,
    isignoremigration character(1) DEFAULT 'N'::bpchar,
    isdocument character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_table_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_table_iscentrallymaintained_check CHECK ((iscentrallymaintained = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_table_isdeleteable_check CHECK ((isdeleteable = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_table_isdocument_check CHECK ((isdocument = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_table_ishighvolume_check CHECK ((ishighvolume = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_table_isignoremigration_check CHECK ((isignoremigration = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_table_issecurityenabled_check CHECK ((issecurityenabled = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_table_isview_check CHECK ((isview = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_table OWNER TO adempiere;

--
-- Name: ad_user; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_user (
    ad_user_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    password character varying(1024),
    email character varying(60),
    supervisor_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    processing character(1),
    emailuser character varying(60),
    emailuserpw character varying(255),
    c_bpartner_location_id numeric(10,0),
    c_greeting_id numeric(10,0),
    title character varying(40),
    comments character varying(2000),
    phone character varying(40),
    phone2 character varying(40),
    fax character varying(40),
    lastcontact timestamp without time zone,
    lastresult character varying(255),
    birthday timestamp without time zone,
    ad_orgtrx_id numeric(10,0),
    emailverify character varying(40),
    emailverifydate timestamp without time zone,
    notificationtype character(1) DEFAULT 'E'::bpchar NOT NULL,
    isfullbpaccess character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_job_id numeric(10,0),
    ldapuser character varying(60),
    connectionprofile character(1),
    value character varying(40),
    userpin character varying(20),
    isinpayroll character(1) DEFAULT 'N'::bpchar NOT NULL,
    salt character varying(16) DEFAULT NULL::character varying,
    issaleslead character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_location_id numeric(10,0) DEFAULT NULL::numeric,
    leadsource character varying(10) DEFAULT NULL::character varying,
    leadstatus character varying(10) DEFAULT NULL::character varying,
    leadsourcedescription character varying(255) DEFAULT NULL::character varying,
    leadstatusdescription character varying(255) DEFAULT NULL::character varying,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    salesrep_id numeric(10,0),
    bpname character varying(60) DEFAULT NULL::character varying,
    bp_location_id numeric(10,0) DEFAULT NULL::numeric,
    ad_emailconfig_id numeric(10,0) DEFAULT NULL::numeric,
    isloginuser character(1) DEFAULT 'N'::bpchar,
    isinternaluser character(1) DEFAULT 'N'::bpchar,
    iswebstoreuser character(1) DEFAULT 'N'::bpchar,
    recentitemsmaxsaved numeric(10,0) DEFAULT '50'::numeric,
    recentitemsmaxshown numeric(10,0) DEFAULT '20'::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_user_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_user_isinpayroll_check CHECK ((isinpayroll = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_user_isinternaluser_check CHECK ((isinternaluser = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_user_isloginuser_check CHECK ((isloginuser = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_user_issaleslead_check CHECK ((issaleslead = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_user_iswebstoreuser_check CHECK ((iswebstoreuser = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_user OWNER TO adempiere;

--
-- Name: ad_changelog_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.ad_changelog_v AS
 SELECT l.ad_session_id,
    l.ad_changelog_id,
    t.tablename,
    l.record_id,
    c.columnname,
    l.oldvalue,
    l.newvalue,
    u.name,
    l.created
   FROM (((adempiere.ad_changelog l
     JOIN adempiere.ad_table t ON ((l.ad_table_id = t.ad_table_id)))
     JOIN adempiere.ad_column c ON ((l.ad_column_id = c.ad_column_id)))
     JOIN adempiere.ad_user u ON ((l.createdby = u.ad_user_id)))
  ORDER BY l.ad_session_id, l.ad_changelog_id, t.tablename, l.record_id, c.columnname;


ALTER TABLE adempiere.ad_changelog_v OWNER TO adempiere;

--
-- Name: ad_chart; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_chart (
    ad_chart_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    charttype character varying(2) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    isactive character(1) DEFAULT NULL::bpchar,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    winheight numeric(10,0) DEFAULT NULL::numeric,
    isdisplaylegend character(1) DEFAULT 'Y'::bpchar NOT NULL,
    chartorientation character(1) DEFAULT 'V'::bpchar NOT NULL,
    istimeseries character(1) DEFAULT 'N'::bpchar NOT NULL,
    timeunit character(1) DEFAULT NULL::bpchar,
    timescope numeric(10,0),
    domainlabel character varying(60) DEFAULT NULL::character varying,
    rangelabel character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_chart_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_chart_isdisplaylegend_check CHECK ((isdisplaylegend = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_chart_istimeseries_check CHECK ((istimeseries = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_chart OWNER TO adempiere;

--
-- Name: ad_chartdatasource; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_chartdatasource (
    ad_chartdatasource_id numeric(10,0) NOT NULL,
    ad_chart_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0),
    categorycolumn character varying(60),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    datecolumn character varying(60) DEFAULT NULL::character varying,
    description character varying(255) DEFAULT NULL::character varying,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    fromclause character varying(2000) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    keycolumn character varying(60),
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    valuecolumn character varying(60) NOT NULL,
    whereclause character varying(2000) DEFAULT 'WHERE ...'::character varying NOT NULL,
    timeoffset numeric(10,0),
    seriescolumn character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_chartdatasource_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_chartdatasource OWNER TO adempiere;

--
-- Name: ad_client; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_client (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    smtphost character varying(60),
    requestemail character varying(60),
    requestuser character varying(60),
    requestuserpw character varying(20),
    requestfolder character varying(20),
    ad_language character varying(6),
    ismultilingualdocument character(1) DEFAULT 'N'::bpchar NOT NULL,
    issmtpauthorization character(1) DEFAULT 'N'::bpchar NOT NULL,
    isusebetafunctions character(1) DEFAULT 'N'::bpchar NOT NULL,
    ldapquery character varying(255),
    modelvalidationclasses character varying(255),
    autoarchive character(1) DEFAULT 'N'::bpchar NOT NULL,
    mmpolicy character(1) DEFAULT 'F'::bpchar NOT NULL,
    emailtest character(1),
    isserveremail character(1) DEFAULT 'N'::bpchar NOT NULL,
    documentdir character varying(60),
    ispostimmediate character(1) DEFAULT 'N'::bpchar NOT NULL,
    iscostimmediate character(1) DEFAULT 'N'::bpchar NOT NULL,
    storeattachmentsonfilesystem character(1) DEFAULT 'N'::bpchar NOT NULL,
    windowsattachmentpath character varying(255),
    unixattachmentpath character varying(255),
    storearchiveonfilesystem character(1) DEFAULT 'N'::bpchar NOT NULL,
    windowsarchivepath character varying(255),
    unixarchivepath character varying(255),
    isuseasp character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_replicationstrategy_id numeric(10,0),
    ad_emailconfig_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_client_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_client_isuseasp_check CHECK ((isuseasp = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_client OWNER TO adempiere;

--
-- Name: ad_clientinfo; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_clientinfo (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isdiscountlineamt character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_calendar_id numeric(10,0),
    c_acctschema1_id numeric(10,0),
    c_uom_volume_id numeric(10,0),
    c_uom_weight_id numeric(10,0),
    c_uom_length_id numeric(10,0),
    c_uom_time_id numeric(10,0),
    ad_tree_menu_id numeric(10,0),
    ad_tree_org_id numeric(10,0),
    ad_tree_bpartner_id numeric(10,0),
    ad_tree_project_id numeric(10,0),
    ad_tree_salesregion_id numeric(10,0),
    ad_tree_product_id numeric(10,0),
    m_productfreight_id numeric(10,0),
    c_bpartnercashtrx_id numeric(10,0),
    keeplogdays numeric(10,0),
    ad_tree_activity_id numeric(10,0),
    ad_tree_campaign_id numeric(10,0),
    logo_id numeric(10,0),
    logoreport_id numeric(10,0),
    logoweb_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_clientinfo_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_clientinfo_isdiscountlineamt_check CHECK ((isdiscountlineamt = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_clientinfo OWNER TO adempiere;

--
-- Name: ad_clientshare; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_clientshare (
    ad_clientshare_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ad_table_id numeric(10,0) NOT NULL,
    sharetype character(1) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_clientshare_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_clientshare OWNER TO adempiere;

--
-- Name: ad_color; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_color (
    ad_color_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    colortype character(1) NOT NULL,
    red numeric(10,0) NOT NULL,
    green numeric(10,0) NOT NULL,
    blue numeric(10,0) NOT NULL,
    alpha numeric(10,0) NOT NULL,
    ad_image_id numeric(10,0),
    imagealpha numeric NOT NULL,
    red_1 numeric(10,0),
    green_1 numeric(10,0),
    blue_1 numeric(10,0),
    alpha_1 numeric(10,0),
    linewidth numeric(10,0),
    linedistance numeric(10,0),
    startpoint numeric(10,0),
    repeatdistance numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_color_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_color OWNER TO adempiere;

--
-- Name: ad_column_access; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_column_access (
    ad_role_id numeric(10,0) NOT NULL,
    ad_column_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isreadonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    isexclude character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ad_table_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_column_access OWNER TO adempiere;

--
-- Name: ad_column_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_column_trl (
    ad_column_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_column_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_column_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_column_trl OWNER TO adempiere;

--
-- Name: ad_columnprocess; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_columnprocess (
    ad_client_id numeric(10,0) NOT NULL,
    ad_columnprocess_id numeric(10,0) NOT NULL,
    ad_column_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    ad_process_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_columnprocess_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_columnprocess OWNER TO adempiere;

--
-- Name: ad_columnprocesspara; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_columnprocesspara (
    ad_client_id numeric(10,0) NOT NULL,
    ad_columnprocesspara_id numeric(10,0) NOT NULL,
    ad_columnprocess_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    ad_process_para_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    defaultvalue character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_columnprocesspara_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_columnprocesspara OWNER TO adempiere;

--
-- Name: ad_desktop; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_desktop (
    ad_desktop_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ad_image_id numeric(10,0),
    ad_color_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_desktop_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_desktop OWNER TO adempiere;

--
-- Name: ad_desktop_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_desktop_trl (
    ad_desktop_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_desktop_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_desktop_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_desktop_trl OWNER TO adempiere;

--
-- Name: ad_desktopworkbench; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_desktopworkbench (
    ad_desktopworkbench_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_workbench_id numeric(10,0) NOT NULL,
    ad_desktop_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_desktopworkbench_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_desktopworkbench OWNER TO adempiere;

--
-- Name: ad_document_action_access; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_document_action_access (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_doctype_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    ad_ref_list_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_document_action_access OWNER TO adempiere;

--
-- Name: ad_element; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_element (
    ad_element_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    columnname character varying(30) NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    name character varying(60) NOT NULL,
    printname character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    po_name character varying(60),
    po_printname character varying(60),
    po_description character varying(255),
    po_help character varying(2000),
    ad_reference_id numeric(10,0) DEFAULT NULL::numeric,
    fieldlength numeric(10,0) DEFAULT NULL::numeric,
    ad_reference_value_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_element_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_element OWNER TO adempiere;

--
-- Name: ad_element_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_element_trl (
    ad_element_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    printname character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    po_name character varying(60),
    po_printname character varying(60),
    po_description character varying(255),
    po_help character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_element_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_element_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_element_trl OWNER TO adempiere;

--
-- Name: ad_emailconfig; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_emailconfig (
    ad_client_id numeric(10,0) NOT NULL,
    ad_emailconfig_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    authmechanism character(1) DEFAULT 'L'::bpchar NOT NULL,
    connectiontimeout numeric(10,0) DEFAULT '0'::numeric,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    encryptiontype character(1) DEFAULT 'N'::bpchar NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    issmtpauthorization character(1) DEFAULT 'N'::bpchar,
    ldapdomain character varying(255),
    name character varying(60) NOT NULL,
    port numeric(10,0) NOT NULL,
    protocol character(1) NOT NULL,
    smtphost character varying(60) NOT NULL,
    timeout numeric(10,0) DEFAULT '0'::numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_emailconfig_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_emailconfig_issmtpauthorization_check CHECK ((issmtpauthorization = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_emailconfig OWNER TO adempiere;

--
-- Name: ad_entitytype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_entitytype (
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_entitytype_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    version character varying(20),
    modelpackage character varying(255),
    classpath character varying(255),
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_entitytype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_entitytype OWNER TO adempiere;

--
-- Name: ad_error; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_error (
    ad_error_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    code character varying(2000),
    ad_language character varying(6),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_error_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_error OWNER TO adempiere;

--
-- Name: ad_error_seq; Type: SEQUENCE; Schema: adempiere; Owner: adempiere
--

CREATE SEQUENCE adempiere.ad_error_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE adempiere.ad_error_seq OWNER TO adempiere;

--
-- Name: ad_field; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_field (
    ad_field_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    iscentrallymaintained character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ad_tab_id numeric(10,0) NOT NULL,
    ad_column_id numeric(10,0),
    ad_fieldgroup_id numeric(10,0),
    isdisplayed character(1) DEFAULT 'Y'::bpchar NOT NULL,
    displaylogic character varying(2000),
    displaylength numeric(10,0),
    isreadonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    seqno numeric(10,0),
    sortno numeric(10,0),
    issameline character(1) DEFAULT 'N'::bpchar NOT NULL,
    isheading character(1) DEFAULT 'N'::bpchar NOT NULL,
    isfieldonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    isencrypted character(1) DEFAULT 'N'::bpchar NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    obscuretype character(3),
    ad_reference_id numeric(10,0),
    ismandatory character(1),
    included_tab_id numeric(10,0),
    defaultvalue character varying(2000),
    ad_reference_value_id numeric(10,0),
    ad_val_rule_id numeric(10,0),
    infofactoryclass character varying(255),
    isembedded character(1) DEFAULT 'N'::bpchar,
    preferredwidth numeric(10,0),
    isdisplayedgrid character(1) DEFAULT 'Y'::bpchar NOT NULL,
    seqnogrid numeric(10,0),
    isallowcopy character(1) DEFAULT 'Y'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_field_hideinlistview_check CHECK ((isembedded = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_field_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_field_isallowcopy_check CHECK ((isallowcopy = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_field_iscentrallymaintained_check CHECK ((iscentrallymaintained = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_field_isdisplayed_check CHECK ((isdisplayed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_field_isencrypted_check CHECK ((isencrypted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_field_isfieldonly_check CHECK ((isfieldonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_field_isheading_check CHECK ((isheading = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_field_isreadonly_check CHECK ((isreadonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_field_issameline_check CHECK ((issameline = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_field OWNER TO adempiere;

--
-- Name: ad_field_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_field_trl (
    ad_field_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_field_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_field_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_field_trl OWNER TO adempiere;

--
-- Name: ad_fieldgroup; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_fieldgroup (
    ad_fieldgroup_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    fieldgrouptype character(1),
    iscollapsedbydefault character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_fieldgroup_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_fieldgroup_iscollapsedbydefault_check CHECK ((iscollapsedbydefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_fieldgroup OWNER TO adempiere;

--
-- Name: ad_reference; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_reference (
    ad_reference_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    validationtype character(1) NOT NULL,
    vformat character varying(40),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    isorderbyvalue character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_reference_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_reference OWNER TO adempiere;

--
-- Name: ad_tab; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_tab (
    ad_tab_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ad_table_id numeric(10,0) NOT NULL,
    ad_window_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    tablevel numeric(10,0) NOT NULL,
    issinglerow character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isinfotab character(1) DEFAULT 'N'::bpchar,
    istranslationtab character(1) DEFAULT 'N'::bpchar NOT NULL,
    isreadonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_column_id numeric(10,0),
    hastree character(1) DEFAULT 'N'::bpchar NOT NULL,
    whereclause character varying(2000),
    orderbyclause character varying(2000),
    commitwarning character varying(2000),
    ad_process_id numeric(10,0),
    processing character(1),
    ad_image_id numeric(10,0),
    importfields character(1),
    ad_columnsortorder_id numeric(10,0),
    ad_columnsortyesno_id numeric(10,0),
    issorttab character(1) DEFAULT 'N'::bpchar NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    included_tab_id numeric(10,0),
    readonlylogic character varying(2000),
    displaylogic character varying(2000),
    isinsertrecord character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isadvancedtab character(1) DEFAULT 'N'::bpchar NOT NULL,
    parent_column_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_tab_hastree_check CHECK ((hastree = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_tab_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_tab_isinfotab_check CHECK ((isinfotab = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_tab_isreadonly_check CHECK ((isreadonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_tab_issinglerow_check CHECK ((issinglerow = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_tab_istranslationtab_check CHECK ((istranslationtab = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_tab OWNER TO adempiere;

--
-- Name: ad_val_rule; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_val_rule (
    ad_val_rule_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    type character(1),
    code character varying(2000),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_val_rule_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_val_rule OWNER TO adempiere;

--
-- Name: ad_field_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.ad_field_v AS
 SELECT t.ad_window_id,
    f.ad_tab_id,
    f.ad_field_id,
    tbl.ad_table_id,
    f.ad_column_id,
    f.name,
    f.description,
    f.help,
    f.isdisplayed,
    f.displaylogic,
    f.displaylength,
    f.seqno,
    f.sortno,
    f.issameline,
    f.isheading,
    f.isfieldonly,
    f.isreadonly,
    f.isencrypted AS isencryptedfield,
    f.obscuretype,
    c.columnname,
    c.columnsql,
    c.fieldlength,
    c.vformat,
    COALESCE(f.defaultvalue, c.defaultvalue) AS defaultvalue,
    c.iskey,
    c.isparent,
    COALESCE(f.ismandatory, c.ismandatory) AS ismandatory,
    c.isidentifier,
    c.istranslated,
    COALESCE(f.ad_reference_value_id, c.ad_reference_value_id) AS ad_reference_value_id,
    c.callout,
    COALESCE(f.ad_reference_id, c.ad_reference_id) AS ad_reference_id,
    COALESCE(f.ad_val_rule_id, c.ad_val_rule_id) AS ad_val_rule_id,
    c.ad_process_id,
    c.isalwaysupdateable,
    c.readonlylogic,
    c.mandatorylogic,
    c.isupdateable,
    c.isencrypted AS isencryptedcolumn,
    c.isselectioncolumn,
    c.isrange,
    tbl.tablename,
    c.valuemin,
    c.valuemax,
    fg.name AS fieldgroup,
    vr.code AS validationcode,
    f.included_tab_id,
    fg.fieldgrouptype,
    fg.iscollapsedbydefault,
    COALESCE(f.infofactoryclass, c.infofactoryclass) AS infofactoryclass,
    c.isautocomplete,
    f.preferredwidth,
    c.ad_chart_id,
    f.isdisplayedgrid,
    f.seqnogrid,
    f.isembedded,
    COALESCE(f.isallowcopy, c.isallowcopy) AS isallowcopy
   FROM ((((((adempiere.ad_field f
     JOIN adempiere.ad_tab t ON ((f.ad_tab_id = t.ad_tab_id)))
     LEFT JOIN adempiere.ad_fieldgroup fg ON ((f.ad_fieldgroup_id = fg.ad_fieldgroup_id)))
     LEFT JOIN adempiere.ad_column c ON ((f.ad_column_id = c.ad_column_id)))
     JOIN adempiere.ad_table tbl ON ((c.ad_table_id = tbl.ad_table_id)))
     JOIN adempiere.ad_reference r ON ((c.ad_reference_id = r.ad_reference_id)))
     LEFT JOIN adempiere.ad_val_rule vr ON ((vr.ad_val_rule_id = COALESCE(f.ad_val_rule_id, c.ad_val_rule_id))))
  WHERE ((f.isactive = 'Y'::bpchar) AND (c.isactive = 'Y'::bpchar));


ALTER TABLE adempiere.ad_field_v OWNER TO adempiere;

--
-- Name: ad_fieldgroup_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_fieldgroup_trl (
    ad_fieldgroup_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_fieldgroup_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_fieldgroup_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_fieldgroup_trl OWNER TO adempiere;

--
-- Name: ad_field_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.ad_field_vt AS
 SELECT trl.ad_language,
    t.ad_window_id,
    f.ad_tab_id,
    f.ad_field_id,
    tbl.ad_table_id,
    f.ad_column_id,
    trl.name,
    trl.description,
    trl.help,
    f.isdisplayed,
    f.displaylogic,
    f.displaylength,
    f.seqno,
    f.sortno,
    f.issameline,
    f.isheading,
    f.isfieldonly,
    f.isreadonly,
    f.isencrypted AS isencryptedfield,
    f.obscuretype,
    c.columnname,
    c.columnsql,
    c.fieldlength,
    c.vformat,
    COALESCE(f.defaultvalue, c.defaultvalue) AS defaultvalue,
    c.iskey,
    c.isparent,
    COALESCE(f.ismandatory, c.ismandatory) AS ismandatory,
    c.isidentifier,
    c.istranslated,
    COALESCE(f.ad_reference_value_id, c.ad_reference_value_id) AS ad_reference_value_id,
    c.callout,
    COALESCE(f.ad_reference_id, c.ad_reference_id) AS ad_reference_id,
    COALESCE(f.ad_val_rule_id, c.ad_val_rule_id) AS ad_val_rule_id,
    c.ad_process_id,
    c.isalwaysupdateable,
    c.readonlylogic,
    c.mandatorylogic,
    c.isupdateable,
    c.isencrypted AS isencryptedcolumn,
    c.isselectioncolumn,
    tbl.tablename,
    c.valuemin,
    c.valuemax,
    fgt.name AS fieldgroup,
    vr.code AS validationcode,
    f.included_tab_id,
    fg.fieldgrouptype,
    fg.iscollapsedbydefault,
    COALESCE(f.infofactoryclass, c.infofactoryclass) AS infofactoryclass,
    c.isautocomplete,
    f.preferredwidth AS preferredwith,
    c.ad_chart_id,
    f.isdisplayedgrid,
    f.seqnogrid,
    f.isembedded,
    COALESCE(f.isallowcopy, c.isallowcopy) AS isallowcopy
   FROM ((((((((adempiere.ad_field f
     JOIN adempiere.ad_field_trl trl ON ((f.ad_field_id = trl.ad_field_id)))
     JOIN adempiere.ad_tab t ON ((f.ad_tab_id = t.ad_tab_id)))
     LEFT JOIN adempiere.ad_fieldgroup fg ON ((f.ad_fieldgroup_id = fg.ad_fieldgroup_id)))
     LEFT JOIN adempiere.ad_fieldgroup_trl fgt ON (((f.ad_fieldgroup_id = fgt.ad_fieldgroup_id) AND ((trl.ad_language)::text = (fgt.ad_language)::text))))
     LEFT JOIN adempiere.ad_column c ON ((f.ad_column_id = c.ad_column_id)))
     JOIN adempiere.ad_table tbl ON ((c.ad_table_id = tbl.ad_table_id)))
     JOIN adempiere.ad_reference r ON ((c.ad_reference_id = r.ad_reference_id)))
     LEFT JOIN adempiere.ad_val_rule vr ON ((vr.ad_val_rule_id = COALESCE(f.ad_val_rule_id, c.ad_val_rule_id))))
  WHERE ((f.isactive = 'Y'::bpchar) AND (c.isactive = 'Y'::bpchar));


ALTER TABLE adempiere.ad_field_vt OWNER TO adempiere;

--
-- Name: ad_find; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_find (
    ad_find_id numeric(10,0) NOT NULL,
    find_id numeric NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    andor character(1) NOT NULL,
    ad_column_id numeric(10,0) NOT NULL,
    operation character(2) NOT NULL,
    value character varying(40) NOT NULL,
    value2 character varying(40),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_find_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_find OWNER TO adempiere;

--
-- Name: ad_form; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_form (
    ad_form_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    accesslevel character(1) NOT NULL,
    classname character varying(60),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    isbetafunctionality character(1) DEFAULT 'N'::bpchar NOT NULL,
    jspurl character varying(120),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_form_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_form OWNER TO adempiere;

--
-- Name: ad_form_access; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_form_access (
    ad_form_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isreadwrite character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_form_access_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_form_access_isreadwrite_check CHECK ((isreadwrite = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_form_access OWNER TO adempiere;

--
-- Name: ad_form_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_form_trl (
    ad_form_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_form_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_form_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_form_trl OWNER TO adempiere;

--
-- Name: ad_housekeeping; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_housekeeping (
    ad_client_id numeric(10,0) NOT NULL,
    ad_housekeeping_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    backupfolder character varying(255),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isexportxmlbackup character(1),
    issaveinhistoric character(1),
    lastdeleted numeric(10,0),
    lastrun timestamp without time zone,
    name character varying(60) NOT NULL,
    processing character(1),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    whereclause character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_housekeeping_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_housekeeping_isexportxmlbackup_check CHECK ((isexportxmlbackup = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_housekeeping_issaveinhistoric_check CHECK ((issaveinhistoric = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_housekeeping OWNER TO adempiere;

--
-- Name: ad_image; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_image (
    ad_image_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    imageurl character varying(120),
    binarydata bytea,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_image_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_image OWNER TO adempiere;

--
-- Name: ad_impformat; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_impformat (
    ad_impformat_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ad_table_id numeric(10,0) NOT NULL,
    formattype character(1) NOT NULL,
    processing character(1) NOT NULL,
    separatorchar character varying(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_impformat_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_impformat OWNER TO adempiere;

--
-- Name: ad_impformat_row; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_impformat_row (
    ad_impformat_row_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_impformat_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    ad_column_id numeric(10,0) NOT NULL,
    startno numeric(10,0),
    endno numeric(10,0),
    datatype character(1) NOT NULL,
    dataformat character varying(20),
    decimalpoint character(1) NOT NULL,
    divideby100 character(1) DEFAULT 'N'::bpchar NOT NULL,
    constantvalue character varying(60),
    callout character varying(60),
    script character varying(2000),
    defaultvalue character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_impformat_row_divideby100_check CHECK ((divideby100 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_impformat_row_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_impformat_row OWNER TO adempiere;

--
-- Name: ad_infocolumn; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_infocolumn (
    ad_infocolumn_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ad_infowindow_id numeric(10,0) NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    selectclause character varying(255) NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    isdisplayed character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isquerycriteria character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_element_id numeric(10,0),
    ad_reference_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_infocolumn_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_infocolumn_isdisplayed_check CHECK ((isdisplayed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_infocolumn_isquerycriteria_check CHECK ((isquerycriteria = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_infocolumn OWNER TO adempiere;

--
-- Name: ad_infocolumn_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_infocolumn_trl (
    ad_infocolumn_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_infocolumn_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_infocolumn_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_infocolumn_trl OWNER TO adempiere;

--
-- Name: ad_infowindow; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_infowindow (
    ad_infowindow_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ad_table_id numeric(10,0) NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    fromclause character varying(2000) NOT NULL,
    otherclause character varying(2000),
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_infowindow_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_infowindow OWNER TO adempiere;

--
-- Name: ad_infowindow_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_infowindow_trl (
    ad_infowindow_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_infowindow_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_infowindow_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_infowindow_trl OWNER TO adempiere;

--
-- Name: ad_issue; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_issue (
    ad_issue_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    releaseno character varying(10) DEFAULT '.'::character varying NOT NULL,
    version character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    username character varying(60) NOT NULL,
    supportemail character varying(60),
    dbaddress character varying(255),
    local_host character varying(120),
    operatingsysteminfo character varying(255),
    releasetag character varying(60),
    databaseinfo character varying(255),
    javainfo character varying(255),
    remote_addr character varying(60),
    remote_host character varying(120),
    issuesummary character varying(2000) NOT NULL,
    comments character varying(2000),
    sourceclassname character varying(60),
    sourcemethodname character varying(60),
    loggername character varying(60),
    lineno numeric(10,0) DEFAULT 0,
    stacktrace character varying(2000),
    errortrace character varying(2000),
    record_id numeric(10,0),
    requestdocumentno character varying(30),
    a_asset_id numeric(10,0),
    r_request_id numeric(10,0),
    responsetext character varying(2000),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    isvanillasystem character(1) DEFAULT 'N'::bpchar,
    isreproducible character(1) DEFAULT 'N'::bpchar,
    r_issueknown_id numeric(10,0),
    statisticsinfo character varying(255),
    profileinfo character varying(255),
    systemstatus character(1) NOT NULL,
    r_issueproject_id numeric(10,0),
    r_issueuser_id numeric(10,0),
    r_issuesystem_id numeric(10,0),
    issuesource character(1),
    ad_window_id numeric(10,0),
    ad_process_id numeric(10,0),
    ad_form_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_issue_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_issue_isreproducible_check CHECK ((isreproducible = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_issue_isvanillasystem_check CHECK ((isvanillasystem = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_issue_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_issue OWNER TO adempiere;

--
-- Name: ad_labelprinter; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_labelprinter (
    ad_labelprinter_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_labelprinter_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_labelprinter OWNER TO adempiere;

--
-- Name: ad_labelprinterfunction; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_labelprinterfunction (
    ad_labelprinterfunction_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ad_labelprinter_id numeric(10,0) NOT NULL,
    functionprefix character varying(40),
    functionsuffix character varying(40),
    isxyposition character(1) DEFAULT 'N'::bpchar NOT NULL,
    xyseparator character varying(20),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_labelprinterfunction_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_labelprinterfunction_isxyposition_check CHECK ((isxyposition = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_labelprinterfunction OWNER TO adempiere;

--
-- Name: ad_language; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_language (
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'N'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    languageiso character(2),
    countrycode character(2),
    isbaselanguage character(1) DEFAULT 'N'::bpchar NOT NULL,
    issystemlanguage character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    ad_language_id numeric(10,0) NOT NULL,
    isdecimalpoint character(1) DEFAULT 'Y'::bpchar NOT NULL,
    datepattern character varying(20),
    timepattern character varying(20),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_language_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_language_isbaselanguage_check CHECK ((isbaselanguage = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_language_issystemlanguage_check CHECK ((issystemlanguage = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_language OWNER TO adempiere;

--
-- Name: ad_ldapaccess; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_ldapaccess (
    ad_ldapaccess_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_ldapprocessor_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    r_interestarea_id numeric(10,0),
    iserror character(1) DEFAULT 'N'::bpchar NOT NULL,
    summary character varying(2000),
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_ldapaccess_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_ldapaccess_iserror_check CHECK ((iserror = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_ldapaccess OWNER TO adempiere;

--
-- Name: ad_ldapprocessor; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_ldapprocessor (
    ad_ldapprocessor_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ldapport numeric(10,0) DEFAULT 0 NOT NULL,
    datelastrun timestamp without time zone,
    datenextrun timestamp without time zone,
    supervisor_id numeric(10,0) NOT NULL,
    keeplogdays numeric(10,0) DEFAULT 0 NOT NULL,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_ldapprocessor_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_ldapprocessor OWNER TO adempiere;

--
-- Name: ad_ldapprocessorlog; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_ldapprocessorlog (
    ad_ldapprocessor_id numeric(10,0) NOT NULL,
    ad_ldapprocessorlog_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    summary character varying(2000),
    iserror character(1) DEFAULT 'N'::bpchar NOT NULL,
    reference character varying(60),
    description character varying(255),
    textmsg character varying(2000),
    binarydata bytea,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_ldapprocessorlog_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_ldapprocessorlog_iserror_check CHECK ((iserror = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_ldapprocessorlog OWNER TO adempiere;

--
-- Name: ad_memo; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_memo (
    ad_memo_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    record_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    comments text,
    ad_user_id numeric(10,0),
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_id numeric(10,0) DEFAULT NULL::numeric,
    isalert character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_memo_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_memo_isalert_check CHECK ((isalert = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_memo OWNER TO adempiere;

--
-- Name: ad_menu; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_menu (
    ad_menu_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    name character varying(60) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255),
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    issotrx character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isreadonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    action character(1),
    ad_window_id numeric(10,0),
    ad_workflow_id numeric(10,0),
    ad_task_id numeric(10,0),
    ad_process_id numeric(10,0),
    ad_form_id numeric(10,0),
    ad_workbench_id numeric(10,0),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    iscentrallymaintained character(1) DEFAULT 'Y'::bpchar,
    ad_browse_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_menu_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_menu_iscentrallymaintained_check CHECK ((iscentrallymaintained = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_menu_isreadonly_check CHECK ((isreadonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_menu_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_menu OWNER TO adempiere;

--
-- Name: ad_menu_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_menu_trl (
    ad_menu_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_menu_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_menu_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_menu_trl OWNER TO adempiere;

--
-- Name: ad_message; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_message (
    ad_message_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(255) NOT NULL,
    msgtext character varying(2000) NOT NULL,
    msgtip character varying(2000),
    msgtype character(1) NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_message_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_message OWNER TO adempiere;

--
-- Name: ad_message_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_message_trl (
    ad_message_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    msgtext character varying(2000) NOT NULL,
    msgtip character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_message_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_message_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_message_trl OWNER TO adempiere;

--
-- Name: ad_migration; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_migration (
    ad_client_id numeric(10,0) NOT NULL,
    ad_migration_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    apply character(1) DEFAULT NULL::bpchar,
    comments character varying(255) DEFAULT NULL::character varying,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    entitytype character varying(40) DEFAULT 'U'::character varying NOT NULL,
    exportxml character(1) DEFAULT NULL::bpchar,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    releaseno character varying(60),
    seqno numeric(10,0) NOT NULL,
    statuscode character(1) DEFAULT NULL::bpchar,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    processing character(1) DEFAULT NULL::bpchar,
    processed character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_migration_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_migration_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_migration OWNER TO adempiere;

--
-- Name: ad_migrationdata; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_migrationdata (
    ad_client_id numeric(10,0) NOT NULL,
    ad_column_id numeric(10,0) NOT NULL,
    ad_migrationdata_id numeric(10,0) NOT NULL,
    ad_migrationstep_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    backupvalue character varying(2000),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isbackupnull character(1) DEFAULT NULL::bpchar,
    isoldnull character(1) DEFAULT NULL::bpchar,
    isnewnull character(1) DEFAULT NULL::bpchar,
    newvalue character varying(2000),
    oldvalue character varying(2000) DEFAULT NULL::character varying,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_migrationdata_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_migrationdata_isbackupnull_check CHECK ((isbackupnull = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_migrationdata_isnewnull_check CHECK ((isnewnull = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_migrationdata_isoldnull_check CHECK ((isoldnull = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_migrationdata OWNER TO adempiere;

--
-- Name: ad_migrationscript; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_migrationscript (
    ad_client_id numeric(10,0) NOT NULL,
    ad_migrationscript_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(2000),
    developername character varying(60),
    isactive character(1) NOT NULL,
    name character varying(60) NOT NULL,
    projectname character varying(60) NOT NULL,
    reference character varying(2000),
    releaseno character varying(10) NOT NULL,
    scriptroll character(1),
    status character(2) NOT NULL,
    url character varying(2000),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isapply character(1) NOT NULL,
    filename character varying(500) NOT NULL,
    script bytea,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_migrationscript_isact_chk CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_migrationscript_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_migrationscript_isapply_chk CHECK ((isapply = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_migrationscript OWNER TO adempiere;

--
-- Name: ad_migrationstep; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_migrationstep (
    ad_client_id numeric(10,0) NOT NULL,
    ad_migrationstep_id numeric(10,0) NOT NULL,
    ad_migration_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) DEFAULT NULL::numeric,
    action character(1),
    apply character(1) DEFAULT NULL::bpchar,
    comments character varying(255) DEFAULT NULL::character varying,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dbtype character varying(22) DEFAULT 'ALL'::character varying,
    errormsg character varying(2000) DEFAULT NULL::character varying,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    record_id numeric(10,0) DEFAULT NULL::numeric,
    seqno numeric(10,0) NOT NULL,
    statuscode character(1) DEFAULT NULL::bpchar,
    steptype character varying(20) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    parse character(1) DEFAULT 'Y'::bpchar,
    sqlstatement text,
    rollbackstatement text,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_migrationstep_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_migrationstep_parse_check CHECK ((parse = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_migrationstep OWNER TO adempiere;

--
-- Name: ad_modelvalidator; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_modelvalidator (
    ad_client_id numeric(10,0) DEFAULT 0 NOT NULL,
    ad_modelvalidator_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) DEFAULT 0 NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    entitytype character varying(40) NOT NULL,
    modelvalidationclass character varying(255) NOT NULL,
    seqno numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_modelvalidator_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_modelvalidator OWNER TO adempiere;

--
-- Name: ad_modification; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_modification (
    ad_modification_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    version character varying(20),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_modification_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_modification OWNER TO adempiere;

--
-- Name: ad_note; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_note (
    ad_note_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    ad_message_id numeric(10,0) NOT NULL,
    reference character varying(60),
    ad_table_id numeric(10,0),
    record_id numeric(10,0),
    processed character(1) DEFAULT 'N'::bpchar,
    processing character(1),
    description character varying(255),
    ad_wf_activity_id numeric(10,0),
    textmsg character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_note_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_note_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_note OWNER TO adempiere;

--
-- Name: ad_org; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_org (
    ad_org_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_replicationstrategy_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_org_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_org OWNER TO adempiere;

--
-- Name: ad_orginfo; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_orginfo (
    ad_org_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_location_id numeric(10,0),
    duns character(11) NOT NULL,
    taxid character varying(20) NOT NULL,
    pa_goal_id numeric(10,0),
    supervisor_id numeric(10,0),
    parent_org_id numeric(10,0),
    ad_orgtype_id numeric(10,0),
    m_warehouse_id numeric(10,0),
    transferbank_id numeric(10,0),
    transfercashbook_id numeric(10,0),
    receiptfootermsg character varying(1023),
    dropship_warehouse_id numeric(10,0),
    c_calendar_id numeric(10,0),
    logo_id numeric(10,0),
    phone character varying(40),
    phone2 character varying(40),
    fax character varying(40),
    email character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_orginfo_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_orginfo OWNER TO adempiere;

--
-- Name: c_bpartner; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bpartner (
    c_bpartner_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    name2 character varying(60),
    description character varying(255),
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_bp_group_id numeric(10,0) NOT NULL,
    isonetime character(1) DEFAULT 'N'::bpchar NOT NULL,
    isprospect character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isvendor character(1) DEFAULT 'N'::bpchar NOT NULL,
    iscustomer character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isemployee character(1) DEFAULT 'N'::bpchar NOT NULL,
    issalesrep character(1) DEFAULT 'N'::bpchar NOT NULL,
    referenceno character varying(40),
    duns character(11),
    url character varying(120),
    ad_language character varying(6),
    taxid character varying(20),
    istaxexempt character(1) DEFAULT 'N'::bpchar,
    c_invoiceschedule_id numeric(10,0),
    rating character(1),
    salesvolume numeric(10,0),
    numberemployees numeric(10,0),
    naics character(6),
    firstsale timestamp without time zone,
    acqusitioncost numeric DEFAULT 0,
    potentiallifetimevalue numeric DEFAULT 0,
    actuallifetimevalue numeric DEFAULT 0,
    shareofcustomer numeric(10,0),
    paymentrule character(1),
    so_creditlimit numeric DEFAULT 0,
    so_creditused numeric DEFAULT 0,
    c_paymentterm_id numeric(10,0),
    m_pricelist_id numeric(10,0),
    m_discountschema_id numeric(10,0),
    c_dunning_id numeric(10,0),
    isdiscountprinted character(1) DEFAULT 'Y'::bpchar,
    so_description character varying(255),
    poreference character varying(20),
    paymentrulepo character(1),
    po_pricelist_id numeric(10,0),
    po_discountschema_id numeric(10,0),
    po_paymentterm_id numeric(10,0),
    documentcopies numeric(10,0),
    c_greeting_id numeric(10,0),
    invoicerule character(1),
    deliveryrule character(1),
    freightcostrule character(1),
    deliveryviarule character(1),
    salesrep_id numeric(10,0),
    sendemail character(1) DEFAULT 'N'::bpchar NOT NULL,
    bpartner_parent_id numeric(10,0),
    invoice_printformat_id numeric(10,0),
    socreditstatus character(1) DEFAULT 'O'::bpchar,
    shelflifeminpct numeric(10,0),
    ad_orgbp_id numeric(10,0),
    flatdiscount numeric,
    totalopenbalance numeric,
    dunninggrace timestamp without time zone,
    c_taxgroup_id numeric(10,0),
    logo_id numeric(10,0),
    ispotaxexempt character(1) DEFAULT 'N'::bpchar NOT NULL,
    ismanufacturer character(1) DEFAULT 'N'::bpchar,
    arenquiry character(40),
    apenquiry character(40),
    unappliedpayments character(40) DEFAULT NULL::bpchar,
    customeropeninvoices character(40) DEFAULT NULL::bpchar,
    notposted character(40) DEFAULT NULL::bpchar,
    vendoropeninvoices character(40),
    birthday timestamp without time zone,
    bloodgroup character varying(3) DEFAULT NULL::character varying,
    fathersname character varying(60) DEFAULT NULL::character varying,
    placeofbirth character varying(60) DEFAULT NULL::character varying,
    gender character(1) DEFAULT NULL::bpchar,
    placeofbirth_id numeric(10,0) DEFAULT NULL::numeric,
    maritalstatus character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bpartner_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_iscustomer_check CHECK ((iscustomer = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_isdiscountprinted_check CHECK ((isdiscountprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_isemployee_check CHECK ((isemployee = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_ismanufacturer_check CHECK ((ismanufacturer = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_isonetime_check CHECK ((isonetime = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_ispotaxexempt_check CHECK ((ispotaxexempt = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_isprospect_check CHECK ((isprospect = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_issalesrep_check CHECK ((issalesrep = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_issummary_check CHECK ((issummary = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_istaxexempt_check CHECK ((istaxexempt = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_isvendor_check CHECK ((isvendor = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bpartner OWNER TO adempiere;

--
-- Name: ad_org_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.ad_org_v AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    o.value,
    o.name,
    o.description,
    o.issummary,
    i.c_location_id,
    i.duns,
    i.taxid,
    i.supervisor_id,
    i.parent_org_id,
    i.ad_orgtype_id,
    i.m_warehouse_id,
    bp.c_bpartner_id
   FROM ((adempiere.ad_org o
     JOIN adempiere.ad_orginfo i ON ((o.ad_org_id = i.ad_org_id)))
     LEFT JOIN adempiere.c_bpartner bp ON ((o.ad_org_id = bp.ad_orgbp_id)));


ALTER TABLE adempiere.ad_org_v OWNER TO adempiere;

--
-- Name: ad_orgtype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_orgtype (
    ad_orgtype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ad_printcolor_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_orgtype OWNER TO adempiere;

--
-- Name: ad_package_exp; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_package_exp (
    ad_package_exp_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_package_type character varying(1),
    email character varying(30) NOT NULL,
    instructions character varying(1000) NOT NULL,
    name character varying(60) NOT NULL,
    processed character(1),
    releaseno character varying(20) NOT NULL,
    version character varying(20) NOT NULL,
    username character varying(30) NOT NULL,
    processing character(1) NOT NULL,
    pk_version character varying(20) NOT NULL,
    file_directory character varying(255) NOT NULL,
    description character varying(1000) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_package_exp OWNER TO adempiere;

--
-- Name: ad_package_exp_common; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_package_exp_common (
    ad_package_exp_common_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_form_id numeric(10,0),
    ad_impformat_id numeric(10,0),
    ad_reportview_id numeric(10,0),
    ad_table_id numeric(10,0),
    ad_workbench_id numeric(10,0),
    dbtype character varying(22),
    processed character(1),
    name character varying(60),
    name2 character varying(60),
    line numeric,
    file_directory character varying(255),
    filename character varying(255),
    destination_directory character varying(255),
    description character varying(1000),
    type character varying(10),
    target_directory character varying(255),
    sqlstatement character varying(255),
    processing character(1),
    ad_workflow_id numeric(10,0),
    ad_window_id numeric(10,0),
    ad_role_id numeric(10,0),
    ad_process_id numeric(10,0),
    ad_menu_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_package_exp_common OWNER TO adempiere;

--
-- Name: ad_package_exp_detail; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_package_exp_detail (
    ad_package_exp_detail_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric NOT NULL,
    ad_form_id numeric(10,0),
    ad_impformat_id numeric(10,0),
    ad_menu_id numeric(10,0),
    ad_process_id numeric(10,0),
    ad_role_id numeric(10,0),
    ad_window_id numeric(10,0),
    ad_workflow_id numeric(10,0),
    file_directory character varying(255),
    filename character varying(255),
    destination_filename character varying(255),
    destination_directory character varying(255),
    description character varying(1000) NOT NULL,
    dbtype character varying(22),
    type character varying(10) NOT NULL,
    target_directory character varying(255),
    sqlstatement character varying(2000),
    releaseno character varying(20),
    processing character(1) NOT NULL,
    processed character(1),
    name2 character varying(60),
    line numeric,
    ad_workbench_id numeric(10,0),
    ad_table_id numeric(10,0),
    ad_reportview_id numeric(10,0),
    ad_package_exp_id numeric(10,0) NOT NULL,
    ad_package_code_new character varying(2000),
    ad_package_code_old character varying(2000),
    ad_val_rule_id numeric(10,0),
    ad_message_id numeric(10,0),
    ad_printformat_id numeric(10,0),
    ad_reference_id numeric(10,0),
    ad_modelvalidator_id numeric(10,0),
    ad_entitytype_id numeric(10,0),
    ad_view_id numeric(10,0) DEFAULT NULL::numeric,
    ad_browse_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_package_exp_detail OWNER TO adempiere;

--
-- Name: ad_package_imp; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_package_imp (
    ad_package_imp_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    pk_status character varying(22),
    releaseno character varying(20),
    pk_version character varying(20),
    version character varying(20),
    description character varying(1000) NOT NULL,
    email character varying(60),
    processed character(1) DEFAULT 'N'::bpchar,
    processing character(1) DEFAULT 'N'::bpchar NOT NULL,
    creator character varying(60),
    creatorcontact character varying(255),
    createddate character varying(25),
    updateddate character varying(25),
    uninstall character(1),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_package_imp OWNER TO adempiere;

--
-- Name: ad_package_imp_backup; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_package_imp_backup (
    ad_package_imp_backup_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_package_imp_id numeric(10,0) NOT NULL,
    ad_package_imp_detail_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0),
    ad_column_id numeric(10,0),
    ad_reference_id numeric(10,0),
    ad_package_imp_bck_dir character varying(255),
    ad_package_imp_org_dir character varying(255),
    colvalue character varying(2000),
    uninstall character(1),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_package_imp_backup OWNER TO adempiere;

--
-- Name: ad_package_imp_detail; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_package_imp_detail (
    ad_package_imp_detail_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60),
    ad_package_imp_id numeric(10,0) NOT NULL,
    ad_original_id numeric(10,0) NOT NULL,
    ad_backup_id numeric(10,0),
    action character varying(20),
    success character varying(20),
    type character varying(60),
    tablename character varying(60),
    ad_table_id numeric(10,0),
    uninstall character(1),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_package_imp_detail OWNER TO adempiere;

--
-- Name: ad_package_imp_inst; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_package_imp_inst (
    ad_package_imp_inst_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby numeric(10,0),
    updated timestamp without time zone DEFAULT now(),
    updatedby numeric(10,0),
    name character varying(240),
    pk_status character varying(44),
    releaseno character varying(40),
    pk_version character varying(40),
    version character varying(40),
    description character varying(2000),
    email character varying(120),
    processed character(1) DEFAULT 'N'::bpchar,
    processing character(1) DEFAULT 'N'::bpchar,
    creator character varying(120),
    creatorcontact character varying(510),
    createddate character varying(50),
    updateddate character varying(50),
    uninstall character(1),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_package_imp_inst OWNER TO adempiere;

--
-- Name: ad_package_imp_proc; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_package_imp_proc (
    ad_package_imp_proc_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_override_dict character(1),
    ad_package_dir character varying(255),
    ad_package_source character varying(255),
    ad_package_source_type character varying(10) NOT NULL,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_package_imp_proc OWNER TO adempiere;

--
-- Name: ad_pinstance; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_pinstance (
    ad_pinstance_id numeric(10,0) NOT NULL,
    ad_process_id numeric(10,0) NOT NULL,
    record_id numeric(10,0) NOT NULL,
    isprocessing character(1) DEFAULT 'N'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    ad_user_id numeric(10,0),
    updated timestamp without time zone DEFAULT now(),
    result numeric(10,0),
    errormsg character varying(2000),
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    createdby numeric(10,0),
    updatedby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar,
    name character varying(60) DEFAULT NULL::character varying,
    reporttype character(1) DEFAULT 'P'::bpchar NOT NULL,
    ad_printformat_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_pinstance_isprocessing_check CHECK ((isprocessing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_pinstance OWNER TO adempiere;

--
-- Name: ad_pinstance_log; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_pinstance_log (
    ad_pinstance_id numeric(10,0) NOT NULL,
    ad_pinstance_log_id numeric(10,0) NOT NULL,
    p_date timestamp without time zone DEFAULT now(),
    p_id numeric(10,0),
    p_number numeric,
    p_msg character varying(2000),
    createdby numeric(10,0) DEFAULT NULL::numeric,
    created timestamp without time zone,
    updatedby numeric(10,0) DEFAULT NULL::numeric,
    updated timestamp without time zone,
    isactive character(1) DEFAULT 'Y'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_pinstance_log_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_pinstance_log OWNER TO adempiere;

--
-- Name: ad_pinstance_para; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_pinstance_para (
    ad_pinstance_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    parametername character varying(60),
    p_string character varying(255),
    p_string_to character varying(255),
    p_number numeric,
    p_number_to numeric,
    p_date timestamp without time zone,
    p_date_to timestamp without time zone,
    info character varying(60),
    info_to character varying(60),
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    created timestamp without time zone DEFAULT now(),
    createdby numeric(10,0),
    updated timestamp without time zone DEFAULT now(),
    updatedby numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_pinstance_para OWNER TO adempiere;

--
-- Name: ad_pinstance_seq; Type: SEQUENCE; Schema: adempiere; Owner: adempiere
--

CREATE SEQUENCE adempiere.ad_pinstance_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE adempiere.ad_pinstance_seq OWNER TO adempiere;

--
-- Name: ad_preference; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_preference (
    ad_preference_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_window_id numeric(10,0),
    ad_user_id numeric(10,0),
    attribute character varying(60) NOT NULL,
    value character varying(60) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_preference_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_preference OWNER TO adempiere;

--
-- Name: ad_printcolor; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_printcolor (
    ad_printcolor_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    code character varying(2000) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_printcolor_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_printcolor OWNER TO adempiere;

--
-- Name: ad_printfont; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_printfont (
    ad_printfont_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    code character varying(2000) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_printfont_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_printfont OWNER TO adempiere;

--
-- Name: ad_printform; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_printform (
    ad_printform_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    invoice_printformat_id numeric(10,0),
    order_printformat_id numeric(10,0),
    remittance_printformat_id numeric(10,0),
    shipment_printformat_id numeric(10,0),
    invoice_mailtext_id numeric(10,0),
    order_mailtext_id numeric(10,0),
    remittance_mailtext_id numeric(10,0),
    shipment_mailtext_id numeric(10,0),
    project_mailtext_id numeric(10,0),
    project_printformat_id numeric(10,0),
    manuf_order_mailtext_id numeric(10,0),
    manuf_order_printformat_id numeric(10,0),
    distrib_order_mailtext_id numeric(10,0),
    distrib_order_printformat_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_printform_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_printform OWNER TO adempiere;

--
-- Name: ad_printformat; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_printformat (
    ad_printformat_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    istablebased character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isform character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    ad_printpaper_id numeric(10,0) NOT NULL,
    ad_printcolor_id numeric(10,0) NOT NULL,
    ad_printfont_id numeric(10,0) NOT NULL,
    isstandardheaderfooter character(1) DEFAULT 'Y'::bpchar NOT NULL,
    headermargin numeric(10,0) NOT NULL,
    footermargin numeric(10,0) NOT NULL,
    createcopy character(1),
    ad_reportview_id numeric(10,0),
    ad_printtableformat_id numeric(10,0),
    printername character varying(40),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    jasperprocess_id numeric(10,0),
    classname character varying(240),
    args character varying(480),
    issummary character(1) DEFAULT 'N'::bpchar,
    isprintparameters character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_printformat_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformat_isform_check CHECK ((isform = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformat_isprintparameters_check CHECK ((isprintparameters = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformat_isstandardheaderfooter_check CHECK ((isstandardheaderfooter = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformat_issummary_check CHECK ((issummary = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformat_istablebased_check CHECK ((istablebased = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_printformat OWNER TO adempiere;

--
-- Name: ad_printformatitem; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_printformatitem (
    ad_printformatitem_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_printformat_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    printname character varying(2000),
    isprinted character(1) DEFAULT 'Y'::bpchar NOT NULL,
    printareatype character(1) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    printformattype character(1) NOT NULL,
    ad_column_id numeric(10,0),
    ad_printformatchild_id numeric(10,0),
    isrelativeposition character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isnextline character(1) DEFAULT 'Y'::bpchar NOT NULL,
    xspace numeric(10,0) NOT NULL,
    yspace numeric(10,0) NOT NULL,
    xposition numeric(10,0) NOT NULL,
    yposition numeric(10,0) NOT NULL,
    maxwidth numeric(10,0) NOT NULL,
    isheightoneline character(1) DEFAULT 'Y'::bpchar NOT NULL,
    maxheight numeric(10,0) NOT NULL,
    fieldalignmenttype character(1) NOT NULL,
    linealignmenttype character(1) NOT NULL,
    ad_printcolor_id numeric(10,0),
    ad_printfont_id numeric(10,0),
    isorderby character(1) DEFAULT 'N'::bpchar NOT NULL,
    sortno numeric(10,0) NOT NULL,
    isgroupby character(1) DEFAULT 'N'::bpchar NOT NULL,
    ispagebreak character(1) DEFAULT 'N'::bpchar NOT NULL,
    issummarized character(1) DEFAULT 'N'::bpchar NOT NULL,
    imageisattached character(1) DEFAULT 'N'::bpchar NOT NULL,
    imageurl character varying(120),
    isaveraged character(1) DEFAULT 'N'::bpchar NOT NULL,
    iscounted character(1) DEFAULT 'N'::bpchar NOT NULL,
    issetnlposition character(1) DEFAULT 'N'::bpchar NOT NULL,
    issuppressnull character(1) DEFAULT 'N'::bpchar NOT NULL,
    belowcolumn numeric(10,0),
    ad_printgraph_id numeric(10,0),
    isfixedwidth character(1) DEFAULT 'N'::bpchar NOT NULL,
    isnextpage character(1) DEFAULT 'N'::bpchar NOT NULL,
    printnamesuffix character varying(60),
    ismincalc character(1) DEFAULT 'N'::bpchar NOT NULL,
    ismaxcalc character(1) DEFAULT 'N'::bpchar NOT NULL,
    isrunningtotal character(1) DEFAULT 'N'::bpchar NOT NULL,
    runningtotallines numeric(10,0),
    isvariancecalc character(1) DEFAULT 'N'::bpchar NOT NULL,
    isdeviationcalc character(1) DEFAULT 'N'::bpchar NOT NULL,
    isfilledrectangle character(1) DEFAULT 'N'::bpchar NOT NULL,
    linewidth numeric(10,0),
    arcdiameter numeric(10,0),
    shapetype character(1),
    iscentrallymaintained character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isimagefield character(1) DEFAULT 'N'::bpchar NOT NULL,
    barcodetype character(3),
    formatpattern character varying(22),
    issuppressrepeats character(1) DEFAULT 'N'::bpchar NOT NULL,
    isdesc character(1) DEFAULT 'N'::bpchar NOT NULL,
    isprintbarcodetext character(1) DEFAULT 'Y'::bpchar NOT NULL,
    displaylogic character varying(2000) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_printformatitem_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformatitem_isdesc_check CHECK ((isdesc = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformatitem_isgroupby_check CHECK ((isgroupby = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformatitem_isheightoneline_check CHECK ((isheightoneline = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformatitem_isnextline_check CHECK ((isnextline = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformatitem_isorderby_check CHECK ((isorderby = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformatitem_ispagebreak_check CHECK ((ispagebreak = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformatitem_isprintbarcodetext_check CHECK ((isprintbarcodetext = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformatitem_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformatitem_isrelativeposition_check CHECK ((isrelativeposition = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformatitem_issummarized_check CHECK ((issummarized = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformatitem_issuppressrepeats_check CHECK ((issuppressrepeats = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_printformatitem OWNER TO adempiere;

--
-- Name: ad_printformatitem_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_printformatitem_trl (
    ad_printformatitem_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    printname character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    printnamesuffix character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_printformatitem_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printformatitem_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_printformatitem_trl OWNER TO adempiere;

--
-- Name: ad_printgraph; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_printgraph (
    ad_printgraph_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    graphtype character(1) NOT NULL,
    description_printformatitem_id numeric(10,0) NOT NULL,
    data_printformatitem_id numeric(10,0) NOT NULL,
    data1_printformatitem_id numeric(10,0),
    data2_printformatitem_id numeric(10,0),
    data3_printformatitem_id numeric(10,0),
    data4_printformatitem_id numeric(10,0),
    ad_printformat_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_printgraph_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_printgraph OWNER TO adempiere;

--
-- Name: ad_printlabel; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_printlabel (
    ad_printlabel_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ad_table_id numeric(10,0) NOT NULL,
    printername character varying(40),
    islandscape character(1) DEFAULT 'Y'::bpchar NOT NULL,
    labelheight numeric(10,0) NOT NULL,
    labelwidth numeric(10,0) NOT NULL,
    ad_labelprinter_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_printlabel_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printlabel_islandscape_check CHECK ((islandscape = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_printlabel OWNER TO adempiere;

--
-- Name: ad_printlabelline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_printlabelline (
    ad_printlabelline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_printlabel_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    labelformattype character(1) NOT NULL,
    printname character varying(60),
    ad_column_id numeric(10,0),
    ad_labelprinterfunction_id numeric(10,0) NOT NULL,
    xposition numeric(10,0) NOT NULL,
    yposition numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_printlabelline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_printlabelline OWNER TO adempiere;

--
-- Name: ad_printlabelline_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_printlabelline_trl (
    ad_printlabelline_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    printname character varying(60),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_printlabelline_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printlabelline_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_printlabelline_trl OWNER TO adempiere;

--
-- Name: ad_printpaper; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_printpaper (
    ad_printpaper_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    islandscape character(1) DEFAULT 'Y'::bpchar NOT NULL,
    code character varying(2000) NOT NULL,
    margintop numeric(10,0) DEFAULT 36 NOT NULL,
    marginleft numeric(10,0) DEFAULT 36 NOT NULL,
    marginright numeric(10,0) DEFAULT 36 NOT NULL,
    marginbottom numeric(10,0) DEFAULT 36 NOT NULL,
    processing character(1),
    sizex numeric,
    sizey numeric,
    dimensionunits character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_printpaper_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printpaper_islandscape_check CHECK ((islandscape = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_printpaper OWNER TO adempiere;

--
-- Name: ad_printtableformat; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_printtableformat (
    ad_printtableformat_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hdr_printfont_id numeric(10,0),
    hdrtextfg_printcolor_id numeric(10,0),
    hdrtextbg_printcolor_id numeric(10,0),
    hdrline_printcolor_id numeric(10,0),
    funct_printfont_id numeric(10,0),
    functbg_printcolor_id numeric(10,0),
    functfg_printcolor_id numeric(10,0),
    line_printcolor_id numeric(10,0),
    description character varying(255),
    ispaintboundarylines character(1) DEFAULT 'N'::bpchar NOT NULL,
    ispainthlines character(1) DEFAULT 'N'::bpchar NOT NULL,
    ispaintvlines character(1) DEFAULT 'N'::bpchar NOT NULL,
    isprintfunctionsymbols character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    imageurl character varying(120),
    headerleft character varying(255),
    headercenter character varying(255),
    headerright character varying(255),
    footerleft character varying(255),
    footercenter character varying(255),
    footerright character varying(255),
    imageisattached character(1) DEFAULT 'N'::bpchar,
    hdrstroke numeric,
    linestroke numeric,
    hdrstroketype character(1),
    linestroketype character(1),
    ispaintheaderlines character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ad_image_id numeric(10,0),
    ismultilineheader character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_printtableformat_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_printtableformat_ismultilineheader_check CHECK ((ismultilineheader = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_printtableformat OWNER TO adempiere;

--
-- Name: ad_private_access; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_private_access (
    ad_user_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    record_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_private_access_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_private_access OWNER TO adempiere;

--
-- Name: ad_process; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_process (
    ad_process_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    accesslevel character(1) DEFAULT '3'::bpchar NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    procedurename character varying(60),
    isreport character(1) DEFAULT 'N'::bpchar NOT NULL,
    isdirectprint character(1) DEFAULT 'N'::bpchar,
    ad_reportview_id numeric(10,0),
    classname character varying(255),
    statistic_count numeric(10,0),
    statistic_seconds numeric,
    ad_printformat_id numeric(10,0),
    workflowvalue character varying(40),
    ad_workflow_id numeric(10,0),
    isbetafunctionality character(1) DEFAULT 'N'::bpchar NOT NULL,
    isserverprocess character(1) DEFAULT 'N'::bpchar NOT NULL,
    showhelp character(1) DEFAULT 'Y'::bpchar,
    jasperreport character varying(255),
    ad_form_id numeric(10,0),
    copyfromprocess character(1),
    ad_browse_id numeric(10,0) DEFAULT NULL::numeric,
    generateclass character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_process_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_process_isdirectprint_check CHECK ((isdirectprint = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_process_isreport_check CHECK ((isreport = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_process OWNER TO adempiere;

--
-- Name: ad_process_access; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_process_access (
    ad_process_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isreadwrite character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_process_access_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_process_access_isreadwrite_check CHECK ((isreadwrite = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_process_access OWNER TO adempiere;

--
-- Name: ad_process_para; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_process_para (
    ad_process_para_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ad_process_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    ad_reference_id numeric(10,0) NOT NULL,
    ad_reference_value_id numeric(10,0),
    ad_val_rule_id numeric(10,0),
    columnname character varying(30) NOT NULL,
    iscentrallymaintained character(1) DEFAULT 'Y'::bpchar NOT NULL,
    fieldlength numeric(10,0) NOT NULL,
    ismandatory character(1) DEFAULT 'N'::bpchar NOT NULL,
    isrange character(1) DEFAULT 'N'::bpchar NOT NULL,
    defaultvalue character varying(2000),
    defaultvalue2 character varying(2000),
    vformat character varying(20),
    valuemin character varying(20),
    valuemax character varying(20),
    ad_element_id numeric(10,0),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    readonlylogic character varying(2000),
    displaylogic character varying(2000),
    isinfoonly character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_process_para_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_process_para_iscentrallymaintained_check CHECK ((iscentrallymaintained = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_process_para_isinfoonly_check CHECK ((isinfoonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_process_para_ismandatory_check CHECK ((ismandatory = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_process_para_isrange_check CHECK ((isrange = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_process_para OWNER TO adempiere;

--
-- Name: ad_process_para_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_process_para_trl (
    ad_process_para_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_process_para_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_process_para_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_process_para_trl OWNER TO adempiere;

--
-- Name: ad_process_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_process_trl (
    ad_process_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_process_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_process_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_process_trl OWNER TO adempiere;

--
-- Name: ad_recentitem; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_recentitem (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_recentitem_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    ad_tab_id numeric(10,0) DEFAULT NULL::numeric,
    ad_table_id numeric(10,0),
    ad_user_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    ad_window_id numeric(10,0) DEFAULT NULL::numeric,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    record_id numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_menu_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_recentitem_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_recentitem OWNER TO adempiere;

--
-- Name: ad_record_access; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_record_access (
    ad_role_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    record_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isreadonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    isexclude character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isdependententities character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_record_access_isdependententities_check CHECK ((isdependententities = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_record_access OWNER TO adempiere;

--
-- Name: ad_ref_list; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_ref_list (
    ad_ref_list_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ad_reference_id numeric(10,0) NOT NULL,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_ref_list_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_ref_list OWNER TO adempiere;

--
-- Name: ad_ref_list_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_ref_list_trl (
    ad_ref_list_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_ref_list_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_ref_list_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_ref_list_trl OWNER TO adempiere;

--
-- Name: ad_ref_table; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_ref_table (
    ad_reference_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    ad_key numeric(10,0) NOT NULL,
    ad_display numeric(10,0) NOT NULL,
    isvaluedisplayed character(1) DEFAULT 'N'::bpchar NOT NULL,
    whereclause character varying(2000),
    orderbyclause character varying(2000),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    ad_window_id numeric(10,0),
    isalert character(1) DEFAULT 'N'::bpchar NOT NULL,
    displaysql character varying(2000),
    isdisplayidentifier character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_ref_table_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_ref_table_isvaluedisplayed_check CHECK ((isvaluedisplayed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_ref_table OWNER TO adempiere;

--
-- Name: ad_reference_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_reference_trl (
    ad_reference_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_reference_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_reference_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_reference_trl OWNER TO adempiere;

--
-- Name: ad_registration; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_registration (
    ad_registration_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_system_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isregistered character(1) DEFAULT 'N'::bpchar NOT NULL,
    record_id numeric(10,0),
    description character varying(255),
    c_location_id numeric(10,0),
    isinproduction character(1) DEFAULT 'N'::bpchar NOT NULL,
    startproductiondate timestamp without time zone,
    isallowpublish character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isallowstatistics character(1) DEFAULT 'Y'::bpchar NOT NULL,
    platforminfo character varying(255),
    industryinfo character varying(255),
    salesvolume numeric(10,0) DEFAULT 0,
    c_currency_id numeric(10,0),
    numberemployees numeric(10,0) DEFAULT 0,
    processing character(1),
    remote_host character varying(120),
    remote_addr character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_registration_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_registration_isallowpublish_check CHECK ((isallowpublish = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_registration_isallowstatistics_check CHECK ((isallowstatistics = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_registration_isinproduction_check CHECK ((isinproduction = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_registration_isregistered_check CHECK ((isregistered = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_registration OWNER TO adempiere;

--
-- Name: ad_relationtype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_relationtype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_reference_source_id numeric(10,0),
    ad_reference_target_id numeric(10,0),
    ad_relationtype_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isdirected character(1) DEFAULT 'N'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    role_source character varying(50),
    role_target character varying(50),
    type character(1) DEFAULT 'I'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_relationtype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_relationtype_isdirected_check CHECK ((isdirected = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_relationtype OWNER TO adempiere;

--
-- Name: ad_replication; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_replication (
    ad_replication_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    hostaddress character varying(60) NOT NULL,
    hostport numeric(10,0) NOT NULL,
    ad_replicationstrategy_id numeric(10,0) NOT NULL,
    isrmioverhttp character(1) DEFAULT 'Y'::bpchar NOT NULL,
    processing character(1),
    idrangestart numeric,
    idrangeend numeric,
    remote_client_id numeric(10,0),
    remote_org_id numeric(10,0),
    prefix character varying(10),
    suffix character varying(10),
    datelastrun timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_replication_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_replication OWNER TO adempiere;

--
-- Name: ad_replication_log; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_replication_log (
    ad_replication_log_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_replication_run_id numeric(10,0) NOT NULL,
    ad_replicationtable_id numeric(10,0),
    p_msg character varying(2000),
    isreplicated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_replication_log_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_replication_log_isreplicated_check CHECK ((isreplicated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_replication_log OWNER TO adempiere;

--
-- Name: ad_replication_run; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_replication_run (
    ad_replication_run_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    ad_replication_id numeric(10,0) NOT NULL,
    isreplicated character(1) DEFAULT 'N'::bpchar NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_replication_run_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_replication_run_isreplicated_check CHECK ((isreplicated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_replication_run OWNER TO adempiere;

--
-- Name: ad_replicationdocument; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_replicationdocument (
    ad_replicationdocument_id numeric(10,0) NOT NULL,
    ad_replicationstrategy_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255),
    c_doctype_id numeric(10,0) NOT NULL,
    replicationtype character(1) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_replicationdocument_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_replicationdocument OWNER TO adempiere;

--
-- Name: ad_replicationorgaccess; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_replicationorgaccess (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_replicationorgaccess_id numeric(10,0) NOT NULL,
    ad_replicationstrategy_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isreadonly character(1),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_replicationorgaccess_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_replicationorgaccess_isreadonly_check CHECK ((isreadonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_replicationorgaccess OWNER TO adempiere;

--
-- Name: ad_replicationroleaccess; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_replicationroleaccess (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_replicationroleaccess_id numeric(10,0) NOT NULL,
    ad_replicationstrategy_id numeric(10,0),
    ad_role_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isreadonly character(1),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_replicationroleaccess_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_replicationroleaccess_isreadonly_check CHECK ((isreadonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_replicationroleaccess OWNER TO adempiere;

--
-- Name: ad_replicationstrategy; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_replicationstrategy (
    ad_replicationstrategy_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    exp_processor_id numeric(10,0),
    value character varying(40),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_replicationstrategy_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_replicationstrategy OWNER TO adempiere;

--
-- Name: ad_replicationtable; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_replicationtable (
    ad_replicationtable_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_replicationstrategy_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    replicationtype character(1) DEFAULT 'L'::bpchar NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_replicationtable_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_replicationtable OWNER TO adempiere;

--
-- Name: ad_reportview; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_reportview (
    ad_reportview_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ad_table_id numeric(10,0) NOT NULL,
    whereclause character varying(2000),
    orderbyclause character varying(2000),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    printname character varying(60) DEFAULT NULL::character varying,
    iscentrallymaintained character(1) DEFAULT 'Y'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_reportview_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_reportview_iscentrallymaintained_check CHECK ((iscentrallymaintained = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_reportview OWNER TO adempiere;

--
-- Name: ad_reportview_col; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_reportview_col (
    ad_reportview_col_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_reportview_id numeric(10,0) NOT NULL,
    ad_column_id numeric(10,0),
    functioncolumn character varying(60) NOT NULL,
    isgroupfunction character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_reportview_col_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_reportview_col_isgroupfunction_check CHECK ((isgroupfunction = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_reportview_col OWNER TO adempiere;

--
-- Name: ad_reportview_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_reportview_trl (
    ad_client_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_reportview_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    printname character varying(60),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_reportview_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_reportview_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_reportview_trl OWNER TO adempiere;

--
-- Name: ad_role; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_role (
    ad_role_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    name character varying(60) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255),
    userlevel character(3) DEFAULT '  O'::bpchar NOT NULL,
    c_currency_id numeric(10,0),
    amtapproval numeric DEFAULT 0,
    ad_tree_menu_id numeric(10,0),
    ismanual character(1) DEFAULT 'N'::bpchar NOT NULL,
    isshowacct character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ispersonallock character(1) DEFAULT 'N'::bpchar NOT NULL,
    ispersonalaccess character(1) DEFAULT 'N'::bpchar NOT NULL,
    iscanexport character(1) DEFAULT 'Y'::bpchar NOT NULL,
    iscanreport character(1) DEFAULT 'Y'::bpchar NOT NULL,
    supervisor_id numeric(10,0),
    iscanapproveowndoc character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isaccessallorgs character(1) DEFAULT 'N'::bpchar NOT NULL,
    ischangelog character(1) DEFAULT 'N'::bpchar NOT NULL,
    preferencetype character(1) DEFAULT 'C'::bpchar NOT NULL,
    overwritepricelimit character(1) DEFAULT 'N'::bpchar NOT NULL,
    isuseuserorgaccess character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_tree_org_id numeric(10,0),
    confirmqueryrecords numeric(10,0) DEFAULT 0 NOT NULL,
    maxqueryrecords numeric(10,0) DEFAULT 0 NOT NULL,
    connectionprofile character(1),
    allow_info_account character(1) DEFAULT 'Y'::bpchar NOT NULL,
    allow_info_asset character(1) DEFAULT 'Y'::bpchar NOT NULL,
    allow_info_bpartner character(1) DEFAULT 'Y'::bpchar NOT NULL,
    allow_info_cashjournal character(1) DEFAULT 'Y'::bpchar NOT NULL,
    allow_info_inout character(1) DEFAULT 'Y'::bpchar NOT NULL,
    allow_info_invoice character(1) DEFAULT 'Y'::bpchar NOT NULL,
    allow_info_order character(1) DEFAULT 'Y'::bpchar NOT NULL,
    allow_info_payment character(1) DEFAULT 'Y'::bpchar NOT NULL,
    allow_info_product character(1) DEFAULT 'Y'::bpchar NOT NULL,
    allow_info_resource character(1) DEFAULT 'Y'::bpchar NOT NULL,
    allow_info_schedule character(1) DEFAULT 'Y'::bpchar NOT NULL,
    userdiscount numeric(22,0),
    allow_info_mrp character(1) DEFAULT 'Y'::bpchar NOT NULL,
    allow_info_crp character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isdiscountuptolimitprice character(1) DEFAULT 'N'::bpchar NOT NULL,
    isdiscountallowedontotal character(1) DEFAULT 'N'::bpchar NOT NULL,
    allow_html_view character(1) DEFAULT 'Y'::bpchar,
    allow_xls_view character(1) DEFAULT 'Y'::bpchar,
    iscanload character(1) DEFAULT 'Y'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_role_allow_info_crp_check CHECK ((allow_info_crp = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_role_allow_info_mrp_check CHECK ((allow_info_mrp = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_role_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_role_iscanload_check CHECK ((iscanload = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_role OWNER TO adempiere;

--
-- Name: ad_role_included; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_role_included (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    included_role_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    seqno numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_role_included_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_role_included OWNER TO adempiere;

--
-- Name: ad_role_orgaccess; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_role_orgaccess (
    ad_role_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isreadonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_role_orgaccess_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_role_orgaccess OWNER TO adempiere;

--
-- Name: ad_rule; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_rule (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_rule_id numeric(10,0) NOT NULL,
    accesslevel character(1),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    entitytype character varying(40) DEFAULT 'U'::character varying,
    eventtype character(1),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    ruletype character(1),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    script text,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_rule_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_rule OWNER TO adempiere;

--
-- Name: ad_scheduler; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_scheduler (
    ad_scheduler_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ad_process_id numeric(10,0) NOT NULL,
    frequencytype character(1) NOT NULL,
    frequency numeric(10,0) NOT NULL,
    datelastrun timestamp without time zone,
    datenextrun timestamp without time zone,
    supervisor_id numeric(10,0) NOT NULL,
    keeplogdays numeric(10,0) NOT NULL,
    processing character(1),
    weekday character(1),
    scheduletype character(1) DEFAULT 'F'::bpchar NOT NULL,
    monthday numeric(10,0),
    isignoreprocessingtime character(1) DEFAULT 'N'::bpchar,
    cronpattern character varying(255),
    ad_table_id numeric(10,0),
    record_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_scheduler_isignoreprocessingtime_check CHECK ((isignoreprocessingtime = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_scheduler OWNER TO adempiere;

--
-- Name: ad_scheduler_para; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_scheduler_para (
    ad_scheduler_id numeric(10,0) NOT NULL,
    ad_process_para_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    parameterdefault character varying(255),
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_scheduler_para OWNER TO adempiere;

--
-- Name: ad_schedulerlog; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_schedulerlog (
    ad_scheduler_id numeric(10,0) NOT NULL,
    ad_schedulerlog_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    iserror character(1) DEFAULT 'N'::bpchar NOT NULL,
    summary character varying(2000),
    reference character varying(60),
    description character varying(255),
    textmsg character varying(2000),
    binarydata bytea,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_schedulerlog OWNER TO adempiere;

--
-- Name: ad_schedulerrecipient; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_schedulerrecipient (
    ad_schedulerrecipient_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_scheduler_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    ad_role_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_schedulerrecipient_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_schedulerrecipient OWNER TO adempiere;

--
-- Name: ad_searchdefinition; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_searchdefinition (
    ad_client_id numeric(10,0) NOT NULL,
    ad_column_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    ad_searchdefinition_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    ad_window_id numeric(10,0) NOT NULL,
    created timestamp without time zone,
    createdby numeric(10,0),
    datatype character varying(1) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60),
    query character varying(2000),
    searchtype character varying(1) NOT NULL,
    transactioncode character varying(8),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    po_window_id numeric(10,0),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_searchdefinition_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_searchdefinition_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_searchdefinition OWNER TO adempiere;

--
-- Name: ad_sequence; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_sequence (
    ad_sequence_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    vformat character varying(40),
    isautosequence character(1) DEFAULT 'Y'::bpchar NOT NULL,
    incrementno numeric(10,0) NOT NULL,
    startno numeric(10,0) NOT NULL,
    currentnext numeric(10,0) NOT NULL,
    currentnextsys numeric(10,0) NOT NULL,
    isaudited character(1) DEFAULT 'N'::bpchar,
    istableid character(1) DEFAULT 'N'::bpchar,
    prefix character varying(255),
    suffix character varying(255),
    startnewyear character(1) DEFAULT 'N'::bpchar,
    datecolumn character varying(60),
    decimalpattern character varying(40),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_sequence_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_sequence_isaudited_check CHECK ((isaudited = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_sequence_isautosequence_check CHECK ((isautosequence = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_sequence_istableid_check CHECK ((istableid = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_sequence_startnewyear_check CHECK ((startnewyear = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_sequence OWNER TO adempiere;

--
-- Name: ad_sequence_audit; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_sequence_audit (
    ad_sequence_id numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    record_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_sequence_audit_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_sequence_audit OWNER TO adempiere;

--
-- Name: ad_sequence_no; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_sequence_no (
    ad_sequence_id numeric(10,0) NOT NULL,
    calendaryear character varying(4) DEFAULT '0000'::character varying NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    currentnext numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_sequence_no_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_sequence_no OWNER TO adempiere;

--
-- Name: ad_session; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_session (
    ad_session_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    websession character varying(40),
    remote_addr character varying(60),
    remote_host character varying(120),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    description character varying(255),
    ad_role_id numeric(10,0),
    logindate timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_session OWNER TO adempiere;

--
-- Name: ad_sysconfig; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_sysconfig (
    ad_sysconfig_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(50) NOT NULL,
    value character varying(255) NOT NULL,
    description character varying(255),
    entitytype character varying(40) DEFAULT 'U'::character varying NOT NULL,
    configurationlevel character(1) DEFAULT 'S'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_sysconfig_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_sysconfig OWNER TO adempiere;

--
-- Name: ad_system; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_system (
    ad_system_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    username character varying(60) NOT NULL,
    info character varying(255),
    version character varying(20),
    releaseno character varying(10),
    supportunits numeric(10,0),
    password character varying(20),
    replicationtype character(1) DEFAULT 'L'::bpchar NOT NULL,
    idrangestart numeric,
    idrangeend numeric,
    ldaphost character varying(60),
    customprefix character varying(60),
    isjustmigrated character(1) DEFAULT 'N'::bpchar,
    dbinstance character varying(60),
    dbaddress character varying(255),
    noprocessors numeric(10,0),
    summary character varying(255),
    encryptionkey character varying(255),
    ldapdomain character varying(255),
    isautoerrorreport character(1) DEFAULT 'Y'::bpchar NOT NULL,
    record_id numeric(10,0),
    supportexpdate timestamp without time zone,
    processing character(1),
    supportemail character varying(60),
    isallowstatistics character(1) DEFAULT 'Y'::bpchar NOT NULL,
    statisticsinfo character varying(60),
    profileinfo character varying(60),
    oldname character varying(60),
    description character varying(255),
    systemstatus character(1) DEFAULT 'E'::bpchar NOT NULL,
    isfailonmissingmodelvalidator character(1) DEFAULT 'Y'::bpchar NOT NULL,
    lastbuildinfo character varying(255),
    isfailonbuilddiffer character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_system_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_system_isfailonbuilddiffer_check CHECK ((isfailonbuilddiffer = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_system_isfailonmissingmodelvalidator_check CHECK ((isfailonmissingmodelvalidator = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_system OWNER TO adempiere;

--
-- Name: ad_tab_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_tab_trl (
    ad_tab_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    commitwarning character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_tab_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_tab_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_tab_trl OWNER TO adempiere;

--
-- Name: ad_tab_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.ad_tab_v AS
 SELECT t.ad_tab_id,
    t.ad_window_id,
    t.ad_table_id,
    t.name,
    t.description,
    t.help,
    t.seqno,
    t.issinglerow,
    t.hastree,
    t.isinfotab,
    tbl.replicationtype,
    tbl.tablename,
    tbl.accesslevel,
    tbl.issecurityenabled,
    tbl.isdeleteable,
    tbl.ishighvolume,
    tbl.isview,
    'N'::character(1) AS hasassociation,
    t.istranslationtab,
    t.isreadonly,
    t.ad_image_id,
    t.tablevel,
    t.whereclause,
    t.orderbyclause,
    t.commitwarning,
    t.readonlylogic,
    t.displaylogic,
    t.ad_column_id,
    t.ad_process_id,
    t.issorttab,
    t.isinsertrecord,
    t.isadvancedtab,
    t.ad_columnsortorder_id,
    t.ad_columnsortyesno_id,
    t.included_tab_id,
    t.parent_column_id
   FROM (adempiere.ad_tab t
     JOIN adempiere.ad_table tbl ON ((t.ad_table_id = tbl.ad_table_id)))
  WHERE ((t.isactive = 'Y'::bpchar) AND (tbl.isactive = 'Y'::bpchar));


ALTER TABLE adempiere.ad_tab_v OWNER TO adempiere;

--
-- Name: ad_tab_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.ad_tab_vt AS
 SELECT trl.ad_language,
    t.ad_tab_id,
    t.ad_window_id,
    t.ad_table_id,
    trl.name,
    trl.description,
    trl.help,
    t.seqno,
    t.issinglerow,
    t.hastree,
    t.isinfotab,
    tbl.replicationtype,
    tbl.tablename,
    tbl.accesslevel,
    tbl.issecurityenabled,
    tbl.isdeleteable,
    tbl.ishighvolume,
    tbl.isview,
    'N'::character(1) AS hasassociation,
    t.istranslationtab,
    t.isreadonly,
    t.ad_image_id,
    t.tablevel,
    t.whereclause,
    t.orderbyclause,
    trl.commitwarning,
    t.readonlylogic,
    t.displaylogic,
    t.ad_column_id,
    t.ad_process_id,
    t.issorttab,
    t.isinsertrecord,
    t.isadvancedtab,
    t.ad_columnsortorder_id,
    t.ad_columnsortyesno_id,
    t.included_tab_id,
    t.parent_column_id
   FROM ((adempiere.ad_tab t
     JOIN adempiere.ad_table tbl ON ((t.ad_table_id = tbl.ad_table_id)))
     JOIN adempiere.ad_tab_trl trl ON ((t.ad_tab_id = trl.ad_tab_id)))
  WHERE ((t.isactive = 'Y'::bpchar) AND (tbl.isactive = 'Y'::bpchar));


ALTER TABLE adempiere.ad_tab_vt OWNER TO adempiere;

--
-- Name: ad_table_access; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_table_access (
    ad_role_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    accesstyperule character(1) DEFAULT 'G'::bpchar NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    isreadonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    iscanreport character(1) DEFAULT 'Y'::bpchar NOT NULL,
    iscanexport character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isexclude character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_table_access_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_table_access_iscanexport_check CHECK ((iscanexport = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_table_access_iscanreport_check CHECK ((iscanreport = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_table_access_isexclude_check CHECK ((isexclude = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_table_access_isreadonly_check CHECK ((isreadonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_table_access OWNER TO adempiere;

--
-- Name: ad_table_process; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_table_process (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_process_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    created timestamp with time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    updated timestamp with time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    entitytype character varying(255) DEFAULT 'U'::character varying NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_table_process_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_table_process OWNER TO adempiere;

--
-- Name: ad_table_scriptvalidator; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_table_scriptvalidator (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_rule_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    ad_table_scriptvalidator_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    eventmodelvalidator character varying(4) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_table_scriptvalidator_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_table_scriptvalidator OWNER TO adempiere;

--
-- Name: ad_table_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_table_trl (
    ad_table_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_table_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_table_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_table_trl OWNER TO adempiere;

--
-- Name: ad_task; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_task (
    ad_task_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    accesslevel character(1) NOT NULL,
    os_command character varying(2000) NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    isserverprocess character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_task_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_task OWNER TO adempiere;

--
-- Name: ad_task_access; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_task_access (
    ad_task_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isreadwrite character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_task_access_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_task_access_isreadwrite_check CHECK ((isreadwrite = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_task_access OWNER TO adempiere;

--
-- Name: ad_task_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_task_trl (
    ad_task_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_task_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_task_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_task_trl OWNER TO adempiere;

--
-- Name: ad_taskinstance; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_taskinstance (
    ad_taskinstance_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0),
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0),
    ad_task_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_taskinstance_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_taskinstance OWNER TO adempiere;

--
-- Name: ad_tree; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_tree (
    ad_tree_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    treetype character(2) NOT NULL,
    isallnodes character(1) DEFAULT 'Y'::bpchar NOT NULL,
    processing character(1),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_tree_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_tree_isallnodes_check CHECK ((isallnodes = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_tree OWNER TO adempiere;

--
-- Name: ad_tree_favorite; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_tree_favorite (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    ad_tree_favorite_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_tree_favorite_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_tree_favorite OWNER TO adempiere;

--
-- Name: ad_tree_favorite_node; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_tree_favorite_node (
    ad_client_id numeric(10,0) NOT NULL,
    ad_menu_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    ad_tree_favorite_id numeric(10,0) NOT NULL,
    ad_tree_favorite_node_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    issummary character(1) NOT NULL,
    nodename character varying(100),
    parent_id numeric(10,0),
    seqno numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    iscollapsible character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_tree_favorite_node_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_tree_favorite_node_iscollapsible_check CHECK ((iscollapsible = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_tree_favorite_node_issummary_check CHECK ((issummary = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_tree_favorite_node OWNER TO adempiere;

--
-- Name: ad_treebar; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_treebar (
    ad_tree_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_treebar_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_treebar OWNER TO adempiere;

--
-- Name: ad_treenode; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_treenode (
    ad_tree_id numeric(10,0) NOT NULL,
    node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    parent_id numeric(10,0),
    seqno numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_treenode_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_treenode OWNER TO adempiere;

--
-- Name: ad_treenodebp; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_treenodebp (
    ad_tree_id numeric(10,0) NOT NULL,
    node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    parent_id numeric(10,0),
    seqno numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_treenodebp_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_treenodebp OWNER TO adempiere;

--
-- Name: ad_treenodecmc; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_treenodecmc (
    ad_tree_id numeric(10,0) NOT NULL,
    node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    parent_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_treenodecmc_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_treenodecmc OWNER TO adempiere;

--
-- Name: ad_treenodecmm; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_treenodecmm (
    ad_tree_id numeric(10,0) NOT NULL,
    node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    parent_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_treenodecmm_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_treenodecmm OWNER TO adempiere;

--
-- Name: ad_treenodecms; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_treenodecms (
    ad_tree_id numeric(10,0) NOT NULL,
    node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    parent_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_treenodecms_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_treenodecms OWNER TO adempiere;

--
-- Name: ad_treenodecmt; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_treenodecmt (
    ad_tree_id numeric(10,0) NOT NULL,
    node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    parent_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_treenodecmt_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_treenodecmt OWNER TO adempiere;

--
-- Name: ad_treenodemm; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_treenodemm (
    ad_tree_id numeric(10,0) NOT NULL,
    node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    parent_id numeric(10,0),
    seqno numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_treenodemm_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_treenodemm OWNER TO adempiere;

--
-- Name: ad_treenodepr; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_treenodepr (
    ad_tree_id numeric(10,0) NOT NULL,
    node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    parent_id numeric(10,0),
    seqno numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_treenodepr_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_treenodepr OWNER TO adempiere;

--
-- Name: ad_treenodeu1; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_treenodeu1 (
    ad_tree_id numeric(10,0) NOT NULL,
    node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    parent_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_treenodeu1_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_treenodeu1 OWNER TO adempiere;

--
-- Name: ad_treenodeu2; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_treenodeu2 (
    ad_tree_id numeric(10,0) NOT NULL,
    node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    parent_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_treenodeu2_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_treenodeu2 OWNER TO adempiere;

--
-- Name: ad_treenodeu3; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_treenodeu3 (
    ad_tree_id numeric(10,0) NOT NULL,
    node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    parent_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_treenodeu3_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_treenodeu3 OWNER TO adempiere;

--
-- Name: ad_treenodeu4; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_treenodeu4 (
    ad_tree_id numeric(10,0) NOT NULL,
    node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    parent_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_treenodeu4_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_treenodeu4 OWNER TO adempiere;

--
-- Name: ad_user_orgaccess; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_user_orgaccess (
    ad_user_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isreadonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_user_orgaccess_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_user_orgaccess OWNER TO adempiere;

--
-- Name: ad_user_roles; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_user_roles (
    ad_user_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_user_roles_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_user_roles OWNER TO adempiere;

--
-- Name: ad_user_roles_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.ad_user_roles_v AS
 SELECT u.name,
    r.name AS rolename
   FROM ((adempiere.ad_user_roles ur
     JOIN adempiere.ad_user u ON ((ur.ad_user_id = u.ad_user_id)))
     JOIN adempiere.ad_role r ON ((ur.ad_role_id = r.ad_role_id)));


ALTER TABLE adempiere.ad_user_roles_v OWNER TO adempiere;

--
-- Name: ad_user_substitute; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_user_substitute (
    ad_user_substitute_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    substitute_id numeric(10,0) NOT NULL,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_user_substitute_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_user_substitute OWNER TO adempiere;

--
-- Name: ad_userbpaccess; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_userbpaccess (
    ad_userbpaccess_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    bpaccesstype character(1) NOT NULL,
    r_requesttype_id numeric(10,0),
    docbasetype character(3),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_userbpaccess_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_userbpaccess OWNER TO adempiere;

--
-- Name: ad_userdef_field; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_userdef_field (
    ad_userdef_field_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_userdef_tab_id numeric(10,0) NOT NULL,
    ad_field_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isdisplayed character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isreadonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    issameline character(1) DEFAULT 'N'::bpchar NOT NULL,
    isupdateable character(1) DEFAULT 'Y'::bpchar NOT NULL,
    displaylength numeric(10,0) DEFAULT 0 NOT NULL,
    displaylogic character varying(2000) NOT NULL,
    defaultvalue character varying(2000) NOT NULL,
    sortno numeric(10,0) DEFAULT 0 NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_userdef_field_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_userdef_field_isdisplayed_check CHECK ((isdisplayed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_userdef_field_isreadonly_check CHECK ((isreadonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_userdef_field_issameline_check CHECK ((issameline = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_userdef_field_isupdateable_check CHECK ((isupdateable = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_userdef_field OWNER TO adempiere;

--
-- Name: ad_userdef_tab; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_userdef_tab (
    ad_userdef_tab_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_userdef_win_id numeric(10,0) NOT NULL,
    ad_tab_id numeric(10,0) NOT NULL,
    ismultirowonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isreadonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    issinglerow character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_userdef_tab_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_userdef_tab_ismultirowonly_check CHECK ((ismultirowonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_userdef_tab_isreadonly_check CHECK ((isreadonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_userdef_tab_issinglerow_check CHECK ((issinglerow = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_userdef_tab OWNER TO adempiere;

--
-- Name: ad_userdef_win; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_userdef_win (
    ad_userdef_win_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0),
    ad_user_id numeric(10,0),
    ad_window_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ad_language character varying(6),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    isreadonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    isuserupdateable character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_userdef_win_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_userdef_win_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_userdef_win_isreadonly_check CHECK ((isreadonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_userdef_win_isuserupdateable_check CHECK ((isuserupdateable = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_userdef_win OWNER TO adempiere;

--
-- Name: ad_usermail; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_usermail (
    ad_usermail_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    r_mailtext_id numeric(10,0),
    w_mailmsg_id numeric(10,0),
    messageid character varying(120),
    deliveryconfirmation character varying(120),
    isdelivered character(1),
    subject character varying(255),
    mailtext character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_usermail_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_usermail OWNER TO adempiere;

--
-- Name: ad_userquery; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_userquery (
    ad_userquery_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ad_user_id numeric(10,0),
    ad_table_id numeric(10,0) NOT NULL,
    code character varying(2000),
    ad_tab_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_userquery_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_userquery OWNER TO adempiere;

--
-- Name: ad_view; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_view (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_view_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60) DEFAULT NULL::character varying,
    name character varying(60) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    entitytype character varying(40) NOT NULL,
    help character varying(2000) DEFAULT NULL::character varying,
    copyfrom character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_view_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_view OWNER TO adempiere;

--
-- Name: ad_view_column; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_view_column (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_view_column_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_view_definition_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    description character varying(255),
    entitytype character varying(40) NOT NULL,
    help character varying(2000) DEFAULT NULL::character varying,
    name character varying(60) NOT NULL,
    columnsql character varying(2000) DEFAULT NULL::character varying,
    columnname character varying(255),
    ad_view_id numeric(10,0) DEFAULT NULL::numeric,
    ad_column_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_view_column_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_view_column OWNER TO adempiere;

--
-- Name: ad_view_column_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_view_column_trl (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_view_column_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    help character varying(2000) DEFAULT NULL::character varying,
    istranslated character(1) NOT NULL,
    name character varying(60) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_view_column_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_view_column_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_view_column_trl OWNER TO adempiere;

--
-- Name: ad_view_definition; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_view_definition (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_view_definition_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_view_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    seqno numeric(10,0) DEFAULT NULL::numeric,
    ad_table_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    tablealias character varying(20) NOT NULL,
    joinclause character varying(255) DEFAULT NULL::character varying,
    processing character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_view_definition_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_view_definition OWNER TO adempiere;

--
-- Name: ad_view_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_view_trl (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_view_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    istranslated character(1) NOT NULL,
    name character varying(60) NOT NULL,
    help character varying(2000) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_view_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_view_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_view_trl OWNER TO adempiere;

--
-- Name: ad_wf_activity; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_wf_activity (
    ad_wf_activity_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_wf_process_id numeric(10,0) NOT NULL,
    ad_wf_node_id numeric(10,0) NOT NULL,
    ad_wf_responsible_id numeric(10,0),
    ad_user_id numeric(10,0),
    wfstate character(2) NOT NULL,
    ad_message_id numeric(10,0),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    textmsg character varying(2000),
    ad_workflow_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    record_id numeric(10,0) NOT NULL,
    priority numeric(10,0),
    endwaittime timestamp without time zone,
    datelastalert timestamp without time zone,
    dynprioritystart numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_wf_activity_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_wf_activity_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_wf_activity OWNER TO adempiere;

--
-- Name: ad_wf_activityresult; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_wf_activityresult (
    ad_wf_activityresult_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_wf_activity_id numeric(10,0) NOT NULL,
    attributename character varying(60) NOT NULL,
    attributevalue character varying(2000),
    description character varying(255),
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_wf_activityresult_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_wf_activityresult OWNER TO adempiere;

--
-- Name: ad_wf_block; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_wf_block (
    ad_wf_block_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ad_workflow_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_wf_block_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_wf_block OWNER TO adempiere;

--
-- Name: ad_wf_eventaudit; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_wf_eventaudit (
    ad_wf_eventaudit_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    eventtype character(2) NOT NULL,
    wfstate character(2) NOT NULL,
    ad_wf_process_id numeric(10,0) NOT NULL,
    ad_wf_node_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    record_id numeric(10,0) NOT NULL,
    ad_wf_responsible_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    elapsedtimems numeric NOT NULL,
    attributename character varying(60),
    oldvalue character varying(2000),
    newvalue character varying(2000),
    description character varying(255),
    textmsg character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_wf_eventaudit_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_wf_eventaudit OWNER TO adempiere;

--
-- Name: ad_wf_nextcondition; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_wf_nextcondition (
    ad_wf_nextcondition_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_wf_nodenext_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    andor character(1) NOT NULL,
    ad_column_id numeric(10,0) NOT NULL,
    operation character(2) NOT NULL,
    value character varying(40) NOT NULL,
    value2 character varying(40),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_wf_nextcondition_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_wf_nextcondition OWNER TO adempiere;

--
-- Name: ad_wf_node; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_wf_node (
    ad_wf_node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ad_workflow_id numeric(10,0) NOT NULL,
    iscentrallymaintained character(1) DEFAULT 'Y'::bpchar NOT NULL,
    action character(1) NOT NULL,
    ad_window_id numeric(10,0),
    workflow_id numeric(10,0),
    ad_task_id numeric(10,0),
    ad_process_id numeric(10,0),
    ad_form_id numeric(10,0),
    entitytype character varying(40) DEFAULT 'U'::character varying NOT NULL,
    xposition numeric(10,0) DEFAULT 0 NOT NULL,
    yposition numeric(10,0) DEFAULT 0 NOT NULL,
    ad_wf_block_id numeric(10,0),
    subflowexecution character(1),
    startmode character(1),
    finishmode character(1),
    "limit" numeric(10,0) DEFAULT 0 NOT NULL,
    priority numeric(10,0),
    duration numeric(10,0) DEFAULT 0 NOT NULL,
    cost numeric DEFAULT 0 NOT NULL,
    workingtime numeric(10,0),
    waitingtime numeric(10,0) DEFAULT 0 NOT NULL,
    ad_wf_responsible_id numeric(10,0),
    ad_image_id numeric(10,0),
    joinelement character(1) NOT NULL,
    splitelement character(1) NOT NULL,
    waittime numeric(10,0),
    ad_column_id numeric(10,0),
    attributename character varying(60),
    attributevalue character varying(60),
    docaction character(2),
    value character varying(40) NOT NULL,
    dynpriorityunit character(1),
    dynprioritychange numeric,
    emailrecipient character(1),
    email character varying(60),
    r_mailtext_id numeric(10,0),
    validto timestamp without time zone,
    ismilestone character(1) DEFAULT 'N'::bpchar,
    issubcontracting character(1) DEFAULT 'N'::bpchar,
    unitscycles numeric DEFAULT 0,
    movingtime numeric(10,0),
    overlapunits numeric(10,0),
    c_bpartner_id numeric(10,0),
    queuingtime numeric(10,0),
    s_resource_id numeric(10,0),
    setuptime numeric(10,0),
    validfrom timestamp without time zone,
    yield numeric(10,0) DEFAULT 100,
    ad_view_id numeric(10,0) DEFAULT NULL::numeric,
    ad_browse_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_wf_node_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_wf_node_iscentrallymaintained_check CHECK ((iscentrallymaintained = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_wf_node_ismilestone_check CHECK ((ismilestone = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_wf_node_issubcontracting_check CHECK ((issubcontracting = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_wf_node OWNER TO adempiere;

--
-- Name: ad_wf_node_para; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_wf_node_para (
    ad_wf_node_para_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_wf_node_id numeric(10,0) NOT NULL,
    attributename character varying(60),
    ad_process_para_id numeric(10,0),
    description character varying(255),
    attributevalue character varying(60),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_wf_node_para_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_wf_node_para OWNER TO adempiere;

--
-- Name: ad_wf_node_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_wf_node_trl (
    ad_language character varying(6) NOT NULL,
    ad_wf_node_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_wf_node_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_wf_node_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_wf_node_trl OWNER TO adempiere;

--
-- Name: ad_wf_nodenext; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_wf_nodenext (
    ad_wf_nodenext_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_wf_node_id numeric(10,0) NOT NULL,
    ad_wf_next_id numeric(10,0) NOT NULL,
    description character varying(255),
    seqno numeric(10,0) NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    transitioncode character varying(2000),
    isstduserworkflow character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_wf_nodenext_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_wf_nodenext OWNER TO adempiere;

--
-- Name: ad_wf_process; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_wf_process (
    ad_wf_process_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_workflow_id numeric(10,0) NOT NULL,
    ad_wf_responsible_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    wfstate character(2) NOT NULL,
    ad_message_id numeric(10,0),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    textmsg character varying(2000),
    ad_table_id numeric(10,0) NOT NULL,
    record_id numeric(10,0) NOT NULL,
    priority numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_wf_process_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_wf_process_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_wf_process OWNER TO adempiere;

--
-- Name: ad_wf_processdata; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_wf_processdata (
    ad_wf_processdata_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_wf_process_id numeric(10,0) NOT NULL,
    attributename character varying(60) NOT NULL,
    attributevalue character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_wf_processdata_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_wf_processdata OWNER TO adempiere;

--
-- Name: ad_wf_responsible; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_wf_responsible (
    ad_wf_responsible_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    responsibletype character(1) NOT NULL,
    ad_user_id numeric(10,0),
    ad_role_id numeric(10,0),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_wf_responsible_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_wf_responsible OWNER TO adempiere;

--
-- Name: ad_window; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_window (
    ad_window_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    windowtype character(1),
    issotrx character(1) DEFAULT 'Y'::bpchar NOT NULL,
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    processing character(1),
    ad_image_id numeric(10,0),
    ad_color_id numeric(10,0),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    winheight numeric(10,0),
    winwidth numeric(10,0),
    isbetafunctionality character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_window_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_window_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_window OWNER TO adempiere;

--
-- Name: ad_window_access; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_window_access (
    ad_window_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isreadwrite character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_window_access_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_window_access_isreadwrite_check CHECK ((isreadwrite = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_window_access OWNER TO adempiere;

--
-- Name: ad_window_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_window_trl (
    ad_window_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_window_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_window_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_window_trl OWNER TO adempiere;

--
-- Name: ad_window_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.ad_window_vt AS
 SELECT trl.ad_language,
    bt.ad_window_id,
    trl.name,
    trl.description,
    trl.help,
    bt.windowtype,
    bt.ad_color_id,
    bt.ad_image_id,
    bt.isactive,
    bt.winwidth,
    bt.winheight,
    bt.issotrx
   FROM (adempiere.ad_window bt
     JOIN adempiere.ad_window_trl trl ON ((bt.ad_window_id = trl.ad_window_id)))
  WHERE (bt.isactive = 'Y'::bpchar);


ALTER TABLE adempiere.ad_window_vt OWNER TO adempiere;

--
-- Name: ad_workbench; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_workbench (
    ad_workbench_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ad_column_id numeric(10,0) NOT NULL,
    ad_image_id numeric(10,0),
    ad_color_id numeric(10,0),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_workbench_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_workbench OWNER TO adempiere;

--
-- Name: ad_workbench_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_workbench_trl (
    ad_workbench_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_workbench_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_workbench_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_workbench_trl OWNER TO adempiere;

--
-- Name: ad_workbenchwindow; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_workbenchwindow (
    ad_workbenchwindow_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_workbench_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    isprimary character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_window_id numeric(10,0),
    ad_form_id numeric(10,0),
    ad_process_id numeric(10,0),
    ad_task_id numeric(10,0),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_workbenchwindow_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_workbenchwindow_isprimary_check CHECK ((isprimary = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_workbenchwindow OWNER TO adempiere;

--
-- Name: ad_workflow; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_workflow (
    ad_workflow_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    accesslevel character(1) NOT NULL,
    ad_wf_node_id numeric(10,0),
    entitytype character varying(40) DEFAULT 'D'::character varying NOT NULL,
    durationunit character(1),
    author character varying(20) DEFAULT 'ComPiere'::character varying NOT NULL,
    version numeric(10,0) DEFAULT 0 NOT NULL,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    priority numeric(10,0),
    "limit" numeric(10,0),
    duration numeric(10,0) DEFAULT 0 NOT NULL,
    cost numeric NOT NULL,
    workingtime numeric(10,0) DEFAULT 0 NOT NULL,
    waitingtime numeric(10,0) DEFAULT 0 NOT NULL,
    ad_wf_responsible_id numeric(10,0),
    publishstatus character(1) NOT NULL,
    ad_workflowprocessor_id numeric(10,0),
    value character varying(40) NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_table_id numeric(10,0),
    validateworkflow character(1),
    workflowtype character(1) DEFAULT 'G'::bpchar NOT NULL,
    docvaluelogic character varying(2000),
    isvalid character(1) DEFAULT 'N'::bpchar NOT NULL,
    s_resource_id numeric(10,0),
    setuptime numeric(10,0),
    movingtime numeric(10,0),
    processtype character(2),
    documentno character varying(30),
    qtybatchsize numeric DEFAULT 1,
    queuingtime numeric(10,0),
    isbetafunctionality character(1) DEFAULT 'N'::bpchar NOT NULL,
    yield numeric(10,0) DEFAULT 100,
    unitscycles numeric,
    overlapunits numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_workflow_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_workflow_isbetafunctionality_check CHECK ((isbetafunctionality = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_workflow OWNER TO adempiere;

--
-- Name: ad_workflow_access; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_workflow_access (
    ad_workflow_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isreadwrite character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_workflow_access_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_workflow_access_isreadwrite_check CHECK ((isreadwrite = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_workflow_access OWNER TO adempiere;

--
-- Name: ad_workflow_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_workflow_trl (
    ad_workflow_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_workflow_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ad_workflow_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_workflow_trl OWNER TO adempiere;

--
-- Name: ad_workflowprocessor; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_workflowprocessor (
    ad_workflowprocessor_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    frequencytype character(1) NOT NULL,
    frequency numeric(10,0) NOT NULL,
    datelastrun timestamp without time zone,
    datenextrun timestamp without time zone,
    supervisor_id numeric(10,0) NOT NULL,
    keeplogdays numeric(10,0) NOT NULL,
    processing character(1),
    inactivityalertdays numeric(10,0) DEFAULT 0,
    reminddays numeric(10,0) DEFAULT 0,
    alertoverpriority numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_workflowprocessor OWNER TO adempiere;

--
-- Name: ad_workflowprocessorlog; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_workflowprocessorlog (
    ad_workflowprocessor_id numeric(10,0) NOT NULL,
    ad_workflowprocessorlog_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    iserror character(1) DEFAULT 'N'::bpchar NOT NULL,
    summary character varying(2000),
    reference character varying(60),
    description character varying(255),
    textmsg character varying(2000),
    binarydata bytea,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.ad_workflowprocessorlog OWNER TO adempiere;

--
-- Name: ad_zoomcondition; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ad_zoomcondition (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0),
    ad_window_id numeric(10,0),
    ad_zoomcondition_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60),
    seqno numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    whereclause character varying(2000),
    zoomlogic character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ad_zoomcondition_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ad_zoomcondition OWNER TO adempiere;

--
-- Name: asp_browse; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.asp_browse (
    ad_browse_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    asp_browse_id numeric(10,0) NOT NULL,
    asp_level_id numeric(10,0) NOT NULL,
    asp_status character(1) DEFAULT 'U'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT asp_browse_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.asp_browse OWNER TO adempiere;

--
-- Name: asp_clientexception; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.asp_clientexception (
    ad_client_id numeric(10,0) NOT NULL,
    ad_field_id numeric(10,0),
    ad_form_id numeric(10,0),
    ad_org_id numeric(10,0) DEFAULT 0 NOT NULL,
    ad_process_id numeric(10,0),
    ad_process_para_id numeric(10,0),
    ad_tab_id numeric(10,0),
    ad_task_id numeric(10,0),
    ad_wf_node_id numeric(10,0),
    ad_window_id numeric(10,0),
    ad_workflow_id numeric(10,0),
    asp_clientexception_id numeric(10,0) NOT NULL,
    asp_status character(1) DEFAULT 'U'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_browse_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT asp_clientexception_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.asp_clientexception OWNER TO adempiere;

--
-- Name: asp_clientlevel; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.asp_clientlevel (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) DEFAULT 0 NOT NULL,
    asp_clientlevel_id numeric(10,0) NOT NULL,
    asp_level_id numeric(10,0) NOT NULL,
    asp_module_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT asp_clientlevel_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.asp_clientlevel OWNER TO adempiere;

--
-- Name: asp_field; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.asp_field (
    ad_client_id numeric(10,0) NOT NULL,
    ad_field_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    asp_status character(1) DEFAULT 'U'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    asp_field_id numeric(10,0) NOT NULL,
    asp_tab_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT asp_field_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.asp_field OWNER TO adempiere;

--
-- Name: asp_form; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.asp_form (
    ad_client_id numeric(10,0) NOT NULL,
    ad_form_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    asp_level_id numeric(10,0) NOT NULL,
    asp_status character(1) DEFAULT 'U'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    asp_form_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT asp_form_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.asp_form OWNER TO adempiere;

--
-- Name: asp_level; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.asp_level (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    asp_level_id numeric(10,0) NOT NULL,
    asp_module_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    processing character(1),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT asp_level_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.asp_level OWNER TO adempiere;

--
-- Name: asp_module; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.asp_module (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    asp_module_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT asp_module_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.asp_module OWNER TO adempiere;

--
-- Name: asp_process; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.asp_process (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_process_id numeric(10,0) NOT NULL,
    asp_level_id numeric(10,0) NOT NULL,
    asp_status character(1) DEFAULT 'U'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    asp_process_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT asp_process_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.asp_process OWNER TO adempiere;

--
-- Name: asp_process_para; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.asp_process_para (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_process_para_id numeric(10,0) NOT NULL,
    asp_status character(1) DEFAULT 'U'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    asp_process_para_id numeric(10,0) NOT NULL,
    asp_process_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT asp_process_para_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.asp_process_para OWNER TO adempiere;

--
-- Name: asp_tab; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.asp_tab (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_tab_id numeric(10,0) NOT NULL,
    asp_status character(1) DEFAULT 'U'::bpchar NOT NULL,
    allfields character(1) DEFAULT 'Y'::bpchar,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    processing character(1),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    asp_tab_id numeric(10,0) NOT NULL,
    asp_window_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT asp_tab_allfields_check CHECK ((allfields = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT asp_tab_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.asp_tab OWNER TO adempiere;

--
-- Name: asp_task; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.asp_task (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_task_id numeric(10,0) NOT NULL,
    asp_level_id numeric(10,0) NOT NULL,
    asp_status character(1) DEFAULT 'U'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    asp_task_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT asp_task_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.asp_task OWNER TO adempiere;

--
-- Name: asp_window; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.asp_window (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_window_id numeric(10,0) NOT NULL,
    asp_level_id numeric(10,0) NOT NULL,
    asp_status character(1) DEFAULT 'U'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    asp_window_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT asp_window_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.asp_window OWNER TO adempiere;

--
-- Name: asp_workflow; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.asp_workflow (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_workflow_id numeric(10,0) NOT NULL,
    asp_level_id numeric(10,0) NOT NULL,
    asp_status character(1) DEFAULT 'U'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    asp_workflow_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT asp_workflow_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.asp_workflow OWNER TO adempiere;

--
-- Name: b_bid; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.b_bid (
    b_bid_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    b_topic_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    iswillingtocommit character(1) DEFAULT 'Y'::bpchar NOT NULL,
    b_buyerfunds_id numeric(10,0) NOT NULL,
    textmsg character varying(2000),
    privatenote character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT b_bid_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT b_bid_iswillingtocommit_check CHECK ((iswillingtocommit = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.b_bid OWNER TO adempiere;

--
-- Name: b_bidcomment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.b_bidcomment (
    b_topic_id numeric(10,0) NOT NULL,
    b_bidcomment_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    textmsg character varying(2000) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT b_bidcomment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.b_bidcomment OWNER TO adempiere;

--
-- Name: b_buyer; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.b_buyer (
    ad_user_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    validto timestamp without time zone NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT b_buyer_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.b_buyer OWNER TO adempiere;

--
-- Name: b_buyerfunds; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.b_buyerfunds (
    b_buyerfunds_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    c_order_id numeric(10,0),
    c_payment_id numeric(10,0),
    committedamt numeric DEFAULT 0 NOT NULL,
    noncommittedamt numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT b_buyerfunds_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.b_buyerfunds OWNER TO adempiere;

--
-- Name: b_offer; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.b_offer (
    b_offer_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    b_topic_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    iswillingtocommit character(1) DEFAULT 'Y'::bpchar NOT NULL,
    b_sellerfunds_id numeric(10,0) NOT NULL,
    textmsg character varying(2000),
    privatenote character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT b_offer_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT b_offer_iswillingtocommit_check CHECK ((iswillingtocommit = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.b_offer OWNER TO adempiere;

--
-- Name: b_seller; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.b_seller (
    ad_user_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    validto timestamp without time zone NOT NULL,
    isinternal character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT b_seller_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT b_seller_isinternal_check CHECK ((isinternal = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.b_seller OWNER TO adempiere;

--
-- Name: b_sellerfunds; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.b_sellerfunds (
    b_sellerfunds_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    c_order_id numeric(10,0),
    c_payment_id numeric(10,0),
    committedamt numeric DEFAULT 0 NOT NULL,
    noncommittedamt numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT b_sellerfunds_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.b_sellerfunds OWNER TO adempiere;

--
-- Name: b_topic; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.b_topic (
    b_topic_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    textmsg character varying(2000),
    topicstatus character(2) NOT NULL,
    topicaction character(2) NOT NULL,
    ispublished character(1) DEFAULT 'Y'::bpchar NOT NULL,
    textdetails text,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    b_topictype_id numeric(10,0) NOT NULL,
    b_topiccategory_id numeric(10,0) NOT NULL,
    decisiondate timestamp without time zone NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT b_topic_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT b_topic_ispublished_check CHECK ((ispublished = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT b_topic_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.b_topic OWNER TO adempiere;

--
-- Name: b_topiccategory; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.b_topiccategory (
    b_topiccategory_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    b_topictype_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT b_topiccategory_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.b_topiccategory OWNER TO adempiere;

--
-- Name: b_topictype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.b_topictype (
    b_topictype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    m_pricelist_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    auctiontype character(1) NOT NULL,
    m_productmember_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT b_topictype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.b_topictype OWNER TO adempiere;

--
-- Name: c_acctprocessor; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_acctprocessor (
    c_acctprocessor_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    frequencytype character(1) NOT NULL,
    frequency numeric(10,0) NOT NULL,
    datelastrun timestamp without time zone,
    datenextrun timestamp without time zone,
    supervisor_id numeric(10,0) NOT NULL,
    keeplogdays numeric(10,0) NOT NULL,
    processing character(1),
    c_acctschema_id numeric(10,0),
    ad_table_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_acctprocessor OWNER TO adempiere;

--
-- Name: c_acctprocessorlog; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_acctprocessorlog (
    c_acctprocessor_id numeric(10,0) NOT NULL,
    c_acctprocessorlog_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    iserror character(1) DEFAULT 'N'::bpchar NOT NULL,
    summary character varying(2000),
    reference character varying(60),
    description character varying(255),
    textmsg character varying(2000),
    binarydata bytea,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_acctprocessorlog OWNER TO adempiere;

--
-- Name: c_acctschema; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_acctschema (
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    gaap character(2) NOT NULL,
    isaccrual character(1) DEFAULT 'Y'::bpchar NOT NULL,
    costingmethod character(1) NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    autoperiodcontrol character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_period_id numeric(10,0),
    period_openhistory numeric(10,0),
    period_openfuture numeric(10,0),
    separator character(1) NOT NULL,
    hasalias character(1) DEFAULT 'Y'::bpchar NOT NULL,
    hascombination character(1) DEFAULT 'Y'::bpchar NOT NULL,
    istradediscountposted character(1) DEFAULT 'N'::bpchar NOT NULL,
    isdiscountcorrectstax character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_costtype_id numeric(10,0),
    costinglevel character(1) DEFAULT 'C'::bpchar NOT NULL,
    isadjustcogs character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_orgonly_id numeric(10,0),
    ispostservices character(1) DEFAULT 'N'::bpchar NOT NULL,
    isexplicitcostadjustment character(1) DEFAULT 'N'::bpchar NOT NULL,
    commitmenttype character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    taxcorrectiontype character(1),
    isallownegativeposting character(1) DEFAULT 'Y'::bpchar,
    ispostifclearingequal character(1) DEFAULT 'Y'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_acctschema_autoperiodcontrol_check CHECK ((autoperiodcontrol = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_acctschema_hasalias_check CHECK ((hasalias = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_acctschema_hascombination_check CHECK ((hascombination = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_acctschema_isaccrual_check CHECK ((isaccrual = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_acctschema_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_acctschema_isallownegativeposting_check CHECK ((isallownegativeposting = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_acctschema_isdiscountcorrectstax_check CHECK ((isdiscountcorrectstax = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_acctschema_ispostifclearingequal_check CHECK ((ispostifclearingequal = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_acctschema_istradediscountposted_check CHECK ((istradediscountposted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_acctschema OWNER TO adempiere;

--
-- Name: c_acctschema_default; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_acctschema_default (
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    w_inventory_acct numeric(10,0) NOT NULL,
    w_invactualadjust_acct numeric(10,0) NOT NULL,
    w_differences_acct numeric(10,0) NOT NULL,
    w_revaluation_acct numeric(10,0) NOT NULL,
    p_revenue_acct numeric(10,0) NOT NULL,
    p_expense_acct numeric(10,0) NOT NULL,
    p_asset_acct numeric(10,0) NOT NULL,
    p_purchasepricevariance_acct numeric(10,0) NOT NULL,
    p_invoicepricevariance_acct numeric(10,0) NOT NULL,
    p_tradediscountrec_acct numeric(10,0) NOT NULL,
    p_tradediscountgrant_acct numeric(10,0) NOT NULL,
    p_cogs_acct numeric(10,0) NOT NULL,
    c_receivable_acct numeric(10,0) NOT NULL,
    c_prepayment_acct numeric(10,0) NOT NULL,
    v_liability_acct numeric(10,0) NOT NULL,
    v_liability_services_acct numeric(10,0) NOT NULL,
    v_prepayment_acct numeric(10,0) NOT NULL,
    paydiscount_exp_acct numeric(10,0) NOT NULL,
    writeoff_acct numeric(10,0) NOT NULL,
    paydiscount_rev_acct numeric(10,0) NOT NULL,
    unrealizedgain_acct numeric(10,0) NOT NULL,
    unrealizedloss_acct numeric(10,0) NOT NULL,
    realizedgain_acct numeric(10,0) NOT NULL,
    realizedloss_acct numeric(10,0) NOT NULL,
    withholding_acct numeric(10,0) NOT NULL,
    e_prepayment_acct numeric(10,0) NOT NULL,
    e_expense_acct numeric(10,0) NOT NULL,
    pj_asset_acct numeric(10,0) NOT NULL,
    pj_wip_acct numeric(10,0) NOT NULL,
    t_expense_acct numeric(10,0) NOT NULL,
    t_liability_acct numeric(10,0) NOT NULL,
    t_receivables_acct numeric(10,0) NOT NULL,
    t_due_acct numeric(10,0) NOT NULL,
    t_credit_acct numeric(10,0) NOT NULL,
    b_intransit_acct numeric(10,0) NOT NULL,
    b_asset_acct numeric(10,0) NOT NULL,
    b_expense_acct numeric(10,0) NOT NULL,
    b_interestrev_acct numeric(10,0) NOT NULL,
    b_interestexp_acct numeric(10,0) NOT NULL,
    b_unidentified_acct numeric(10,0) NOT NULL,
    b_unallocatedcash_acct numeric(10,0) NOT NULL,
    b_paymentselect_acct numeric(10,0) NOT NULL,
    b_settlementgain_acct numeric(10,0) NOT NULL,
    b_settlementloss_acct numeric(10,0) NOT NULL,
    b_revaluationgain_acct numeric(10,0) NOT NULL,
    b_revaluationloss_acct numeric(10,0) NOT NULL,
    ch_expense_acct numeric(10,0) NOT NULL,
    ch_revenue_acct numeric(10,0) NOT NULL,
    unearnedrevenue_acct numeric(10,0) NOT NULL,
    notinvoicedreceivables_acct numeric(10,0) NOT NULL,
    notinvoicedrevenue_acct numeric(10,0) NOT NULL,
    notinvoicedreceipts_acct numeric(10,0) NOT NULL,
    cb_asset_acct numeric(10,0) NOT NULL,
    cb_cashtransfer_acct numeric(10,0) NOT NULL,
    cb_differences_acct numeric(10,0) NOT NULL,
    cb_expense_acct numeric(10,0) NOT NULL,
    cb_receipt_acct numeric(10,0) NOT NULL,
    processing character(1),
    c_receivable_services_acct numeric(10,0) NOT NULL,
    p_inventoryclearing_acct numeric(10,0) NOT NULL,
    p_costadjustment_acct numeric(10,0) NOT NULL,
    p_wip_acct numeric(10,0),
    p_methodchangevariance_acct numeric(10,0),
    p_usagevariance_acct numeric(10,0),
    p_ratevariance_acct numeric(10,0),
    p_mixvariance_acct numeric(10,0),
    p_floorstock_acct numeric(10,0),
    p_costofproduction_acct numeric(10,0),
    p_labor_acct numeric(10,0),
    p_burden_acct numeric(10,0),
    p_outsideprocessing_acct numeric(10,0),
    p_overhead_acct numeric(10,0),
    p_scrap_acct numeric(10,0),
    p_averagecostvariance_acct numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_acctschema_default_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_acctschema_default OWNER TO adempiere;

--
-- Name: c_acctschema_element; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_acctschema_element (
    c_acctschema_element_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    elementtype character(2) NOT NULL,
    name character varying(60) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    c_element_id numeric(10,0),
    ad_client_id numeric(10,0) NOT NULL,
    ismandatory character(1) DEFAULT 'N'::bpchar NOT NULL,
    isbalanced character(1) DEFAULT 'N'::bpchar NOT NULL,
    org_id numeric(10,0),
    c_elementvalue_id numeric(10,0),
    m_product_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_location_id numeric(10,0),
    c_salesregion_id numeric(10,0),
    c_project_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    ad_column_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_acctschema_element_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_acctschema_element_isbalanced_check CHECK ((isbalanced = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_acctschema_element_ismandatory_check CHECK ((ismandatory = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_acctschema_element OWNER TO adempiere;

--
-- Name: c_acctschema_gl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_acctschema_gl (
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    usesuspensebalancing character(1) DEFAULT 'Y'::bpchar NOT NULL,
    suspensebalancing_acct numeric(10,0),
    usesuspenseerror character(1) DEFAULT 'Y'::bpchar NOT NULL,
    suspenseerror_acct numeric(10,0),
    usecurrencybalancing character(1) DEFAULT 'Y'::bpchar NOT NULL,
    currencybalancing_acct numeric(10,0),
    retainedearning_acct numeric(10,0) NOT NULL,
    incomesummary_acct numeric(10,0) NOT NULL,
    intercompanydueto_acct numeric(10,0) NOT NULL,
    intercompanyduefrom_acct numeric(10,0) NOT NULL,
    ppvoffset_acct numeric(10,0) NOT NULL,
    commitmentoffset_acct numeric(10,0) NOT NULL,
    commitmentoffsetsales_acct numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_acctschema_gl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_acctschema_gl_usecurrencybalancing_check CHECK ((usecurrencybalancing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_acctschema_gl_usesuspensebalancing_check CHECK ((usesuspensebalancing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_acctschema_gl_usesuspenseerror_check CHECK ((usesuspenseerror = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_acctschema_gl OWNER TO adempiere;

--
-- Name: c_activity; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_activity (
    c_activity_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_activity_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_activity OWNER TO adempiere;

--
-- Name: c_allocationhdr; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_allocationhdr (
    c_allocationhdr_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    description character varying(255),
    datetrx timestamp without time zone NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    approvalamt numeric DEFAULT 0 NOT NULL,
    ismanual character(1) DEFAULT 'N'::bpchar NOT NULL,
    docstatus character(2) NOT NULL,
    docaction character(2) NOT NULL,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    processedon numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_allocationhdr_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_allocationhdr_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_allocationhdr_ismanual_check CHECK ((ismanual = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_allocationhdr_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_allocationhdr OWNER TO adempiere;

--
-- Name: c_allocationline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_allocationline (
    c_allocationline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    allocationno numeric(10,0),
    datetrx timestamp without time zone,
    ismanual character(1) DEFAULT 'N'::bpchar,
    c_invoice_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_order_id numeric(10,0),
    c_payment_id numeric(10,0),
    c_cashline_id numeric(10,0),
    amount numeric DEFAULT 0 NOT NULL,
    discountamt numeric DEFAULT 0 NOT NULL,
    writeoffamt numeric DEFAULT 0 NOT NULL,
    overunderamt numeric DEFAULT 0,
    c_allocationhdr_id numeric(10,0) NOT NULL,
    c_charge_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_allocationline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_allocationline_ismanual_check CHECK ((ismanual = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_allocationline OWNER TO adempiere;

--
-- Name: c_bank; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bank (
    c_bank_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    routingno character varying(20) NOT NULL,
    c_location_id numeric(10,0),
    swiftcode character varying(20),
    isownbank character(1) DEFAULT 'N'::bpchar NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bank_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bank_isownbank_check CHECK ((isownbank = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bank OWNER TO adempiere;

--
-- Name: c_bankaccount; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bankaccount (
    c_bankaccount_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_bank_id numeric(10,0) NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    bankaccounttype character(1) NOT NULL,
    accountno character varying(20) NOT NULL,
    currentbalance numeric DEFAULT 0 NOT NULL,
    creditlimit numeric DEFAULT 0 NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    iban character varying(40),
    description character varying(255),
    bban character varying(40),
    paymentexportclass character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bankaccount_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bankaccount OWNER TO adempiere;

--
-- Name: c_bankaccount_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bankaccount_acct (
    c_bankaccount_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    b_intransit_acct numeric(10,0) NOT NULL,
    b_asset_acct numeric(10,0) NOT NULL,
    b_expense_acct numeric(10,0) NOT NULL,
    b_interestrev_acct numeric(10,0) NOT NULL,
    b_interestexp_acct numeric(10,0) NOT NULL,
    b_unidentified_acct numeric(10,0) NOT NULL,
    b_unallocatedcash_acct numeric(10,0) NOT NULL,
    b_paymentselect_acct numeric(10,0) NOT NULL,
    b_settlementgain_acct numeric(10,0) NOT NULL,
    b_settlementloss_acct numeric(10,0) NOT NULL,
    b_revaluationgain_acct numeric(10,0) NOT NULL,
    b_revaluationloss_acct numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bankaccount_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bankaccount_acct OWNER TO adempiere;

--
-- Name: c_bankaccountdoc; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bankaccountdoc (
    c_bankaccountdoc_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_bankaccount_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    paymentrule character(1) NOT NULL,
    currentnext numeric(10,0) NOT NULL,
    check_printformat_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bankaccountdoc_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bankaccountdoc OWNER TO adempiere;

--
-- Name: c_bankstatement; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bankstatement (
    c_bankstatement_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_bankaccount_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ismanual character(1) DEFAULT 'Y'::bpchar NOT NULL,
    statementdate timestamp without time zone NOT NULL,
    beginningbalance numeric DEFAULT 0,
    endingbalance numeric DEFAULT 0 NOT NULL,
    statementdifference numeric DEFAULT 0,
    createfrom character(1) DEFAULT 'N'::bpchar,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    eftstatementreference character varying(60),
    eftstatementdate timestamp without time zone,
    matchstatement character(1),
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    docstatus character(2) NOT NULL,
    docaction character(2) NOT NULL,
    processedon numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bankstatement_createfrom_check CHECK ((createfrom = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bankstatement_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bankstatement_ismanual_check CHECK ((ismanual = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bankstatement_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bankstatement OWNER TO adempiere;

--
-- Name: c_bankstatementline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bankstatementline (
    c_bankstatementline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_bankstatement_id numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    description character varying(255),
    isreversal character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_payment_id numeric(10,0),
    valutadate timestamp without time zone NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    trxamt numeric DEFAULT 0 NOT NULL,
    stmtamt numeric DEFAULT 0 NOT NULL,
    c_charge_id numeric(10,0),
    chargeamt numeric DEFAULT 0 NOT NULL,
    interestamt numeric DEFAULT 0 NOT NULL,
    memo character varying(255),
    referenceno character varying(40),
    ismanual character(1) DEFAULT 'N'::bpchar NOT NULL,
    efttrxid character varying(40),
    efttrxtype character varying(20),
    eftmemo character varying(2000),
    eftpayee character varying(255),
    eftpayeeaccount character varying(40),
    createpayment character(1),
    statementlinedate timestamp without time zone NOT NULL,
    eftstatementlinedate timestamp without time zone,
    eftvalutadate timestamp without time zone,
    eftreference character varying(60),
    eftcurrency character varying(20),
    eftamt numeric DEFAULT 0,
    eftcheckno character varying(20),
    matchstatement character(1),
    c_bpartner_id numeric(10,0),
    c_invoice_id numeric(10,0),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bankstatementline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bankstatementline_isreversal_check CHECK ((isreversal = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bankstatementline OWNER TO adempiere;

--
-- Name: c_bankstatementloader; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bankstatementloader (
    c_bankstatementloader_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    c_bankaccount_id numeric(10,0) NOT NULL,
    stmtloaderclass character varying(60),
    financialinstitutionid character varying(20),
    branchid character varying(20),
    userid character varying(60),
    password character varying(60),
    pin character varying(20),
    accountno character varying(20),
    hostaddress character varying(60),
    hostport numeric(10,0),
    proxyaddress character varying(60),
    proxyport numeric(10,0),
    proxylogon character varying(60),
    proxypassword character varying(60),
    filename character varying(120),
    datelastrun timestamp without time zone,
    dateformat character varying(20),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bankstatementloader_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bankstatementloader OWNER TO adempiere;

--
-- Name: c_bankstatementmatcher; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bankstatementmatcher (
    c_bankstatementmatcher_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    classname character varying(60) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bankstatementmatcher_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bankstatementmatcher OWNER TO adempiere;

--
-- Name: c_bp_bankaccount; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bp_bankaccount (
    c_bp_bankaccount_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bank_id numeric(10,0),
    isach character(1) DEFAULT 'N'::bpchar NOT NULL,
    bankaccounttype character(1),
    routingno character varying(20),
    accountno character varying(20),
    creditcardtype character(1),
    creditcardnumber character varying(20),
    creditcardvv character varying(4),
    creditcardexpmm numeric(10,0),
    creditcardexpyy numeric(10,0),
    a_name character varying(60),
    a_street character varying(60),
    a_city character varying(60),
    a_state character varying(40),
    a_zip character varying(20),
    a_ident_dl character varying(20),
    a_email character varying(60),
    a_ident_ssn character varying(20),
    r_avsaddr character(1),
    r_avszip character(1),
    a_country character varying(40),
    ad_user_id numeric(10,0),
    bpbankacctuse character(1),
    ispayrollaccount character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bp_bankaccount_isach_check CHECK ((isach = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bp_bankaccount_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bp_bankaccount_ispayrollaccount_check CHECK ((ispayrollaccount = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bp_bankaccount OWNER TO adempiere;

--
-- Name: c_bp_customer_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bp_customer_acct (
    c_bpartner_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_receivable_acct numeric(10,0),
    c_prepayment_acct numeric(10,0),
    c_receivable_services_acct numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bp_customer_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bp_customer_acct OWNER TO adempiere;

--
-- Name: c_bp_edi; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bp_edi (
    c_bp_edi_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    c_bpartner_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    editype character(1) NOT NULL,
    isaudited character(1) DEFAULT 'N'::bpchar NOT NULL,
    customerno character varying(20) NOT NULL,
    ad_sequence_id numeric(10,0) NOT NULL,
    email_to character varying(60),
    email_from character varying(60),
    email_from_uid character varying(20),
    email_from_pwd character varying(20),
    email_error_to character varying(60) NOT NULL,
    isinfosent character(1) DEFAULT 'N'::bpchar NOT NULL,
    email_info_to character varying(60) NOT NULL,
    sendinquiry character(1) DEFAULT 'Y'::bpchar NOT NULL,
    receiveinquiryreply character(1) DEFAULT 'Y'::bpchar NOT NULL,
    sendorder character(1) DEFAULT 'Y'::bpchar NOT NULL,
    receiveorderreply character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bp_edi_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bp_edi_isaudited_check CHECK ((isaudited = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bp_edi_isinfosent_check CHECK ((isinfosent = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bp_edi_receiveinquiryreply_check CHECK ((receiveinquiryreply = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bp_edi_receiveorderreply_check CHECK ((receiveorderreply = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bp_edi_sendinquiry_check CHECK ((sendinquiry = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bp_edi_sendorder_check CHECK ((sendorder = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bp_edi OWNER TO adempiere;

--
-- Name: c_bp_employee_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bp_employee_acct (
    c_bpartner_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    e_expense_acct numeric(10,0),
    e_prepayment_acct numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bp_employee_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bp_employee_acct OWNER TO adempiere;

--
-- Name: c_bp_group; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bp_group (
    c_bp_group_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_printcolor_id numeric(10,0),
    isconfidentialinfo character(1) DEFAULT 'N'::bpchar NOT NULL,
    prioritybase character(1),
    m_pricelist_id numeric(10,0),
    po_pricelist_id numeric(10,0),
    m_discountschema_id numeric(10,0),
    po_discountschema_id numeric(10,0),
    creditwatchpercent numeric,
    pricematchtolerance numeric,
    c_dunning_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bp_group_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bp_group OWNER TO adempiere;

--
-- Name: c_bp_group_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bp_group_acct (
    c_acctschema_id numeric(10,0) NOT NULL,
    c_bp_group_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_receivable_acct numeric(10,0) NOT NULL,
    c_prepayment_acct numeric(10,0) NOT NULL,
    v_liability_acct numeric(10,0) NOT NULL,
    v_liability_services_acct numeric(10,0) NOT NULL,
    v_prepayment_acct numeric(10,0) NOT NULL,
    paydiscount_exp_acct numeric(10,0) NOT NULL,
    paydiscount_rev_acct numeric(10,0) NOT NULL,
    writeoff_acct numeric(10,0) NOT NULL,
    notinvoicedreceipts_acct numeric(10,0) NOT NULL,
    unearnedrevenue_acct numeric(10,0) NOT NULL,
    notinvoicedrevenue_acct numeric(10,0) NOT NULL,
    notinvoicedreceivables_acct numeric(10,0) NOT NULL,
    processing character(1),
    c_receivable_services_acct numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bp_group_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bp_group_acct OWNER TO adempiere;

--
-- Name: c_bp_relation; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bp_relation (
    c_bp_relation_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bpartner_location_id numeric(10,0),
    isshipto character(1) DEFAULT 'N'::bpchar NOT NULL,
    isbillto character(1) DEFAULT 'N'::bpchar NOT NULL,
    ispayfrom character(1) DEFAULT 'N'::bpchar NOT NULL,
    isremitto character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_bpartnerrelation_id numeric(10,0) NOT NULL,
    c_bpartnerrelation_location_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_bp_relation OWNER TO adempiere;

--
-- Name: c_bp_vendor_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bp_vendor_acct (
    c_acctschema_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    v_liability_acct numeric(10,0),
    v_liability_services_acct numeric(10,0),
    v_prepayment_acct numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bp_vendor_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bp_vendor_acct OWNER TO adempiere;

--
-- Name: c_bp_withholding; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bp_withholding (
    c_bpartner_id numeric(10,0) NOT NULL,
    c_withholding_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ismandatorywithholding character(1) DEFAULT 'N'::bpchar NOT NULL,
    istemporaryexempt character(1) DEFAULT 'N'::bpchar NOT NULL,
    exemptreason character varying(20),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bp_withholding_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bp_withholding_ismandatorywithholding_check CHECK ((ismandatorywithholding = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bp_withholding_istemporaryexempt_check CHECK ((istemporaryexempt = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bp_withholding OWNER TO adempiere;

--
-- Name: c_bpartner_location; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bpartner_location (
    c_bpartner_location_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    isbillto character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isshipto character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ispayfrom character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isremitto character(1) DEFAULT 'Y'::bpchar NOT NULL,
    phone character varying(40),
    phone2 character varying(40),
    fax character varying(40),
    isdn character varying(40),
    c_salesregion_id numeric(10,0),
    c_bpartner_id numeric(10,0) NOT NULL,
    c_location_id numeric(10,0),
    contacttype character varying(40),
    contactperson character varying(40),
    hr_relationship_id numeric(10,0),
    mobilephone character varying(20),
    email character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bpartner_location_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_location_isbillto_check CHECK ((isbillto = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_location_ispayfrom_check CHECK ((ispayfrom = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_location_isremitto_check CHECK ((isremitto = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_location_isshipto_check CHECK ((isshipto = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bpartner_location OWNER TO adempiere;

--
-- Name: c_bpartner_product; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_bpartner_product (
    c_bpartner_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255),
    shelflifeminpct numeric(10,0) NOT NULL,
    shelflifemindays numeric(10,0) NOT NULL,
    qualityrating numeric,
    vendorproductno character varying(30),
    vendorcategory character varying(30),
    manufacturer character varying(30),
    ismanufacturer character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_bpartner_product_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_bpartner_product_ismanufacturer_check CHECK ((ismanufacturer = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_bpartner_product OWNER TO adempiere;

--
-- Name: c_calendar; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_calendar (
    c_calendar_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_calendar_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_calendar OWNER TO adempiere;

--
-- Name: c_campaign; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_campaign (
    c_campaign_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    c_channel_id numeric(10,0),
    startdate timestamp without time zone,
    enddate timestamp without time zone,
    costs numeric DEFAULT 0 NOT NULL,
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_campaign_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_campaign OWNER TO adempiere;

--
-- Name: c_cash; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_cash (
    c_cash_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_cashbook_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    statementdate timestamp without time zone NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    beginningbalance numeric DEFAULT 0 NOT NULL,
    endingbalance numeric DEFAULT 0 NOT NULL,
    statementdifference numeric DEFAULT 0,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_orgtrx_id numeric(10,0),
    c_project_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    docstatus character(2) NOT NULL,
    docaction character(2) NOT NULL,
    processedon numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_cash_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_cash_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_cash OWNER TO adempiere;

--
-- Name: c_cashbook; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_cashbook (
    c_cashbook_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_cashbook_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_cashbook OWNER TO adempiere;

--
-- Name: c_cashbook_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_cashbook_acct (
    c_cashbook_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    cb_asset_acct numeric(10,0) NOT NULL,
    cb_cashtransfer_acct numeric(10,0) NOT NULL,
    cb_differences_acct numeric(10,0) NOT NULL,
    cb_expense_acct numeric(10,0) NOT NULL,
    cb_receipt_acct numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_cashbook_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_cashbook_acct OWNER TO adempiere;

--
-- Name: c_cashflow; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_cashflow (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_cashflow_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    c_conversiontype_id numeric(10,0) DEFAULT NULL::numeric,
    c_currency_id numeric(10,0) NOT NULL,
    c_paymentterm_id numeric(10,0) NOT NULL,
    dateinvoiced timestamp without time zone NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    duedate timestamp without time zone,
    grandtotal numeric,
    issotrx character(1) DEFAULT NULL::bpchar,
    name character varying(60) DEFAULT NULL::character varying,
    documentno character varying(30) NOT NULL,
    ad_orgtrx_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bankaccount_id numeric(10,0) DEFAULT NULL::numeric,
    processed character(1) DEFAULT 'N'::bpchar,
    processedon numeric,
    processing character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_cashflow_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_cashflow_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_cashflow_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_cashflow OWNER TO adempiere;

--
-- Name: c_cashline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_cashline (
    c_cashline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_cash_id numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    description character varying(255),
    cashtype character(1) NOT NULL,
    c_bankaccount_id numeric(10,0),
    c_charge_id numeric(10,0),
    c_invoice_id numeric(10,0),
    c_currency_id numeric(10,0),
    amount numeric DEFAULT 0 NOT NULL,
    discountamt numeric DEFAULT 0,
    writeoffamt numeric DEFAULT 0,
    isgenerated character(1) DEFAULT 'N'::bpchar,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_payment_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_cashline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_cashline_isgenerated_check CHECK ((isgenerated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_cashline OWNER TO adempiere;

--
-- Name: c_channel; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_channel (
    c_channel_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ad_printcolor_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_channel_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_channel OWNER TO adempiere;

--
-- Name: c_charge; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_charge (
    c_charge_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    chargeamt numeric DEFAULT 0 NOT NULL,
    issametax character(1) DEFAULT 'N'::bpchar NOT NULL,
    issamecurrency character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_taxcategory_id numeric(10,0),
    istaxincluded character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_bpartner_id numeric(10,0),
    c_chargetype_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_charge_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_charge_issamecurrency_check CHECK ((issamecurrency = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_charge_issametax_check CHECK ((issametax = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_charge OWNER TO adempiere;

--
-- Name: c_charge_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_charge_acct (
    c_charge_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ch_expense_acct numeric(10,0) NOT NULL,
    ch_revenue_acct numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_charge_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_charge_acct OWNER TO adempiere;

--
-- Name: c_charge_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_charge_trl (
    ad_client_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_charge_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    istranslated character(1) NOT NULL,
    name character varying(60) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_charge_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_charge_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_charge_trl OWNER TO adempiere;

--
-- Name: c_chargetype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_chargetype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_chargetype_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_chargetype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_chargetype OWNER TO adempiere;

--
-- Name: c_chargetype_doctype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_chargetype_doctype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_chargetype_id numeric(10,0) NOT NULL,
    c_doctype_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isallownegative character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isallowpositive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_chargetype_doctype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_chargetype_doctype_isallownegative_check CHECK ((isallownegative = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_chargetype_doctype_isallowpositive_check CHECK ((isallowpositive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_chargetype_doctype OWNER TO adempiere;

--
-- Name: c_city; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_city (
    c_city_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    locode character varying(10),
    coordinates character varying(15),
    postal character varying(10),
    areacode character varying(10),
    c_country_id numeric(10,0),
    c_region_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_city_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_city OWNER TO adempiere;

--
-- Name: c_commission; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_commission (
    c_commission_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    c_bpartner_id numeric(10,0),
    c_currency_id numeric(10,0) NOT NULL,
    frequencytype character(1) NOT NULL,
    docbasistype character(1) NOT NULL,
    listdetails character(1) DEFAULT 'N'::bpchar NOT NULL,
    datelastrun timestamp without time zone,
    createfrom character(1),
    processing character(1),
    c_charge_id numeric(10,0) NOT NULL,
    c_commissiongroup_id numeric(10,0) DEFAULT NULL::numeric,
    istotallypaid character(1) DEFAULT 'N'::bpchar,
    isallowrma character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_commission_createfrom_check CHECK ((createfrom = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_commission_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_commission_isallowrma_check CHECK ((isallowrma = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_commission_istotallypaid_check CHECK ((istotallypaid = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_commission_listdetails_check CHECK ((listdetails = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_commission OWNER TO adempiere;

--
-- Name: c_commissionamt; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_commissionamt (
    c_commissionamt_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_commissionrun_id numeric(10,0) NOT NULL,
    c_commissionline_id numeric(10,0) NOT NULL,
    convertedamt numeric DEFAULT 0 NOT NULL,
    actualqty numeric DEFAULT 0 NOT NULL,
    commissionamt numeric DEFAULT 0 NOT NULL,
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_commissionamt_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_commissionamt OWNER TO adempiere;

--
-- Name: c_commissiondetail; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_commissiondetail (
    c_commissiondetail_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_commissionamt_id numeric(10,0) NOT NULL,
    reference character varying(60),
    c_orderline_id numeric(10,0),
    c_invoiceline_id numeric(10,0),
    info character varying(60),
    c_currency_id numeric(10,0) NOT NULL,
    actualamt numeric DEFAULT 0 NOT NULL,
    convertedamt numeric DEFAULT 0 NOT NULL,
    actualqty numeric DEFAULT 0 NOT NULL,
    commissionamt numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_commissiondetail_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_commissiondetail OWNER TO adempiere;

--
-- Name: c_commissiongroup; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_commissiongroup (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_commissiongroup_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    frequencytype character(1) DEFAULT 'M'::bpchar NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_commissiongroup_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_commissiongroup OWNER TO adempiere;

--
-- Name: c_commissionline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_commissionline (
    c_commissionline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_commission_id numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    description character varying(255),
    amtsubtract numeric NOT NULL,
    amtmultiplier numeric NOT NULL,
    qtysubtract numeric NOT NULL,
    qtymultiplier numeric NOT NULL,
    ispositiveonly character(1) DEFAULT 'Y'::bpchar NOT NULL,
    commissionorders character(1) DEFAULT 'N'::bpchar NOT NULL,
    org_id numeric(10,0),
    m_product_category_id numeric(10,0),
    m_product_id numeric(10,0),
    c_bp_group_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_salesregion_id numeric(10,0),
    paymentrule character(1),
    daysfrom numeric(10,0) DEFAULT '0'::numeric,
    daysto numeric(10,0) DEFAULT '0'::numeric,
    m_product_class_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_classification_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_group_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    c_channel_id numeric(10,0) DEFAULT NULL::numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    c_paymentterm_id numeric(10,0) DEFAULT NULL::numeric,
    invoicecollectiontype character(1) DEFAULT NULL::bpchar,
    c_dunninglevel_id numeric(10,0) DEFAULT NULL::numeric,
    ispercentage character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_commissionline_commissionorders_check CHECK ((commissionorders = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_commissionline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_commissionline_ispercentage_check CHECK ((ispercentage = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_commissionline_ispositiveonly_check CHECK ((ispositiveonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_commissionline OWNER TO adempiere;

--
-- Name: c_commissionrun; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_commissionrun (
    c_commissionrun_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    description character varying(255),
    c_commission_id numeric(10,0),
    startdate timestamp without time zone,
    grandtotal numeric DEFAULT 0 NOT NULL,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_doctype_id numeric(10,0) NOT NULL,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    docstatus character varying(2) DEFAULT 'DR'::character varying NOT NULL,
    docaction character(2) DEFAULT 'CO'::bpchar NOT NULL,
    c_commissiongroup_id numeric(10,0) DEFAULT NULL::numeric,
    datedoc timestamp without time zone,
    enddate timestamp without time zone,
    isrecalculate character(1) DEFAULT 'Y'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_commissionrun_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_commissionrun_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_commissionrun_isrecalculate_check CHECK ((isrecalculate = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_commissionrun_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_commissionrun OWNER TO adempiere;

--
-- Name: c_commissionsalesrep; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_commissionsalesrep (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_commissionsalesrep_id numeric(10,0) NOT NULL,
    c_commission_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_commissionsalesrep_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_commissionsalesrep OWNER TO adempiere;

--
-- Name: c_contactactivity; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_contactactivity (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_contactactivity_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    startdate timestamp without time zone NOT NULL,
    enddate timestamp without time zone,
    comments text,
    salesrep_id numeric(10,0),
    ad_user_id numeric(10,0),
    contactactivitytype character varying(10) NOT NULL,
    iscomplete character(1) DEFAULT NULL::bpchar,
    c_opportunity_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_contactactivity_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_contactactivity_iscomplete_check CHECK ((iscomplete = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_contactactivity OWNER TO adempiere;

--
-- Name: c_conversion_rate; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_conversion_rate (
    c_conversion_rate_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    c_currency_id_to numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    validto timestamp without time zone,
    multiplyrate numeric DEFAULT 0 NOT NULL,
    dividerate numeric DEFAULT 0 NOT NULL,
    c_conversiontype_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_conversion_rate_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_conversion_rate OWNER TO adempiere;

--
-- Name: c_conversiontype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_conversiontype (
    c_conversiontype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_conversiontype_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_conversiontype OWNER TO adempiere;

--
-- Name: c_country; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_country (
    c_country_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    countrycode character(2) NOT NULL,
    hasregion character(1) DEFAULT 'N'::bpchar NOT NULL,
    regionname character varying(60),
    expressionphone character varying(20),
    displaysequence character varying(20) NOT NULL,
    expressionpostal character varying(20),
    haspostal_add character(1) DEFAULT 'N'::bpchar NOT NULL,
    expressionpostal_add character varying(20),
    ad_language character varying(6),
    c_currency_id numeric(10,0),
    displaysequencelocal character varying(20),
    isaddresslinesreverse character(1) DEFAULT 'N'::bpchar NOT NULL,
    isaddresslineslocalreverse character(1) DEFAULT 'N'::bpchar NOT NULL,
    expressionbankroutingno character varying(20),
    expressionbankaccountno character varying(20),
    mediasize character varying(40),
    ispostcodelookup character(1) DEFAULT 'N'::bpchar NOT NULL,
    lookupclassname character varying(255),
    lookupclientid character varying(50),
    lookuppassword character varying(50),
    lookupurl character varying(100),
    allowcitiesoutoflist character(1) DEFAULT 'Y'::bpchar,
    capturesequence character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_country_allowcitiesoutoflist_check CHECK ((allowcitiesoutoflist = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_country_haspostal_add_check CHECK ((haspostal_add = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_country_hasregion_check CHECK ((hasregion = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_country_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_country_ispostcodelookup_check CHECK ((ispostcodelookup = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_country OWNER TO adempiere;

--
-- Name: c_country_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_country_trl (
    c_country_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    regionname character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_country_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_country_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_country_trl OWNER TO adempiere;

--
-- Name: c_currency; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_currency (
    c_currency_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    iso_code character(3) NOT NULL,
    cursymbol character varying(10),
    description character varying(255) NOT NULL,
    stdprecision numeric(10,0) NOT NULL,
    costingprecision numeric(10,0) NOT NULL,
    iseuro character(1) DEFAULT 'N'::bpchar NOT NULL,
    isemumember character(1) DEFAULT 'N'::bpchar NOT NULL,
    emuentrydate timestamp without time zone,
    emurate numeric DEFAULT 0,
    roundofffactor numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_currency_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_currency_isemumember_check CHECK ((isemumember = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_currency_iseuro_check CHECK ((iseuro = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_currency OWNER TO adempiere;

--
-- Name: c_currency_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_currency_acct (
    c_acctschema_id numeric(10,0) NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    unrealizedgain_acct numeric(10,0) NOT NULL,
    unrealizedloss_acct numeric(10,0) NOT NULL,
    realizedgain_acct numeric(10,0) NOT NULL,
    realizedloss_acct numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_currency_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_currency_acct OWNER TO adempiere;

--
-- Name: c_currency_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_currency_trl (
    c_currency_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    cursymbol character varying(10),
    description character varying(255) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_currency_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_currency_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_currency_trl OWNER TO adempiere;

--
-- Name: c_cycle; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_cycle (
    c_cycle_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    c_currency_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_cycle_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_cycle OWNER TO adempiere;

--
-- Name: c_cyclephase; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_cyclephase (
    c_cyclestep_id numeric(10,0) NOT NULL,
    c_phase_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_cyclephase OWNER TO adempiere;

--
-- Name: c_cyclestep; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_cyclestep (
    c_cyclestep_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_cycle_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    relativeweight numeric NOT NULL,
    name character varying(60) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_cyclestep_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_cyclestep OWNER TO adempiere;

--
-- Name: c_doctype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_doctype (
    c_doctype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    printname character varying(60) NOT NULL,
    description character varying(255),
    docbasetype character(3) NOT NULL,
    issotrx character(1) DEFAULT 'Y'::bpchar NOT NULL,
    docsubtypeso character(2),
    hasproforma character(1) DEFAULT 'N'::bpchar,
    c_doctypeproforma_id numeric(10,0),
    c_doctypeshipment_id numeric(10,0),
    c_doctypeinvoice_id numeric(10,0),
    isdocnocontrolled character(1) DEFAULT 'N'::bpchar NOT NULL,
    docnosequence_id numeric(10,0),
    gl_category_id numeric(10,0) NOT NULL,
    hascharges character(1) DEFAULT 'N'::bpchar NOT NULL,
    documentnote character varying(2000),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    documentcopies numeric(10,0) NOT NULL,
    ad_printformat_id numeric(10,0),
    isdefaultcounterdoc character(1) DEFAULT 'N'::bpchar NOT NULL,
    isshipconfirm character(1) DEFAULT 'N'::bpchar NOT NULL,
    ispickqaconfirm character(1) DEFAULT 'N'::bpchar NOT NULL,
    isintransit character(1) DEFAULT 'N'::bpchar NOT NULL,
    issplitwhendifference character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_doctypedifference_id numeric(10,0),
    iscreatecounter character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isindexed character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isoverwriteseqoncomplete character(1) DEFAULT 'N'::bpchar,
    definitesequence_id numeric(10,0),
    isoverwritedateoncomplete character(1) DEFAULT 'N'::bpchar,
    ispreparesplitdocument character(1) DEFAULT 'Y'::bpchar NOT NULL,
    printdocument character(1) DEFAULT NULL::bpchar,
    iscopydocnoonreversal character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_doctype_hascharges_check CHECK ((hascharges = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_doctype_hasproforma_check CHECK ((hasproforma = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_doctype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_doctype_iscopydocnoonreversal_check CHECK ((iscopydocnoonreversal = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_doctype_isdocnocontrolled_check CHECK ((isdocnocontrolled = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_doctype_isoverwritedateoncomplete_check CHECK ((isoverwritedateoncomplete = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_doctype_isoverwriteseqoncomplete_check CHECK ((isoverwriteseqoncomplete = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_doctype_ispreparesplitdocument_check CHECK ((ispreparesplitdocument = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_doctype_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_doctype OWNER TO adempiere;

--
-- Name: c_doctype_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_doctype_trl (
    c_doctype_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    printname character varying(60) NOT NULL,
    documentnote character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_doctype_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_doctype_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_doctype_trl OWNER TO adempiere;

--
-- Name: c_doctypecounter; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_doctypecounter (
    c_doctypecounter_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    c_doctype_id numeric(10,0) NOT NULL,
    counter_c_doctype_id numeric(10,0),
    isvalid character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    docaction character(2),
    iscreatecounter character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_doctypecounter_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_doctypecounter OWNER TO adempiere;

--
-- Name: c_dunning; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_dunning (
    c_dunning_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    senddunningletter character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    createlevelssequentially character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_dunning_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_dunning_senddunningletter_check CHECK ((senddunningletter = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_dunning OWNER TO adempiere;

--
-- Name: c_dunninglevel; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_dunninglevel (
    c_dunninglevel_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_dunning_id numeric(10,0) NOT NULL,
    printname character varying(60) NOT NULL,
    daysafterdue numeric(10,0) NOT NULL,
    daysbetweendunning numeric(10,0) NOT NULL,
    note character varying(2000),
    chargeinterest character(1) DEFAULT 'Y'::bpchar NOT NULL,
    interestpercent numeric DEFAULT 0,
    chargefee character(1) DEFAULT 'Y'::bpchar NOT NULL,
    feeamt numeric DEFAULT 0,
    dunning_printformat_id numeric(10,0),
    name character varying(60) DEFAULT 'x'::character varying NOT NULL,
    description character varying(255),
    isshowalldue character(1) DEFAULT 'N'::bpchar NOT NULL,
    isshownotdue character(1) DEFAULT 'N'::bpchar NOT NULL,
    issetcreditstop character(1) DEFAULT 'N'::bpchar NOT NULL,
    issetpaymentterm character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_paymentterm_id numeric(10,0),
    invoicecollectiontype character(1),
    isstatement character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_dunninglevel_chargefee_check CHECK ((chargefee = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_dunninglevel_chargeinterest_check CHECK ((chargeinterest = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_dunninglevel_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_dunninglevel_isstatement_check CHECK ((isstatement = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_dunninglevel OWNER TO adempiere;

--
-- Name: c_dunningrun; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_dunningrun (
    c_dunningrun_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    dunningdate timestamp without time zone NOT NULL,
    c_dunninglevel_id numeric(10,0),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    sendit character(1),
    description character varying(255),
    c_dunning_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_dunningrun_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_dunningrun_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_dunningrun OWNER TO adempiere;

--
-- Name: c_dunningrunentry; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_dunningrunentry (
    c_dunningrunentry_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bpartner_location_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    c_dunningrun_id numeric(10,0) NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    salesrep_id numeric(10,0) NOT NULL,
    amt numeric DEFAULT 0 NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    note character varying(2000),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_dunninglevel_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_dunningrunentry_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_dunningrunentry_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_dunningrunentry OWNER TO adempiere;

--
-- Name: c_greeting; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_greeting (
    c_greeting_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    greeting character varying(60),
    isfirstnameonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_greeting_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_greeting_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_greeting_isfirstnameonly_check CHECK ((isfirstnameonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_greeting OWNER TO adempiere;

--
-- Name: c_location; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_location (
    c_location_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    address1 character varying(60),
    address2 character varying(60),
    city character varying(60),
    postal character varying(10),
    postal_add character varying(10),
    c_country_id numeric(10,0) NOT NULL,
    c_region_id numeric(10,0),
    c_city_id numeric(10,0),
    regionname character varying(40),
    address3 character varying(60),
    address4 character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_location_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_location OWNER TO adempiere;

--
-- Name: c_dunning_header_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_dunning_header_v AS
 SELECT dr.ad_client_id,
    dr.ad_org_id,
    dr.isactive,
    dr.created,
    dr.createdby,
    dr.updated,
    dr.updatedby,
    'en_US'::character varying AS ad_language,
    dr.c_dunningrun_id,
    dre.c_dunningrunentry_id,
    dr.dunningdate,
    dl.printname,
    dl.note AS documentnote,
    dre.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    dre.salesrep_id,
    COALESCE(ubp.name, u.name) AS salesrep_name,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    bpcg.greeting AS bpcontactgreeting,
    bpc.title,
    bpc.phone,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname,
    bpl.c_location_id,
    bp.referenceno,
    ((l.postal)::text || (l.postal_add)::text) AS postal,
    dre.amt,
    dre.qty,
    dre.note,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM ((((((((((((adempiere.c_dunningrun dr
     JOIN adempiere.c_dunningrunentry dre ON ((dr.c_dunningrun_id = dre.c_dunningrun_id)))
     JOIN adempiere.c_dunninglevel dl ON ((dre.c_dunninglevel_id = dl.c_dunninglevel_id)))
     JOIN adempiere.c_bpartner bp ON ((dre.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting bpg ON ((bp.c_greeting_id = bpg.c_greeting_id)))
     JOIN adempiere.c_bpartner_location bpl ON ((dre.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     JOIN adempiere.c_location l ON ((bpl.c_location_id = l.c_location_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((dre.ad_user_id = bpc.ad_user_id)))
     LEFT JOIN adempiere.c_greeting bpcg ON ((bpc.c_greeting_id = bpcg.c_greeting_id)))
     JOIN adempiere.ad_orginfo oi ON ((dr.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((dr.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((dre.salesrep_id = u.ad_user_id)))
     LEFT JOIN adempiere.c_bpartner ubp ON ((u.c_bpartner_id = ubp.c_bpartner_id)));


ALTER TABLE adempiere.c_dunning_header_v OWNER TO adempiere;

--
-- Name: c_dunninglevel_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_dunninglevel_trl (
    ad_language character varying(6) NOT NULL,
    c_dunninglevel_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    printname character varying(60) NOT NULL,
    note character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_dunninglevel_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_dunninglevel_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_dunninglevel_trl OWNER TO adempiere;

--
-- Name: c_greeting_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_greeting_trl (
    ad_language character varying(6) NOT NULL,
    c_greeting_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    greeting character varying(60),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_greeting_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_greeting_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_greeting_trl OWNER TO adempiere;

--
-- Name: c_dunning_header_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_dunning_header_vt AS
 SELECT dr.ad_client_id,
    dr.ad_org_id,
    dr.isactive,
    dr.created,
    dr.createdby,
    dr.updated,
    dr.updatedby,
    dlt.ad_language,
    dr.c_dunningrun_id,
    dre.c_dunningrunentry_id,
    dr.dunningdate,
    dlt.printname,
    dlt.note AS documentnote,
    dre.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    dre.salesrep_id,
    COALESCE(ubp.name, u.name) AS salesrep_name,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    bpcg.greeting AS bpcontactgreeting,
    bpc.title,
    bpc.phone,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname,
    bpl.c_location_id,
    bp.referenceno,
    ((l.postal)::text || (l.postal_add)::text) AS postal,
    dre.amt,
    dre.qty,
    dre.note,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM (((((((((((((adempiere.c_dunningrun dr
     JOIN adempiere.c_dunningrunentry dre ON ((dr.c_dunningrun_id = dre.c_dunningrun_id)))
     JOIN adempiere.c_dunninglevel dl ON ((dre.c_dunninglevel_id = dl.c_dunninglevel_id)))
     JOIN adempiere.c_dunninglevel_trl dlt ON ((dl.c_dunninglevel_id = dlt.c_dunninglevel_id)))
     JOIN adempiere.c_bpartner bp ON ((dre.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting_trl bpg ON (((bp.c_greeting_id = bpg.c_greeting_id) AND ((dlt.ad_language)::text = (bpg.ad_language)::text))))
     JOIN adempiere.c_bpartner_location bpl ON ((dre.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     JOIN adempiere.c_location l ON ((bpl.c_location_id = l.c_location_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((dre.ad_user_id = bpc.ad_user_id)))
     LEFT JOIN adempiere.c_greeting_trl bpcg ON (((bpc.c_greeting_id = bpcg.c_greeting_id) AND ((dlt.ad_language)::text = (bpcg.ad_language)::text))))
     JOIN adempiere.ad_orginfo oi ON ((dr.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((dr.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((dre.salesrep_id = u.ad_user_id)))
     LEFT JOIN adempiere.c_bpartner ubp ON ((u.c_bpartner_id = ubp.c_bpartner_id)));


ALTER TABLE adempiere.c_dunning_header_vt OWNER TO adempiere;

--
-- Name: c_dunningrunline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_dunningrunline (
    c_dunningrunline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_dunningrunentry_id numeric(10,0) NOT NULL,
    c_invoice_id numeric(10,0),
    c_payment_id numeric(10,0),
    amt numeric DEFAULT 0 NOT NULL,
    convertedamt numeric DEFAULT 0 NOT NULL,
    daysdue numeric(10,0) DEFAULT 0 NOT NULL,
    timesdunned numeric(10,0) DEFAULT 0 NOT NULL,
    interestamt numeric DEFAULT 0 NOT NULL,
    feeamt numeric DEFAULT 0 NOT NULL,
    totalamt numeric DEFAULT 0 NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    isindispute character(1) DEFAULT 'N'::bpchar NOT NULL,
    openamt numeric NOT NULL,
    c_invoicepayschedule_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_dunningrunline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_dunningrunline_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_dunningrunline OWNER TO adempiere;

--
-- Name: c_invoice; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_invoice (
    c_invoice_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    issotrx character(1) DEFAULT 'Y'::bpchar NOT NULL,
    documentno character varying(30) NOT NULL,
    docstatus character(2) NOT NULL,
    docaction character(2) NOT NULL,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_doctype_id numeric(10,0) NOT NULL,
    c_doctypetarget_id numeric(10,0) NOT NULL,
    c_order_id numeric(10,0),
    description character varying(255),
    isapproved character(1) DEFAULT 'Y'::bpchar NOT NULL,
    istransferred character(1) DEFAULT 'N'::bpchar NOT NULL,
    isprinted character(1) DEFAULT 'N'::bpchar NOT NULL,
    salesrep_id numeric(10,0),
    dateinvoiced timestamp without time zone NOT NULL,
    dateprinted timestamp without time zone,
    dateacct timestamp without time zone NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bpartner_location_id numeric(10,0) NOT NULL,
    poreference character varying(20),
    isdiscountprinted character(1) DEFAULT 'Y'::bpchar NOT NULL,
    dateordered timestamp without time zone,
    c_currency_id numeric(10,0) NOT NULL,
    paymentrule character(1) NOT NULL,
    c_paymentterm_id numeric(10,0) NOT NULL,
    c_charge_id numeric(10,0),
    chargeamt numeric DEFAULT 0,
    totallines numeric DEFAULT 0 NOT NULL,
    grandtotal numeric DEFAULT 0 NOT NULL,
    m_pricelist_id numeric(10,0) NOT NULL,
    istaxincluded character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_campaign_id numeric(10,0),
    c_project_id numeric(10,0),
    c_activity_id numeric(10,0),
    ispaid character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_payment_id numeric(10,0),
    c_cashline_id numeric(10,0),
    createfrom character(1),
    generateto character(1),
    sendemail character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_user_id numeric(10,0),
    copyfrom character(1),
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_orgtrx_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    c_conversiontype_id numeric(10,0),
    ispayschedulevalid character(1) DEFAULT 'N'::bpchar NOT NULL,
    ref_invoice_id numeric(10,0),
    isindispute character(1) DEFAULT 'N'::bpchar NOT NULL,
    invoicecollectiontype character(1),
    m_rma_id numeric(10,0),
    dunninggrace timestamp without time zone,
    c_dunninglevel_id numeric(10,0),
    reversal_id numeric(10,0),
    processedon numeric,
    isfixedassetinvoice character(1),
    c_pos_id numeric(10,0) DEFAULT NULL::numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_invoice_createfrom_check CHECK ((createfrom = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoice_generateto_check CHECK ((generateto = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoice_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoice_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoice_isdiscountprinted_check CHECK ((isdiscountprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoice_isfixedassetinvoice_check CHECK ((isfixedassetinvoice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoice_ispaid_check CHECK ((ispaid = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoice_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoice_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoice_istaxincluded_check CHECK ((istaxincluded = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoice_istransferred_check CHECK ((istransferred = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoice_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_invoice OWNER TO adempiere;

--
-- Name: c_payment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_payment (
    c_payment_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    datetrx timestamp without time zone NOT NULL,
    isreceipt character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_doctype_id numeric(10,0) NOT NULL,
    trxtype character(1) NOT NULL,
    c_bankaccount_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_invoice_id numeric(10,0),
    c_bp_bankaccount_id numeric(10,0),
    c_paymentbatch_id numeric(10,0),
    tendertype character(1) NOT NULL,
    creditcardtype character(1),
    creditcardnumber character varying(20),
    creditcardvv character varying(4),
    creditcardexpmm numeric(10,0),
    creditcardexpyy numeric(10,0),
    micr character varying(20),
    routingno character varying(20),
    accountno character varying(20),
    checkno character varying(20),
    a_name character varying(60),
    a_street character varying(60),
    a_city character varying(60),
    a_state character varying(40),
    a_zip character varying(20),
    a_ident_dl character varying(20),
    a_ident_ssn character varying(20),
    a_email character varying(60),
    voiceauthcode character varying(20),
    orig_trxid character varying(20),
    ponum character varying(60),
    c_currency_id numeric(10,0) NOT NULL,
    payamt numeric DEFAULT 0 NOT NULL,
    discountamt numeric DEFAULT 0,
    writeoffamt numeric DEFAULT 0,
    taxamt numeric DEFAULT 0,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    r_pnref character varying(20),
    r_result character varying(20),
    r_respmsg character varying(60),
    r_authcode character varying(20),
    r_avsaddr character(1),
    r_avszip character(1),
    r_info character varying(2000),
    processing character(1),
    oprocessing character(1),
    docstatus character(2) NOT NULL,
    docaction character(2) NOT NULL,
    isreconciled character(1) DEFAULT 'N'::bpchar NOT NULL,
    isallocated character(1) DEFAULT 'N'::bpchar NOT NULL,
    isonline character(1) DEFAULT 'N'::bpchar NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    isoverunderpayment character(1) DEFAULT 'Y'::bpchar NOT NULL,
    overunderamt numeric DEFAULT 0,
    a_country character varying(40),
    c_project_id numeric(10,0),
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    chargeamt numeric DEFAULT 0,
    c_charge_id numeric(10,0),
    isdelayedcapture character(1) DEFAULT 'N'::bpchar NOT NULL,
    r_authcode_dc character varying(20),
    r_cvv2match character(1),
    r_pnref_dc character varying(20),
    swipe character varying(80),
    ad_orgtrx_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    c_conversiontype_id numeric(10,0),
    description character varying(255),
    dateacct timestamp without time zone NOT NULL,
    c_order_id numeric(10,0),
    isprepayment character(1) DEFAULT 'N'::bpchar NOT NULL,
    ref_payment_id numeric(10,0),
    reversal_id numeric(10,0),
    c_cashbook_id numeric(10,0),
    processedon numeric,
    c_pos_id numeric(10,0) DEFAULT NULL::numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_payment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_payment_isallocated_check CHECK ((isallocated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_payment_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_payment_isonline_check CHECK ((isonline = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_payment_isreceipt_check CHECK ((isreceipt = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_payment_isreconciled_check CHECK ((isreconciled = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_payment_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_payment OWNER TO adempiere;

--
-- Name: c_paymentterm; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_paymentterm (
    c_paymentterm_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    documentnote character varying(2000),
    afterdelivery character(1) DEFAULT 'N'::bpchar NOT NULL,
    isduefixed character(1) DEFAULT 'N'::bpchar NOT NULL,
    netdays numeric(10,0) NOT NULL,
    gracedays numeric(10,0) NOT NULL,
    fixmonthcutoff numeric(10,0),
    fixmonthday numeric(10,0),
    fixmonthoffset numeric(10,0),
    discountdays numeric(10,0) NOT NULL,
    discount numeric NOT NULL,
    discountdays2 numeric(10,0) NOT NULL,
    discount2 numeric NOT NULL,
    isnextbusinessday character(1) DEFAULT 'Y'::bpchar,
    isdefault character(1) DEFAULT 'N'::bpchar,
    value character varying(40) NOT NULL,
    netday character(1),
    isvalid character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_paymentterm_afterdelivery_check CHECK ((afterdelivery = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentterm_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentterm_isduefixed_check CHECK ((isduefixed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentterm_isnextbusinessday_check CHECK ((isnextbusinessday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_paymentterm OWNER TO adempiere;

--
-- Name: c_dunning_line_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_dunning_line_v AS
 SELECT drl.ad_client_id,
    drl.ad_org_id,
    drl.isactive,
    drl.created,
    drl.createdby,
    drl.updated,
    drl.updatedby,
    'en_US'::character varying AS ad_language,
    drl.c_dunningrunline_id,
    drl.c_dunningrunentry_id,
    drl.amt,
    drl.convertedamt,
    drl.daysdue,
    drl.timesdunned,
    drl.interestamt,
    drl.feeamt,
    drl.totalamt,
    drl.c_invoice_id,
    COALESCE(i.issotrx, p.isreceipt) AS issotrx,
    COALESCE(i.documentno, p.documentno) AS documentno,
    COALESCE(i.docstatus, p.docstatus) AS docstatus,
    COALESCE(i.dateinvoiced, p.datetrx) AS datetrx,
    COALESCE(i.c_doctype_id, p.c_doctype_id) AS c_doctype_id,
    COALESCE(dt.printname, dtp.printname) AS documenttype,
    COALESCE(i.description, p.description) AS description,
    COALESCE(i.c_currency_id, p.c_currency_id) AS c_currency_id,
    COALESCE(i.c_campaign_id, p.c_campaign_id) AS c_campaign_id,
    COALESCE(i.c_project_id, p.c_project_id) AS c_project_id,
    COALESCE(i.c_activity_id, p.c_activity_id) AS c_activity_id,
    COALESCE(i.user1_id, p.user1_id) AS user1_id,
    COALESCE(i.user2_id, p.user2_id) AS user2_id,
    COALESCE(i.user3_id, p.user1_id) AS user3_id,
    COALESCE(i.user4_id, p.user2_id) AS user4_id,
    COALESCE(i.dateacct, p.dateacct) AS dateacct,
    COALESCE(i.c_conversiontype_id, i.c_conversiontype_id) AS c_conversiontype_id,
    COALESCE(i.ad_orgtrx_id, p.ad_orgtrx_id) AS ad_orgtrx_id,
    i.poreference,
    i.dateordered,
    i.dateinvoiced,
    i.isindispute,
    pt.name AS paymentterm,
    i.c_charge_id,
    i.chargeamt,
    i.totallines,
    i.grandtotal,
    i.grandtotal AS amtinwords,
    i.m_pricelist_id,
    i.ispaid,
    p.isallocated,
    p.tendertype,
    p.discountamt
   FROM (((((adempiere.c_dunningrunline drl
     LEFT JOIN adempiere.c_invoice i ON ((drl.c_invoice_id = i.c_invoice_id)))
     LEFT JOIN adempiere.c_doctype dt ON ((i.c_doctype_id = dt.c_doctype_id)))
     LEFT JOIN adempiere.c_paymentterm pt ON ((i.c_paymentterm_id = pt.c_paymentterm_id)))
     LEFT JOIN adempiere.c_payment p ON ((drl.c_payment_id = p.c_payment_id)))
     LEFT JOIN adempiere.c_doctype dtp ON ((p.c_doctype_id = dtp.c_doctype_id)));


ALTER TABLE adempiere.c_dunning_line_v OWNER TO adempiere;

--
-- Name: c_paymentterm_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_paymentterm_trl (
    c_paymentterm_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    documentnote character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_paymentterm_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentterm_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_paymentterm_trl OWNER TO adempiere;

--
-- Name: c_dunning_line_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_dunning_line_vt AS
 SELECT drl.ad_client_id,
    drl.ad_org_id,
    drl.isactive,
    drl.created,
    drl.createdby,
    drl.updated,
    drl.updatedby,
    COALESCE(dt.ad_language, dtp.ad_language) AS ad_language,
    drl.c_dunningrunline_id,
    drl.c_dunningrunentry_id,
    drl.amt,
    drl.convertedamt,
    drl.daysdue,
    drl.timesdunned,
    drl.interestamt,
    drl.feeamt,
    drl.totalamt,
    drl.c_invoice_id,
    COALESCE(i.issotrx, p.isreceipt) AS issotrx,
    COALESCE(i.documentno, p.documentno) AS documentno,
    COALESCE(i.docstatus, p.docstatus) AS docstatus,
    COALESCE(i.dateinvoiced, p.datetrx) AS datetrx,
    COALESCE(i.c_doctype_id, p.c_doctype_id) AS c_doctype_id,
    COALESCE(dt.printname, dtp.printname) AS documenttype,
    COALESCE(i.description, p.description) AS description,
    COALESCE(i.c_currency_id, p.c_currency_id) AS c_currency_id,
    COALESCE(i.c_campaign_id, p.c_campaign_id) AS c_campaign_id,
    COALESCE(i.c_project_id, p.c_project_id) AS c_project_id,
    COALESCE(i.c_activity_id, p.c_activity_id) AS c_activity_id,
    COALESCE(i.user1_id, p.user1_id) AS user1_id,
    COALESCE(i.user2_id, p.user2_id) AS user2_id,
    COALESCE(i.user3_id, p.user3_id) AS user3_id,
    COALESCE(i.user4_id, p.user4_id) AS user4_id,
    COALESCE(i.dateacct, p.dateacct) AS dateacct,
    COALESCE(i.c_conversiontype_id, i.c_conversiontype_id) AS c_conversiontype_id,
    COALESCE(i.ad_orgtrx_id, p.ad_orgtrx_id) AS ad_orgtrx_id,
    i.poreference,
    i.dateordered,
    i.dateinvoiced,
    i.isindispute,
    pt.name AS paymentterm,
    i.c_charge_id,
    i.chargeamt,
    i.totallines,
    i.grandtotal,
    i.grandtotal AS amtinwords,
    i.m_pricelist_id,
    i.ispaid,
    p.isallocated,
    p.tendertype,
    p.discountamt
   FROM (((((adempiere.c_dunningrunline drl
     LEFT JOIN adempiere.c_invoice i ON ((drl.c_invoice_id = i.c_invoice_id)))
     LEFT JOIN adempiere.c_doctype_trl dt ON ((i.c_doctype_id = dt.c_doctype_id)))
     LEFT JOIN adempiere.c_paymentterm_trl pt ON (((i.c_paymentterm_id = pt.c_paymentterm_id) AND ((pt.ad_language)::text = (dt.ad_language)::text))))
     LEFT JOIN adempiere.c_payment p ON ((drl.c_payment_id = p.c_payment_id)))
     LEFT JOIN adempiere.c_doctype_trl dtp ON ((p.c_doctype_id = dtp.c_doctype_id)))
  WHERE ((COALESCE(dt.ad_language, dtp.ad_language))::text = (COALESCE(dtp.ad_language, dt.ad_language))::text);


ALTER TABLE adempiere.c_dunning_line_vt OWNER TO adempiere;

--
-- Name: c_element; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_element (
    c_element_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    vformat character varying(40),
    elementtype character(1) NOT NULL,
    isbalancing character(1) DEFAULT 'N'::bpchar NOT NULL,
    isnaturalaccount character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ad_tree_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_element_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_element_isbalancing_check CHECK ((isbalancing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_element_isnaturalaccount_check CHECK ((isnaturalaccount = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_element OWNER TO adempiere;

--
-- Name: c_elementvalue; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_elementvalue (
    c_elementvalue_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    accounttype character(1) NOT NULL,
    accountsign character(1) NOT NULL,
    isdoccontrolled character(1) DEFAULT 'N'::bpchar,
    c_element_id numeric(10,0) NOT NULL,
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    postactual character(1) DEFAULT 'Y'::bpchar NOT NULL,
    postbudget character(1) DEFAULT 'Y'::bpchar NOT NULL,
    postencumbrance character(1) DEFAULT 'Y'::bpchar NOT NULL,
    poststatistical character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isbankaccount character(1) DEFAULT 'N'::bpchar,
    c_bankaccount_id numeric(10,0),
    isforeigncurrency character(1) DEFAULT 'N'::bpchar,
    c_currency_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_elementvalue_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_elementvalue_isbankaccount_check CHECK ((isbankaccount = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_elementvalue_isdoccontrolled_check CHECK ((isdoccontrolled = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_elementvalue_isforeigncurrency_check CHECK ((isforeigncurrency = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_elementvalue_postactual_check CHECK ((postactual = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_elementvalue_postbudget_check CHECK ((postbudget = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_elementvalue_postencumbrance_check CHECK ((postencumbrance = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_elementvalue_poststatistical_check CHECK ((poststatistical = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_elementvalue OWNER TO adempiere;

--
-- Name: c_elementvalue_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_elementvalue_trl (
    c_elementvalue_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_elementvalue_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_elementvalue_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_elementvalue_trl OWNER TO adempiere;

--
-- Name: c_interorg_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_interorg_acct (
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_orgto_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    intercompanydueto_acct numeric(10,0) NOT NULL,
    intercompanyduefrom_acct numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_interorg_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_interorg_acct OWNER TO adempiere;

--
-- Name: c_invoiceschedule; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_invoiceschedule (
    c_invoiceschedule_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    isamount character(1) DEFAULT 'N'::bpchar NOT NULL,
    amt numeric DEFAULT 0,
    invoicefrequency character(1) NOT NULL,
    invoiceweekday character(1),
    invoiceweekdaycutoff character(1),
    eveninvoiceweek character(1) DEFAULT 'Y'::bpchar,
    invoiceday numeric(10,0),
    invoicedaycutoff numeric(10,0),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_invoiceschedule_eveninvoiceweek_check CHECK ((eveninvoiceweek = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoiceschedule_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoiceschedule_isamount_check CHECK ((isamount = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_invoiceschedule OWNER TO adempiere;

--
-- Name: m_inout; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_inout (
    m_inout_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    issotrx character(1) DEFAULT 'Y'::bpchar NOT NULL,
    documentno character varying(30) NOT NULL,
    docaction character(2) NOT NULL,
    docstatus character(2) NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_doctype_id numeric(10,0) NOT NULL,
    description character varying(255),
    c_order_id numeric(10,0),
    dateordered timestamp without time zone,
    isprinted character(1) DEFAULT 'N'::bpchar NOT NULL,
    movementtype character(2) NOT NULL,
    movementdate timestamp without time zone NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bpartner_location_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    poreference character varying(20),
    deliveryrule character(1) NOT NULL,
    freightcostrule character(1) NOT NULL,
    freightamt numeric DEFAULT 0,
    deliveryviarule character(1) NOT NULL,
    m_shipper_id numeric(10,0),
    c_charge_id numeric(10,0),
    chargeamt numeric DEFAULT 0,
    priorityrule character(1) NOT NULL,
    dateprinted timestamp without time zone,
    c_invoice_id numeric(10,0),
    createfrom character(1),
    generateto character(1),
    sendemail character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_user_id numeric(10,0),
    salesrep_id numeric(10,0),
    nopackages numeric(10,0),
    pickdate timestamp without time zone,
    shipdate timestamp without time zone,
    trackingno character varying(60),
    ad_orgtrx_id numeric(10,0),
    c_project_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    datereceived timestamp without time zone,
    isintransit character(1) DEFAULT 'N'::bpchar NOT NULL,
    ref_inout_id numeric(10,0),
    createconfirm character(1),
    createpackage character(1),
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    isindispute character(1) DEFAULT 'N'::bpchar NOT NULL,
    volume numeric,
    weight numeric,
    m_rma_id numeric(10,0),
    reversal_id numeric(10,0),
    isdropship character(1) DEFAULT 'N'::bpchar,
    dropship_bpartner_id numeric(10,0),
    dropship_location_id numeric(10,0),
    dropship_user_id numeric(10,0),
    processedon numeric,
    c_pos_id numeric(10,0) DEFAULT NULL::numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    barcodescanner character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_inout_createfrom_check CHECK ((createfrom = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inout_generateto_check CHECK ((generateto = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inout_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inout_isdropship_check CHECK ((isdropship = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inout_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inout_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inout_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_inout OWNER TO adempiere;

--
-- Name: m_inoutline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_inoutline (
    m_inoutline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    description character varying(255),
    m_inout_id numeric(10,0) NOT NULL,
    c_orderline_id numeric(10,0),
    m_locator_id numeric(10,0),
    m_product_id numeric(10,0),
    c_uom_id numeric(10,0) NOT NULL,
    movementqty numeric DEFAULT 0 NOT NULL,
    isinvoiced character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_attributesetinstance_id numeric(10,0) DEFAULT 0,
    isdescription character(1) DEFAULT 'N'::bpchar NOT NULL,
    confirmedqty numeric DEFAULT 0,
    pickedqty numeric DEFAULT 0,
    scrappedqty numeric DEFAULT 0,
    targetqty numeric DEFAULT 0,
    ref_inoutline_id numeric(10,0),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    qtyentered numeric NOT NULL,
    c_charge_id numeric(10,0),
    c_project_id numeric(10,0),
    c_projectphase_id numeric(10,0),
    c_projecttask_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    m_rmaline_id numeric(10,0),
    reversalline_id numeric(10,0),
    tobeinvoiced character(1) DEFAULT 'Y'::bpchar,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_inoutline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inoutline_isinvoiced_check CHECK ((isinvoiced = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inoutline_tobeinvoiced_check CHECK ((tobeinvoiced = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_inoutline OWNER TO adempiere;

--
-- Name: c_invoice_candidate_ship_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_invoice_candidate_ship_v AS
 SELECT "inout".ad_client_id,
    "inout".ad_org_id,
    "inout".c_bpartner_id,
    "inout".m_inout_id,
    "inout".description,
    "inout".documentno,
    "inout".dateordered,
    "inout".movementdate,
    "inout".c_doctype_id,
    sum(l.movementqty) AS qtytoinvoice
   FROM (((adempiere.m_inout "inout"
     JOIN adempiere.m_inoutline l ON ((("inout".m_inout_id = l.m_inout_id) AND (l.isinvoiced = 'N'::bpchar))))
     JOIN adempiere.c_bpartner bp ON (("inout".c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_invoiceschedule si ON ((bp.c_invoiceschedule_id = si.c_invoiceschedule_id)))
  WHERE (("inout".docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar])) AND ("inout".issotrx = 'Y'::bpchar))
  GROUP BY "inout".ad_client_id, "inout".ad_org_id, "inout".c_bpartner_id, "inout".m_inout_id, "inout".description, "inout".documentno, "inout".dateordered, "inout".movementdate, "inout".c_doctype_id;


ALTER TABLE adempiere.c_invoice_candidate_ship_v OWNER TO adempiere;

--
-- Name: c_order; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_order (
    c_order_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    issotrx character(1) DEFAULT 'Y'::bpchar NOT NULL,
    documentno character varying(30) NOT NULL,
    docstatus character(2) NOT NULL,
    docaction character(2) NOT NULL,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_doctype_id numeric(10,0) NOT NULL,
    c_doctypetarget_id numeric(10,0) NOT NULL,
    description character varying(255),
    isapproved character(1) DEFAULT 'Y'::bpchar NOT NULL,
    iscreditapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    isdelivered character(1) DEFAULT 'N'::bpchar NOT NULL,
    isinvoiced character(1) DEFAULT 'N'::bpchar NOT NULL,
    isprinted character(1) DEFAULT 'N'::bpchar NOT NULL,
    istransferred character(1) DEFAULT 'N'::bpchar NOT NULL,
    isselected character(1) DEFAULT 'N'::bpchar NOT NULL,
    salesrep_id numeric(10,0),
    dateordered timestamp without time zone NOT NULL,
    datepromised timestamp without time zone,
    dateprinted timestamp without time zone,
    dateacct timestamp without time zone NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bpartner_location_id numeric(10,0) NOT NULL,
    poreference character varying(20),
    isdiscountprinted character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    paymentrule character(1) NOT NULL,
    c_paymentterm_id numeric(10,0) NOT NULL,
    invoicerule character(1) NOT NULL,
    deliveryrule character(1) NOT NULL,
    freightcostrule character(1) NOT NULL,
    freightamt numeric DEFAULT 0,
    deliveryviarule character(1) NOT NULL,
    m_shipper_id numeric(10,0),
    c_charge_id numeric(10,0),
    chargeamt numeric DEFAULT 0,
    priorityrule character(1) NOT NULL,
    totallines numeric DEFAULT 0 NOT NULL,
    grandtotal numeric DEFAULT 0 NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    m_pricelist_id numeric(10,0) NOT NULL,
    istaxincluded character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_campaign_id numeric(10,0),
    c_project_id numeric(10,0),
    c_activity_id numeric(10,0),
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_payment_id numeric(10,0),
    c_cashline_id numeric(10,0),
    sendemail character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_user_id numeric(10,0),
    copyfrom character(1),
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_orgtrx_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    c_conversiontype_id numeric(10,0),
    bill_bpartner_id numeric(10,0),
    bill_location_id numeric(10,0),
    bill_user_id numeric(10,0),
    pay_bpartner_id numeric(10,0),
    pay_location_id numeric(10,0),
    ref_order_id numeric(10,0),
    isdropship character(1) DEFAULT 'N'::bpchar NOT NULL,
    volume numeric,
    weight numeric,
    ordertype character varying(510),
    c_pos_id numeric(10,0),
    amounttendered numeric DEFAULT 0.0,
    amountrefunded numeric DEFAULT 0.0,
    link_order_id numeric(10,0),
    m_freightcategory_id numeric(10,0),
    dropship_bpartner_id numeric(10,0),
    dropship_location_id numeric(10,0),
    dropship_user_id numeric(10,0),
    promotioncode character varying(30),
    c_ordersource_id numeric(10,0),
    processedon numeric,
    c_opportunity_id numeric(10,0) DEFAULT NULL::numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_order_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_order_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_order_iscreditapproved_check CHECK ((iscreditapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_order_isdelivered_check CHECK ((isdelivered = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_order_isdiscountprinted_check CHECK ((isdiscountprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_order_isinvoiced_check CHECK ((isinvoiced = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_order_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_order_isselected_check CHECK ((isselected = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_order_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_order_istaxincluded_check CHECK ((istaxincluded = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_order_istransferred_check CHECK ((istransferred = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_order_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_order OWNER TO adempiere;

--
-- Name: c_orderline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_orderline (
    c_orderline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_order_id numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0),
    c_bpartner_location_id numeric(10,0),
    dateordered timestamp without time zone NOT NULL,
    datepromised timestamp without time zone,
    datedelivered timestamp without time zone,
    dateinvoiced timestamp without time zone,
    description character varying(255),
    m_product_id numeric(10,0),
    m_warehouse_id numeric(10,0) NOT NULL,
    c_uom_id numeric(10,0) NOT NULL,
    qtyordered numeric DEFAULT 0 NOT NULL,
    qtyreserved numeric DEFAULT 0 NOT NULL,
    qtydelivered numeric DEFAULT 0 NOT NULL,
    qtyinvoiced numeric DEFAULT 0 NOT NULL,
    m_shipper_id numeric(10,0),
    c_currency_id numeric(10,0) NOT NULL,
    pricelist numeric DEFAULT 0 NOT NULL,
    priceactual numeric DEFAULT 0 NOT NULL,
    pricelimit numeric DEFAULT 0 NOT NULL,
    linenetamt numeric DEFAULT 0 NOT NULL,
    discount numeric,
    freightamt numeric DEFAULT 0 NOT NULL,
    c_charge_id numeric(10,0),
    c_tax_id numeric(10,0) NOT NULL,
    s_resourceassignment_id numeric(10,0),
    ref_orderline_id numeric(10,0),
    m_attributesetinstance_id numeric(10,0) DEFAULT 0,
    isdescription character(1) DEFAULT 'N'::bpchar NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    qtyentered numeric NOT NULL,
    priceentered numeric NOT NULL,
    c_project_id numeric(10,0),
    pricecost numeric,
    qtylostsales numeric DEFAULT 0 NOT NULL,
    c_projectphase_id numeric(10,0),
    c_projecttask_id numeric(10,0),
    rrstartdate timestamp without time zone,
    rramt numeric,
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    link_orderline_id numeric(10,0),
    pp_cost_collector_id numeric(10,0),
    m_promotion_id numeric(10,0),
    isconsumesforecast character(1) DEFAULT 'N'::bpchar,
    createfrom character(1),
    createshipment character(1),
    m_freightcategory_id numeric(10,0),
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    pickedqty numeric DEFAULT '0'::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_orderline_createfrom_check CHECK ((createfrom = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_orderline_createshipment_check CHECK ((createshipment = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_orderline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_orderline_isconsumesforecast_check CHECK ((isconsumesforecast = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_orderline OWNER TO adempiere;

--
-- Name: c_invoice_candidate_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_invoice_candidate_v AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.c_bpartner_id,
    o.c_order_id,
    o.documentno,
    o.dateordered,
    o.c_doctype_id,
    sum(((l.qtyordered - l.qtyinvoiced) * l.priceactual)) AS totallines
   FROM (((adempiere.c_order o
     JOIN adempiere.c_orderline l ON ((o.c_order_id = l.c_order_id)))
     JOIN adempiere.c_bpartner bp ON ((o.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_invoiceschedule si ON ((bp.c_invoiceschedule_id = si.c_invoiceschedule_id)))
  WHERE ((o.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar, 'IP'::bpchar])) AND (o.c_doctype_id IN ( SELECT c_doctype.c_doctype_id
           FROM adempiere.c_doctype
          WHERE ((c_doctype.docbasetype = 'SOO'::bpchar) AND (c_doctype.docsubtypeso <> ALL (ARRAY['ON'::bpchar, 'OB'::bpchar, 'WR'::bpchar]))))) AND (l.qtyordered <> l.qtyinvoiced) AND ((o.invoicerule = 'I'::bpchar) OR ((o.invoicerule = 'O'::bpchar) AND (NOT (EXISTS ( SELECT 1
           FROM adempiere.c_orderline zz1
          WHERE ((zz1.c_order_id = o.c_order_id) AND (zz1.qtyordered <> zz1.qtydelivered)))))) OR ((o.invoicerule = 'D'::bpchar) AND (l.qtyinvoiced <> l.qtydelivered)) OR ((o.invoicerule = 'S'::bpchar) AND (bp.c_invoiceschedule_id IS NULL)) OR ((o.invoicerule = 'S'::bpchar) AND (bp.c_invoiceschedule_id IS NOT NULL) AND ((si.invoicefrequency IS NULL) OR (si.invoicefrequency = 'D'::bpchar) OR (si.invoicefrequency = 'W'::bpchar) OR ((si.invoicefrequency = 'T'::bpchar) AND (((adempiere.trunc((o.dateordered)::timestamp with time zone) <= (((adempiere.firstof(adempiere.getdate(), 'MM'::character varying))::timestamp with time zone OPERATOR(adempiere.+) si.invoicedaycutoff) - 1)) AND (adempiere.trunc(adempiere.getdate()) >= (((adempiere.firstof((o.dateordered)::timestamp with time zone, 'MM'::character varying))::timestamp with time zone OPERATOR(adempiere.+) si.invoiceday) - 1))) OR ((adempiere.trunc((o.dateordered)::timestamp with time zone) <= (((adempiere.firstof(adempiere.getdate(), 'MM'::character varying))::timestamp with time zone OPERATOR(adempiere.+) si.invoicedaycutoff) + 14)) AND (adempiere.trunc(adempiere.getdate()) >= (((adempiere.firstof((o.dateordered)::timestamp with time zone, 'MM'::character varying))::timestamp with time zone OPERATOR(adempiere.+) si.invoiceday) + 14))))) OR ((si.invoicefrequency = 'M'::bpchar) AND (adempiere.trunc((o.dateordered)::timestamp with time zone) <= (((adempiere.firstof(adempiere.getdate(), 'MM'::character varying))::timestamp with time zone OPERATOR(adempiere.+) si.invoicedaycutoff) - 1)) AND (adempiere.trunc(adempiere.getdate()) >= (((adempiere.firstof((o.dateordered)::timestamp with time zone, 'MM'::character varying))::timestamp with time zone OPERATOR(adempiere.+) si.invoiceday) - 1)))))))
  GROUP BY o.ad_client_id, o.ad_org_id, o.c_bpartner_id, o.c_order_id, o.documentno, o.dateordered, o.c_doctype_id;


ALTER TABLE adempiere.c_invoice_candidate_v OWNER TO adempiere;

--
-- Name: c_invoice_header_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_invoice_header_v AS
 SELECT i.ad_client_id,
    i.ad_org_id,
    i.isactive,
    i.created,
    i.createdby,
    i.updated,
    i.updatedby,
    'en_US'::character varying AS ad_language,
    i.c_invoice_id,
    i.issotrx,
    i.documentno,
    i.docstatus,
    i.c_doctype_id,
    i.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    i.c_order_id,
    i.salesrep_id,
    COALESCE(ubp.name, u.name) AS salesrep_name,
    i.dateinvoiced,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    bpcg.greeting AS bpcontactgreeting,
    bpc.title,
    bpc.phone,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname,
    bpl.c_location_id,
    bp.referenceno,
    ((l.postal)::text || (l.postal_add)::text) AS postal,
    i.description,
    i.poreference,
    i.dateordered,
    i.c_currency_id,
    pt.name AS paymentterm,
    pt.documentnote AS paymenttermnote,
    i.c_charge_id,
    i.chargeamt,
    i.totallines,
    i.grandtotal,
    i.grandtotal AS amtinwords,
    i.m_pricelist_id,
    i.istaxincluded,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id,
    i.ispaid,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM ((((((((((((adempiere.c_invoice i
     JOIN adempiere.c_doctype dt ON ((i.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.c_paymentterm pt ON ((i.c_paymentterm_id = pt.c_paymentterm_id)))
     JOIN adempiere.c_bpartner bp ON ((i.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting bpg ON ((bp.c_greeting_id = bpg.c_greeting_id)))
     JOIN adempiere.c_bpartner_location bpl ON ((i.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     JOIN adempiere.c_location l ON ((bpl.c_location_id = l.c_location_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((i.ad_user_id = bpc.ad_user_id)))
     LEFT JOIN adempiere.c_greeting bpcg ON ((bpc.c_greeting_id = bpcg.c_greeting_id)))
     JOIN adempiere.ad_orginfo oi ON ((i.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((i.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((i.salesrep_id = u.ad_user_id)))
     LEFT JOIN adempiere.c_bpartner ubp ON ((u.c_bpartner_id = ubp.c_bpartner_id)));


ALTER TABLE adempiere.c_invoice_header_v OWNER TO adempiere;

--
-- Name: c_invoice_header_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_invoice_header_vt AS
 SELECT i.ad_client_id,
    i.ad_org_id,
    i.isactive,
    i.created,
    i.createdby,
    i.updated,
    i.updatedby,
    dt.ad_language,
    i.c_invoice_id,
    i.issotrx,
    i.documentno,
    i.docstatus,
    i.c_doctype_id,
    i.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    i.c_order_id,
    i.salesrep_id,
    COALESCE(ubp.name, u.name) AS salesrep_name,
    i.dateinvoiced,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    bpcg.greeting AS bpcontactgreeting,
    bpc.title,
    bpc.phone,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname,
    bpl.c_location_id,
    bp.referenceno,
    ((l.postal)::text || (l.postal_add)::text) AS postal,
    i.description,
    i.poreference,
    i.dateordered,
    i.c_currency_id,
    pt.name AS paymentterm,
    pt.documentnote AS paymenttermnote,
    i.c_charge_id,
    i.chargeamt,
    i.totallines,
    i.grandtotal,
    i.grandtotal AS amtinwords,
    i.m_pricelist_id,
    i.istaxincluded,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id,
    i.ispaid,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM ((((((((((((adempiere.c_invoice i
     JOIN adempiere.c_doctype_trl dt ON ((i.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.c_paymentterm_trl pt ON (((i.c_paymentterm_id = pt.c_paymentterm_id) AND ((dt.ad_language)::text = (pt.ad_language)::text))))
     JOIN adempiere.c_bpartner bp ON ((i.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting_trl bpg ON (((bp.c_greeting_id = bpg.c_greeting_id) AND ((dt.ad_language)::text = (bpg.ad_language)::text))))
     JOIN adempiere.c_bpartner_location bpl ON ((i.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     JOIN adempiere.c_location l ON ((bpl.c_location_id = l.c_location_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((i.ad_user_id = bpc.ad_user_id)))
     LEFT JOIN adempiere.c_greeting_trl bpcg ON (((bpc.c_greeting_id = bpcg.c_greeting_id) AND ((dt.ad_language)::text = (bpcg.ad_language)::text))))
     JOIN adempiere.ad_orginfo oi ON ((i.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((i.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((i.salesrep_id = u.ad_user_id)))
     LEFT JOIN adempiere.c_bpartner ubp ON ((u.c_bpartner_id = ubp.c_bpartner_id)));


ALTER TABLE adempiere.c_invoice_header_vt OWNER TO adempiere;

--
-- Name: c_invoiceline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_invoiceline (
    c_invoiceline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_invoice_id numeric(10,0) NOT NULL,
    c_orderline_id numeric(10,0),
    m_inoutline_id numeric(10,0),
    line numeric(10,0) NOT NULL,
    description character varying(255),
    m_product_id numeric(10,0),
    qtyinvoiced numeric DEFAULT 0 NOT NULL,
    pricelist numeric DEFAULT 0 NOT NULL,
    priceactual numeric DEFAULT 0 NOT NULL,
    pricelimit numeric DEFAULT 0 NOT NULL,
    linenetamt numeric DEFAULT 0 NOT NULL,
    c_charge_id numeric(10,0),
    c_uom_id numeric(10,0),
    c_tax_id numeric(10,0),
    s_resourceassignment_id numeric(10,0),
    a_asset_id numeric(10,0),
    taxamt numeric DEFAULT 0,
    m_attributesetinstance_id numeric(10,0) DEFAULT 0,
    isdescription character(1) DEFAULT 'N'::bpchar NOT NULL,
    isprinted character(1) DEFAULT 'Y'::bpchar NOT NULL,
    linetotalamt numeric DEFAULT 0,
    ref_invoiceline_id numeric(10,0),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    qtyentered numeric NOT NULL,
    priceentered numeric NOT NULL,
    c_project_id numeric(10,0),
    c_projectphase_id numeric(10,0),
    c_projecttask_id numeric(10,0),
    rrstartdate timestamp without time zone,
    rramt numeric,
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    m_rmaline_id numeric(10,0),
    a_createasset character(1) DEFAULT 'N'::bpchar,
    a_processed character(1) DEFAULT 'N'::bpchar,
    a_capvsexp character varying(3),
    a_asset_group_id numeric(10,0),
    isfixedassetinvoice character(1),
    iscollectiveasset character(1) DEFAULT 'N'::bpchar NOT NULL,
    generateto character(1),
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_invoiceline_a_createasset_check CHECK ((a_createasset = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoiceline_a_processed_check CHECK ((a_processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoiceline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoiceline_iscollectiveasset_check CHECK ((iscollectiveasset = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoiceline_isfixedassetinvoice_check CHECK ((isfixedassetinvoice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_invoiceline OWNER TO adempiere;

--
-- Name: c_invoicetax; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_invoicetax (
    c_tax_id numeric(10,0) NOT NULL,
    c_invoice_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    taxbaseamt numeric DEFAULT 0 NOT NULL,
    taxamt numeric DEFAULT 0 NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    istaxincluded character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_invoicetax_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_invoicetax OWNER TO adempiere;

--
-- Name: c_tax; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_tax (
    c_tax_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    name character varying(60) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255),
    taxindicator character varying(10),
    isdocumentlevel character(1) DEFAULT 'Y'::bpchar NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    requirestaxcertificate character(1) DEFAULT 'N'::bpchar NOT NULL,
    rate numeric NOT NULL,
    parent_tax_id numeric(10,0),
    c_country_id numeric(10,0),
    c_region_id numeric(10,0),
    to_country_id numeric(10,0),
    to_region_id numeric(10,0),
    c_taxcategory_id numeric(10,0) NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    istaxexempt character(1) DEFAULT 'N'::bpchar NOT NULL,
    sopotype character(1) DEFAULT 'B'::bpchar NOT NULL,
    issalestax character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_rule_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_tax_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_tax_isdocumentlevel_check CHECK ((isdocumentlevel = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_tax_requirestaxcertificate_check CHECK ((requirestaxcertificate = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_tax OWNER TO adempiere;

--
-- Name: c_uom; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_uom (
    c_uom_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    x12de355 character varying(4) NOT NULL,
    uomsymbol character varying(10),
    name character varying(60) NOT NULL,
    description character varying(255),
    stdprecision numeric(10,0) NOT NULL,
    costingprecision numeric(10,0) NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    uomtype character varying(2),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_uom_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_uom OWNER TO adempiere;

--
-- Name: m_attributesetinstance; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_attributesetinstance (
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_attributeset_id numeric(10,0),
    serno character varying(40),
    lot character varying(40),
    guaranteedate timestamp without time zone,
    description character varying(255),
    m_lot_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_attributesetinstance_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_attributesetinstance OWNER TO adempiere;

--
-- Name: m_product; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_product (
    m_product_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(510) NOT NULL,
    name character varying(255) NOT NULL,
    description character varying(255),
    documentnote character varying(2000),
    help character varying(2000),
    upc character varying(30),
    sku character varying(30),
    c_uom_id numeric(10,0) NOT NULL,
    salesrep_id numeric(10,0),
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    isstocked character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ispurchased character(1) DEFAULT 'Y'::bpchar NOT NULL,
    issold character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isbom character(1) DEFAULT 'N'::bpchar NOT NULL,
    isinvoiceprintdetails character(1) DEFAULT 'N'::bpchar NOT NULL,
    ispicklistprintdetails character(1) DEFAULT 'N'::bpchar NOT NULL,
    isverified character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_revenuerecognition_id numeric(10,0),
    m_product_category_id numeric(10,0) NOT NULL,
    classification character varying(12),
    volume numeric DEFAULT 0,
    weight numeric DEFAULT 0,
    shelfwidth numeric(10,0),
    shelfheight numeric,
    shelfdepth numeric(10,0),
    unitsperpallet numeric,
    c_taxcategory_id numeric(10,0) NOT NULL,
    s_resource_id numeric(10,0),
    discontinued character(1) DEFAULT 'N'::bpchar,
    discontinuedby timestamp without time zone,
    processing character(1),
    s_expensetype_id numeric(10,0),
    producttype character(1) DEFAULT 'I'::bpchar NOT NULL,
    imageurl character varying(120),
    descriptionurl character varying(120),
    guaranteedays numeric(10,0),
    r_mailtext_id numeric(10,0),
    versionno character varying(20),
    m_attributeset_id numeric(10,0),
    m_attributesetinstance_id numeric(10,0) DEFAULT 0,
    downloadurl character varying(120),
    m_freightcategory_id numeric(10,0),
    m_locator_id numeric(10,0),
    guaranteedaysmin numeric(10,0),
    iswebstorefeatured character(1) DEFAULT 'N'::bpchar NOT NULL,
    isselfservice character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_subscriptiontype_id numeric(10,0),
    isdropship character(1) DEFAULT 'N'::bpchar NOT NULL,
    isexcludeautodelivery character(1) DEFAULT 'N'::bpchar NOT NULL,
    group1 character varying(255),
    group2 character varying(255),
    istoformule character(1),
    lowlevel numeric(10,0) DEFAULT 0 NOT NULL,
    unitsperpack numeric(10,0) DEFAULT 1 NOT NULL,
    discontinuedat timestamp without time zone,
    copyfrom character(1),
    m_parttype_id numeric(10,0) DEFAULT NULL::numeric,
    iskanban character(1) DEFAULT 'N'::bpchar NOT NULL,
    ismanufactured character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_product_class_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_group_id numeric(10,0),
    m_product_classification_id numeric(10,0),
    isphantom character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_product_discontinued_check CHECK ((discontinued = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_isbom_check CHECK ((isbom = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_isinvoiceprintdetails_check CHECK ((isinvoiceprintdetails = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_iskanban_check CHECK ((iskanban = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_ismanufactured_check CHECK ((ismanufactured = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_isphantom_check CHECK ((isphantom = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_ispicklistprintdetails_check CHECK ((ispicklistprintdetails = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_ispurchased_check CHECK ((ispurchased = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_issold_check CHECK ((issold = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_isstocked_check CHECK ((isstocked = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_istoformule_check CHECK ((istoformule = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_isverified_check CHECK ((isverified = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_product OWNER TO adempiere;

--
-- Name: pp_product_bom; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_product_bom (
    value character varying(80) NOT NULL,
    name character varying(60) NOT NULL,
    documentno character varying(22),
    revision character varying(10),
    description character varying(255),
    copyfrom character(1),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    help character varying(2000),
    isactive character(1) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    m_changenotice_id numeric(10,0),
    m_product_id numeric(10,0) NOT NULL,
    pp_product_bom_id numeric(10,0) NOT NULL,
    processing character(1),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    validto timestamp without time zone,
    m_attributesetinstance_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    bomtype character(1) DEFAULT 'A'::bpchar,
    bomuse character(1) DEFAULT 'M'::bpchar,
    c_uom_id numeric(10,0),
    isdefault character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_product_bom_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_product_bom_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_product_bom OWNER TO adempiere;

--
-- Name: pp_product_bomline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_product_bomline (
    feature character varying(30),
    ad_org_id numeric(10,0) NOT NULL,
    assay numeric,
    backflushgroup character varying(20),
    c_uom_id numeric(10,0),
    componenttype character(2) DEFAULT 'CO'::bpchar,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    forecast numeric,
    help character varying(2000),
    isactive character(1) NOT NULL,
    iscritical character(1) DEFAULT 'N'::bpchar,
    isqtypercentage character(1),
    issuemethod character(1) DEFAULT '1'::bpchar NOT NULL,
    leadtimeoffset numeric(10,0),
    line numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0),
    m_changenotice_id numeric(10,0),
    m_product_id numeric(10,0) NOT NULL,
    pp_product_bomline_id numeric(10,0) NOT NULL,
    pp_product_bom_id numeric(10,0) NOT NULL,
    qtybom numeric,
    qtybatch numeric,
    scrap numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    validto timestamp without time zone,
    costallocationperc numeric DEFAULT 0,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_product_bomline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_product_bomline_iscritical_check CHECK ((iscritical = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_product_bomline_isqtypercentage_check CHECK ((isqtypercentage = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_product_bomline OWNER TO adempiere;

--
-- Name: s_resourceassignment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.s_resourceassignment (
    s_resourceassignment_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    s_resource_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    assigndatefrom timestamp without time zone NOT NULL,
    assigndateto timestamp without time zone,
    qty numeric DEFAULT 0,
    isconfirmed character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT s_resourceassignment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resourceassignment_isconfirmed_check CHECK ((isconfirmed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.s_resourceassignment OWNER TO adempiere;

--
-- Name: c_invoice_linetax_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_invoice_linetax_v AS
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.isactive,
    il.created,
    il.createdby,
    il.updated,
    il.updatedby,
    'en_US'::text AS ad_language,
    il.c_invoice_id,
    il.c_invoiceline_id,
    il.c_tax_id,
    il.taxamt,
    il.linetotalamt,
    t.taxindicator,
    il.line,
    p.m_product_id,
        CASE
            WHEN ((il.qtyinvoiced <> (0)::numeric) OR (il.m_product_id IS NOT NULL)) THEN il.qtyinvoiced
            ELSE NULL::numeric
        END AS qtyinvoiced,
        CASE
            WHEN ((il.qtyentered <> (0)::numeric) OR (il.m_product_id IS NOT NULL)) THEN il.qtyentered
            ELSE NULL::numeric
        END AS qtyentered,
        CASE
            WHEN ((il.qtyentered <> (0)::numeric) OR (il.m_product_id IS NOT NULL)) THEN uom.uomsymbol
            ELSE NULL::character varying
        END AS uomsymbol,
    COALESCE(c.name, (((p.name)::text || (COALESCE(adempiere.productattribute(il.m_attributesetinstance_id), ''::character varying))::text))::character varying, il.description) AS name,
        CASE
            WHEN (COALESCE(c.name, p.name) IS NOT NULL) THEN il.description
            ELSE NULL::character varying
        END AS description,
    p.documentnote,
    p.upc,
    p.sku,
    COALESCE(pp.vendorproductno, p.value) AS productvalue,
    ra.description AS resourcedescription,
        CASE
            WHEN ((i.isdiscountprinted = 'Y'::bpchar) AND (il.pricelist <> (0)::numeric)) THEN il.pricelist
            ELSE NULL::numeric
        END AS pricelist,
        CASE
            WHEN ((i.isdiscountprinted = 'Y'::bpchar) AND (il.pricelist <> (0)::numeric) AND (il.qtyentered <> (0)::numeric)) THEN ((il.pricelist * il.qtyinvoiced) / il.qtyentered)
            ELSE NULL::numeric
        END AS priceenteredlist,
        CASE
            WHEN ((i.isdiscountprinted = 'Y'::bpchar) AND (il.pricelist > il.priceactual) AND (il.pricelist <> (0)::numeric)) THEN (((il.pricelist - il.priceactual) / il.pricelist) * (100)::numeric)
            ELSE NULL::numeric
        END AS discount,
        CASE
            WHEN ((il.priceactual <> (0)::numeric) OR (il.m_product_id IS NOT NULL)) THEN il.priceactual
            ELSE NULL::numeric
        END AS priceactual,
        CASE
            WHEN ((il.priceentered <> (0)::numeric) OR (il.m_product_id IS NOT NULL)) THEN il.priceentered
            ELSE NULL::numeric
        END AS priceentered,
        CASE
            WHEN ((il.linenetamt <> (0)::numeric) OR (il.m_product_id IS NOT NULL)) THEN il.linenetamt
            ELSE NULL::numeric
        END AS linenetamt,
    il.m_attributesetinstance_id,
    asi.m_attributeset_id,
    asi.serno,
    asi.lot,
    asi.m_lot_id,
    asi.guaranteedate,
    p.description AS productdescription,
    p.imageurl,
    il.c_campaign_id,
    il.c_project_id,
    il.c_activity_id,
    il.c_projectphase_id,
    il.c_projecttask_id
   FROM ((((((((adempiere.c_invoiceline il
     JOIN adempiere.c_uom uom ON ((il.c_uom_id = uom.c_uom_id)))
     JOIN adempiere.c_invoice i ON ((il.c_invoice_id = i.c_invoice_id)))
     LEFT JOIN adempiere.c_tax t ON ((il.c_tax_id = t.c_tax_id)))
     LEFT JOIN adempiere.m_product p ON ((il.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.c_charge c ON ((il.c_charge_id = c.c_charge_id)))
     LEFT JOIN adempiere.c_bpartner_product pp ON (((il.m_product_id = pp.m_product_id) AND (i.c_bpartner_id = pp.c_bpartner_id))))
     LEFT JOIN adempiere.s_resourceassignment ra ON ((il.s_resourceassignment_id = ra.s_resourceassignment_id)))
     LEFT JOIN adempiere.m_attributesetinstance asi ON ((il.m_attributesetinstance_id = asi.m_attributesetinstance_id)))
UNION
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.isactive,
    il.created,
    il.createdby,
    il.updated,
    il.updatedby,
    'en_US'::text AS ad_language,
    il.c_invoice_id,
    il.c_invoiceline_id,
    il.c_tax_id,
    il.taxamt,
    il.linetotalamt,
    t.taxindicator,
    (il.line + (bl.line / (100)::numeric)) AS line,
    p.m_product_id,
        CASE
            WHEN (bl.isqtypercentage = 'N'::bpchar) THEN (il.qtyinvoiced * bl.qtybom)
            ELSE (il.qtyinvoiced * (bl.qtybatch / (100)::numeric))
        END AS qtyinvoiced,
        CASE
            WHEN (bl.isqtypercentage = 'N'::bpchar) THEN (il.qtyentered * bl.qtybom)
            ELSE (il.qtyentered * (bl.qtybatch / (100)::numeric))
        END AS qtyentered,
    uom.uomsymbol,
    p.name,
    b.description,
    p.documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
    NULL::numeric AS priceactual,
    NULL::numeric AS priceentered,
    NULL::numeric AS linenetamt,
    il.m_attributesetinstance_id,
    asi.m_attributeset_id,
    asi.serno,
    asi.lot,
    asi.m_lot_id,
    asi.guaranteedate,
    p.description AS productdescription,
    p.imageurl,
    il.c_campaign_id,
    il.c_project_id,
    il.c_activity_id,
    il.c_projectphase_id,
    il.c_projecttask_id
   FROM (((((((adempiere.pp_product_bom b
     JOIN adempiere.c_invoiceline il ON ((b.m_product_id = il.m_product_id)))
     JOIN adempiere.m_product bp ON (((bp.m_product_id = il.m_product_id) AND (bp.isbom = 'Y'::bpchar) AND (bp.isverified = 'Y'::bpchar) AND (bp.isinvoiceprintdetails = 'Y'::bpchar))))
     JOIN adempiere.pp_product_bomline bl ON ((bl.pp_product_bom_id = b.pp_product_bom_id)))
     JOIN adempiere.m_product p ON ((bl.m_product_id = p.m_product_id)))
     JOIN adempiere.c_uom uom ON ((p.c_uom_id = uom.c_uom_id)))
     LEFT JOIN adempiere.c_tax t ON ((il.c_tax_id = t.c_tax_id)))
     LEFT JOIN adempiere.m_attributesetinstance asi ON ((il.m_attributesetinstance_id = asi.m_attributesetinstance_id)))
UNION
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.isactive,
    il.created,
    il.createdby,
    il.updated,
    il.updatedby,
    'en_US'::text AS ad_language,
    il.c_invoice_id,
    il.c_invoiceline_id,
    NULL::numeric AS c_tax_id,
    NULL::numeric AS taxamt,
    NULL::numeric AS linetotalamt,
    NULL::character varying AS taxindicator,
    il.line,
    NULL::numeric AS m_product_id,
    NULL::numeric AS qtyinvoiced,
    NULL::numeric AS qtyentered,
    NULL::character varying AS uomsymbol,
    il.description AS name,
    NULL::character varying AS description,
    NULL::character varying AS documentnote,
    NULL::character varying AS upc,
    NULL::character varying AS sku,
    NULL::character varying AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
    NULL::numeric AS priceactual,
    NULL::numeric AS priceentered,
    NULL::numeric AS linenetamt,
    NULL::numeric AS m_attributesetinstance_id,
    NULL::numeric AS m_attributeset_id,
    NULL::character varying AS serno,
    NULL::character varying AS lot,
    NULL::numeric AS m_lot_id,
    NULL::timestamp without time zone AS guaranteedate,
    NULL::character varying AS productdescription,
    NULL::character varying AS imageurl,
    NULL::numeric AS c_campaign_id,
    NULL::numeric AS c_project_id,
    NULL::numeric AS c_activity_id,
    NULL::numeric AS c_projectphase_id,
    NULL::numeric AS c_projecttask_id
   FROM adempiere.c_invoiceline il
  WHERE (il.c_uom_id IS NULL)
UNION
 SELECT c_invoice.ad_client_id,
    c_invoice.ad_org_id,
    c_invoice.isactive,
    c_invoice.created,
    c_invoice.createdby,
    c_invoice.updated,
    c_invoice.updatedby,
    'en_US'::text AS ad_language,
    c_invoice.c_invoice_id,
    NULL::numeric AS c_invoiceline_id,
    NULL::numeric AS c_tax_id,
    NULL::numeric AS taxamt,
    NULL::numeric AS linetotalamt,
    NULL::character varying AS taxindicator,
    999998 AS line,
    NULL::numeric AS m_product_id,
    NULL::numeric AS qtyinvoiced,
    NULL::numeric AS qtyentered,
    NULL::character varying AS uomsymbol,
    NULL::character varying AS name,
    NULL::character varying AS description,
    NULL::character varying AS documentnote,
    NULL::character varying AS upc,
    NULL::character varying AS sku,
    NULL::character varying AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
    NULL::numeric AS priceactual,
    NULL::numeric AS priceentered,
    NULL::numeric AS linenetamt,
    NULL::numeric AS m_attributesetinstance_id,
    NULL::numeric AS m_attributeset_id,
    NULL::character varying AS serno,
    NULL::character varying AS lot,
    NULL::numeric AS m_lot_id,
    NULL::timestamp without time zone AS guaranteedate,
    NULL::character varying AS productdescription,
    NULL::character varying AS imageurl,
    NULL::numeric AS c_campaign_id,
    NULL::numeric AS c_project_id,
    NULL::numeric AS c_activity_id,
    NULL::numeric AS c_projectphase_id,
    NULL::numeric AS c_projecttask_id
   FROM adempiere.c_invoice
UNION
 SELECT it.ad_client_id,
    it.ad_org_id,
    it.isactive,
    it.created,
    it.createdby,
    it.updated,
    it.updatedby,
    'en_US'::text AS ad_language,
    it.c_invoice_id,
    NULL::numeric AS c_invoiceline_id,
    it.c_tax_id,
    NULL::numeric AS taxamt,
    NULL::numeric AS linetotalamt,
    t.taxindicator,
    999999 AS line,
    NULL::numeric AS m_product_id,
    NULL::numeric AS qtyinvoiced,
    NULL::numeric AS qtyentered,
    NULL::character varying AS uomsymbol,
    t.name,
    NULL::character varying AS description,
    NULL::character varying AS documentnote,
    NULL::character varying AS upc,
    NULL::character varying AS sku,
    NULL::character varying AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
        CASE
            WHEN (it.istaxincluded = 'Y'::bpchar) THEN it.taxamt
            ELSE it.taxbaseamt
        END AS priceactual,
        CASE
            WHEN (it.istaxincluded = 'Y'::bpchar) THEN it.taxamt
            ELSE it.taxbaseamt
        END AS priceentered,
        CASE
            WHEN (it.istaxincluded = 'Y'::bpchar) THEN NULL::numeric
            ELSE it.taxamt
        END AS linenetamt,
    NULL::numeric AS m_attributesetinstance_id,
    NULL::numeric AS m_attributeset_id,
    NULL::character varying AS serno,
    NULL::character varying AS lot,
    NULL::numeric AS m_lot_id,
    NULL::timestamp without time zone AS guaranteedate,
    NULL::character varying AS productdescription,
    NULL::character varying AS imageurl,
    NULL::numeric AS c_campaign_id,
    NULL::numeric AS c_project_id,
    NULL::numeric AS c_activity_id,
    NULL::numeric AS c_projectphase_id,
    NULL::numeric AS c_projecttask_id
   FROM (adempiere.c_invoicetax it
     JOIN adempiere.c_tax t ON ((it.c_tax_id = t.c_tax_id)));


ALTER TABLE adempiere.c_invoice_linetax_v OWNER TO adempiere;

--
-- Name: c_tax_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_tax_trl (
    c_tax_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    taxindicator character varying(10),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_tax_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_tax_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_tax_trl OWNER TO adempiere;

--
-- Name: c_uom_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_uom_trl (
    c_uom_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uomsymbol character varying(10),
    name character varying(60) NOT NULL,
    description character varying(255),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_uom_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_uom_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_uom_trl OWNER TO adempiere;

--
-- Name: m_product_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_product_trl (
    m_product_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(255) NOT NULL,
    documentnote character varying(2000),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_product_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_product_trl OWNER TO adempiere;

--
-- Name: c_invoice_linetax_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_invoice_linetax_vt AS
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.isactive,
    il.created,
    il.createdby,
    il.updated,
    il.updatedby,
    uom.ad_language,
    il.c_invoice_id,
    il.c_invoiceline_id,
    il.c_tax_id,
    il.taxamt,
    il.linetotalamt,
    t.taxindicator,
    il.line,
    p.m_product_id,
        CASE
            WHEN ((il.qtyinvoiced <> (0)::numeric) OR (il.m_product_id IS NOT NULL)) THEN il.qtyinvoiced
            ELSE NULL::numeric
        END AS qtyinvoiced,
        CASE
            WHEN ((il.qtyentered <> (0)::numeric) OR (il.m_product_id IS NOT NULL)) THEN il.qtyentered
            ELSE NULL::numeric
        END AS qtyentered,
        CASE
            WHEN ((il.qtyentered <> (0)::numeric) OR (il.m_product_id IS NOT NULL)) THEN uom.uomsymbol
            ELSE NULL::character varying
        END AS uomsymbol,
    COALESCE(c.name, (((COALESCE(pt.name, p.name))::text || (COALESCE(adempiere.productattribute(il.m_attributesetinstance_id), ''::character varying))::text))::character varying, il.description) AS name,
        CASE
            WHEN (COALESCE(c.name, pt.name, p.name) IS NOT NULL) THEN il.description
            ELSE NULL::character varying
        END AS description,
    COALESCE(pt.documentnote, p.documentnote) AS documentnote,
    p.upc,
    p.sku,
    COALESCE(pp.vendorproductno, p.value) AS productvalue,
    ra.description AS resourcedescription,
        CASE
            WHEN ((i.isdiscountprinted = 'Y'::bpchar) AND (il.pricelist <> (0)::numeric)) THEN il.pricelist
            ELSE NULL::numeric
        END AS pricelist,
        CASE
            WHEN ((i.isdiscountprinted = 'Y'::bpchar) AND (il.pricelist <> (0)::numeric) AND (il.qtyentered <> (0)::numeric)) THEN ((il.pricelist * il.qtyinvoiced) / il.qtyentered)
            ELSE NULL::numeric
        END AS priceenteredlist,
        CASE
            WHEN ((i.isdiscountprinted = 'Y'::bpchar) AND (il.pricelist > il.priceactual) AND (il.pricelist <> (0)::numeric)) THEN (((il.pricelist - il.priceactual) / il.pricelist) * (100)::numeric)
            ELSE NULL::numeric
        END AS discount,
        CASE
            WHEN ((il.priceactual <> (0)::numeric) OR (il.m_product_id IS NOT NULL)) THEN il.priceactual
            ELSE NULL::numeric
        END AS priceactual,
        CASE
            WHEN ((il.priceentered <> (0)::numeric) OR (il.m_product_id IS NOT NULL)) THEN il.priceentered
            ELSE NULL::numeric
        END AS priceentered,
        CASE
            WHEN ((il.linenetamt <> (0)::numeric) OR (il.m_product_id IS NOT NULL)) THEN il.linenetamt
            ELSE NULL::numeric
        END AS linenetamt,
    il.m_attributesetinstance_id,
    asi.m_attributeset_id,
    asi.serno,
    asi.lot,
    asi.m_lot_id,
    asi.guaranteedate,
    pt.description AS productdescription,
    p.imageurl,
    il.c_campaign_id,
    il.c_project_id,
    il.c_activity_id,
    il.c_projectphase_id,
    il.c_projecttask_id
   FROM (((((((((adempiere.c_invoiceline il
     JOIN adempiere.c_uom_trl uom ON ((il.c_uom_id = uom.c_uom_id)))
     JOIN adempiere.c_invoice i ON ((il.c_invoice_id = i.c_invoice_id)))
     LEFT JOIN adempiere.c_tax_trl t ON (((il.c_tax_id = t.c_tax_id) AND ((uom.ad_language)::text = (t.ad_language)::text))))
     LEFT JOIN adempiere.m_product p ON ((il.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.c_charge_trl c ON ((il.c_charge_id = c.c_charge_id)))
     LEFT JOIN adempiere.c_bpartner_product pp ON (((il.m_product_id = pp.m_product_id) AND (i.c_bpartner_id = pp.c_bpartner_id))))
     LEFT JOIN adempiere.m_product_trl pt ON (((il.m_product_id = pt.m_product_id) AND ((uom.ad_language)::text = (pt.ad_language)::text))))
     LEFT JOIN adempiere.s_resourceassignment ra ON ((il.s_resourceassignment_id = ra.s_resourceassignment_id)))
     LEFT JOIN adempiere.m_attributesetinstance asi ON ((il.m_attributesetinstance_id = asi.m_attributesetinstance_id)))
UNION
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.isactive,
    il.created,
    il.createdby,
    il.updated,
    il.updatedby,
    uom.ad_language,
    il.c_invoice_id,
    il.c_invoiceline_id,
    il.c_tax_id,
    il.taxamt,
    il.linetotalamt,
    t.taxindicator,
    (il.line + (bl.line / (100)::numeric)) AS line,
    p.m_product_id,
        CASE
            WHEN (bl.isqtypercentage = 'N'::bpchar) THEN (il.qtyinvoiced * bl.qtybom)
            ELSE (il.qtyinvoiced * (bl.qtybatch / (100)::numeric))
        END AS qtyinvoiced,
        CASE
            WHEN (bl.isqtypercentage = 'N'::bpchar) THEN (il.qtyentered * bl.qtybom)
            ELSE (il.qtyentered * (bl.qtybatch / (100)::numeric))
        END AS qtyentered,
    uom.uomsymbol,
    COALESCE(pt.name, p.name) AS name,
    b.description,
    COALESCE(pt.documentnote, p.documentnote) AS documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
    NULL::numeric AS priceactual,
    NULL::numeric AS priceentered,
    NULL::numeric AS linenetamt,
    il.m_attributesetinstance_id,
    asi.m_attributeset_id,
    asi.serno,
    asi.lot,
    asi.m_lot_id,
    asi.guaranteedate,
    pt.description AS productdescription,
    p.imageurl,
    il.c_campaign_id,
    il.c_project_id,
    il.c_activity_id,
    il.c_projectphase_id,
    il.c_projecttask_id
   FROM ((((((((adempiere.pp_product_bom b
     JOIN adempiere.c_invoiceline il ON ((b.m_product_id = il.m_product_id)))
     JOIN adempiere.m_product bp ON (((bp.m_product_id = il.m_product_id) AND (bp.isbom = 'Y'::bpchar) AND (bp.isverified = 'Y'::bpchar) AND (bp.isinvoiceprintdetails = 'Y'::bpchar))))
     JOIN adempiere.pp_product_bomline bl ON ((bl.pp_product_bom_id = b.pp_product_bom_id)))
     JOIN adempiere.m_product p ON ((bl.m_product_id = p.m_product_id)))
     JOIN adempiere.c_uom_trl uom ON ((p.c_uom_id = uom.c_uom_id)))
     JOIN adempiere.m_product_trl pt ON (((bl.m_product_id = pt.m_product_id) AND ((uom.ad_language)::text = (pt.ad_language)::text))))
     LEFT JOIN adempiere.c_tax t ON ((il.c_tax_id = t.c_tax_id)))
     LEFT JOIN adempiere.m_attributesetinstance asi ON ((il.m_attributesetinstance_id = asi.m_attributesetinstance_id)))
UNION
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.isactive,
    il.created,
    il.createdby,
    il.updated,
    il.updatedby,
    l.ad_language,
    il.c_invoice_id,
    il.c_invoiceline_id,
    NULL::numeric AS c_tax_id,
    NULL::numeric AS taxamt,
    NULL::numeric AS linetotalamt,
    NULL::character varying AS taxindicator,
    il.line,
    NULL::numeric AS m_product_id,
    NULL::numeric AS qtyinvoiced,
    NULL::numeric AS qtyentered,
    NULL::character varying AS uomsymbol,
    il.description AS name,
    NULL::character varying AS description,
    NULL::character varying AS documentnote,
    NULL::character varying AS upc,
    NULL::character varying AS sku,
    NULL::character varying AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
    NULL::numeric AS priceactual,
    NULL::numeric AS priceentered,
    NULL::numeric AS linenetamt,
    NULL::numeric AS m_attributesetinstance_id,
    NULL::numeric AS m_attributeset_id,
    NULL::character varying AS serno,
    NULL::character varying AS lot,
    NULL::numeric AS m_lot_id,
    NULL::timestamp without time zone AS guaranteedate,
    NULL::character varying AS productdescription,
    NULL::character varying AS imageurl,
    NULL::numeric AS c_campaign_id,
    NULL::numeric AS c_project_id,
    NULL::numeric AS c_activity_id,
    NULL::numeric AS c_projectphase_id,
    NULL::numeric AS c_projecttask_id
   FROM adempiere.c_invoiceline il,
    adempiere.ad_language l
  WHERE ((il.c_uom_id IS NULL) AND (l.isbaselanguage = 'N'::bpchar) AND (l.issystemlanguage = 'Y'::bpchar))
UNION
 SELECT i.ad_client_id,
    i.ad_org_id,
    i.isactive,
    i.created,
    i.createdby,
    i.updated,
    i.updatedby,
    l.ad_language,
    i.c_invoice_id,
    NULL::numeric AS c_invoiceline_id,
    NULL::numeric AS c_tax_id,
    NULL::numeric AS taxamt,
    NULL::numeric AS linetotalamt,
    NULL::character varying AS taxindicator,
    999998 AS line,
    NULL::numeric AS m_product_id,
    NULL::numeric AS qtyinvoiced,
    NULL::numeric AS qtyentered,
    NULL::character varying AS uomsymbol,
    NULL::character varying AS name,
    NULL::character varying AS description,
    NULL::character varying AS documentnote,
    NULL::character varying AS upc,
    NULL::character varying AS sku,
    NULL::character varying AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
    NULL::numeric AS priceactual,
    NULL::numeric AS priceentered,
    NULL::numeric AS linenetamt,
    NULL::numeric AS m_attributesetinstance_id,
    NULL::numeric AS m_attributeset_id,
    NULL::character varying AS serno,
    NULL::character varying AS lot,
    NULL::numeric AS m_lot_id,
    NULL::timestamp without time zone AS guaranteedate,
    NULL::character varying AS productdescription,
    NULL::character varying AS imageurl,
    NULL::numeric AS c_campaign_id,
    NULL::numeric AS c_project_id,
    NULL::numeric AS c_activity_id,
    NULL::numeric AS c_projectphase_id,
    NULL::numeric AS c_projecttask_id
   FROM adempiere.c_invoice i,
    adempiere.ad_language l
  WHERE ((l.isbaselanguage = 'N'::bpchar) AND (l.issystemlanguage = 'Y'::bpchar))
UNION
 SELECT it.ad_client_id,
    it.ad_org_id,
    it.isactive,
    it.created,
    it.createdby,
    it.updated,
    it.updatedby,
    t.ad_language,
    it.c_invoice_id,
    NULL::numeric AS c_invoiceline_id,
    it.c_tax_id,
    NULL::numeric AS taxamt,
    NULL::numeric AS linetotalamt,
    t.taxindicator,
    999999 AS line,
    NULL::numeric AS m_product_id,
    NULL::numeric AS qtyinvoiced,
    NULL::numeric AS qtyentered,
    NULL::character varying AS uomsymbol,
    t.name,
    NULL::character varying AS description,
    NULL::character varying AS documentnote,
    NULL::character varying AS upc,
    NULL::character varying AS sku,
    NULL::character varying AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
        CASE
            WHEN (it.istaxincluded = 'Y'::bpchar) THEN it.taxamt
            ELSE it.taxbaseamt
        END AS priceactual,
        CASE
            WHEN (it.istaxincluded = 'Y'::bpchar) THEN it.taxamt
            ELSE it.taxbaseamt
        END AS priceentered,
        CASE
            WHEN (it.istaxincluded = 'Y'::bpchar) THEN NULL::numeric
            ELSE it.taxamt
        END AS linenetamt,
    NULL::numeric AS m_attributesetinstance_id,
    NULL::numeric AS m_attributeset_id,
    NULL::character varying AS serno,
    NULL::character varying AS lot,
    NULL::numeric AS m_lot_id,
    NULL::timestamp without time zone AS guaranteedate,
    NULL::character varying AS productdescription,
    NULL::character varying AS imageurl,
    NULL::numeric AS c_campaign_id,
    NULL::numeric AS c_project_id,
    NULL::numeric AS c_activity_id,
    NULL::numeric AS c_projectphase_id,
    NULL::numeric AS c_projecttask_id
   FROM (adempiere.c_invoicetax it
     JOIN adempiere.c_tax_trl t ON ((it.c_tax_id = t.c_tax_id)));


ALTER TABLE adempiere.c_invoice_linetax_vt OWNER TO adempiere;

--
-- Name: c_invoicepayschedule; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_invoicepayschedule (
    c_invoicepayschedule_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_invoice_id numeric(10,0) NOT NULL,
    c_payschedule_id numeric(10,0),
    duedate timestamp without time zone NOT NULL,
    dueamt numeric DEFAULT 0 NOT NULL,
    discountdate timestamp without time zone NOT NULL,
    discountamt numeric DEFAULT 0 NOT NULL,
    isvalid character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_invoicepayschedule_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoicepayschedule_isvalid_check CHECK ((isvalid = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_invoicepayschedule OWNER TO adempiere;

--
-- Name: c_invoice_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_invoice_v AS
 SELECT i.c_invoice_id,
    i.ad_client_id,
    i.ad_org_id,
    i.isactive,
    i.created,
    i.createdby,
    i.updated,
    i.updatedby,
    i.issotrx,
    i.documentno,
    i.docstatus,
    i.docaction,
    i.processing,
    i.processed,
    i.c_doctype_id,
    i.c_doctypetarget_id,
    i.c_order_id,
    i.description,
    i.isapproved,
    i.istransferred,
    i.salesrep_id,
    i.dateinvoiced,
    i.dateprinted,
    i.dateacct,
    i.c_bpartner_id,
    i.c_bpartner_location_id,
    i.ad_user_id,
    i.poreference,
    i.dateordered,
    i.c_currency_id,
    i.c_conversiontype_id,
    i.paymentrule,
    i.c_paymentterm_id,
    i.c_charge_id,
    i.m_pricelist_id,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id,
    i.isprinted,
    i.isdiscountprinted,
    i.ispaid,
    i.isindispute,
    i.ispayschedulevalid,
    NULL::numeric AS c_invoicepayschedule_id,
    i.invoicecollectiontype,
    i.dunninggrace,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN (i.chargeamt * ('-1'::integer)::numeric)
            ELSE i.chargeamt
        END AS chargeamt,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN (i.totallines * ('-1'::integer)::numeric)
            ELSE i.totallines
        END AS totallines,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN (i.grandtotal * ('-1'::integer)::numeric)
            ELSE i.grandtotal
        END AS grandtotal,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN '-1.0'::numeric
            ELSE 1.0
        END AS multiplier,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 2))::text = 'P'::text) THEN '-1.0'::numeric
            ELSE 1.0
        END AS multiplierap,
    d.docbasetype,
    adempiere.paymenttermduedate(i.c_paymentterm_id, (i.dateinvoiced)::timestamp with time zone) AS duedate
   FROM (adempiere.c_invoice i
     JOIN adempiere.c_doctype d ON ((i.c_doctype_id = d.c_doctype_id)))
  WHERE (i.ispayschedulevalid <> 'Y'::bpchar)
UNION
 SELECT i.c_invoice_id,
    i.ad_client_id,
    i.ad_org_id,
    i.isactive,
    i.created,
    i.createdby,
    i.updated,
    i.updatedby,
    i.issotrx,
    i.documentno,
    i.docstatus,
    i.docaction,
    i.processing,
    i.processed,
    i.c_doctype_id,
    i.c_doctypetarget_id,
    i.c_order_id,
    i.description,
    i.isapproved,
    i.istransferred,
    i.salesrep_id,
    i.dateinvoiced,
    i.dateprinted,
    i.dateacct,
    i.c_bpartner_id,
    i.c_bpartner_location_id,
    i.ad_user_id,
    i.poreference,
    i.dateordered,
    i.c_currency_id,
    i.c_conversiontype_id,
    i.paymentrule,
    i.c_paymentterm_id,
    i.c_charge_id,
    i.m_pricelist_id,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id,
    i.isprinted,
    i.isdiscountprinted,
    i.ispaid,
    i.isindispute,
    i.ispayschedulevalid,
    ips.c_invoicepayschedule_id,
    i.invoicecollectiontype,
    i.dunninggrace,
    NULL::numeric AS chargeamt,
    NULL::numeric AS totallines,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN (ips.dueamt * ('-1'::integer)::numeric)
            ELSE ips.dueamt
        END AS grandtotal,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN '-1'::integer
            ELSE 1
        END AS multiplier,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 2))::text = 'P'::text) THEN '-1'::integer
            ELSE 1
        END AS multiplierap,
    d.docbasetype,
    ips.duedate
   FROM ((adempiere.c_invoice i
     JOIN adempiere.c_doctype d ON ((i.c_doctype_id = d.c_doctype_id)))
     JOIN adempiere.c_invoicepayschedule ips ON ((i.c_invoice_id = ips.c_invoice_id)))
  WHERE ((i.ispayschedulevalid = 'Y'::bpchar) AND (ips.isvalid = 'Y'::bpchar));


ALTER TABLE adempiere.c_invoice_v OWNER TO adempiere;

--
-- Name: c_invoice_v1; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_invoice_v1 AS
 SELECT i.c_invoice_id,
    i.ad_client_id,
    i.ad_org_id,
    i.isactive,
    i.created,
    i.createdby,
    i.updated,
    i.updatedby,
    i.issotrx,
    i.documentno,
    i.docstatus,
    i.docaction,
    i.processing,
    i.processed,
    i.c_doctype_id,
    i.c_doctypetarget_id,
    i.c_order_id,
    i.description,
    i.isapproved,
    i.istransferred,
    i.salesrep_id,
    i.dateinvoiced,
    i.dateprinted,
    i.dateacct,
    i.c_bpartner_id,
    i.c_bpartner_location_id,
    i.ad_user_id,
    i.poreference,
    i.dateordered,
    i.c_currency_id,
    i.c_conversiontype_id,
    i.paymentrule,
    i.c_paymentterm_id,
    i.c_charge_id,
    i.m_pricelist_id,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id,
    i.isprinted,
    i.isdiscountprinted,
    i.ispaid,
    i.isindispute,
    i.ispayschedulevalid,
    NULL::numeric AS c_invoicepayschedule_id,
    i.invoicecollectiontype,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN (i.chargeamt * ('-1'::integer)::numeric)
            ELSE i.chargeamt
        END AS chargeamt,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN (i.totallines * ('-1'::integer)::numeric)
            ELSE i.totallines
        END AS totallines,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN (i.grandtotal * ('-1'::integer)::numeric)
            ELSE i.grandtotal
        END AS grandtotal,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN '-1'::integer
            ELSE 1
        END AS multiplier,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 2))::text = 'P'::text) THEN '-1'::integer
            ELSE 1
        END AS multiplierap,
    d.docbasetype
   FROM (adempiere.c_invoice i
     JOIN adempiere.c_doctype d ON ((i.c_doctype_id = d.c_doctype_id)));


ALTER TABLE adempiere.c_invoice_v1 OWNER TO adempiere;

--
-- Name: c_invoicebatch; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_invoicebatch (
    c_invoicebatch_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    description character varying(255),
    datedoc timestamp without time zone NOT NULL,
    issotrx character(1) DEFAULT 'N'::bpchar NOT NULL,
    salesrep_id numeric(10,0) NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    c_conversiontype_id numeric(10,0),
    controlamt numeric DEFAULT 0 NOT NULL,
    documentamt numeric DEFAULT 0 NOT NULL,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_invoicebatch_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoicebatch_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoicebatch_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_invoicebatch OWNER TO adempiere;

--
-- Name: c_invoicebatchline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_invoicebatchline (
    c_invoicebatchline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_invoicebatch_id numeric(10,0) NOT NULL,
    line numeric(10,0) DEFAULT 0 NOT NULL,
    c_doctype_id numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    dateinvoiced timestamp without time zone NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bpartner_location_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    c_charge_id numeric(10,0) NOT NULL,
    qtyentered numeric DEFAULT 0 NOT NULL,
    priceentered numeric DEFAULT 0 NOT NULL,
    istaxincluded character(1) DEFAULT 'N'::bpchar NOT NULL,
    linenetamt numeric DEFAULT 0 NOT NULL,
    c_tax_id numeric(10,0) NOT NULL,
    taxamt numeric DEFAULT 0 NOT NULL,
    linetotalamt numeric DEFAULT 0 NOT NULL,
    c_project_id numeric(10,0),
    c_activity_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_invoice_id numeric(10,0),
    c_invoiceline_id numeric(10,0),
    description character varying(255),
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_invoicebatchline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoicebatchline_istaxincluded_check CHECK ((istaxincluded = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_invoicebatchline_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_invoicebatchline OWNER TO adempiere;

--
-- Name: c_invoiceline_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_invoiceline_v AS
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.c_invoiceline_id,
    i.c_invoice_id,
    i.salesrep_id,
    i.c_bpartner_id,
    il.m_product_id,
    i.documentno,
    i.dateinvoiced,
    i.dateacct,
    i.issotrx,
    i.docstatus,
    round((i.multiplier * il.linenetamt), 2) AS linenetamt,
    round(((i.multiplier * il.pricelist) * il.qtyinvoiced), 2) AS linelistamt,
        CASE
            WHEN (COALESCE(il.pricelimit, (0)::numeric) = (0)::numeric) THEN round((i.multiplier * il.linenetamt), 2)
            ELSE round(((i.multiplier * il.pricelimit) * il.qtyinvoiced), 2)
        END AS linelimitamt,
    round((((i.multiplier * il.pricelist) * il.qtyinvoiced) - il.linenetamt), 2) AS linediscountamt,
        CASE
            WHEN (COALESCE(il.pricelimit, (0)::numeric) = (0)::numeric) THEN (0)::numeric
            ELSE round(((i.multiplier * il.linenetamt) - (il.pricelimit * il.qtyinvoiced)), 2)
        END AS lineoverlimitamt,
    il.qtyinvoiced,
    il.qtyentered,
    il.line,
    il.c_orderline_id,
    il.c_uom_id,
    il.c_campaign_id,
    il.c_project_id,
    il.c_activity_id,
    il.c_projectphase_id,
    il.c_projecttask_id
   FROM adempiere.c_invoice_v i,
    adempiere.c_invoiceline il
  WHERE (i.c_invoice_id = il.c_invoice_id);


ALTER TABLE adempiere.c_invoiceline_v OWNER TO adempiere;

--
-- Name: c_job; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_job (
    c_job_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    c_jobcategory_id numeric(10,0) NOT NULL,
    isemployee character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_job_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_job OWNER TO adempiere;

--
-- Name: c_jobassignment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_jobassignment (
    c_jobassignment_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    c_job_id numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    validto timestamp without time zone,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_jobassignment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_jobassignment OWNER TO adempiere;

--
-- Name: c_jobcategory; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_jobcategory (
    c_jobcategory_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_jobcategory_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_jobcategory OWNER TO adempiere;

--
-- Name: c_jobremuneration; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_jobremuneration (
    c_jobremuneration_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_job_id numeric(10,0) NOT NULL,
    c_remuneration_id numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    validto timestamp without time zone,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_jobremuneration_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_jobremuneration OWNER TO adempiere;

--
-- Name: c_landedcost; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_landedcost (
    c_landedcost_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255),
    c_invoiceline_id numeric(10,0) NOT NULL,
    m_costelement_id numeric(10,0) NOT NULL,
    m_inoutline_id numeric(10,0),
    m_inout_id numeric(10,0),
    m_product_id numeric(10,0),
    landedcostdistribution character(1) NOT NULL,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_landedcost OWNER TO adempiere;

--
-- Name: c_landedcostallocation; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_landedcostallocation (
    c_landedcostallocation_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_invoiceline_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0),
    m_costelement_id numeric(10,0) NOT NULL,
    amt numeric DEFAULT 0 NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    base numeric DEFAULT 0 NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_inoutline_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_landedcostallocation_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_landedcostallocation OWNER TO adempiere;

--
-- Name: c_nonbusinessday; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_nonbusinessday (
    c_nonbusinessday_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60),
    date1 timestamp without time zone NOT NULL,
    c_calendar_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_nonbusinessday_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_nonbusinessday OWNER TO adempiere;

--
-- Name: c_opportunity; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_opportunity (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_opportunity_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(60) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    closedate timestamp without time zone,
    expectedclosedate timestamp without time zone NOT NULL,
    salesrep_id numeric(10,0),
    opportunityamt numeric NOT NULL,
    comments character varying(2000),
    c_currency_id numeric(10,0) NOT NULL,
    cost numeric,
    c_salesstage_id numeric(10,0) NOT NULL,
    probability numeric NOT NULL,
    c_order_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_opportunity_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_opportunity OWNER TO adempiere;

--
-- Name: m_warehouse; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_warehouse (
    m_warehouse_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    c_location_id numeric(10,0) NOT NULL,
    separator character(1) NOT NULL,
    m_warehousesource_id numeric(10,0),
    replenishmentclass character varying(60),
    isintransit character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_warehouse_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_warehouse_isintransit_check CHECK ((isintransit = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_warehouse OWNER TO adempiere;

--
-- Name: c_order_header_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_order_header_v AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    'en_US'::character varying AS ad_language,
    o.c_order_id,
    o.issotrx,
    o.documentno,
    o.docstatus,
    o.c_doctype_id,
    o.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    o.m_warehouse_id,
    wh.c_location_id AS warehouse_location_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    o.salesrep_id,
    COALESCE(ubp.name, u.name) AS salesrep_name,
    o.dateordered,
    o.datepromised,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    bpcg.greeting AS bpcontactgreeting,
    bpc.title,
    bpc.phone,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname,
    bpl.c_location_id,
    ((l.postal)::text || (l.postal_add)::text) AS postal,
    bp.referenceno,
    o.bill_bpartner_id,
    o.bill_location_id,
    o.bill_user_id,
    bbp.value AS bill_bpvalue,
    bbp.taxid AS bill_bptaxid,
    bbp.name AS bill_name,
    bbp.name2 AS bill_name2,
    bbpc.title AS bill_title,
    bbpc.phone AS bill_phone,
    NULLIF((bbpc.name)::text, (bbp.name)::text) AS bill_contactname,
    bbpl.c_location_id AS bill_c_location_id,
    o.description,
    o.poreference,
    o.c_currency_id,
    pt.name AS paymentterm,
    pt.documentnote AS paymenttermnote,
    o.c_charge_id,
    o.chargeamt,
    o.totallines,
    o.grandtotal,
    o.grandtotal AS amtinwords,
    o.m_pricelist_id,
    o.istaxincluded,
    o.volume,
    o.weight,
    o.c_campaign_id,
    o.c_project_id,
    o.c_activity_id,
    o.m_shipper_id,
    o.deliveryrule,
    o.deliveryviarule,
    o.priorityrule,
    o.invoicerule,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM ((((((((((((((((adempiere.c_order o
     JOIN adempiere.c_doctype dt ON ((o.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.m_warehouse wh ON ((o.m_warehouse_id = wh.m_warehouse_id)))
     JOIN adempiere.c_paymentterm pt ON ((o.c_paymentterm_id = pt.c_paymentterm_id)))
     JOIN adempiere.c_bpartner bp ON ((o.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting bpg ON ((bp.c_greeting_id = bpg.c_greeting_id)))
     JOIN adempiere.c_bpartner_location bpl ON ((o.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     JOIN adempiere.c_location l ON ((bpl.c_location_id = l.c_location_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((o.ad_user_id = bpc.ad_user_id)))
     LEFT JOIN adempiere.c_greeting bpcg ON ((bpc.c_greeting_id = bpcg.c_greeting_id)))
     JOIN adempiere.ad_orginfo oi ON ((o.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((o.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((o.salesrep_id = u.ad_user_id)))
     LEFT JOIN adempiere.c_bpartner ubp ON ((u.c_bpartner_id = ubp.c_bpartner_id)))
     JOIN adempiere.c_bpartner bbp ON ((o.bill_bpartner_id = bbp.c_bpartner_id)))
     JOIN adempiere.c_bpartner_location bbpl ON ((o.bill_location_id = bbpl.c_bpartner_location_id)))
     LEFT JOIN adempiere.ad_user bbpc ON ((o.bill_user_id = bbpc.ad_user_id)));


ALTER TABLE adempiere.c_order_header_v OWNER TO adempiere;

--
-- Name: c_order_header_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_order_header_vt AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    dt.ad_language,
    o.c_order_id,
    o.issotrx,
    o.documentno,
    o.docstatus,
    o.c_doctype_id,
    o.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    o.m_warehouse_id,
    wh.c_location_id AS warehouse_location_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    o.salesrep_id,
    COALESCE(ubp.name, u.name) AS salesrep_name,
    o.dateordered,
    o.datepromised,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    bpcg.greeting AS bpcontactgreeting,
    bpc.title,
    bpc.phone,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname,
    bpl.c_location_id,
    ((l.postal)::text || (l.postal_add)::text) AS postal,
    bp.referenceno,
    o.bill_bpartner_id,
    o.bill_location_id,
    o.bill_user_id,
    bbp.value AS bill_bpvalue,
    bbp.taxid AS bill_bptaxid,
    bbp.name AS bill_name,
    bbp.name2 AS bill_name2,
    bbpc.title AS bill_title,
    bbpc.phone AS bill_phone,
    NULLIF((bbpc.name)::text, (bbp.name)::text) AS bill_contactname,
    bbpl.c_location_id AS bill_c_location_id,
    o.description,
    o.poreference,
    o.c_currency_id,
    pt.name AS paymentterm,
    pt.documentnote AS paymenttermnote,
    o.c_charge_id,
    o.chargeamt,
    o.totallines,
    o.grandtotal,
    o.grandtotal AS amtinwords,
    o.m_pricelist_id,
    o.istaxincluded,
    o.volume,
    o.weight,
    o.c_campaign_id,
    o.c_project_id,
    o.c_activity_id,
    o.m_shipper_id,
    o.deliveryrule,
    o.deliveryviarule,
    o.priorityrule,
    o.invoicerule,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM ((((((((((((((((adempiere.c_order o
     JOIN adempiere.c_doctype_trl dt ON ((o.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.m_warehouse wh ON ((o.m_warehouse_id = wh.m_warehouse_id)))
     JOIN adempiere.c_paymentterm_trl pt ON (((o.c_paymentterm_id = pt.c_paymentterm_id) AND ((dt.ad_language)::text = (pt.ad_language)::text))))
     JOIN adempiere.c_bpartner bp ON ((o.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting_trl bpg ON (((bp.c_greeting_id = bpg.c_greeting_id) AND ((dt.ad_language)::text = (bpg.ad_language)::text))))
     JOIN adempiere.c_bpartner_location bpl ON ((o.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     JOIN adempiere.c_location l ON ((bpl.c_location_id = l.c_location_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((o.ad_user_id = bpc.ad_user_id)))
     LEFT JOIN adempiere.c_greeting_trl bpcg ON (((bpc.c_greeting_id = bpcg.c_greeting_id) AND ((dt.ad_language)::text = (bpcg.ad_language)::text))))
     JOIN adempiere.ad_orginfo oi ON ((o.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((o.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((o.salesrep_id = u.ad_user_id)))
     LEFT JOIN adempiere.c_bpartner ubp ON ((u.c_bpartner_id = ubp.c_bpartner_id)))
     JOIN adempiere.c_bpartner bbp ON ((o.bill_bpartner_id = bbp.c_bpartner_id)))
     JOIN adempiere.c_bpartner_location bbpl ON ((o.bill_location_id = bbpl.c_bpartner_location_id)))
     LEFT JOIN adempiere.ad_user bbpc ON ((o.bill_user_id = bbpc.ad_user_id)));


ALTER TABLE adempiere.c_order_header_vt OWNER TO adempiere;

--
-- Name: c_ordertax; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_ordertax (
    c_order_id numeric(10,0) NOT NULL,
    c_tax_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    taxbaseamt numeric DEFAULT 0 NOT NULL,
    taxamt numeric DEFAULT 0 NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    istaxincluded character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_ordertax_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_ordertax OWNER TO adempiere;

--
-- Name: m_product_po; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_product_po (
    m_product_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    iscurrentvendor character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_uom_id numeric(10,0),
    c_currency_id numeric(10,0),
    pricelist numeric DEFAULT 0,
    pricepo numeric DEFAULT 0,
    priceeffective timestamp without time zone,
    pricelastpo numeric DEFAULT 0,
    pricelastinv numeric DEFAULT 0,
    vendorproductno character varying(40) NOT NULL,
    upc character varying(20),
    vendorcategory character(30),
    discontinued character(1) DEFAULT 'N'::bpchar,
    discontinuedby timestamp without time zone,
    order_min numeric DEFAULT 0,
    order_pack numeric DEFAULT 0,
    costperorder numeric DEFAULT 0,
    deliverytime_promised numeric(10,0),
    deliverytime_actual numeric(10,0),
    qualityrating numeric,
    royaltyamt numeric DEFAULT 0,
    manufacturer character(30),
    discontinuedat timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_product_po_discontinued_check CHECK ((discontinued = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_po_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_po_iscurrentvendor_check CHECK ((iscurrentvendor = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_product_po OWNER TO adempiere;

--
-- Name: c_order_linetax_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_order_linetax_v AS
 SELECT ol.ad_client_id,
    ol.ad_org_id,
    ol.isactive,
    ol.created,
    ol.createdby,
    ol.updated,
    ol.updatedby,
    'en_US'::text AS ad_language,
    ol.c_order_id,
    ol.c_orderline_id,
    ol.c_tax_id,
    t.taxindicator,
    ol.c_bpartner_id,
    ol.c_bpartner_location_id,
    bp.name AS bpname,
    bpl.c_location_id,
    ol.line,
    p.m_product_id,
    po.vendorproductno,
        CASE
            WHEN ((ol.qtyordered <> (0)::numeric) OR (ol.m_product_id IS NOT NULL)) THEN ol.qtyordered
            ELSE NULL::numeric
        END AS qtyordered,
        CASE
            WHEN ((ol.qtyentered <> (0)::numeric) OR (ol.m_product_id IS NOT NULL)) THEN ol.qtyentered
            ELSE NULL::numeric
        END AS qtyentered,
        CASE
            WHEN ((ol.qtyentered <> (0)::numeric) OR (ol.m_product_id IS NOT NULL)) THEN uom.uomsymbol
            ELSE NULL::character varying
        END AS uomsymbol,
    COALESCE(c.name, (((p.name)::text || (adempiere.productattribute(ol.m_attributesetinstance_id))::text))::character varying, ol.description) AS name,
        CASE
            WHEN (COALESCE(c.name, p.name) IS NOT NULL) THEN ol.description
            ELSE NULL::character varying
        END AS description,
    p.documentnote,
    p.upc,
    p.sku,
    COALESCE(pp.vendorproductno, p.value) AS productvalue,
    ra.description AS resourcedescription,
        CASE
            WHEN ((i.isdiscountprinted = 'Y'::bpchar) AND (ol.pricelist <> (0)::numeric)) THEN ol.pricelist
            ELSE NULL::numeric
        END AS pricelist,
        CASE
            WHEN ((i.isdiscountprinted = 'Y'::bpchar) AND (ol.pricelist <> (0)::numeric) AND (ol.qtyentered <> (0)::numeric)) THEN ((ol.pricelist * ol.qtyordered) / ol.qtyentered)
            ELSE NULL::numeric
        END AS priceenteredlist,
        CASE
            WHEN ((i.isdiscountprinted = 'Y'::bpchar) AND (ol.pricelist > ol.priceactual) AND (ol.pricelist <> (0)::numeric)) THEN (((ol.pricelist - ol.priceactual) / ol.pricelist) * (100)::numeric)
            ELSE NULL::numeric
        END AS discount,
        CASE
            WHEN ((ol.priceactual <> (0)::numeric) OR (ol.m_product_id IS NOT NULL)) THEN ol.priceactual
            ELSE NULL::numeric
        END AS priceactual,
        CASE
            WHEN ((ol.priceentered <> (0)::numeric) OR (ol.m_product_id IS NOT NULL)) THEN ol.priceentered
            ELSE NULL::numeric
        END AS priceentered,
        CASE
            WHEN ((ol.linenetamt <> (0)::numeric) OR (ol.m_product_id IS NOT NULL)) THEN ol.linenetamt
            ELSE NULL::numeric
        END AS linenetamt,
    p.description AS productdescription,
    p.imageurl,
    ol.c_campaign_id,
    ol.c_project_id,
    ol.c_activity_id,
    ol.c_projectphase_id,
    ol.c_projecttask_id
   FROM ((((((((((adempiere.c_orderline ol
     JOIN adempiere.c_uom uom ON ((ol.c_uom_id = uom.c_uom_id)))
     JOIN adempiere.c_order i ON ((ol.c_order_id = i.c_order_id)))
     LEFT JOIN adempiere.m_product p ON ((ol.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.m_product_po po ON (((p.m_product_id = po.m_product_id) AND (i.c_bpartner_id = po.c_bpartner_id))))
     LEFT JOIN adempiere.s_resourceassignment ra ON ((ol.s_resourceassignment_id = ra.s_resourceassignment_id)))
     LEFT JOIN adempiere.c_charge c ON ((ol.c_charge_id = c.c_charge_id)))
     LEFT JOIN adempiere.c_bpartner_product pp ON (((ol.m_product_id = pp.m_product_id) AND (i.c_bpartner_id = pp.c_bpartner_id))))
     JOIN adempiere.c_bpartner bp ON ((ol.c_bpartner_id = bp.c_bpartner_id)))
     JOIN adempiere.c_bpartner_location bpl ON ((ol.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     LEFT JOIN adempiere.c_tax t ON ((ol.c_tax_id = t.c_tax_id)))
UNION
 SELECT ol.ad_client_id,
    ol.ad_org_id,
    ol.isactive,
    ol.created,
    ol.createdby,
    ol.updated,
    ol.updatedby,
    'en_US'::text AS ad_language,
    ol.c_order_id,
    ol.c_orderline_id,
    ol.c_tax_id,
    NULL::character varying AS taxindicator,
    NULL::numeric AS c_bpartner_id,
    NULL::numeric AS c_bpartner_location_id,
    NULL::character varying AS bpname,
    NULL::numeric AS c_location_id,
    (ol.line + (bl.line / (100)::numeric)) AS line,
    p.m_product_id,
    po.vendorproductno,
        CASE
            WHEN (bl.isqtypercentage = 'N'::bpchar) THEN (ol.qtyordered * bl.qtybom)
            ELSE (ol.qtyordered * (bl.qtybatch / (100)::numeric))
        END AS qtyordered,
        CASE
            WHEN (bl.isqtypercentage = 'N'::bpchar) THEN (ol.qtyentered * bl.qtybom)
            ELSE (ol.qtyentered * (bl.qtybatch / (100)::numeric))
        END AS qtyentered,
    uom.uomsymbol,
    p.name,
    bl.description,
    p.documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
    NULL::numeric AS priceactual,
    NULL::numeric AS priceentered,
    NULL::numeric AS linenetamt,
    p.description AS productdescription,
    p.imageurl,
    ol.c_campaign_id,
    ol.c_project_id,
    ol.c_activity_id,
    ol.c_projectphase_id,
    ol.c_projecttask_id
   FROM (((((((adempiere.pp_product_bom b
     JOIN adempiere.c_orderline ol ON ((b.m_product_id = ol.m_product_id)))
     JOIN adempiere.c_order i ON ((ol.c_order_id = i.c_order_id)))
     JOIN adempiere.m_product bp ON (((bp.m_product_id = ol.m_product_id) AND (bp.isbom = 'Y'::bpchar) AND (bp.isverified = 'Y'::bpchar) AND (bp.isinvoiceprintdetails = 'Y'::bpchar))))
     JOIN adempiere.pp_product_bomline bl ON ((bl.pp_product_bom_id = b.pp_product_bom_id)))
     JOIN adempiere.m_product p ON ((p.m_product_id = bl.m_product_id)))
     LEFT JOIN adempiere.m_product_po po ON (((p.m_product_id = po.m_product_id) AND (i.c_bpartner_id = po.c_bpartner_id))))
     JOIN adempiere.c_uom uom ON ((p.c_uom_id = uom.c_uom_id)))
UNION
 SELECT c_order.ad_client_id,
    c_order.ad_org_id,
    c_order.isactive,
    c_order.created,
    c_order.createdby,
    c_order.updated,
    c_order.updatedby,
    'en_US'::text AS ad_language,
    c_order.c_order_id,
    NULL::numeric AS c_orderline_id,
    NULL::numeric AS c_tax_id,
    NULL::character varying AS taxindicator,
    NULL::numeric AS c_bpartner_id,
    NULL::numeric AS c_bpartner_location_id,
    NULL::character varying AS bpname,
    NULL::numeric AS c_location_id,
    NULL::numeric AS line,
    NULL::numeric AS m_product_id,
    NULL::character varying AS vendorproductno,
    NULL::numeric AS qtyordered,
    NULL::numeric AS qtyentered,
    NULL::character varying AS uomsymbol,
    NULL::character varying AS name,
    NULL::character varying AS description,
    NULL::character varying AS documentnote,
    NULL::character varying AS upc,
    NULL::character varying AS sku,
    NULL::character varying AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
    NULL::numeric AS priceactual,
    NULL::numeric AS priceentered,
    NULL::numeric AS linenetamt,
    NULL::character varying AS productdescription,
    NULL::character varying AS imageurl,
    NULL::numeric AS c_campaign_id,
    NULL::numeric AS c_project_id,
    NULL::numeric AS c_activity_id,
    NULL::numeric AS c_projectphase_id,
    NULL::numeric AS c_projecttask_id
   FROM adempiere.c_order
UNION
 SELECT ot.ad_client_id,
    ot.ad_org_id,
    ot.isactive,
    ot.created,
    ot.createdby,
    ot.updated,
    ot.updatedby,
    'en_US'::text AS ad_language,
    ot.c_order_id,
    NULL::numeric AS c_orderline_id,
    ot.c_tax_id,
    t.taxindicator,
    NULL::numeric AS c_bpartner_id,
    NULL::numeric AS c_bpartner_location_id,
    NULL::character varying AS bpname,
    NULL::numeric AS c_location_id,
    NULL::numeric AS line,
    NULL::numeric AS m_product_id,
    NULL::character varying AS vendorproductno,
    NULL::numeric AS qtyordered,
    NULL::numeric AS qtyentered,
    NULL::character varying AS uomsymbol,
    t.name,
    NULL::character varying AS description,
    NULL::character varying AS documentnote,
    NULL::character varying AS upc,
    NULL::character varying AS sku,
    NULL::character varying AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
        CASE
            WHEN (ot.istaxincluded = 'Y'::bpchar) THEN ot.taxamt
            ELSE ot.taxbaseamt
        END AS priceactual,
        CASE
            WHEN (ot.istaxincluded = 'Y'::bpchar) THEN ot.taxamt
            ELSE ot.taxbaseamt
        END AS priceentered,
        CASE
            WHEN (ot.istaxincluded = 'Y'::bpchar) THEN NULL::numeric
            ELSE ot.taxamt
        END AS linenetamt,
    NULL::character varying AS productdescription,
    NULL::character varying AS imageurl,
    NULL::numeric AS c_campaign_id,
    NULL::numeric AS c_project_id,
    NULL::numeric AS c_activity_id,
    NULL::numeric AS c_projectphase_id,
    NULL::numeric AS c_projecttask_id
   FROM (adempiere.c_ordertax ot
     JOIN adempiere.c_tax t ON ((ot.c_tax_id = t.c_tax_id)));


ALTER TABLE adempiere.c_order_linetax_v OWNER TO adempiere;

--
-- Name: c_order_linetax_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_order_linetax_vt AS
 SELECT ol.ad_client_id,
    ol.ad_org_id,
    ol.isactive,
    ol.created,
    ol.createdby,
    ol.updated,
    ol.updatedby,
    uom.ad_language,
    ol.c_order_id,
    ol.c_orderline_id,
    ol.c_tax_id,
    t.taxindicator,
    ol.c_bpartner_id,
    ol.c_bpartner_location_id,
    bp.name AS bpname,
    bpl.c_location_id,
    ol.line,
    p.m_product_id,
    po.vendorproductno,
        CASE
            WHEN ((ol.qtyordered <> (0)::numeric) OR (ol.m_product_id IS NOT NULL)) THEN ol.qtyordered
            ELSE NULL::numeric
        END AS qtyordered,
        CASE
            WHEN ((ol.qtyentered <> (0)::numeric) OR (ol.m_product_id IS NOT NULL)) THEN ol.qtyentered
            ELSE NULL::numeric
        END AS qtyentered,
        CASE
            WHEN ((ol.qtyentered <> (0)::numeric) OR (ol.m_product_id IS NOT NULL)) THEN uom.uomsymbol
            ELSE NULL::character varying
        END AS uomsymbol,
    COALESCE(c.name, (((COALESCE(pt.name, p.name))::text || (adempiere.productattribute(ol.m_attributesetinstance_id))::text))::character varying, ol.description) AS name,
        CASE
            WHEN (COALESCE(c.name, pt.name, p.name) IS NOT NULL) THEN ol.description
            ELSE NULL::character varying
        END AS description,
    COALESCE(pt.documentnote, p.documentnote) AS documentnote,
    p.upc,
    p.sku,
    COALESCE(pp.vendorproductno, p.value) AS productvalue,
    ra.description AS resourcedescription,
        CASE
            WHEN ((i.isdiscountprinted = 'Y'::bpchar) AND (ol.pricelist <> (0)::numeric)) THEN ol.pricelist
            ELSE NULL::numeric
        END AS pricelist,
        CASE
            WHEN ((i.isdiscountprinted = 'Y'::bpchar) AND (ol.pricelist <> (0)::numeric) AND (ol.qtyentered <> (0)::numeric)) THEN ((ol.pricelist * ol.qtyordered) / ol.qtyentered)
            ELSE NULL::numeric
        END AS priceenteredlist,
        CASE
            WHEN ((i.isdiscountprinted = 'Y'::bpchar) AND (ol.pricelist > ol.priceactual) AND (ol.pricelist <> (0)::numeric)) THEN (((ol.pricelist - ol.priceactual) / ol.pricelist) * (100)::numeric)
            ELSE NULL::numeric
        END AS discount,
        CASE
            WHEN ((ol.priceactual <> (0)::numeric) OR (ol.m_product_id IS NOT NULL)) THEN ol.priceactual
            ELSE NULL::numeric
        END AS priceactual,
        CASE
            WHEN ((ol.priceentered <> (0)::numeric) OR (ol.m_product_id IS NOT NULL)) THEN ol.priceentered
            ELSE NULL::numeric
        END AS priceentered,
        CASE
            WHEN ((ol.linenetamt <> (0)::numeric) OR (ol.m_product_id IS NOT NULL)) THEN ol.linenetamt
            ELSE NULL::numeric
        END AS linenetamt,
    pt.description AS productdescription,
    p.imageurl,
    ol.c_campaign_id,
    ol.c_project_id,
    ol.c_activity_id,
    ol.c_projectphase_id,
    ol.c_projecttask_id
   FROM (((((((((((adempiere.c_orderline ol
     JOIN adempiere.c_uom_trl uom ON ((ol.c_uom_id = uom.c_uom_id)))
     JOIN adempiere.c_order i ON ((ol.c_order_id = i.c_order_id)))
     LEFT JOIN adempiere.m_product p ON ((ol.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.m_product_po po ON (((p.m_product_id = po.m_product_id) AND (i.c_bpartner_id = po.c_bpartner_id))))
     LEFT JOIN adempiere.m_product_trl pt ON (((ol.m_product_id = pt.m_product_id) AND ((uom.ad_language)::text = (pt.ad_language)::text))))
     LEFT JOIN adempiere.s_resourceassignment ra ON ((ol.s_resourceassignment_id = ra.s_resourceassignment_id)))
     LEFT JOIN adempiere.c_charge_trl c ON (((ol.c_charge_id = c.c_charge_id) AND ((uom.ad_language)::text = (c.ad_language)::text))))
     LEFT JOIN adempiere.c_bpartner_product pp ON (((ol.m_product_id = pp.m_product_id) AND (i.c_bpartner_id = pp.c_bpartner_id))))
     JOIN adempiere.c_bpartner bp ON ((ol.c_bpartner_id = bp.c_bpartner_id)))
     JOIN adempiere.c_bpartner_location bpl ON ((ol.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     LEFT JOIN adempiere.c_tax_trl t ON (((ol.c_tax_id = t.c_tax_id) AND ((uom.ad_language)::text = (t.ad_language)::text))))
UNION
 SELECT ol.ad_client_id,
    ol.ad_org_id,
    ol.isactive,
    ol.created,
    ol.createdby,
    ol.updated,
    ol.updatedby,
    uom.ad_language,
    ol.c_order_id,
    ol.c_orderline_id,
    ol.c_tax_id,
    NULL::character varying AS taxindicator,
    NULL::numeric AS c_bpartner_id,
    NULL::numeric AS c_bpartner_location_id,
    NULL::character varying AS bpname,
    NULL::numeric AS c_location_id,
    (ol.line + (bl.line / (100)::numeric)) AS line,
    p.m_product_id,
    po.vendorproductno,
        CASE
            WHEN (bl.isqtypercentage = 'N'::bpchar) THEN (ol.qtyordered * bl.qtybom)
            ELSE (ol.qtyordered * (bl.qtybatch / (100)::numeric))
        END AS qtyordered,
        CASE
            WHEN (bl.isqtypercentage = 'N'::bpchar) THEN (ol.qtyentered * bl.qtybom)
            ELSE (ol.qtyentered * (bl.qtybatch / (100)::numeric))
        END AS qtyentered,
    uom.uomsymbol,
    COALESCE(pt.name, p.name) AS name,
    b.description,
    COALESCE(pt.documentnote, p.documentnote) AS documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
    NULL::numeric AS priceactual,
    NULL::numeric AS priceentered,
    NULL::numeric AS linenetamt,
    pt.description AS productdescription,
    p.imageurl,
    ol.c_campaign_id,
    ol.c_project_id,
    ol.c_activity_id,
    ol.c_projectphase_id,
    ol.c_projecttask_id
   FROM ((((((((adempiere.pp_product_bom b
     JOIN adempiere.c_orderline ol ON ((b.m_product_id = ol.m_product_id)))
     JOIN adempiere.c_order i ON ((ol.c_order_id = i.c_order_id)))
     JOIN adempiere.m_product bp ON (((bp.m_product_id = ol.m_product_id) AND (bp.isbom = 'Y'::bpchar) AND (bp.isverified = 'Y'::bpchar) AND (bp.isinvoiceprintdetails = 'Y'::bpchar))))
     JOIN adempiere.pp_product_bomline bl ON ((bl.pp_product_bom_id = b.pp_product_bom_id)))
     JOIN adempiere.m_product p ON ((p.m_product_id = bl.m_product_id)))
     LEFT JOIN adempiere.m_product_po po ON (((p.m_product_id = po.m_product_id) AND (i.c_bpartner_id = po.c_bpartner_id))))
     JOIN adempiere.c_uom_trl uom ON ((p.c_uom_id = uom.c_uom_id)))
     JOIN adempiere.m_product_trl pt ON (((pt.m_product_id = bl.m_product_id) AND ((uom.ad_language)::text = (pt.ad_language)::text))))
UNION
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    l.ad_language,
    o.c_order_id,
    NULL::numeric AS c_orderline_id,
    NULL::numeric AS c_tax_id,
    NULL::character varying AS taxindicator,
    NULL::numeric AS c_bpartner_id,
    NULL::numeric AS c_bpartner_location_id,
    NULL::character varying AS bpname,
    NULL::numeric AS c_location_id,
    NULL::numeric AS line,
    NULL::numeric AS m_product_id,
    NULL::character varying AS vendorproductno,
    NULL::numeric AS qtyordered,
    NULL::numeric AS qtyentered,
    NULL::character varying AS uomsymbol,
    NULL::character varying AS name,
    NULL::character varying AS description,
    NULL::character varying AS documentnote,
    NULL::character varying AS upc,
    NULL::character varying AS sku,
    NULL::character varying AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
    NULL::numeric AS priceactual,
    NULL::numeric AS priceentered,
    NULL::numeric AS linenetamt,
    NULL::character varying AS productdescription,
    NULL::character varying AS imageurl,
    NULL::numeric AS c_campaign_id,
    NULL::numeric AS c_project_id,
    NULL::numeric AS c_activity_id,
    NULL::numeric AS c_projectphase_id,
    NULL::numeric AS c_projecttask_id
   FROM adempiere.c_order o,
    adempiere.ad_language l
  WHERE ((l.isbaselanguage = 'N'::bpchar) AND (l.issystemlanguage = 'Y'::bpchar))
UNION
 SELECT ot.ad_client_id,
    ot.ad_org_id,
    ot.isactive,
    ot.created,
    ot.createdby,
    ot.updated,
    ot.updatedby,
    t.ad_language,
    ot.c_order_id,
    NULL::numeric AS c_orderline_id,
    ot.c_tax_id,
    t.taxindicator,
    NULL::numeric AS c_bpartner_id,
    NULL::numeric AS c_bpartner_location_id,
    NULL::character varying AS bpname,
    NULL::numeric AS c_location_id,
    NULL::numeric AS line,
    NULL::numeric AS m_product_id,
    NULL::character varying AS vendorproductno,
    NULL::numeric AS qtyordered,
    NULL::numeric AS qtyentered,
    NULL::character varying AS uomsymbol,
    t.name,
    NULL::character varying AS description,
    NULL::character varying AS documentnote,
    NULL::character varying AS upc,
    NULL::character varying AS sku,
    NULL::character varying AS productvalue,
    NULL::character varying AS resourcedescription,
    NULL::numeric AS pricelist,
    NULL::numeric AS priceenteredlist,
    NULL::numeric AS discount,
        CASE
            WHEN (ot.istaxincluded = 'Y'::bpchar) THEN ot.taxamt
            ELSE ot.taxbaseamt
        END AS priceactual,
        CASE
            WHEN (ot.istaxincluded = 'Y'::bpchar) THEN ot.taxamt
            ELSE ot.taxbaseamt
        END AS priceentered,
        CASE
            WHEN (ot.istaxincluded = 'Y'::bpchar) THEN NULL::numeric
            ELSE ot.taxamt
        END AS linenetamt,
    NULL::character varying AS productdescription,
    NULL::character varying AS imageurl,
    NULL::numeric AS c_campaign_id,
    NULL::numeric AS c_project_id,
    NULL::numeric AS c_activity_id,
    NULL::numeric AS c_projectphase_id,
    NULL::numeric AS c_projecttask_id
   FROM (adempiere.c_ordertax ot
     JOIN adempiere.c_tax_trl t ON ((ot.c_tax_id = t.c_tax_id)));


ALTER TABLE adempiere.c_order_linetax_vt OWNER TO adempiere;

--
-- Name: c_ordersource; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_ordersource (
    c_ordersource_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_ordersource_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_ordersource OWNER TO adempiere;

--
-- Name: c_orgassignment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_orgassignment (
    c_orgassignment_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    validto timestamp without time zone NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_orgassignment OWNER TO adempiere;

--
-- Name: c_payment_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_payment_v AS
 SELECT p.c_payment_id,
    p.ad_client_id,
    p.ad_org_id,
    p.isactive,
    p.created,
    p.createdby,
    p.updated,
    p.updatedby,
    p.documentno,
    p.datetrx,
    p.dateacct,
    p.isreceipt,
    p.c_doctype_id,
    p.trxtype,
    p.c_bankaccount_id,
    p.c_bpartner_id,
    p.c_invoice_id,
    p.c_bp_bankaccount_id,
    p.c_paymentbatch_id,
    p.tendertype,
    p.creditcardtype,
    p.creditcardnumber,
    p.creditcardvv,
    p.creditcardexpmm,
    p.creditcardexpyy,
    p.micr,
    p.routingno,
    p.accountno,
    p.checkno,
    p.a_name,
    p.a_street,
    p.a_city,
    p.a_state,
    p.a_zip,
    p.a_ident_dl,
    p.a_ident_ssn,
    p.a_email,
    p.voiceauthcode,
    p.orig_trxid,
    p.ponum,
    p.c_currency_id,
    p.c_conversiontype_id,
        CASE p.isreceipt
            WHEN 'Y'::bpchar THEN p.payamt
            ELSE (p.payamt * ('-1'::integer)::numeric)
        END AS payamt,
        CASE p.isreceipt
            WHEN 'Y'::bpchar THEN p.discountamt
            ELSE (p.discountamt * ('-1'::integer)::numeric)
        END AS discountamt,
        CASE p.isreceipt
            WHEN 'Y'::bpchar THEN p.writeoffamt
            ELSE (p.writeoffamt * ('-1'::integer)::numeric)
        END AS writeoffamt,
        CASE p.isreceipt
            WHEN 'Y'::bpchar THEN p.taxamt
            ELSE (p.taxamt * ('-1'::integer)::numeric)
        END AS taxamt,
        CASE p.isreceipt
            WHEN 'Y'::bpchar THEN p.overunderamt
            ELSE (p.overunderamt * ('-1'::integer)::numeric)
        END AS overunderamt,
        CASE p.isreceipt
            WHEN 'Y'::bpchar THEN 1
            ELSE '-1'::integer
        END AS multiplierap,
    p.isoverunderpayment,
    p.isapproved,
    p.r_pnref,
    p.r_result,
    p.r_respmsg,
    p.r_authcode,
    p.r_avsaddr,
    p.r_avszip,
    p.r_info,
    p.processing,
    p.oprocessing,
    p.docstatus,
    p.docaction,
    p.isprepayment,
    p.c_charge_id,
    p.isreconciled,
    p.isallocated,
    p.isonline,
    p.processed,
    p.posted,
    p.c_campaign_id,
    p.c_project_id,
    p.c_activity_id,
    p.c_order_id,
    p.user1_id,
    p.user2_id,
    p.description
   FROM adempiere.c_payment p;


ALTER TABLE adempiere.c_payment_v OWNER TO adempiere;

--
-- Name: c_paymentallocate; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_paymentallocate (
    c_paymentallocate_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_payment_id numeric(10,0) NOT NULL,
    c_invoice_id numeric(10,0) NOT NULL,
    amount numeric DEFAULT 0 NOT NULL,
    discountamt numeric DEFAULT 0 NOT NULL,
    writeoffamt numeric DEFAULT 0 NOT NULL,
    overunderamt numeric DEFAULT 0 NOT NULL,
    invoiceamt numeric DEFAULT 0,
    c_allocationline_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_paymentallocate_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_paymentallocate OWNER TO adempiere;

--
-- Name: c_paymentbatch; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_paymentbatch (
    c_paymentbatch_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    c_paymentprocessor_id numeric(10,0),
    documentno character varying(30),
    processingdate timestamp without time zone,
    processing character(1) NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_paymentbatch_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentbatch_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_paymentbatch OWNER TO adempiere;

--
-- Name: c_paymentprocessor; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_paymentprocessor (
    c_paymentprocessor_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    c_bankaccount_id numeric(10,0) NOT NULL,
    ad_sequence_id numeric(10,0),
    payprocessorclass character varying(60),
    userid character varying(60),
    password character varying(60),
    hostaddress character varying(60),
    hostport numeric(10,0),
    proxyaddress character varying(60),
    proxyport numeric(10,0),
    proxylogon character varying(60),
    proxypassword character varying(60),
    acceptvisa character(1) DEFAULT 'Y'::bpchar NOT NULL,
    acceptmc character(1) DEFAULT 'Y'::bpchar NOT NULL,
    acceptamex character(1) DEFAULT 'Y'::bpchar NOT NULL,
    acceptdiners character(1) DEFAULT 'Y'::bpchar NOT NULL,
    acceptdiscover character(1) DEFAULT 'Y'::bpchar NOT NULL,
    acceptcorporate character(1) DEFAULT 'Y'::bpchar NOT NULL,
    acceptcheck character(1) DEFAULT 'Y'::bpchar NOT NULL,
    acceptatm character(1) DEFAULT 'Y'::bpchar NOT NULL,
    requirevv character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_currency_id numeric(10,0),
    costpertrx numeric DEFAULT 0 NOT NULL,
    commission numeric NOT NULL,
    partnerid character varying(60),
    vendorid character varying(60),
    minimumamt numeric DEFAULT 0,
    acceptdirectdebit character(1) DEFAULT 'N'::bpchar NOT NULL,
    acceptdirectdeposit character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_paymentprocessor_acceptamex_check CHECK ((acceptamex = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentprocessor_acceptatm_check CHECK ((acceptatm = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentprocessor_acceptcheck_check CHECK ((acceptcheck = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentprocessor_acceptcorporate_check CHECK ((acceptcorporate = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentprocessor_acceptdiners_check CHECK ((acceptdiners = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentprocessor_acceptdiscover_check CHECK ((acceptdiscover = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentprocessor_acceptmc_check CHECK ((acceptmc = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentprocessor_acceptvisa_check CHECK ((acceptvisa = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentprocessor_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_paymentprocessor_requirevv_check CHECK ((requirevv = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_paymentprocessor OWNER TO adempiere;

--
-- Name: c_payschedule; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_payschedule (
    c_payschedule_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_paymentterm_id numeric(10,0) NOT NULL,
    percentage numeric NOT NULL,
    netdays numeric(10,0) NOT NULL,
    netday character(1),
    discountdays numeric(10,0) NOT NULL,
    discount numeric NOT NULL,
    isvalid character(1) DEFAULT 'N'::bpchar NOT NULL,
    gracedays numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_payschedule_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_payschedule_isvalid_check CHECK ((isvalid = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_payschedule OWNER TO adempiere;

--
-- Name: c_payselection; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_payselection (
    c_payselection_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60),
    description character varying(255),
    c_bankaccount_id numeric(10,0),
    paydate timestamp without time zone NOT NULL,
    isapproved character(1) DEFAULT 'Y'::bpchar NOT NULL,
    totalamt numeric DEFAULT 0 NOT NULL,
    createfrom character(1),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_doctype_id numeric(10,0) DEFAULT NULL::numeric,
    documentno character varying(60) DEFAULT NULL::character varying,
    datedoc timestamp without time zone,
    docstatus character varying(2) DEFAULT 'DR'::character varying,
    docaction character(2) DEFAULT 'CO'::bpchar,
    createfrominvoice character(1) DEFAULT NULL::bpchar,
    createfromorder character(1) DEFAULT NULL::bpchar,
    c_currency_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_payselection_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_payselection_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_payselection_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_payselection OWNER TO adempiere;

--
-- Name: c_payselectioncheck; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_payselectioncheck (
    c_payselectioncheck_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_payselection_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    payamt numeric DEFAULT 0 NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    c_payment_id numeric(10,0),
    documentno character varying(30),
    isprinted character(1) DEFAULT 'N'::bpchar NOT NULL,
    paymentrule character(1) NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    discountamt numeric DEFAULT 0 NOT NULL,
    isreceipt character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_bp_bankaccount_id numeric(10,0),
    isgenerateddraft character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_payselectioncheck_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_payselectioncheck_isgenerateddraft_check CHECK ((isgenerateddraft = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_payselectioncheck OWNER TO adempiere;

--
-- Name: hr_payselection; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_payselection (
    hr_payselection_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_bankaccount_id numeric(10,0) NOT NULL,
    createfrom character(1) DEFAULT NULL::bpchar,
    description character varying(255) DEFAULT NULL::character varying,
    isapproved character(1) NOT NULL,
    name character varying(60) NOT NULL,
    paydate timestamp without time zone NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1) NOT NULL,
    totalamt numeric NOT NULL,
    hr_process_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_payselection_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payselection_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payselection_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_payselection OWNER TO adempiere;

--
-- Name: hr_payselectioncheck; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_payselectioncheck (
    hr_payselectioncheck_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_bp_bankaccount_id numeric(10,0) DEFAULT NULL::numeric,
    c_bpartner_id numeric(10,0) NOT NULL,
    hr_payselection_id numeric(10,0) NOT NULL,
    c_payment_id numeric(10,0) DEFAULT NULL::numeric,
    discountamt numeric NOT NULL,
    isgenerateddraft character(1) DEFAULT 'N'::bpchar NOT NULL,
    isprinted character(1) NOT NULL,
    isreceipt character(1) NOT NULL,
    payamt numeric NOT NULL,
    paymentrule character(1) NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    qty numeric(10,0) NOT NULL,
    documentno character varying(30) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_payselectioncheck_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payselectioncheck_isgenerateddraft_check CHECK ((isgenerateddraft = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payselectioncheck_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payselectioncheck_isreceipt_check CHECK ((isreceipt = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payselectioncheck_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_payselectioncheck OWNER TO adempiere;

--
-- Name: c_payselection_check_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_payselection_check_v AS
 SELECT psc.ad_client_id,
    psc.ad_org_id,
    'en_US'::character varying AS ad_language,
    psc.c_payselection_id,
    psc.c_payselectioncheck_id,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    p.c_doctype_id,
    bp.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    adempiere.bpartnerremitlocation(bp.c_bpartner_id) AS c_location_id,
    bp.referenceno,
    bp.poreference,
    ps.paydate,
    psc.payamt,
    psc.payamt AS amtinwords,
    psc.qty,
    psc.paymentrule,
    psc.documentno,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    p.description,
    0 AS hr_payselection_id,
    0 AS hr_payselectioncheck_id
   FROM (((((((adempiere.c_payselectioncheck psc
     JOIN adempiere.c_payselection ps ON ((psc.c_payselection_id = ps.c_payselection_id)))
     LEFT JOIN adempiere.c_payment p ON ((psc.c_payment_id = p.c_payment_id)))
     LEFT JOIN adempiere.c_doctype dt ON ((p.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.c_bpartner bp ON ((psc.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting bpg ON ((bp.c_greeting_id = bpg.c_greeting_id)))
     JOIN adempiere.ad_orginfo oi ON ((psc.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((psc.ad_client_id = ci.ad_client_id)))
UNION
 SELECT psc.ad_client_id,
    psc.ad_org_id,
    'en_US'::character varying AS ad_language,
    0 AS c_payselection_id,
    0 AS c_payselectioncheck_id,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    0 AS c_doctype_id,
    bp.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    adempiere.bpartnerremitlocation(bp.c_bpartner_id) AS c_location_id,
    bp.referenceno,
    bp.poreference,
    ps.paydate,
    psc.payamt,
    psc.payamt AS amtinwords,
    psc.qty,
    psc.paymentrule,
    psc.documentno,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    p.description,
    psc.hr_payselection_id,
    psc.hr_payselectioncheck_id
   FROM (((((((adempiere.hr_payselectioncheck psc
     JOIN adempiere.hr_payselection ps ON ((psc.hr_payselection_id = ps.hr_payselection_id)))
     LEFT JOIN adempiere.c_payment p ON ((psc.c_payment_id = p.c_payment_id)))
     LEFT JOIN adempiere.c_doctype dt ON ((p.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.c_bpartner bp ON ((psc.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting bpg ON ((bp.c_greeting_id = bpg.c_greeting_id)))
     JOIN adempiere.ad_orginfo oi ON ((psc.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((psc.ad_client_id = ci.ad_client_id)));


ALTER TABLE adempiere.c_payselection_check_v OWNER TO adempiere;

--
-- Name: c_payselection_check_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_payselection_check_vt AS
 SELECT psc.ad_client_id,
    psc.ad_org_id,
    l.ad_language,
    psc.c_payselection_id,
    psc.c_payselectioncheck_id,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    p.c_doctype_id,
    bp.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    adempiere.bpartnerremitlocation(bp.c_bpartner_id) AS c_location_id,
    bp.referenceno,
    bp.poreference,
    ps.paydate,
    psc.payamt,
    psc.payamt AS amtinwords,
    psc.qty,
    psc.paymentrule,
    psc.documentno,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    p.description,
    0 AS hr_payselection_id,
    0 AS hr_payselectioncheck_id
   FROM ((((((((adempiere.c_payselectioncheck psc
     JOIN adempiere.c_payselection ps ON ((psc.c_payselection_id = ps.c_payselection_id)))
     LEFT JOIN adempiere.c_payment p ON ((psc.c_payment_id = p.c_payment_id)))
     LEFT JOIN adempiere.c_doctype_trl dt ON ((p.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.c_bpartner bp ON ((psc.c_bpartner_id = bp.c_bpartner_id)))
     JOIN adempiere.ad_orginfo oi ON ((psc.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((psc.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_language l ON ((l.issystemlanguage = 'Y'::bpchar)))
     LEFT JOIN adempiere.c_greeting_trl bpg ON (((bp.c_greeting_id = bpg.c_greeting_id) AND ((bpg.ad_language)::text = (l.ad_language)::text))))
UNION
 SELECT psc.ad_client_id,
    psc.ad_org_id,
    l.ad_language,
    0 AS c_payselection_id,
    0 AS c_payselectioncheck_id,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    0 AS c_doctype_id,
    bp.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    adempiere.bpartnerremitlocation(bp.c_bpartner_id) AS c_location_id,
    bp.referenceno,
    bp.poreference,
    ps.paydate,
    psc.payamt,
    psc.payamt AS amtinwords,
    psc.qty,
    psc.paymentrule,
    psc.documentno,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    p.description,
    psc.hr_payselection_id,
    psc.hr_payselectioncheck_id
   FROM ((((((((adempiere.hr_payselectioncheck psc
     JOIN adempiere.hr_payselection ps ON ((psc.hr_payselection_id = ps.hr_payselection_id)))
     LEFT JOIN adempiere.c_payment p ON ((psc.c_payment_id = p.c_payment_id)))
     LEFT JOIN adempiere.c_doctype_trl dt ON ((p.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.c_bpartner bp ON ((psc.c_bpartner_id = bp.c_bpartner_id)))
     JOIN adempiere.ad_orginfo oi ON ((psc.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((psc.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_language l ON ((l.issystemlanguage = 'Y'::bpchar)))
     LEFT JOIN adempiere.c_greeting_trl bpg ON (((bp.c_greeting_id = bpg.c_greeting_id) AND ((bpg.ad_language)::text = (l.ad_language)::text))));


ALTER TABLE adempiere.c_payselection_check_vt OWNER TO adempiere;

--
-- Name: c_payselectionline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_payselectionline (
    c_payselectionline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_payselection_id numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    description character varying(255),
    paymentrule character(1) NOT NULL,
    ismanual character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_invoice_id numeric(10,0),
    payamt numeric DEFAULT 0 NOT NULL,
    differenceamt numeric DEFAULT 0 NOT NULL,
    c_payselectioncheck_id numeric(10,0),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    discountamt numeric DEFAULT 0 NOT NULL,
    openamt numeric DEFAULT 0 NOT NULL,
    issotrx character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_invoicepayschedule_id numeric(10,0),
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    c_bp_bankaccount_id numeric(10,0) DEFAULT NULL::numeric,
    c_charge_id numeric(10,0) DEFAULT NULL::numeric,
    c_conversion_rate_id numeric(10,0) DEFAULT NULL::numeric,
    c_conversiontype_id numeric(10,0) DEFAULT NULL::numeric,
    c_order_id numeric(10,0) DEFAULT NULL::numeric,
    isprepayment character(1) DEFAULT 'N'::bpchar,
    hr_movement_id numeric(10,0) DEFAULT NULL::numeric,
    c_payselectionline_parent_id numeric(10,0) DEFAULT NULL::numeric,
    amtsource numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_payselectionline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_payselectionline_ismanual_check CHECK ((ismanual = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_payselectionline_isprepayment_check CHECK ((isprepayment = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_payselectionline OWNER TO adempiere;

--
-- Name: c_payselection_remittance_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_payselection_remittance_v AS
 SELECT psl.ad_client_id,
    psl.ad_org_id,
    'en_US'::character varying AS ad_language,
    psl.c_payselection_id,
    psl.c_payselectionline_id,
    psl.c_payselectioncheck_id,
    psl.paymentrule,
    psl.line,
    psl.openamt,
    psl.payamt,
    psl.discountamt,
    psl.differenceamt,
    i.c_bpartner_id,
    i.documentno,
    i.dateinvoiced,
    i.grandtotal,
    i.grandtotal AS amtinwords
   FROM (adempiere.c_payselectionline psl
     JOIN adempiere.c_invoice i ON ((psl.c_invoice_id = i.c_invoice_id)));


ALTER TABLE adempiere.c_payselection_remittance_v OWNER TO adempiere;

--
-- Name: c_payselection_remittance_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_payselection_remittance_vt AS
 SELECT psl.ad_client_id,
    psl.ad_org_id,
    l.ad_language,
    psl.c_payselection_id,
    psl.c_payselectionline_id,
    psl.c_payselectioncheck_id,
    psl.paymentrule,
    psl.line,
    psl.openamt,
    psl.payamt,
    psl.discountamt,
    psl.differenceamt,
    i.c_bpartner_id,
    i.documentno,
    i.dateinvoiced,
    i.grandtotal,
    i.grandtotal AS amtinwords
   FROM ((adempiere.c_payselectionline psl
     JOIN adempiere.c_invoice i ON ((psl.c_invoice_id = i.c_invoice_id)))
     JOIN adempiere.ad_language l ON ((l.issystemlanguage = 'Y'::bpchar)));


ALTER TABLE adempiere.c_payselection_remittance_vt OWNER TO adempiere;

--
-- Name: c_period; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_period (
    c_period_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    periodno numeric(10,0) NOT NULL,
    c_year_id numeric(10,0) NOT NULL,
    startdate timestamp without time zone NOT NULL,
    enddate timestamp without time zone,
    periodtype character(1) NOT NULL,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_period_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_period OWNER TO adempiere;

--
-- Name: c_periodcontrol; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_periodcontrol (
    c_periodcontrol_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_period_id numeric(10,0) NOT NULL,
    docbasetype character(3) NOT NULL,
    periodstatus character(1),
    periodaction character(1) NOT NULL,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_periodcontrol_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_periodcontrol OWNER TO adempiere;

--
-- Name: c_phase; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_phase (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    c_projecttype_id numeric(10,0) NOT NULL,
    standardqty numeric DEFAULT 0 NOT NULL,
    c_phase_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_phase OWNER TO adempiere;

--
-- Name: c_pos; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_pos (
    c_pos_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    salesrep_id numeric(10,0) NOT NULL,
    m_pricelist_id numeric(10,0) NOT NULL,
    c_cashbook_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    printername character varying(60),
    c_poskeylayout_id numeric(10,0),
    ismodifyprice character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_bpartnercashtrx_id numeric(10,0),
    c_doctype_id numeric(10,0),
    cashdrawer character varying(120),
    c_bankaccount_id numeric(10,0),
    osk_keylayout_id numeric(10,0),
    osnp_keylayout_id numeric(10,0),
    autologoutdelay numeric(10,0),
    isenableproductlookup character(1) DEFAULT 'Y'::bpchar,
    isposrequiredpin character(1) DEFAULT 'N'::bpchar,
    invoicerule character(1) DEFAULT NULL::bpchar,
    deliveryrule character(1) DEFAULT NULL::bpchar,
    electronicscales character varying(120) DEFAULT NULL::character varying,
    measurerequestcode character varying(20) DEFAULT NULL::character varying,
    cashtransferbankaccount_id numeric(10,0) DEFAULT NULL::numeric,
    pinentrytimeout numeric(10,0) DEFAULT NULL::numeric,
    ticketclassname character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_pos_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_pos_isenableproductlookup_check CHECK ((isenableproductlookup = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_pos_isposrequiredpin_check CHECK ((isposrequiredpin = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_pos OWNER TO adempiere;

--
-- Name: c_poskey; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_poskey (
    c_poskey_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    c_poskeylayout_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    m_product_id numeric(10,0),
    qty numeric,
    ad_printcolor_id numeric(10,0),
    subkeylayout_id numeric(10,0),
    text character varying(22),
    spanx numeric(10,0),
    spany numeric(10,0),
    ad_image_id numeric(10,0),
    ad_printfont_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_poskey_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_poskey OWNER TO adempiere;

--
-- Name: c_poskeylayout; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_poskeylayout (
    c_poskeylayout_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    columns numeric(10,0),
    poskeylayouttype character(1),
    ad_printcolor_id numeric(10,0),
    ad_printfont_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_poskeylayout_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_poskeylayout OWNER TO adempiere;

--
-- Name: c_project; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_project (
    c_project_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    note character varying(2000),
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_user_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_bpartner_location_id numeric(10,0),
    poreference character varying(20),
    c_paymentterm_id numeric(10,0),
    c_currency_id numeric(10,0) NOT NULL,
    m_pricelist_version_id numeric(10,0),
    c_campaign_id numeric(10,0),
    iscommitment character(1) DEFAULT 'Y'::bpchar NOT NULL,
    plannedamt numeric DEFAULT 0 NOT NULL,
    plannedqty numeric DEFAULT 0 NOT NULL,
    plannedmarginamt numeric DEFAULT 0 NOT NULL,
    committedamt numeric DEFAULT 0 NOT NULL,
    datecontract timestamp without time zone,
    datefinish timestamp without time zone,
    generateto character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    salesrep_id numeric(10,0),
    copyfrom character(1),
    c_projecttype_id numeric(10,0),
    committedqty numeric DEFAULT 0 NOT NULL,
    invoicedamt numeric DEFAULT 0 NOT NULL,
    invoicedqty numeric DEFAULT 0 NOT NULL,
    projectbalanceamt numeric DEFAULT 0 NOT NULL,
    c_phase_id numeric(10,0),
    iscommitceiling character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_warehouse_id numeric(10,0),
    projectcategory character(1) DEFAULT 'N'::bpchar,
    processing character(1),
    c_bpartnersr_id numeric(10,0),
    projinvoicerule character(1) DEFAULT '-'::bpchar NOT NULL,
    projectlinelevel character(1) DEFAULT 'P'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_project_generateto_check CHECK ((generateto = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_project_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_project_iscommitment_check CHECK ((iscommitment = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_project_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_project OWNER TO adempiere;

--
-- Name: c_project_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_project_acct (
    c_project_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    pj_asset_acct numeric(10,0) NOT NULL,
    pj_wip_acct numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_project_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_project_acct OWNER TO adempiere;

--
-- Name: c_projectline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_projectline (
    c_projectline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_project_id numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    description character varying(255),
    plannedqty numeric DEFAULT 0 NOT NULL,
    plannedprice numeric DEFAULT 0 NOT NULL,
    plannedamt numeric DEFAULT 0 NOT NULL,
    plannedmarginamt numeric DEFAULT 0 NOT NULL,
    committedamt numeric DEFAULT 0,
    m_product_id numeric(10,0),
    m_product_category_id numeric(10,0),
    invoicedamt numeric DEFAULT 0 NOT NULL,
    invoicedqty numeric DEFAULT 0 NOT NULL,
    committedqty numeric DEFAULT 0,
    c_projectissue_id numeric(10,0),
    c_order_id numeric(10,0),
    c_orderpo_id numeric(10,0),
    isprinted character(1) DEFAULT 'Y'::bpchar NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    dopricing character(1) DEFAULT 'Y'::bpchar,
    c_projectphase_id numeric(10,0),
    c_projecttask_id numeric(10,0),
    s_resourceassignment_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_projectline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_projectline OWNER TO adempiere;

--
-- Name: c_project_details_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_project_details_v AS
 SELECT pl.ad_client_id,
    pl.ad_org_id,
    pl.isactive,
    pl.created,
    pl.createdby,
    pl.updated,
    pl.updatedby,
    'en_US'::character varying AS ad_language,
    pj.c_project_id,
    pl.c_projectline_id,
    pl.line,
    pl.plannedqty,
    pl.plannedprice,
    pl.plannedamt,
    pl.plannedmarginamt,
    pl.committedamt,
    pl.m_product_id,
    COALESCE(p.name, pl.description) AS name,
        CASE
            WHEN (p.name IS NOT NULL) THEN pl.description
            ELSE NULL::character varying
        END AS description,
    p.documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    pl.m_product_category_id,
    pl.invoicedamt,
    pl.invoicedqty,
    pl.committedqty
   FROM ((adempiere.c_projectline pl
     JOIN adempiere.c_project pj ON ((pl.c_project_id = pj.c_project_id)))
     LEFT JOIN adempiere.m_product p ON ((pl.m_product_id = p.m_product_id)))
  WHERE (pl.isprinted = 'Y'::bpchar);


ALTER TABLE adempiere.c_project_details_v OWNER TO adempiere;

--
-- Name: c_project_details_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_project_details_vt AS
 SELECT pl.ad_client_id,
    pl.ad_org_id,
    pl.isactive,
    pl.created,
    pl.createdby,
    pl.updated,
    pl.updatedby,
    l.ad_language,
    pj.c_project_id,
    pl.c_projectline_id,
    pl.line,
    pl.plannedqty,
    pl.plannedprice,
    pl.plannedamt,
    pl.plannedmarginamt,
    pl.committedamt,
    pl.m_product_id,
    COALESCE(p.name, pl.description) AS name,
        CASE
            WHEN (p.name IS NOT NULL) THEN pl.description
            ELSE NULL::character varying
        END AS description,
    p.documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    pl.m_product_category_id,
    pl.invoicedamt,
    pl.invoicedqty,
    pl.committedqty
   FROM (((adempiere.c_projectline pl
     JOIN adempiere.c_project pj ON ((pl.c_project_id = pj.c_project_id)))
     LEFT JOIN adempiere.m_product p ON ((pl.m_product_id = p.m_product_id)))
     JOIN adempiere.ad_language l ON ((l.issystemlanguage = 'Y'::bpchar)))
  WHERE (pl.isprinted = 'Y'::bpchar);


ALTER TABLE adempiere.c_project_details_vt OWNER TO adempiere;

--
-- Name: c_projecttype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_projecttype (
    c_projecttype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    projectcategory character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_projecttype OWNER TO adempiere;

--
-- Name: c_project_header_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_project_header_v AS
 SELECT p.ad_client_id,
    p.ad_org_id,
    p.isactive,
    p.created,
    p.createdby,
    p.updated,
    p.updatedby,
    'en_US'::character varying AS ad_language,
    p.c_project_id,
    p.value,
    p.name AS projectname,
    p.description,
    p.note,
    p.issummary,
    p.projectcategory,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    p.c_projecttype_id,
    pjt.name AS projecttypename,
    p.c_phase_id,
    pjp.name AS projectphasename,
    p.salesrep_id,
    COALESCE(ubp.name, u.name) AS salesrep_name,
    p.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    bpcg.greeting AS bpcontactgreeting,
    bpc.title,
    bpc.phone,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname,
    bpl.c_location_id,
    bp.referenceno,
    pt.name AS paymentterm,
    pt.documentnote AS paymenttermnote,
    p.poreference,
    p.c_currency_id,
    p.m_pricelist_version_id,
    p.c_campaign_id,
    p.plannedamt,
    p.plannedqty,
    p.plannedmarginamt,
    p.invoicedamt,
    p.invoicedqty,
    p.projectbalanceamt,
    p.iscommitment,
    p.committedamt,
    p.committedqty,
    p.datecontract,
    p.datefinish,
    p.iscommitceiling,
    p.m_warehouse_id,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM ((((((((((((adempiere.c_project p
     LEFT JOIN adempiere.c_bpartner bp ON ((p.c_bpartner_id = bp.c_bpartner_id)))
     JOIN adempiere.ad_orginfo oi ON ((p.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((p.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.c_projecttype pjt ON ((p.c_projecttype_id = pjt.c_projecttype_id)))
     LEFT JOIN adempiere.c_phase pjp ON ((p.c_phase_id = pjp.c_phase_id)))
     LEFT JOIN adempiere.ad_user u ON ((p.salesrep_id = u.ad_user_id)))
     LEFT JOIN adempiere.c_bpartner ubp ON ((u.c_bpartner_id = ubp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting bpg ON ((bp.c_greeting_id = bpg.c_greeting_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((p.ad_user_id = bpc.ad_user_id)))
     LEFT JOIN adempiere.c_greeting bpcg ON ((bpc.c_greeting_id = bpcg.c_greeting_id)))
     LEFT JOIN adempiere.c_bpartner_location bpl ON ((p.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     LEFT JOIN adempiere.c_paymentterm pt ON ((p.c_paymentterm_id = pt.c_paymentterm_id)));


ALTER TABLE adempiere.c_project_header_v OWNER TO adempiere;

--
-- Name: c_project_header_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_project_header_vt AS
 SELECT p.ad_client_id,
    p.ad_org_id,
    p.isactive,
    p.created,
    p.createdby,
    p.updated,
    p.updatedby,
    pt.ad_language,
    p.c_project_id,
    p.value,
    p.name AS projectname,
    p.description,
    p.note,
    p.issummary,
    p.projectcategory,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    p.c_projecttype_id,
    pjt.name AS projecttypename,
    p.c_phase_id,
    pjp.name AS projectphasename,
    p.salesrep_id,
    COALESCE(ubp.name, u.name) AS salesrep_name,
    p.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    bpcg.greeting AS bpcontactgreeting,
    bpc.title,
    bpc.phone,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname,
    bpl.c_location_id,
    bp.referenceno,
    pt.name AS paymentterm,
    pt.documentnote AS paymenttermnote,
    p.poreference,
    p.c_currency_id,
    p.m_pricelist_version_id,
    p.c_campaign_id,
    p.plannedamt,
    p.plannedqty,
    p.plannedmarginamt,
    p.invoicedamt,
    p.invoicedqty,
    p.projectbalanceamt,
    p.iscommitment,
    p.committedamt,
    p.committedqty,
    p.datecontract,
    p.datefinish,
    p.iscommitceiling,
    p.m_warehouse_id,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM ((((((((((((adempiere.c_project p
     LEFT JOIN adempiere.c_bpartner bp ON ((p.c_bpartner_id = bp.c_bpartner_id)))
     JOIN adempiere.ad_orginfo oi ON ((p.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((p.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.c_paymentterm_trl pt ON ((p.c_paymentterm_id = pt.c_paymentterm_id)))
     LEFT JOIN adempiere.c_projecttype pjt ON ((p.c_projecttype_id = pjt.c_projecttype_id)))
     LEFT JOIN adempiere.c_phase pjp ON ((p.c_phase_id = pjp.c_phase_id)))
     LEFT JOIN adempiere.ad_user u ON ((p.salesrep_id = u.ad_user_id)))
     LEFT JOIN adempiere.c_bpartner ubp ON ((u.c_bpartner_id = ubp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting bpg ON ((bp.c_greeting_id = bpg.c_greeting_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((p.ad_user_id = bpc.ad_user_id)))
     LEFT JOIN adempiere.c_greeting bpcg ON ((bpc.c_greeting_id = bpcg.c_greeting_id)))
     LEFT JOIN adempiere.c_bpartner_location bpl ON ((p.c_bpartner_location_id = bpl.c_bpartner_location_id)));


ALTER TABLE adempiere.c_project_header_vt OWNER TO adempiere;

--
-- Name: c_projectissue; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_projectissue (
    c_projectissue_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_project_id numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) DEFAULT 0,
    m_locator_id numeric(10,0) NOT NULL,
    movementqty numeric DEFAULT 0 NOT NULL,
    description character varying(255),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    movementdate timestamp without time zone NOT NULL,
    s_timeexpenseline_id numeric(10,0),
    m_inoutline_id numeric(10,0),
    processing character(1),
    processedon numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_projectissue_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_projectissue OWNER TO adempiere;

--
-- Name: c_projectissuema; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_projectissuema (
    c_projectissue_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    movementqty numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_projectissuema_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_projectissuema OWNER TO adempiere;

--
-- Name: c_projectphase; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_projectphase (
    c_project_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255),
    startdate timestamp without time zone,
    enddate timestamp without time zone,
    iscomplete character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_product_id numeric(10,0),
    priceactual numeric DEFAULT 0,
    generateorder character(1),
    c_order_id numeric(10,0),
    c_phase_id numeric(10,0),
    c_projectphase_id numeric(10,0) NOT NULL,
    help character varying(2000),
    name character varying(60) NOT NULL,
    qty numeric DEFAULT 0,
    seqno numeric(10,0) NOT NULL,
    committedamt numeric DEFAULT 0 NOT NULL,
    iscommitceiling character(1) DEFAULT 'N'::bpchar NOT NULL,
    projinvoicerule character(1),
    plannedamt numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_projectphase OWNER TO adempiere;

--
-- Name: c_projecttask; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_projecttask (
    c_projecttask_id numeric(10,0) NOT NULL,
    c_task_id numeric(10,0),
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    m_product_id numeric(10,0),
    c_projectphase_id numeric(10,0) NOT NULL,
    qty numeric DEFAULT 0,
    projinvoicerule character(1),
    plannedamt numeric DEFAULT 0 NOT NULL,
    committedamt numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_projecttask OWNER TO adempiere;

--
-- Name: c_recurring; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_recurring (
    c_recurring_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    recurringtype character(1) NOT NULL,
    c_order_id numeric(10,0),
    c_invoice_id numeric(10,0),
    c_payment_id numeric(10,0),
    c_project_id numeric(10,0),
    gl_journalbatch_id numeric(10,0),
    frequencytype character(1) NOT NULL,
    runsmax numeric(10,0) NOT NULL,
    runsremaining numeric(10,0) NOT NULL,
    datelastrun timestamp without time zone,
    datenextrun timestamp without time zone,
    processing character(1),
    frequency numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_recurring_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_recurring OWNER TO adempiere;

--
-- Name: c_recurring_run; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_recurring_run (
    c_recurring_run_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_payment_id numeric(10,0),
    c_order_id numeric(10,0),
    c_invoice_id numeric(10,0),
    c_project_id numeric(10,0),
    gl_journalbatch_id numeric(10,0),
    c_recurring_id numeric(10,0) NOT NULL,
    datedoc timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_recurring_run_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_recurring_run OWNER TO adempiere;

--
-- Name: c_region; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_region (
    c_region_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    c_country_id numeric(10,0) NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_region_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_region_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_region OWNER TO adempiere;

--
-- Name: c_remuneration; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_remuneration (
    c_remuneration_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    remunerationtype character(1) NOT NULL,
    standardhours numeric(10,0) DEFAULT 0 NOT NULL,
    grossramt numeric DEFAULT 0 NOT NULL,
    grossrcost numeric DEFAULT 0 NOT NULL,
    overtimeamt numeric DEFAULT 0 NOT NULL,
    overtimecost numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_remuneration_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_remuneration OWNER TO adempiere;

--
-- Name: c_revenuerecognition; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_revenuerecognition (
    c_revenuerecognition_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    istimebased character(1) NOT NULL,
    recognitionfrequency character(1),
    nomonths numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_revenuerecognition_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_revenuerecognition OWNER TO adempiere;

--
-- Name: c_revenuerecognition_plan; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_revenuerecognition_plan (
    c_revenuerecognition_plan_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    c_revenuerecognition_id numeric(10,0) NOT NULL,
    c_invoiceline_id numeric(10,0) NOT NULL,
    unearnedrevenue_acct numeric(10,0) NOT NULL,
    p_revenue_acct numeric(10,0) NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    totalamt numeric DEFAULT 0 NOT NULL,
    recognizedamt numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_revenuerecognition_plan_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_revenuerecognition_plan OWNER TO adempiere;

--
-- Name: c_revenuerecognition_run; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_revenuerecognition_run (
    c_revenuerecognition_run_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_revenuerecognition_plan_id numeric(10,0) NOT NULL,
    gl_journal_id numeric(10,0) NOT NULL,
    recognizedamt numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_revenuerecognition_run_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_revenuerecognition_run OWNER TO adempiere;

--
-- Name: c_rfq; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_rfq (
    c_rfq_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    c_rfq_topic_id numeric(10,0) NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    dateresponse timestamp without time zone NOT NULL,
    isrfqresponseaccepted character(1) DEFAULT 'Y'::bpchar NOT NULL,
    dateworkstart timestamp without time zone,
    deliverydays numeric(10,0) DEFAULT 0,
    dateworkcomplete timestamp without time zone,
    quotetype character(1) NOT NULL,
    isquotetotalamt character(1) DEFAULT 'N'::bpchar NOT NULL,
    isquoteallqty character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    isinvitedvendorsonly character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_bpartner_id numeric(10,0),
    c_bpartner_location_id numeric(10,0),
    ad_user_id numeric(10,0),
    salesrep_id numeric(10,0) NOT NULL,
    margin numeric,
    createso character(1),
    createpo character(1),
    publishrfq character(1),
    c_order_id numeric(10,0),
    copylines character(1),
    rankrfq character(1),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    documentno character varying(30) DEFAULT '.'::character varying NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_rfq_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfq_isinvitedvendorsonly_check CHECK ((isinvitedvendorsonly = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfq_isquoteallqty_check CHECK ((isquoteallqty = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfq_isquotetotalamt_check CHECK ((isquotetotalamt = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfq_isrfqresponseaccepted_check CHECK ((isrfqresponseaccepted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfq_isselfservice_check CHECK ((isselfservice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfq_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_rfq OWNER TO adempiere;

--
-- Name: c_rfq_topic; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_rfq_topic (
    c_rfq_topic_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_printformat_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_rfq_topic_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfq_topic_isselfservice_check CHECK ((isselfservice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_rfq_topic OWNER TO adempiere;

--
-- Name: c_rfq_topicsubscriber; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_rfq_topicsubscriber (
    c_rfq_topicsubscriber_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_rfq_topic_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bpartner_location_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    subscribedate timestamp without time zone,
    optoutdate timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_rfq_topicsubscriber_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_rfq_topicsubscriber OWNER TO adempiere;

--
-- Name: c_rfq_topicsubscriberonly; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_rfq_topicsubscriberonly (
    c_rfq_topicsubscriberonly_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_rfq_topicsubscriber_id numeric(10,0) NOT NULL,
    description character varying(255),
    m_product_id numeric(10,0),
    m_product_category_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_rfq_topicsubscriberonly_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_rfq_topicsubscriberonly OWNER TO adempiere;

--
-- Name: c_rfqline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_rfqline (
    c_rfqline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_rfq_id numeric(10,0) NOT NULL,
    line numeric(10,0) DEFAULT 0 NOT NULL,
    m_product_id numeric(10,0),
    m_attributesetinstance_id numeric(10,0) DEFAULT 0,
    description character varying(255),
    help character varying(2000),
    deliverydays numeric(10,0) DEFAULT 0,
    dateworkcomplete timestamp without time zone,
    dateworkstart timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_rfqline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_rfqline OWNER TO adempiere;

--
-- Name: c_rfqlineqty; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_rfqlineqty (
    c_rfqlineqty_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_rfqline_id numeric(10,0) NOT NULL,
    c_uom_id numeric(10,0) NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    margin numeric,
    ispurchaseqty character(1) DEFAULT 'N'::bpchar NOT NULL,
    bestresponseamt numeric DEFAULT 0,
    isofferqty character(1) DEFAULT 'N'::bpchar NOT NULL,
    offeramt numeric DEFAULT 0,
    benchmarkprice numeric DEFAULT 0 NOT NULL,
    isrfqqty character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_rfqlineqty_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfqlineqty_isofferqty_check CHECK ((isofferqty = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfqlineqty_ispurchaseqty_check CHECK ((ispurchaseqty = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_rfqlineqty OWNER TO adempiere;

--
-- Name: c_rfqresponse; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_rfqresponse (
    c_rfqresponse_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_rfq_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bpartner_location_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    c_currency_id numeric(10,0) NOT NULL,
    dateinvited timestamp without time zone,
    dateresponse timestamp without time zone,
    dateworkstart timestamp without time zone,
    deliverydays numeric(10,0) DEFAULT 0,
    dateworkcomplete timestamp without time zone,
    price numeric DEFAULT 0 NOT NULL,
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    iscomplete character(1) DEFAULT 'N'::bpchar NOT NULL,
    isselectedwinner character(1) DEFAULT 'N'::bpchar NOT NULL,
    ranking numeric(10,0) DEFAULT 0,
    processing character(1),
    c_order_id numeric(10,0),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    checkcomplete character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_rfqresponse_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfqresponse_iscomplete_check CHECK ((iscomplete = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfqresponse_isselectedwinner_check CHECK ((isselectedwinner = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfqresponse_isselfservice_check CHECK ((isselfservice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfqresponse_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_rfqresponse OWNER TO adempiere;

--
-- Name: c_rfqresponse_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_rfqresponse_v AS
 SELECT rr.c_rfqresponse_id,
    rr.c_rfq_id,
    rr.ad_client_id,
    rr.ad_org_id,
    rr.isactive,
    rr.created,
    rr.createdby,
    rr.updated,
    rr.updatedby,
    'en_US'::character varying AS ad_language,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    r.name,
    r.description,
    r.help,
    r.c_currency_id,
    c.iso_code,
    r.dateresponse,
    r.dateworkstart,
    r.deliverydays,
    rr.c_bpartner_id,
    bp.name AS bpname,
    bp.name2 AS bpname2,
    rr.c_bpartner_location_id,
    bpl.c_location_id,
    rr.ad_user_id,
    bpc.title,
    bpc.phone,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname
   FROM ((((((adempiere.c_rfqresponse rr
     JOIN adempiere.c_rfq r ON ((rr.c_rfq_id = r.c_rfq_id)))
     JOIN adempiere.ad_orginfo oi ON ((rr.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.c_currency c ON ((r.c_currency_id = c.c_currency_id)))
     JOIN adempiere.c_bpartner bp ON ((rr.c_bpartner_id = bp.c_bpartner_id)))
     JOIN adempiere.c_bpartner_location bpl ON ((rr.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((rr.ad_user_id = bpc.ad_user_id)));


ALTER TABLE adempiere.c_rfqresponse_v OWNER TO adempiere;

--
-- Name: c_rfqresponse_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_rfqresponse_vt AS
 SELECT rr.c_rfqresponse_id,
    rr.c_rfq_id,
    rr.ad_client_id,
    rr.ad_org_id,
    rr.isactive,
    rr.created,
    rr.createdby,
    rr.updated,
    rr.updatedby,
    l.ad_language,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    r.name,
    r.description,
    r.help,
    r.c_currency_id,
    c.iso_code,
    r.dateresponse,
    r.dateworkstart,
    r.deliverydays,
    rr.c_bpartner_id,
    bp.name AS bpname,
    bp.name2 AS bpname2,
    rr.c_bpartner_location_id,
    bpl.c_location_id,
    rr.ad_user_id,
    bpc.title,
    bpc.phone,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname
   FROM (((((((adempiere.c_rfqresponse rr
     JOIN adempiere.c_rfq r ON ((rr.c_rfq_id = r.c_rfq_id)))
     JOIN adempiere.ad_orginfo oi ON ((rr.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.c_currency c ON ((r.c_currency_id = c.c_currency_id)))
     JOIN adempiere.c_bpartner bp ON ((rr.c_bpartner_id = bp.c_bpartner_id)))
     JOIN adempiere.c_bpartner_location bpl ON ((rr.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((rr.ad_user_id = bpc.ad_user_id)))
     JOIN adempiere.ad_language l ON ((l.issystemlanguage = 'Y'::bpchar)));


ALTER TABLE adempiere.c_rfqresponse_vt OWNER TO adempiere;

--
-- Name: c_rfqresponseline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_rfqresponseline (
    c_rfqresponseline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_rfqline_id numeric(10,0) NOT NULL,
    c_rfqresponse_id numeric(10,0) NOT NULL,
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    isselectedwinner character(1) DEFAULT 'N'::bpchar NOT NULL,
    description character varying(255),
    help character varying(2000),
    dateworkstart timestamp without time zone,
    deliverydays numeric(10,0) DEFAULT 0,
    dateworkcomplete timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_rfqresponseline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfqresponseline_isselectedwinner_check CHECK ((isselectedwinner = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_rfqresponseline_isselfservice_check CHECK ((isselfservice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_rfqresponseline OWNER TO adempiere;

--
-- Name: c_rfqresponselineqty; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_rfqresponselineqty (
    c_rfqresponselineqty_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_rfqresponseline_id numeric(10,0) NOT NULL,
    c_rfqlineqty_id numeric(10,0) NOT NULL,
    price numeric DEFAULT 0 NOT NULL,
    discount numeric,
    ranking numeric(10,0) DEFAULT 0,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_rfqresponselineqty_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_rfqresponselineqty OWNER TO adempiere;

--
-- Name: c_rfqresponseline_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_rfqresponseline_v AS
 SELECT rrl.c_rfqresponse_id,
    rrl.c_rfqresponseline_id,
    rrl.c_rfqline_id,
    rq.c_rfqresponselineqty_id,
    rq.c_rfqlineqty_id,
    rrl.ad_client_id,
    rrl.ad_org_id,
    rrl.isactive,
    rrl.created,
    rrl.createdby,
    rrl.updated,
    rrl.updatedby,
    'en_US'::character varying AS ad_language,
    rl.line,
    rl.m_product_id,
    rl.m_attributesetinstance_id,
    COALESCE(((p.name)::text || (adempiere.productattribute(rl.m_attributesetinstance_id))::text), (rl.description)::text) AS name,
        CASE
            WHEN (p.name IS NOT NULL) THEN rl.description
            ELSE NULL::character varying
        END AS description,
    p.documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    rl.help,
    rl.dateworkstart,
    rl.deliverydays,
    q.c_uom_id,
    uom.uomsymbol,
    q.benchmarkprice,
    q.qty,
    rq.price,
    rq.discount
   FROM (((((adempiere.c_rfqresponselineqty rq
     JOIN adempiere.c_rfqlineqty q ON ((rq.c_rfqlineqty_id = q.c_rfqlineqty_id)))
     JOIN adempiere.c_uom uom ON ((q.c_uom_id = uom.c_uom_id)))
     JOIN adempiere.c_rfqresponseline rrl ON ((rq.c_rfqresponseline_id = rrl.c_rfqresponseline_id)))
     JOIN adempiere.c_rfqline rl ON ((rrl.c_rfqline_id = rl.c_rfqline_id)))
     LEFT JOIN adempiere.m_product p ON ((rl.m_product_id = p.m_product_id)))
  WHERE ((rq.isactive = 'Y'::bpchar) AND (q.isactive = 'Y'::bpchar) AND (rrl.isactive = 'Y'::bpchar) AND (rl.isactive = 'Y'::bpchar));


ALTER TABLE adempiere.c_rfqresponseline_v OWNER TO adempiere;

--
-- Name: c_rfqresponseline_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_rfqresponseline_vt AS
 SELECT rrl.c_rfqresponse_id,
    rrl.c_rfqresponseline_id,
    rrl.c_rfqline_id,
    rq.c_rfqresponselineqty_id,
    rq.c_rfqlineqty_id,
    rrl.ad_client_id,
    rrl.ad_org_id,
    rrl.isactive,
    rrl.created,
    rrl.createdby,
    rrl.updated,
    rrl.updatedby,
    l.ad_language,
    rl.line,
    rl.m_product_id,
    rl.m_attributesetinstance_id,
    COALESCE(((p.name)::text || (adempiere.productattribute(rl.m_attributesetinstance_id))::text), (rl.description)::text) AS name,
        CASE
            WHEN (p.name IS NOT NULL) THEN rl.description
            ELSE NULL::character varying
        END AS description,
    p.documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    rl.help,
    rl.dateworkstart,
    rl.deliverydays,
    q.c_uom_id,
    uom.uomsymbol,
    q.qty,
    rq.price,
    rq.discount
   FROM ((((((adempiere.c_rfqresponselineqty rq
     JOIN adempiere.c_rfqlineqty q ON ((rq.c_rfqlineqty_id = q.c_rfqlineqty_id)))
     JOIN adempiere.c_uom uom ON ((q.c_uom_id = uom.c_uom_id)))
     JOIN adempiere.c_rfqresponseline rrl ON ((rq.c_rfqresponseline_id = rrl.c_rfqresponseline_id)))
     JOIN adempiere.c_rfqline rl ON ((rrl.c_rfqline_id = rl.c_rfqline_id)))
     LEFT JOIN adempiere.m_product p ON ((rl.m_product_id = p.m_product_id)))
     JOIN adempiere.ad_language l ON ((l.issystemlanguage = 'Y'::bpchar)))
  WHERE ((rq.isactive = 'Y'::bpchar) AND (q.isactive = 'Y'::bpchar) AND (rrl.isactive = 'Y'::bpchar) AND (rl.isactive = 'Y'::bpchar));


ALTER TABLE adempiere.c_rfqresponseline_vt OWNER TO adempiere;

--
-- Name: c_rfqresponselineqty_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_rfqresponselineqty_v AS
 SELECT rq.c_rfqresponseline_id,
    rq.c_rfqresponselineqty_id,
    rq.c_rfqlineqty_id,
    rq.ad_client_id,
    rq.ad_org_id,
    rq.isactive,
    rq.created,
    rq.createdby,
    rq.updated,
    rq.updatedby,
    'en_US'::character varying AS ad_language,
    q.c_uom_id,
    uom.uomsymbol,
    q.qty,
    rq.price,
    rq.discount
   FROM ((adempiere.c_rfqresponselineqty rq
     JOIN adempiere.c_rfqlineqty q ON ((rq.c_rfqlineqty_id = q.c_rfqlineqty_id)))
     JOIN adempiere.c_uom uom ON ((q.c_uom_id = uom.c_uom_id)))
  WHERE ((rq.isactive = 'Y'::bpchar) AND (q.isactive = 'Y'::bpchar));


ALTER TABLE adempiere.c_rfqresponselineqty_v OWNER TO adempiere;

--
-- Name: c_rfqresponselineqty_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.c_rfqresponselineqty_vt AS
 SELECT rq.c_rfqresponseline_id,
    rq.c_rfqresponselineqty_id,
    rq.c_rfqlineqty_id,
    rq.ad_client_id,
    rq.ad_org_id,
    rq.isactive,
    rq.created,
    rq.createdby,
    rq.updated,
    rq.updatedby,
    l.ad_language,
    q.c_uom_id,
    uom.uomsymbol,
    q.qty,
    rq.price,
    rq.discount
   FROM (((adempiere.c_rfqresponselineqty rq
     JOIN adempiere.c_rfqlineqty q ON ((rq.c_rfqlineqty_id = q.c_rfqlineqty_id)))
     JOIN adempiere.c_uom uom ON ((q.c_uom_id = uom.c_uom_id)))
     JOIN adempiere.ad_language l ON ((l.issystemlanguage = 'Y'::bpchar)))
  WHERE ((rq.isactive = 'Y'::bpchar) AND (q.isactive = 'Y'::bpchar));


ALTER TABLE adempiere.c_rfqresponselineqty_vt OWNER TO adempiere;

--
-- Name: c_saleshistory; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_saleshistory (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_saleshistory_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    qty numeric,
    m_warehouse_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_category_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_class_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_group_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_classification_id numeric(10,0) DEFAULT NULL::numeric,
    c_bpartner_location_id numeric(10,0) DEFAULT NULL::numeric,
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    c_projecttask_id numeric(10,0) DEFAULT NULL::numeric,
    c_projectphase_id numeric(10,0) DEFAULT NULL::numeric,
    c_salesregion_id numeric(10,0) DEFAULT NULL::numeric,
    totalinvamt numeric,
    totalinvcost numeric,
    totalinvqty numeric,
    priceinvoiced numeric,
    costamt numeric,
    salesrep_id numeric(10,0) DEFAULT NULL::numeric,
    c_bp_group_id numeric(10,0) DEFAULT NULL::numeric,
    dateinvoiced timestamp without time zone,
    user1_id numeric(10,0) DEFAULT NULL::numeric,
    user2_id numeric(10,0) DEFAULT NULL::numeric,
    c_invoiceline_id numeric(10,0) DEFAULT NULL::numeric,
    documentno character varying(30) DEFAULT NULL::character varying,
    processed character(1) DEFAULT NULL::bpchar,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_saleshistory_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_saleshistory_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_saleshistory OWNER TO adempiere;

--
-- Name: c_salesregion; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_salesregion (
    c_salesregion_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    salesrep_id numeric(10,0),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_salesregion_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_salesregion OWNER TO adempiere;

--
-- Name: c_salesstage; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_salesstage (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_salesstage_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    probability numeric NOT NULL,
    value character varying(60) NOT NULL,
    isclosed character(1) DEFAULT 'N'::bpchar NOT NULL,
    iswon character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_salesstage_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_salesstage_isclosed_check CHECK ((isclosed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_salesstage_iswon_check CHECK ((iswon = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_salesstage OWNER TO adempiere;

--
-- Name: c_servicelevel; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_servicelevel (
    c_servicelevel_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    description character varying(255),
    servicelevelprovided numeric NOT NULL,
    servicelevelinvoiced numeric NOT NULL,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar,
    c_revenuerecognition_plan_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_servicelevel_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_servicelevel_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_servicelevel OWNER TO adempiere;

--
-- Name: c_servicelevelline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_servicelevelline (
    c_servicelevelline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_servicelevel_id numeric(10,0) NOT NULL,
    description character varying(255),
    servicelevelprovided numeric NOT NULL,
    servicedate timestamp without time zone NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_servicelevelline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_servicelevelline_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_servicelevelline OWNER TO adempiere;

--
-- Name: c_subacct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_subacct (
    c_subacct_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    c_elementvalue_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_subacct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_subacct OWNER TO adempiere;

--
-- Name: c_subscription; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_subscription (
    c_subscription_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    c_subscriptiontype_id numeric(10,0) NOT NULL,
    startdate timestamp without time zone NOT NULL,
    paiduntildate timestamp without time zone NOT NULL,
    isdue character(1) DEFAULT 'N'::bpchar NOT NULL,
    renewaldate timestamp without time zone NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_subscription OWNER TO adempiere;

--
-- Name: c_subscription_delivery; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_subscription_delivery (
    c_subscription_delivery_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_subscription_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_subscription_delivery OWNER TO adempiere;

--
-- Name: c_subscriptiontype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_subscriptiontype (
    c_subscriptiontype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    frequencytype character(1) NOT NULL,
    frequency numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_subscriptiontype OWNER TO adempiere;

--
-- Name: c_task; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_task (
    c_task_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    c_phase_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0),
    standardqty numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.c_task OWNER TO adempiere;

--
-- Name: c_tax_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_tax_acct (
    c_tax_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    t_due_acct numeric(10,0) NOT NULL,
    t_liability_acct numeric(10,0) NOT NULL,
    t_credit_acct numeric(10,0) NOT NULL,
    t_receivables_acct numeric(10,0) NOT NULL,
    t_expense_acct numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_tax_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_tax_acct OWNER TO adempiere;

--
-- Name: c_taxbase; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_taxbase (
    name character varying(60) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    base character(1),
    c_taxbase_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) NOT NULL,
    percentage numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_taxbase_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_taxbase OWNER TO adempiere;

--
-- Name: c_taxcategory; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_taxcategory (
    c_taxcategory_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    commoditycode character varying(20),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_taxcategory_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_taxcategory OWNER TO adempiere;

--
-- Name: c_taxcategory_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_taxcategory_trl (
    c_taxcategory_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_taxcategory_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_taxcategory_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_taxcategory_trl OWNER TO adempiere;

--
-- Name: c_taxdeclaration; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_taxdeclaration (
    c_taxdeclaration_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    datetrx timestamp without time zone NOT NULL,
    datefrom timestamp without time zone NOT NULL,
    dateto timestamp without time zone NOT NULL,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_taxdeclaration_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_taxdeclaration_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_taxdeclaration OWNER TO adempiere;

--
-- Name: c_taxdeclarationacct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_taxdeclarationacct (
    c_taxdeclarationacct_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255),
    c_taxdeclaration_id numeric(10,0) NOT NULL,
    fact_acct_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    line numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_taxdeclarationacct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_taxdeclarationacct OWNER TO adempiere;

--
-- Name: c_taxdeclarationline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_taxdeclarationline (
    c_taxdeclarationline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    line numeric(10,0) DEFAULT 0 NOT NULL,
    description character varying(255),
    ismanual character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_taxdeclaration_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_tax_id numeric(10,0) NOT NULL,
    c_invoice_id numeric(10,0),
    c_invoiceline_id numeric(10,0),
    c_allocationline_id numeric(10,0),
    c_currency_id numeric(10,0) NOT NULL,
    taxbaseamt numeric DEFAULT 0 NOT NULL,
    taxamt numeric DEFAULT 0 NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_taxdeclarationline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_taxdeclarationline_ismanual_check CHECK ((ismanual = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_taxdeclarationline OWNER TO adempiere;

--
-- Name: c_taxdefinition; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_taxdefinition (
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    name character varying(60) NOT NULL,
    c_bp_group_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_taxbase_id numeric(10,0),
    c_taxcategory_id numeric(10,0),
    c_taxdefinition_id numeric(10,0) NOT NULL,
    c_taxgroup_id numeric(10,0),
    c_taxtype_id numeric(10,0),
    c_tax_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) NOT NULL,
    isinvoiced character(1),
    m_product_category_id numeric(10,0),
    m_product_id numeric(10,0),
    maxtaxable numeric(10,0),
    mintaxable numeric(10,0),
    seqno numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    ad_orgtype_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_taxdefinition_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_taxdefinition_isinvoiced_check CHECK ((isinvoiced = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_taxdefinition OWNER TO adempiere;

--
-- Name: c_taxgroup; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_taxgroup (
    name character varying(60) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_taxgroup_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_taxgroup_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_taxgroup OWNER TO adempiere;

--
-- Name: c_taxpostal; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_taxpostal (
    c_taxpostal_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_tax_id numeric(10,0) NOT NULL,
    postal character varying(10) NOT NULL,
    postal_to character varying(10),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_taxpostal_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_taxpostal OWNER TO adempiere;

--
-- Name: c_taxtype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_taxtype (
    name character varying(60) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_taxtype_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_taxtype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_taxtype OWNER TO adempiere;

--
-- Name: c_uom_conversion; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_uom_conversion (
    c_uom_conversion_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_uom_id numeric(10,0) NOT NULL,
    c_uom_to_id numeric(10,0) NOT NULL,
    multiplyrate numeric DEFAULT 0 NOT NULL,
    dividerate numeric DEFAULT 0 NOT NULL,
    m_product_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_uom_conversion_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_uom_conversion OWNER TO adempiere;

--
-- Name: c_userremuneration; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_userremuneration (
    c_userremuneration_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    c_remuneration_id numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    validto timestamp without time zone,
    grossramt numeric DEFAULT 0 NOT NULL,
    grossrcost numeric DEFAULT 0 NOT NULL,
    overtimeamt numeric DEFAULT 0 NOT NULL,
    overtimecost numeric DEFAULT 0 NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_userremuneration_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_userremuneration OWNER TO adempiere;

--
-- Name: c_validcombination; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_validcombination (
    c_validcombination_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    alias character varying(40),
    combination character varying(60),
    description character varying(255),
    isfullyqualified character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    account_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    c_locfrom_id numeric(10,0),
    c_locto_id numeric(10,0),
    c_salesregion_id numeric(10,0),
    c_project_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    c_subacct_id numeric(10,0),
    userelement1_id numeric(10,0),
    userelement2_id numeric(10,0),
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_validcombination_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_validcombination_isfullyqualified_check CHECK ((isfullyqualified = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_validcombination OWNER TO adempiere;

--
-- Name: c_withholding; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_withholding (
    c_withholding_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    c_paymentterm_id numeric(10,0) NOT NULL,
    istaxwithholding character(1) DEFAULT 'Y'::bpchar NOT NULL,
    istaxprorated character(1) DEFAULT 'N'::bpchar NOT NULL,
    ispaidto3party character(1) DEFAULT 'Y'::bpchar NOT NULL,
    beneficiary numeric(10,0),
    ispercentwithholding character(1) DEFAULT 'Y'::bpchar NOT NULL,
    percent numeric DEFAULT 0,
    fixamt numeric DEFAULT 0,
    thresholdmin numeric DEFAULT 0,
    thresholdmax numeric DEFAULT 0,
    minamt numeric DEFAULT 0,
    maxamt numeric DEFAULT 0,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_withholding_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_withholding_ispaidto3party_check CHECK ((ispaidto3party = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_withholding_ispercentwithholding_check CHECK ((ispercentwithholding = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_withholding_istaxprorated_check CHECK ((istaxprorated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT c_withholding_istaxwithholding_check CHECK ((istaxwithholding = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_withholding OWNER TO adempiere;

--
-- Name: c_withholding_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_withholding_acct (
    c_withholding_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    withholding_acct numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_withholding_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_withholding_acct OWNER TO adempiere;

--
-- Name: c_year; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.c_year (
    c_year_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    fiscalyear character varying(10) NOT NULL,
    description character varying(255),
    c_calendar_id numeric(10,0) NOT NULL,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT c_year_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.c_year OWNER TO adempiere;

--
-- Name: cm_accesscontainer; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_accesscontainer (
    cm_accessprofile_id numeric(10,0) NOT NULL,
    cm_container_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_accesscontainer_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_accesscontainer OWNER TO adempiere;

--
-- Name: cm_accesslistbpgroup; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_accesslistbpgroup (
    cm_accessprofile_id numeric(10,0) NOT NULL,
    c_bp_group_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_accesslistbpgroup_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_accesslistbpgroup OWNER TO adempiere;

--
-- Name: cm_accesslistrole; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_accesslistrole (
    cm_accessprofile_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_accesslistrole_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_accesslistrole OWNER TO adempiere;

--
-- Name: cm_accessmedia; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_accessmedia (
    cm_media_id numeric(10,0) NOT NULL,
    cm_accessprofile_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_accessmedia_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_accessmedia OWNER TO adempiere;

--
-- Name: cm_accessnewschannel; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_accessnewschannel (
    cm_accessprofile_id numeric(10,0) NOT NULL,
    cm_newschannel_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_accessnewschannel_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_accessnewschannel OWNER TO adempiere;

--
-- Name: cm_accessprofile; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_accessprofile (
    cm_accessprofile_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isexclude character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_accessprofile_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_accessprofile_isexclude_check CHECK ((isexclude = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_accessprofile OWNER TO adempiere;

--
-- Name: cm_accessstage; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_accessstage (
    cm_accessprofile_id numeric(10,0) NOT NULL,
    cm_cstage_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_accessstage_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_accessstage OWNER TO adempiere;

--
-- Name: cm_ad; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_ad (
    cm_ad_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    cm_ad_cat_id numeric(10,0) NOT NULL,
    cm_media_id numeric(10,0) NOT NULL,
    targeturl character varying(120),
    target_frame character varying(20) NOT NULL,
    actualclick numeric(10,0) DEFAULT 0 NOT NULL,
    maxclick numeric(10,0) DEFAULT 0 NOT NULL,
    actualimpression numeric(10,0) DEFAULT 0 NOT NULL,
    maximpression numeric(10,0) DEFAULT 0 NOT NULL,
    startimpression numeric(10,0) DEFAULT 0 NOT NULL,
    startdate timestamp without time zone NOT NULL,
    enddate timestamp without time zone,
    contenthtml character varying(2000),
    isadflag character(1) DEFAULT 'Y'::bpchar NOT NULL,
    islogged character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_ad_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_ad_isadflag_check CHECK ((isadflag = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_ad_islogged_check CHECK ((islogged = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_ad OWNER TO adempiere;

--
-- Name: cm_ad_cat; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_ad_cat (
    cm_ad_cat_id numeric(10,0) NOT NULL,
    cm_webproject_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_ad_cat_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_ad_cat OWNER TO adempiere;

--
-- Name: cm_broadcastserver; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_broadcastserver (
    cm_broadcastserver_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ip_address character varying(20) NOT NULL,
    lastsynchronized timestamp without time zone,
    cm_webproject_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_broadcastserver_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_broadcastserver OWNER TO adempiere;

--
-- Name: cm_chat; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_chat (
    cm_chat_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    record_id numeric(10,0) NOT NULL,
    confidentialtype character(1) NOT NULL,
    cm_chattype_id numeric(10,0),
    moderationtype character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_chat_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_chat OWNER TO adempiere;

--
-- Name: cm_chatentry; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_chatentry (
    cm_chatentry_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    cm_chat_id numeric(10,0) NOT NULL,
    confidentialtype character(1) NOT NULL,
    characterdata text,
    cm_chatentryparent_id numeric(10,0),
    cm_chatentrygrandparent_id numeric(10,0),
    chatentrytype character(1) NOT NULL,
    moderatorstatus character(1),
    subject character varying(255),
    ad_user_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_chatentry_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_chatentry OWNER TO adempiere;

--
-- Name: cm_chattype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_chattype (
    cm_chattype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ad_table_id numeric(10,0) NOT NULL,
    moderationtype character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_chattype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_chattype OWNER TO adempiere;

--
-- Name: cm_chattypeupdate; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_chattypeupdate (
    cm_chattype_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_chattypeupdate_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_chattypeupdate_isselfservice_check CHECK ((isselfservice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_chattypeupdate OWNER TO adempiere;

--
-- Name: cm_chatupdate; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_chatupdate (
    cm_chat_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_chatupdate_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_chatupdate_isselfservice_check CHECK ((isselfservice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_chatupdate OWNER TO adempiere;

--
-- Name: cm_container; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_container (
    cm_container_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(2000),
    help character varying(2000),
    cm_webproject_id numeric(10,0) NOT NULL,
    cm_template_id numeric(10,0),
    title character varying(60),
    notice character varying(2000),
    containertype character(1),
    containerlinkurl character varying(60),
    relativeurl character varying(120),
    priority numeric(10,0) DEFAULT 0,
    isindexed character(1) DEFAULT 'Y'::bpchar NOT NULL,
    issecure character(1) DEFAULT 'Y'::bpchar NOT NULL,
    meta_robotstag character varying(2000),
    meta_author character varying(2000),
    meta_copyright character varying(2000),
    meta_content character varying(2000),
    meta_description character varying(2000),
    meta_keywords character varying(2000),
    meta_publisher character varying(2000),
    structurexml character varying(2000),
    containerxml character varying(2000),
    cm_containerlink_id numeric(10,0),
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    meta_language character(2),
    isvalid character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_container_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_container_isindexed_check CHECK ((isindexed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_container_issecure_check CHECK ((issecure = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_container OWNER TO adempiere;

--
-- Name: cm_container_element; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_container_element (
    cm_container_element_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    cm_container_id numeric(10,0) NOT NULL,
    contenthtml text,
    isvalid character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_container_element_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_container_element OWNER TO adempiere;

--
-- Name: cm_container_element_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_container_element_trl (
    cm_container_element_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    contenthtml text,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_container_element_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_container_element_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_container_element_trl OWNER TO adempiere;

--
-- Name: cm_container_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_container_trl (
    cm_container_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    title character varying(60),
    meta_description character varying(2000),
    meta_keywords character varying(2000),
    structurexml character varying(2000),
    containerxml character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_container_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_container_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_container_trl OWNER TO adempiere;

--
-- Name: cm_container_url; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_container_url (
    cm_container_url_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    cm_container_id numeric(10,0) NOT NULL,
    checked timestamp without time zone NOT NULL,
    status character(2) NOT NULL,
    last_result character varying(2000) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_container_url_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_container_url OWNER TO adempiere;

--
-- Name: cm_containerttable; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_containerttable (
    cm_containerttable_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    cm_container_id numeric(10,0) NOT NULL,
    cm_templatetable_id numeric(10,0) NOT NULL,
    record_id numeric(10,0),
    whereclause character varying(2000),
    otherclause character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_containerttable_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_containerttable OWNER TO adempiere;

--
-- Name: cm_cstage; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_cstage (
    cm_cstage_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(2000),
    help character varying(2000),
    cm_webproject_id numeric(10,0) NOT NULL,
    cm_template_id numeric(10,0),
    title character varying(60),
    notice character varying(2000),
    containertype character(1),
    containerlinkurl character varying(60),
    relativeurl character varying(120),
    priority numeric(10,0) DEFAULT 0,
    isindexed character(1) DEFAULT 'Y'::bpchar NOT NULL,
    issecure character(1) DEFAULT 'Y'::bpchar NOT NULL,
    meta_robotstag character varying(2000),
    meta_author character varying(2000),
    meta_copyright character varying(2000),
    meta_content character varying(2000),
    meta_description character varying(2000),
    meta_keywords character varying(2000),
    meta_publisher character varying(2000),
    structurexml character varying(2000),
    containerxml character varying(2000),
    cm_cstagelink_id numeric(10,0),
    ismodified character(1) NOT NULL,
    processing character(1),
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    meta_language character(2),
    isvalid character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_cstage_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_cstage_isindexed_check CHECK ((isindexed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_cstage_issecure_check CHECK ((issecure = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_cstage OWNER TO adempiere;

--
-- Name: cm_cstage_element; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_cstage_element (
    cm_cstage_element_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    cm_cstage_id numeric(10,0) NOT NULL,
    contenthtml text,
    isvalid character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_cstage_element_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_cstage_element OWNER TO adempiere;

--
-- Name: cm_cstage_element_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_cstage_element_trl (
    cm_cstage_element_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    contenthtml text,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_cstage_element_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_cstage_element_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_cstage_element_trl OWNER TO adempiere;

--
-- Name: cm_cstage_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_cstage_trl (
    cm_cstage_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    title character varying(60),
    meta_description character varying(2000),
    meta_keywords character varying(2000),
    structurexml character varying(2000),
    containerxml character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_cstage_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_cstage_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_cstage_trl OWNER TO adempiere;

--
-- Name: cm_cstagettable; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_cstagettable (
    cm_cstagettable_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    cm_cstage_id numeric(10,0) NOT NULL,
    cm_templatetable_id numeric(10,0) NOT NULL,
    record_id numeric(10,0),
    whereclause character varying(2000),
    otherclause character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_cstagettable_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_cstagettable OWNER TO adempiere;

--
-- Name: cm_media; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_media (
    cm_media_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    mediatype character(3),
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    cm_webproject_id numeric(10,0) NOT NULL,
    ad_image_id numeric(10,0),
    contenttext text,
    directdeploy character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_media_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_media OWNER TO adempiere;

--
-- Name: cm_media_server; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_media_server (
    cm_media_server_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    cm_webproject_id numeric(10,0) NOT NULL,
    ispassive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    url character varying(120),
    ip_address character varying(20),
    username character varying(40),
    password character varying(40),
    folder character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_media_server_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_media_server_ispassive_check CHECK ((ispassive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_media_server OWNER TO adempiere;

--
-- Name: cm_mediadeploy; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_mediadeploy (
    cm_mediadeploy_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    cm_media_server_id numeric(10,0) NOT NULL,
    cm_media_id numeric(10,0) NOT NULL,
    isdeployed character(1) DEFAULT 'N'::bpchar NOT NULL,
    lastsynchronized timestamp without time zone,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_mediadeploy_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_mediadeploy_isdeployed_check CHECK ((isdeployed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_mediadeploy OWNER TO adempiere;

--
-- Name: cm_newschannel; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_newschannel (
    cm_newschannel_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(2000) NOT NULL,
    help character varying(2000),
    ad_language character varying(40),
    cm_webproject_id numeric(10,0) NOT NULL,
    link character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_newschannel_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_newschannel OWNER TO adempiere;

--
-- Name: cm_newsitem; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_newsitem (
    cm_newsitem_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    cm_newschannel_id numeric(10,0) NOT NULL,
    title character varying(255),
    description character varying(255),
    author character varying(255),
    linkurl character varying(120),
    pubdate timestamp without time zone,
    contenthtml text,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_newsitem_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_newsitem OWNER TO adempiere;

--
-- Name: cm_template; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_template (
    cm_template_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    cm_webproject_id numeric(10,0),
    value character varying(40) NOT NULL,
    isinclude character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isusead character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isnews character(1) DEFAULT 'Y'::bpchar NOT NULL,
    elements character varying(2000),
    templatexst text,
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    isvalid character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_template_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_template_isinclude_check CHECK ((isinclude = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_template_isnews_check CHECK ((isnews = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT cm_template_isusead_check CHECK ((isusead = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_template OWNER TO adempiere;

--
-- Name: cm_template_ad_cat; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_template_ad_cat (
    cm_ad_cat_id numeric(10,0) NOT NULL,
    cm_template_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_template_ad_cat_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_template_ad_cat OWNER TO adempiere;

--
-- Name: cm_templatetable; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_templatetable (
    cm_templatetable_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    cm_template_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    whereclause character varying(2000),
    otherclause character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_templatetable_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_templatetable OWNER TO adempiere;

--
-- Name: cm_webaccesslog; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_webaccesslog (
    cm_webaccesslog_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    logtype character(1) NOT NULL,
    cm_webproject_id numeric(10,0),
    ip_address character varying(20) NOT NULL,
    cm_broadcastserver_id numeric(10,0),
    requesttype character varying(4) NOT NULL,
    pageurl character varying(120),
    referrer character varying(120),
    remote_host character varying(120),
    remote_addr character varying(60),
    useragent character varying(255),
    acceptlanguage character varying(60),
    websession character varying(40),
    hyphen character varying(20),
    protocol character varying(20) NOT NULL,
    statuscode numeric(10,0) DEFAULT 0,
    filesize numeric,
    ad_user_id numeric(10,0),
    cm_media_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_webaccesslog_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_webaccesslog OWNER TO adempiere;

--
-- Name: cm_webproject; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_webproject (
    cm_webproject_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    meta_copyright character varying(2000) NOT NULL,
    meta_publisher character varying(2000) NOT NULL,
    meta_robotstag character varying(2000) NOT NULL,
    meta_author character varying(2000) NOT NULL,
    meta_content character varying(2000) NOT NULL,
    ad_treecmc_id numeric(10,0) NOT NULL,
    ad_treecms_id numeric(10,0) NOT NULL,
    ad_treecmm_id numeric(10,0) NOT NULL,
    ad_treecmt_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_webproject_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_webproject OWNER TO adempiere;

--
-- Name: cm_webproject_domain; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_webproject_domain (
    cm_webproject_domain_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    cm_webproject_id numeric(10,0) NOT NULL,
    cm_container_id numeric(10,0),
    fqdn character varying(120) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_webproject_domain_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_webproject_domain OWNER TO adempiere;

--
-- Name: cm_wikitoken; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.cm_wikitoken (
    cm_wikitoken_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    tokentype character(1) NOT NULL,
    selectclause character varying(2000),
    ad_table_id numeric(10,0),
    whereclause character varying(2000),
    macro character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT cm_wikitoken_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.cm_wikitoken OWNER TO adempiere;

--
-- Name: dd_compartment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_compartment (
    ad_client_id numeric(10,0) NOT NULL,
    ad_image_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_compartment_id numeric(10,0) NOT NULL,
    dd_compatibilitygroup_id numeric(10,0) NOT NULL,
    description character varying(255),
    documentnote character varying(2000),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    maximumvolume numeric,
    minimumvolume numeric,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60),
    volume_uom_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_compartment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_compartment OWNER TO adempiere;

--
-- Name: dd_compartmentassignment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_compartmentassignment (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_compartmentassignment_id numeric(10,0) NOT NULL,
    dd_compartment_id numeric(10,0),
    dd_transportunit_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    seqno numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_compartmentassignment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_compartmentassignment OWNER TO adempiere;

--
-- Name: dd_compatibilitygroup; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_compatibilitygroup (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_compatibilitygroup_id numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_compatibilitygroup_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_compatibilitygroup OWNER TO adempiere;

--
-- Name: dd_driver; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_driver (
    ad_client_id numeric(10,0) NOT NULL,
    ad_image_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0),
    copyfrom character(1),
    createfrom character(1) DEFAULT 'N'::bpchar,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_driver_id numeric(10,0) NOT NULL,
    driverstatus character varying(3) NOT NULL,
    generateto character(1),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    name2 character varying(60),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_driver_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_driver OWNER TO adempiere;

--
-- Name: dd_driverassignment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_driverassignment (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_driverassignment_id numeric(10,0) NOT NULL,
    dd_driver_id numeric(10,0),
    dd_vehicle_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    seqno numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_driverassignment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_driverassignment OWNER TO adempiere;

--
-- Name: dd_freight; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_freight (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0),
    c_doctype_id numeric(10,0) NOT NULL,
    c_order_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_driver_id numeric(10,0),
    dd_freight_id numeric(10,0) NOT NULL,
    dd_order_id numeric(10,0),
    dd_vehicle_id numeric(10,0),
    datedoc timestamp without time zone NOT NULL,
    dateordered timestamp without time zone NOT NULL,
    description character varying(1),
    docaction character(2) DEFAULT 'CO'::bpchar NOT NULL,
    docstatus character varying(2) DEFAULT 'DR'::character varying,
    documentno character varying(30),
    freightamt numeric,
    freightcostrule character(1),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_freightcategory_id numeric(10,0),
    m_shipper_id numeric(10,0) NOT NULL,
    pp_order_id numeric(10,0),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    wm_inoutbound_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_freight_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_freight_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_freight_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_freight OWNER TO adempiere;

--
-- Name: dd_freightline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_freightline (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_charge_id numeric(10,0),
    c_locfrom_id numeric(10,0),
    c_locto_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_freightline_id numeric(10,0) NOT NULL,
    dd_freight_id numeric(10,0),
    freightamt numeric NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    line numeric(10,0) NOT NULL,
    m_freightcategory_id numeric(10,0),
    m_freight_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0),
    shipdate timestamp without time zone,
    totalamt numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    volume numeric,
    volume_uom_id numeric(10,0),
    weight numeric,
    weight_uom_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_freightline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_freightline OWNER TO adempiere;

--
-- Name: dd_license; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_license (
    ad_client_id numeric(10,0) NOT NULL,
    ad_image_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_licensetype_id numeric(10,0) NOT NULL,
    dd_license_id numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    value character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_license_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_license OWNER TO adempiere;

--
-- Name: dd_licenseassignment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_licenseassignment (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_driver_id numeric(10,0),
    dd_licenseassignment_id numeric(10,0) NOT NULL,
    dd_license_id numeric(10,0) NOT NULL,
    dd_vehicle_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    seqno numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_licenseassignment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_licenseassignment OWNER TO adempiere;

--
-- Name: dd_licensetype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_licensetype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_licensetype_id numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    transportlicensetype character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_licensetype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_licensetype OWNER TO adempiere;

--
-- Name: dd_networkdistribution; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_networkdistribution (
    validfrom timestamp without time zone,
    ad_org_id numeric(10,0) NOT NULL,
    copyfrom character(1),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validto timestamp without time zone,
    dd_networkdistribution_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    help character varying(2000),
    isactive character(1) NOT NULL,
    m_changenotice_id numeric(10,0),
    processing character(1),
    value character varying(80) NOT NULL,
    name character varying(60) NOT NULL,
    documentno character varying(22),
    revision character varying(10),
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_networkdistribution_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_networkdistribution OWNER TO adempiere;

--
-- Name: dd_networkdistributionline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_networkdistributionline (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_networkdistributionline_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    m_shipper_id numeric(10,0) NOT NULL,
    m_warehousesource_id numeric(10,0) NOT NULL,
    percent numeric,
    transfertime numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validto timestamp without time zone,
    priorityno numeric(10,0),
    dd_networkdistribution_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    validfrom timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_networkdistributionline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_networkdistributionline OWNER TO adempiere;

--
-- Name: dd_order; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_order (
    documentno character varying(30) NOT NULL,
    ad_orgtrx_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    c_activity_id numeric(10,0),
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bpartner_location_id numeric(10,0) NOT NULL,
    c_campaign_id numeric(10,0),
    c_charge_id numeric(10,0),
    c_doctype_id numeric(10,0) NOT NULL,
    c_invoice_id numeric(10,0),
    c_order_id numeric(10,0),
    c_project_id numeric(10,0),
    chargeamt numeric,
    createconfirm character(1),
    createfrom character(1),
    createpackage character(1),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_order_id numeric(10,0) NOT NULL,
    dateordered timestamp without time zone NOT NULL,
    dateprinted timestamp without time zone,
    datepromised timestamp without time zone NOT NULL,
    datereceived timestamp without time zone,
    deliveryrule character(1) DEFAULT 'A'::bpchar NOT NULL,
    deliveryviarule character(1) DEFAULT 'P'::bpchar NOT NULL,
    description character varying(255),
    docaction character(2) DEFAULT 'CO'::bpchar NOT NULL,
    docstatus character(2) DEFAULT 'DR'::bpchar NOT NULL,
    freightamt numeric,
    freightcostrule character(1) DEFAULT 'I'::bpchar NOT NULL,
    generateto character(1),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    isdelivered character(1) DEFAULT 'N'::bpchar,
    isdropship character(1) DEFAULT 'N'::bpchar,
    isindispute character(1) DEFAULT 'N'::bpchar NOT NULL,
    isintransit character(1) DEFAULT 'N'::bpchar NOT NULL,
    isprinted character(1) DEFAULT 'N'::bpchar NOT NULL,
    issotrx character(1) NOT NULL,
    isselected character(1) DEFAULT 'N'::bpchar,
    m_shipper_id numeric(10,0),
    m_warehouse_id numeric(10,0) NOT NULL,
    nopackages numeric(10,0),
    poreference character varying(20),
    pickdate timestamp without time zone,
    posted character(1) NOT NULL,
    priorityrule character(1) DEFAULT '5'::bpchar NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1) DEFAULT 'N'::bpchar,
    ref_order_id numeric(10,0),
    salesrep_id numeric(10,0),
    sendemail character(1) NOT NULL,
    shipdate timestamp without time zone,
    trackingno character varying(60),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    volume numeric,
    ad_client_id numeric(10,0) NOT NULL,
    weight numeric,
    processedon numeric,
    m_freightcategory_id numeric(10,0) DEFAULT NULL::numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_order_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_order_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_order_isdelivered_check CHECK ((isdelivered = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_order_isdropship_check CHECK ((isdropship = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_order_isindispute_check CHECK ((isindispute = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_order_isintransit_check CHECK ((isintransit = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_order_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_order_isselected_check CHECK ((isselected = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_order_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_order_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_order_sendemail_check CHECK ((sendemail = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_order OWNER TO adempiere;

--
-- Name: dd_order_header_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.dd_order_header_v AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    'en_US'::character varying AS ad_language,
    o.dd_order_id,
    o.c_order_id,
    o.issotrx,
    o.documentno,
    o.docstatus,
    o.c_doctype_id,
    o.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    o.m_warehouse_id,
    wh.c_location_id AS warehouse_location_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    o.salesrep_id,
    COALESCE(ubp.name, u.name) AS salesrep_name,
    o.dateordered,
    o.datepromised,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    bpcg.greeting AS bpcontactgreeting,
    bpc.title,
    bpc.phone,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname,
    bpl.c_location_id,
    ((l.postal)::text || (l.postal_add)::text) AS postal,
    bp.referenceno,
    o.description,
    o.poreference,
    o.c_charge_id,
    o.chargeamt,
    o.volume,
    o.weight,
    o.c_campaign_id,
    o.c_project_id,
    o.c_activity_id,
    o.m_shipper_id,
    o.deliveryrule,
    o.deliveryviarule,
    o.priorityrule,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM ((((((((((((adempiere.dd_order o
     JOIN adempiere.c_doctype dt ON ((o.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.m_warehouse wh ON ((o.m_warehouse_id = wh.m_warehouse_id)))
     JOIN adempiere.c_bpartner bp ON ((o.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting bpg ON ((bp.c_greeting_id = bpg.c_greeting_id)))
     JOIN adempiere.c_bpartner_location bpl ON ((o.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     JOIN adempiere.c_location l ON ((bpl.c_location_id = l.c_location_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((o.ad_user_id = bpc.ad_user_id)))
     LEFT JOIN adempiere.c_greeting bpcg ON ((bpc.c_greeting_id = bpcg.c_greeting_id)))
     JOIN adempiere.ad_orginfo oi ON ((o.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((o.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((o.salesrep_id = u.ad_user_id)))
     LEFT JOIN adempiere.c_bpartner ubp ON ((u.c_bpartner_id = ubp.c_bpartner_id)));


ALTER TABLE adempiere.dd_order_header_v OWNER TO adempiere;

--
-- Name: dd_order_header_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.dd_order_header_vt AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    dt.ad_language,
    o.dd_order_id,
    o.c_order_id,
    o.issotrx,
    o.documentno,
    o.docstatus,
    o.c_doctype_id,
    o.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    o.m_warehouse_id,
    wh.c_location_id AS warehouse_location_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    o.salesrep_id,
    COALESCE(ubp.name, u.name) AS salesrep_name,
    o.dateordered,
    o.datepromised,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    bpcg.greeting AS bpcontactgreeting,
    bpc.title,
    bpc.phone,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname,
    bpl.c_location_id,
    ((l.postal)::text || (l.postal_add)::text) AS postal,
    bp.referenceno,
    o.description,
    o.poreference,
    o.c_charge_id,
    o.chargeamt,
    o.volume,
    o.weight,
    o.c_campaign_id,
    o.c_project_id,
    o.c_activity_id,
    o.m_shipper_id,
    o.deliveryrule,
    o.deliveryviarule,
    o.priorityrule,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM ((((((((((((adempiere.dd_order o
     JOIN adempiere.c_doctype_trl dt ON ((o.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.m_warehouse wh ON ((o.m_warehouse_id = wh.m_warehouse_id)))
     JOIN adempiere.c_bpartner bp ON ((o.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting_trl bpg ON (((bp.c_greeting_id = bpg.c_greeting_id) AND ((dt.ad_language)::text = (bpg.ad_language)::text))))
     JOIN adempiere.c_bpartner_location bpl ON ((o.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     JOIN adempiere.c_location l ON ((bpl.c_location_id = l.c_location_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((o.ad_user_id = bpc.ad_user_id)))
     LEFT JOIN adempiere.c_greeting_trl bpcg ON (((bpc.c_greeting_id = bpcg.c_greeting_id) AND ((dt.ad_language)::text = (bpcg.ad_language)::text))))
     JOIN adempiere.ad_orginfo oi ON ((o.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((o.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((o.salesrep_id = u.ad_user_id)))
     LEFT JOIN adempiere.c_bpartner ubp ON ((u.c_bpartner_id = ubp.c_bpartner_id)));


ALTER TABLE adempiere.dd_order_header_vt OWNER TO adempiere;

--
-- Name: dd_orderline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_orderline (
    line numeric(10,0) NOT NULL,
    qtyintransit numeric,
    qtyordered numeric NOT NULL,
    m_product_id numeric(10,0),
    dd_order_id numeric(10,0) NOT NULL,
    c_charge_id numeric(10,0),
    c_project_id numeric(10,0),
    c_uom_id numeric(10,0) NOT NULL,
    confirmedqty numeric,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_orderline_id numeric(10,0) NOT NULL,
    datedelivered timestamp without time zone,
    dateordered timestamp without time zone,
    datepromised timestamp without time zone,
    description character varying(255),
    freightamt numeric,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isdescription character(1) DEFAULT 'N'::bpchar NOT NULL,
    isinvoiced character(1) DEFAULT 'N'::bpchar NOT NULL,
    linenetamt numeric,
    m_attributesetinstanceto_id numeric(10,0),
    m_attributesetinstance_id numeric(10,0),
    m_locatorto_id numeric(10,0) NOT NULL,
    m_locator_id numeric(10,0) NOT NULL,
    pickedqty numeric,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    qtydelivered numeric,
    qtyentered numeric NOT NULL,
    qtyreserved numeric,
    scrappedqty numeric DEFAULT 0,
    targetqty numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    user1_id numeric(10,0),
    ad_client_id numeric(10,0) NOT NULL,
    user2_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    c_activity_id numeric(10,0),
    c_campaign_id numeric(10,0),
    m_shipper_id numeric(10,0),
    wm_inoutboundline_id numeric(10,0),
    m_freightcategory_id numeric(10,0),
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    c_projectphase_id numeric(10,0) DEFAULT NULL::numeric,
    c_projecttask_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_orderline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_orderline_isdescription_check CHECK ((isdescription = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_orderline_isinvoiced_check CHECK ((isinvoiced = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_orderline_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_orderline OWNER TO adempiere;

--
-- Name: dd_requirement; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_requirement (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_requirementtype_id numeric(10,0) NOT NULL,
    dd_requirement_id numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismandatory character(1),
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_requirement_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_requirement_ismandatory_check CHECK ((ismandatory = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_requirement OWNER TO adempiere;

--
-- Name: dd_requirementassignment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_requirementassignment (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_driver_id numeric(10,0),
    dd_requirementassignment_id numeric(10,0) NOT NULL,
    dd_requirement_id numeric(10,0),
    dd_vehicle_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isvalid character(1),
    seqno numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_requirementassignment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_requirementassignment_isvalid_check CHECK ((isvalid = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_requirementassignment OWNER TO adempiere;

--
-- Name: dd_requirementtype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_requirementtype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_requirementtype_id numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_requirementtype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_requirementtype OWNER TO adempiere;

--
-- Name: dd_transportassignment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_transportassignment (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_transportassignment_id numeric(10,0) NOT NULL,
    dd_transportunit_id numeric(10,0),
    dd_vehicle_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    seqno numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_transportassignment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_transportassignment OWNER TO adempiere;

--
-- Name: dd_transportunit; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_transportunit (
    ad_client_id numeric(10,0) NOT NULL,
    ad_image_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0),
    axlesnumber numeric,
    carriernumber character varying(30),
    copyfrom character(1),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_compatibilitygroup_id numeric(10,0),
    dd_transportunittype_id numeric(10,0) NOT NULL,
    dd_transportunit_id numeric(10,0) NOT NULL,
    description character varying(255),
    dimension_uom_id numeric(10,0) NOT NULL,
    documentnote character varying(2000),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    maximumvolume numeric,
    maximumweight numeric,
    minimumvolume numeric,
    minimumweight numeric,
    name character varying(60) NOT NULL,
    transportheight numeric,
    transportlength numeric,
    transportstatus character varying(3) NOT NULL,
    transportwidth numeric,
    unladenweight numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60),
    volume numeric,
    volume_uom_id numeric(10,0) NOT NULL,
    weight numeric,
    weight_uom_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_transportunit_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_transportunit OWNER TO adempiere;

--
-- Name: dd_transportunittype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_transportunittype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_transportunittype_id numeric(10,0) NOT NULL,
    description character varying(255),
    dimension_uom_id numeric(10,0) NOT NULL,
    hasvaporrecoverysystem character(1),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    transportmode character varying(3) NOT NULL,
    transportphysicaltype character varying(3) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60),
    volume_uom_id numeric(10,0) NOT NULL,
    weight_uom_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_transportunittype_hasvaporrecoverysystem_check CHECK ((hasvaporrecoverysystem = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT dd_transportunittype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_transportunittype OWNER TO adempiere;

--
-- Name: dd_vehicle; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_vehicle (
    ad_client_id numeric(10,0) NOT NULL,
    ad_image_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0),
    compartmentsnumber numeric(10,0),
    copyfrom character(1),
    createfrom character(1),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_compatibilitygroup_id numeric(10,0),
    dd_vehicletype_id numeric(10,0) NOT NULL,
    dd_vehicle_id numeric(10,0) NOT NULL,
    description character varying(255),
    dimension_uom_id numeric(10,0) NOT NULL,
    documentnote character varying(2000),
    generateto character(1) DEFAULT 'N'::bpchar,
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    maximumvolume numeric,
    maximumweight numeric,
    minimumvolume numeric,
    minimumweight numeric,
    name character varying(60) NOT NULL,
    transportheight numeric,
    transportlength numeric,
    transportwidth numeric,
    unladenweight numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60),
    vehiclestatus character varying(3) NOT NULL,
    volume numeric,
    volume_uom_id numeric(10,0) NOT NULL,
    weight numeric,
    weight_uom_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_vehicle_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_vehicle OWNER TO adempiere;

--
-- Name: dd_vehicleassignment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_vehicleassignment (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_vehicleassignment_id numeric(10,0) NOT NULL,
    dd_vehicle_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_shipper_id numeric(10,0) NOT NULL,
    seqno numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_vehicleassignment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_vehicleassignment OWNER TO adempiere;

--
-- Name: dd_vehicletype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.dd_vehicletype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dd_vehicletype_id numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60),
    vehicletype character varying(3) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT dd_vehicletype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.dd_vehicletype OWNER TO adempiere;

--
-- Name: exp_format; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.exp_format (
    exp_format_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ad_table_id numeric(10,0) NOT NULL,
    whereclause character varying(255),
    testimportmodel character(1),
    version character varying(40) NOT NULL,
    processing character(1),
    testexportmodel character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT exp_format_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.exp_format OWNER TO adempiere;

--
-- Name: exp_formatline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.exp_formatline (
    exp_formatline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    exp_format_id numeric(10,0),
    "position" numeric(10,0),
    ismandatory character(1),
    type character(1) DEFAULT 'E'::bpchar NOT NULL,
    ad_column_id numeric(10,0),
    exp_embeddedformat_id numeric(10,0),
    ispartuniqueindex character(1) DEFAULT 'N'::bpchar,
    dateformat character varying(40),
    iscreatenonexisting character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT exp_formatline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT exp_formatline_iscreatenonexisting_check CHECK ((iscreatenonexisting = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT exp_formatline_ismandatory_check CHECK ((ismandatory = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT exp_formatline_ispartuniqueindex_check CHECK ((ispartuniqueindex = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.exp_formatline OWNER TO adempiere;

--
-- Name: exp_processor; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.exp_processor (
    exp_processor_id numeric(10,0) NOT NULL,
    exp_processor_type_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    host character varying(255),
    port numeric(10,0),
    account character varying(255),
    passwordinfo character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT exp_processor_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.exp_processor OWNER TO adempiere;

--
-- Name: exp_processor_type; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.exp_processor_type (
    exp_processor_type_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    javaclass character varying(255) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT exp_processor_type_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.exp_processor_type OWNER TO adempiere;

--
-- Name: exp_processorparameter; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.exp_processorparameter (
    exp_processorparameter_id numeric(10,0) NOT NULL,
    exp_processor_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    parametervalue character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT exp_processorparameter_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.exp_processorparameter OWNER TO adempiere;

--
-- Name: fact_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.fact_acct (
    fact_acct_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    account_id numeric(10,0) NOT NULL,
    datetrx timestamp without time zone NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    c_period_id numeric(10,0),
    ad_table_id numeric(10,0) NOT NULL,
    record_id numeric(10,0) NOT NULL,
    line_id numeric(10,0),
    gl_category_id numeric(10,0),
    gl_budget_id numeric(10,0),
    c_tax_id numeric(10,0),
    m_locator_id numeric(10,0),
    postingtype character(1) NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    amtsourcedr numeric DEFAULT 0 NOT NULL,
    amtsourcecr numeric DEFAULT 0 NOT NULL,
    amtacctdr numeric DEFAULT 0 NOT NULL,
    amtacctcr numeric DEFAULT 0 NOT NULL,
    c_uom_id numeric(10,0),
    qty numeric DEFAULT 0,
    m_product_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    c_locfrom_id numeric(10,0),
    c_locto_id numeric(10,0),
    c_salesregion_id numeric(10,0),
    c_project_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    description character varying(255),
    a_asset_id numeric(10,0),
    c_subacct_id numeric(10,0),
    userelement1_id numeric(10,0),
    userelement2_id numeric(10,0),
    c_projectphase_id numeric(10,0),
    c_projecttask_id numeric(10,0),
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT fact_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.fact_acct OWNER TO adempiere;

--
-- Name: fact_acct_summary; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.fact_acct_summary (
    ad_client_id numeric(10,0) NOT NULL,
    ad_orgtrx_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    account_id numeric(10,0) NOT NULL,
    amtacctcr numeric NOT NULL,
    amtacctdr numeric NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    c_activity_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_locfrom_id numeric(10,0),
    c_locto_id numeric(10,0),
    c_period_id numeric(10,0) NOT NULL,
    c_projectphase_id numeric(10,0),
    c_projecttask_id numeric(10,0),
    c_project_id numeric(10,0),
    c_salesregion_id numeric(10,0),
    c_subacct_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    gl_budget_id numeric(10,0),
    isactive character(1) NOT NULL,
    m_product_id numeric(10,0),
    pa_reportcube_id numeric(10,0) NOT NULL,
    postingtype character(1) NOT NULL,
    qty numeric NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    userelement1_id numeric(10,0),
    userelement2_id numeric(10,0),
    dateacct timestamp without time zone,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT fact_acct_summary_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.fact_acct_summary OWNER TO adempiere;

--
-- Name: fact_reconciliation; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.fact_reconciliation (
    updatedby numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    matchcode character varying(60) DEFAULT NULL::character varying,
    updated timestamp without time zone NOT NULL,
    fact_acct_id numeric(10,0) NOT NULL,
    fact_reconciliation_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT fact_reconciliation_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.fact_reconciliation OWNER TO adempiere;

--
-- Name: gl_budget; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.gl_budget (
    gl_budget_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    isprimary character(1) DEFAULT 'Y'::bpchar NOT NULL,
    budgetstatus character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT gl_budget_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_budget_isprimary_check CHECK ((isprimary = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.gl_budget OWNER TO adempiere;

--
-- Name: gl_budgetcontrol; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.gl_budgetcontrol (
    gl_budgetcontrol_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    c_acctschema_id numeric(10,0) NOT NULL,
    gl_budget_id numeric(10,0) NOT NULL,
    commitmenttype character(1) NOT NULL,
    isbeforeapproval character(1) DEFAULT 'N'::bpchar NOT NULL,
    budgetcontrolscope character(1) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT gl_budgetcontrol_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_budgetcontrol_isbeforeapproval_check CHECK ((isbeforeapproval = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.gl_budgetcontrol OWNER TO adempiere;

--
-- Name: gl_category; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.gl_category (
    gl_category_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    categorytype character(1) NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    docbasetype character varying(3),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT gl_category_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.gl_category OWNER TO adempiere;

--
-- Name: gl_distribution; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.gl_distribution (
    gl_distribution_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    postingtype character(1),
    c_doctype_id numeric(10,0),
    c_acctschema_id numeric(10,0) NOT NULL,
    anyorg character(1) DEFAULT 'Y'::bpchar NOT NULL,
    org_id numeric(10,0),
    anyacct character(1) DEFAULT 'Y'::bpchar NOT NULL,
    account_id numeric(10,0),
    anyproduct character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_product_id numeric(10,0),
    anybpartner character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_bpartner_id numeric(10,0),
    anyproject character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_project_id numeric(10,0),
    anycampaign character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_campaign_id numeric(10,0),
    anyactivity character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_activity_id numeric(10,0),
    anysalesregion character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_salesregion_id numeric(10,0),
    anyorgtrx character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ad_orgtrx_id numeric(10,0),
    anylocto character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_locto_id numeric(10,0),
    anylocfrom character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_locfrom_id numeric(10,0),
    anyuser1 character(1) DEFAULT 'Y'::bpchar NOT NULL,
    user1_id numeric(10,0),
    anyuser2 character(1) DEFAULT 'Y'::bpchar NOT NULL,
    user2_id numeric(10,0),
    percenttotal numeric NOT NULL,
    isvalid character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    iscreatereversal character(1) DEFAULT 'Y'::bpchar NOT NULL,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    anyuser3 character(1) DEFAULT NULL::bpchar,
    anyuser4 character(1) DEFAULT NULL::bpchar,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    copyfrom character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT gl_distribution_anyacct_check CHECK ((anyacct = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anyactivity_check CHECK ((anyactivity = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anybpartner_check CHECK ((anybpartner = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anycampaign_check CHECK ((anycampaign = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anylocfrom_check CHECK ((anylocfrom = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anylocto_check CHECK ((anylocto = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anyorg_check CHECK ((anyorg = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anyorgtrx_check CHECK ((anyorgtrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anyproduct_check CHECK ((anyproduct = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anyproject_check CHECK ((anyproject = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anysalesregion_check CHECK ((anysalesregion = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anyuser1_check CHECK ((anyuser1 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anyuser2_check CHECK ((anyuser2 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anyuser3_check CHECK ((anyuser3 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_anyuser4_check CHECK ((anyuser4 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_iscreatereversal_check CHECK ((iscreatereversal = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distribution_isvalid_check CHECK ((isvalid = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.gl_distribution OWNER TO adempiere;

--
-- Name: gl_distributionline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.gl_distributionline (
    gl_distributionline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    gl_distribution_id numeric(10,0) NOT NULL,
    line numeric(10,0) DEFAULT 0 NOT NULL,
    percent numeric NOT NULL,
    description character varying(255),
    overwriteorg character(1) DEFAULT 'N'::bpchar NOT NULL,
    org_id numeric(10,0),
    overwriteacct character(1) DEFAULT 'N'::bpchar NOT NULL,
    account_id numeric(10,0),
    overwriteproduct character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_product_id numeric(10,0),
    overwritebpartner character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_bpartner_id numeric(10,0),
    overwriteproject character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_project_id numeric(10,0),
    overwritecampaign character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_campaign_id numeric(10,0),
    overwriteactivity character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_activity_id numeric(10,0),
    overwritesalesregion character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_salesregion_id numeric(10,0),
    overwriteorgtrx character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_orgtrx_id numeric(10,0),
    overwritelocto character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_locto_id numeric(10,0),
    overwritelocfrom character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_locfrom_id numeric(10,0),
    overwriteuser1 character(1) DEFAULT 'N'::bpchar NOT NULL,
    user1_id numeric(10,0),
    overwriteuser2 character(1) DEFAULT 'N'::bpchar NOT NULL,
    user2_id numeric(10,0),
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    overwriteuser3 character(1) DEFAULT NULL::bpchar,
    overwriteuser4 character(1) DEFAULT NULL::bpchar,
    postingtype character(1) DEFAULT NULL::bpchar,
    overwritepostingtype character(1) DEFAULT 'N'::bpchar,
    invertaccountsign character(1) DEFAULT 'N'::bpchar,
    amtacctdr numeric,
    amtacctcr numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT gl_distributionline_invertaccountsign_check CHECK ((invertaccountsign = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwriteacct_check CHECK ((overwriteacct = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwriteactivity_check CHECK ((overwriteactivity = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwritebpartner_check CHECK ((overwritebpartner = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwritecampaign_check CHECK ((overwritecampaign = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwritelocfrom_check CHECK ((overwritelocfrom = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwritelocto_check CHECK ((overwritelocto = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwriteorg_check CHECK ((overwriteorg = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwriteorgtrx_check CHECK ((overwriteorgtrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwritepostingtype_check CHECK ((overwritepostingtype = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwriteproduct_check CHECK ((overwriteproduct = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwriteproject_check CHECK ((overwriteproject = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwritesalesregion_check CHECK ((overwritesalesregion = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwriteuser1_check CHECK ((overwriteuser1 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwriteuser2_check CHECK ((overwriteuser2 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwriteuser3_check CHECK ((overwriteuser3 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_distributionline_overwriteuser4_check CHECK ((overwriteuser4 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.gl_distributionline OWNER TO adempiere;

--
-- Name: gl_fund; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.gl_fund (
    gl_fund_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    c_acctschema_id numeric(10,0) NOT NULL,
    amt numeric DEFAULT 0 NOT NULL,
    datefrom timestamp without time zone,
    dateto timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT gl_fund_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.gl_fund OWNER TO adempiere;

--
-- Name: gl_fundrestriction; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.gl_fundrestriction (
    gl_fundrestriction_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    gl_fund_id numeric(10,0) NOT NULL,
    c_elementvalue_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT gl_fundrestriction_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.gl_fundrestriction OWNER TO adempiere;

--
-- Name: gl_journal; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.gl_journal (
    gl_journal_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    c_doctype_id numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    docstatus character(2) NOT NULL,
    docaction character(2) NOT NULL,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    isprinted character(1) DEFAULT 'N'::bpchar NOT NULL,
    description character varying(255) NOT NULL,
    postingtype character(1) NOT NULL,
    gl_budget_id numeric(10,0),
    gl_category_id numeric(10,0) NOT NULL,
    datedoc timestamp without time zone NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    c_period_id numeric(10,0) NOT NULL,
    c_currency_id numeric(10,0),
    currencyrate numeric DEFAULT 0 NOT NULL,
    gl_journalbatch_id numeric(10,0),
    totaldr numeric DEFAULT 0 NOT NULL,
    totalcr numeric DEFAULT 0 NOT NULL,
    controlamt numeric DEFAULT 0,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_conversiontype_id numeric(10,0) NOT NULL,
    reversal_id numeric(10,0),
    processedon numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT gl_journal_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_journal_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_journal_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_journal_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.gl_journal OWNER TO adempiere;

--
-- Name: gl_journalbatch; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.gl_journalbatch (
    gl_journalbatch_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    description character varying(255) NOT NULL,
    postingtype character(1) NOT NULL,
    gl_category_id numeric(10,0),
    datedoc timestamp without time zone,
    dateacct timestamp without time zone,
    c_period_id numeric(10,0),
    c_currency_id numeric(10,0),
    totaldr numeric DEFAULT 0 NOT NULL,
    totalcr numeric DEFAULT 0 NOT NULL,
    controlamt numeric DEFAULT 0,
    processing character(1) DEFAULT 'N'::bpchar NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    copyfrom character(1),
    c_doctype_id numeric(10,0) NOT NULL,
    docstatus character(2) NOT NULL,
    docaction character(2) NOT NULL,
    isapproved character(1),
    reversal_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT gl_journalbatch_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_journalbatch_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_journalbatch_processing_check CHECK ((processing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.gl_journalbatch OWNER TO adempiere;

--
-- Name: gl_journalline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.gl_journalline (
    gl_journalline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    gl_journal_id numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    isgenerated character(1) DEFAULT 'N'::bpchar NOT NULL,
    description character varying(255),
    amtsourcedr numeric DEFAULT 0 NOT NULL,
    amtsourcecr numeric DEFAULT 0 NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    currencyrate numeric DEFAULT 0 NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    amtacctdr numeric DEFAULT 0 NOT NULL,
    amtacctcr numeric DEFAULT 0 NOT NULL,
    c_uom_id numeric(10,0),
    qty numeric DEFAULT 0,
    c_validcombination_id numeric(10,0),
    c_conversiontype_id numeric(10,0) NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    a_asset_group_id numeric(10,0),
    a_asset_id numeric(10,0),
    a_createasset character(1) DEFAULT 'N'::bpchar,
    a_processed character(1) DEFAULT 'N'::bpchar,
    account_id numeric(10,0),
    ad_orgtrx_id numeric(10,0) DEFAULT NULL::numeric,
    alias_validcombination_id numeric(10,0) DEFAULT NULL::numeric,
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    c_locfrom_id numeric(10,0) DEFAULT NULL::numeric,
    c_locto_id numeric(10,0) DEFAULT NULL::numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    c_salesregion_id numeric(10,0) DEFAULT NULL::numeric,
    c_subacct_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_id numeric(10,0) DEFAULT NULL::numeric,
    user1_id numeric(10,0),
    user2_id numeric(10,0) DEFAULT NULL::numeric,
    userelement1_id numeric(10,0),
    userelement2_id numeric(10,0),
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT gl_journalline_a_createasset_check CHECK ((a_createasset = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_journalline_a_processed_check CHECK ((a_processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_journalline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT gl_journalline_isgenerated_check CHECK ((isgenerated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.gl_journalline OWNER TO adempiere;

--
-- Name: gl_journalline_acct_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.gl_journalline_acct_v AS
 SELECT gl.gl_journalline_id,
    gl.ad_client_id,
    gl.ad_org_id,
    gl.isactive,
    gl.created,
    gl.createdby,
    gl.updated,
    gl.updatedby,
    gl.gl_journal_id,
    gl.line,
    gl.isgenerated,
    gl.description,
    gl.amtsourcedr,
    gl.amtsourcecr,
    gl.c_currency_id,
    gl.c_conversiontype_id,
    gl.currencyrate,
    gl.dateacct,
    gl.amtacctdr,
    gl.amtacctcr,
    gl.c_uom_id,
    gl.qty,
    gl.c_validcombination_id,
    vc.c_acctschema_id,
    vc.account_id,
    vc.m_product_id,
    vc.c_bpartner_id,
    vc.ad_orgtrx_id,
    vc.c_locfrom_id,
    vc.c_locto_id,
    vc.c_salesregion_id,
    vc.c_project_id,
    vc.c_campaign_id,
    vc.user1_id,
    vc.user2_id,
    vc.isfullyqualified,
    vc.c_activity_id
   FROM adempiere.gl_journalline gl,
    adempiere.c_validcombination vc
  WHERE (gl.c_validcombination_id = vc.c_validcombination_id);


ALTER TABLE adempiere.gl_journalline_acct_v OWNER TO adempiere;

--
-- Name: hr_attribute; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_attribute (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_rule_id numeric(10,0),
    amount numeric,
    c_bpartner_id numeric(10,0),
    columntype character(1),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    hr_attribute_acct numeric(10,0),
    hr_attribute_id numeric(10,0) NOT NULL,
    hr_concept_id numeric(10,0) NOT NULL,
    hr_department_id numeric(10,0),
    hr_employee_id numeric(10,0),
    hr_job_id numeric(10,0),
    hr_payroll_id numeric(10,0),
    isactive character(1) NOT NULL,
    isprinted character(1),
    maxvalue numeric(10,0),
    minvalue numeric(10,0),
    qty numeric,
    servicedate timestamp without time zone,
    textmsg character varying(255),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    validto timestamp without time zone,
    c_invoice_id numeric(10,0) DEFAULT NULL::numeric,
    c_doctype_id numeric(10,0) DEFAULT NULL::numeric,
    c_charge_id numeric(10,0) DEFAULT NULL::numeric,
    c_bp_relation_id numeric(10,0) DEFAULT NULL::numeric,
    referenceno character varying(40) DEFAULT NULL::character varying,
    hr_contract_id numeric(10,0) DEFAULT NULL::numeric,
    hr_shiftgroup_id numeric(10,0) DEFAULT NULL::numeric,
    hr_workgroup_id numeric(10,0) DEFAULT NULL::numeric,
    hr_grade_id numeric(10,0) DEFAULT NULL::numeric,
    hr_degree_id numeric(10,0) DEFAULT NULL::numeric,
    hr_race_id numeric(10,0) DEFAULT NULL::numeric,
    hr_careerlevel_id numeric(10,0) DEFAULT NULL::numeric,
    hr_jobeducation_id numeric(10,0) DEFAULT NULL::numeric,
    hr_employeetype_id numeric(10,0) DEFAULT NULL::numeric,
    hr_jobtype_id numeric(10,0) DEFAULT NULL::numeric,
    hr_skilltype_id numeric(10,0) DEFAULT NULL::numeric,
    ad_orgtrx_id numeric(10,0) DEFAULT NULL::numeric,
    hr_designation_id numeric(10,0) DEFAULT NULL::numeric,
    hr_salaryrange_id numeric(10,0) DEFAULT NULL::numeric,
    hr_salarystructure_id numeric(10,0) DEFAULT NULL::numeric,
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    employeestatus character varying(2) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_attribute_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_attribute_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_attribute OWNER TO adempiere;

--
-- Name: hr_careerlevel; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_careerlevel (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_careerlevel_id numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    name character varying(255) NOT NULL,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_careerlevel_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_careerlevel OWNER TO adempiere;

--
-- Name: hr_concept; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_concept (
    accountsign character(1),
    issaveinhistoric character(1),
    isreceipt character(1),
    ispaid character(1),
    value character varying(40),
    name character varying(60) NOT NULL,
    hr_concept_category_id numeric(10,0),
    hr_concept_id numeric(10,0) NOT NULL,
    hr_department_id numeric(10,0),
    hr_job_id numeric(10,0),
    hr_payroll_id numeric(10,0),
    isactive character(1) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    isemployee character(1),
    isprinted character(1),
    ismanual character(1),
    type character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    isdefault character(1),
    ad_org_id numeric(10,0) NOT NULL,
    columntype character(1) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    ad_reference_id numeric(10,0),
    seqno numeric(10,0),
    isinvoiced character(1) DEFAULT NULL::bpchar,
    hr_concept_type_id numeric(10,0) DEFAULT NULL::numeric,
    istaxexempt character(1) DEFAULT NULL::bpchar,
    isprepayment character(1) DEFAULT 'N'::bpchar,
    isnotsaveinhistoryifnull character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_concept_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_concept_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_concept_isemployee_check CHECK ((isemployee = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_concept_isinvoiced_check CHECK ((isinvoiced = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_concept_ismanual_check CHECK (((ismanual = 'Y'::bpchar) OR (ismanual = 'N'::bpchar))),
    CONSTRAINT hr_concept_isnotsaveinhistoryifnull_check CHECK ((isnotsaveinhistoryifnull = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_concept_ispaid_check CHECK ((ispaid = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_concept_isprepayment_check CHECK ((isprepayment = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_concept_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_concept_isreceipt_check CHECK ((isreceipt = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_concept_issaveinhistoric_check CHECK (((issaveinhistoric = 'Y'::bpchar) OR (issaveinhistoric = 'N'::bpchar))),
    CONSTRAINT hr_concept_istaxexempt_check CHECK ((istaxexempt = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_concept OWNER TO adempiere;

--
-- Name: hr_concept_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_concept_acct (
    c_bp_group_id numeric(10,0),
    isbalancing character(1),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    createdby numeric(10,0) NOT NULL,
    hr_concept_acct_id numeric(10,0) NOT NULL,
    hr_concept_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    hr_revenue_acct numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_expense_acct numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_concept_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_concept_acct_isbalancing_check CHECK ((isbalancing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_concept_acct OWNER TO adempiere;

--
-- Name: hr_concept_category; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_concept_category (
    name character varying(60) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    hr_concept_acct numeric(10,0),
    hr_concept_category_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    isdefault character(1),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    value character varying(40),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_concept_category_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_concept_category_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_concept_category OWNER TO adempiere;

--
-- Name: hr_concept_type; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_concept_type (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    hr_concept_type_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar,
    name character varying(60),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_concept_type_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_concept_type_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_concept_type OWNER TO adempiere;

--
-- Name: hr_contract; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_contract (
    name character varying(60) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_project_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    hr_contract_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    netdays numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    ad_client_id numeric(10,0) NOT NULL,
    value character varying(40),
    monthlysalary_id numeric(10,0) DEFAULT NULL::numeric,
    dailysalary_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_contract_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_contract OWNER TO adempiere;

--
-- Name: hr_degree; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_degree (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_degree_id numeric(10,0) NOT NULL,
    name character varying(40) NOT NULL,
    description character varying(80) DEFAULT NULL::character varying,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_degree_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_degree OWNER TO adempiere;

--
-- Name: hr_department; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_department (
    name character varying(60) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    hr_department_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    value character varying(40),
    c_activity_id numeric(10,0),
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    strengthrequired numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_department_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_department OWNER TO adempiere;

--
-- Name: hr_departmentproduct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_departmentproduct (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_departmentproduct_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    hr_department_id numeric(10,0) NOT NULL,
    datefrom timestamp without time zone NOT NULL,
    dateto timestamp without time zone NOT NULL,
    qtyplan numeric NOT NULL,
    actualqty numeric NOT NULL,
    comments character varying(255) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_departmentproduct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_departmentproduct OWNER TO adempiere;

--
-- Name: hr_designation; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_designation (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_designation_id numeric(10,0) NOT NULL,
    name character varying(40) NOT NULL,
    description character varying(200) DEFAULT NULL::character varying,
    hr_salarystructure_id numeric(10,0) NOT NULL,
    hr_employeetype_id numeric(10,0) DEFAULT NULL::numeric,
    hr_payroll_id numeric(10,0) DEFAULT NULL::numeric,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_designation_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_designation OWNER TO adempiere;

--
-- Name: hr_education; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_education (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_education_id numeric(10,0) NOT NULL,
    hr_employee_id numeric(10,0),
    yearofpassing character varying(5) NOT NULL,
    hr_degree_id numeric(10,0) NOT NULL,
    duration character varying(40),
    schoolcollege character varying(40),
    schoolcollegeaddress character varying(200),
    comments character varying(1024),
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_education_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_education OWNER TO adempiere;

--
-- Name: hr_employee; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_employee (
    code character varying(1),
    name character varying(60),
    c_activity_id numeric(10,0),
    c_bpartner_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    enddate timestamp without time zone,
    hr_department_id numeric(10,0) NOT NULL,
    hr_employee_id numeric(10,0) NOT NULL,
    hr_job_id numeric(10,0) NOT NULL,
    hr_payroll_id numeric(10,0),
    isactive character(1) NOT NULL,
    name2 character varying(60),
    nationalcode character varying(60),
    sscode character varying(60),
    startdate timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    imageurl character varying(120),
    ad_user_id numeric(10,0),
    birthday timestamp without time zone,
    placeofbirth character varying(28),
    gender character varying(10),
    fathersname character varying(40),
    nationality_id numeric(10,0),
    maritalstatus character(1),
    partnersname character varying(40),
    partnersbirthdate timestamp without time zone,
    hr_race_id numeric(10,0),
    hr_skilltype_id numeric(10,0),
    logo_id numeric(10,0),
    hr_employeetype_id numeric(10,0),
    thumbimage_id numeric(10,0),
    bloodgroup character varying(10),
    identificationmark character varying(120),
    monthlysalary numeric,
    dailysalary numeric,
    employeestatus character varying(2),
    marriageanniversarydate timestamp without time zone,
    paymentrule character(1),
    employeeimage_id numeric(10,0),
    ismanager character(1) DEFAULT 'N'::bpchar,
    hr_jobtype_id numeric(10,0) DEFAULT NULL::numeric,
    hr_jobeducation_id numeric(10,0) DEFAULT NULL::numeric,
    hr_careerlevel_id numeric(10,0) DEFAULT NULL::numeric,
    hr_salaryrange_id numeric(10,0) DEFAULT NULL::numeric,
    hr_salarystructure_id numeric(10,0) DEFAULT NULL::numeric,
    hr_designation_id numeric(10,0) DEFAULT NULL::numeric,
    hr_jobopening_id numeric(10,0) DEFAULT NULL::numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    ad_orgtrx_id numeric(10,0) DEFAULT NULL::numeric,
    hr_grade_id numeric(10,0) DEFAULT NULL::numeric,
    hr_degree_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    hr_workgroup_id numeric(10,0) DEFAULT NULL::numeric,
    hr_shiftgroup_id numeric(10,0) DEFAULT NULL::numeric,
    c_salesregion_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_employee_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_employee_ismanager_check CHECK ((ismanager = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_employee OWNER TO adempiere;

--
-- Name: hr_employeedependent; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_employeedependent (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_employeedependent_id numeric(10,0) NOT NULL,
    hr_employee_id numeric(10,0),
    name character varying(40) NOT NULL,
    hr_relationship_id numeric(10,0) NOT NULL,
    birthday timestamp without time zone NOT NULL,
    age character varying(25),
    iscollectcash character(1) NOT NULL,
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    c_bpartnerrelation_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_employeedependent_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_employeedependent_iscollectcash_check CHECK ((iscollectcash = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_employeedependent OWNER TO adempiere;

--
-- Name: hr_employeeexperience; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_employeeexperience (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_employeeexperience_id numeric(10,0) NOT NULL,
    hr_employee_id numeric(10,0),
    designationwherejoined character varying(40),
    designationwhenleft character varying(40),
    company character varying(80) NOT NULL,
    datefrom timestamp without time zone,
    dateto timestamp without time zone,
    comments character varying(1024),
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_employeeexperience_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_employeeexperience OWNER TO adempiere;

--
-- Name: hr_employeeinsurance; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_employeeinsurance (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_employeeinsurance_id numeric(10,0) NOT NULL,
    hr_employee_id numeric(10,0),
    sponsorname character varying(40) NOT NULL,
    insuranceplan character varying(40),
    reference character varying(40) NOT NULL,
    coverageamount numeric NOT NULL,
    premiumamount numeric NOT NULL,
    claimedamount numeric,
    balanceamount numeric,
    description character varying(80),
    hr_insurancetype_id numeric(10,0) NOT NULL,
    paymentfrequency character varying(30) NOT NULL,
    paydate timestamp without time zone NOT NULL,
    hr_period_id numeric(10,0),
    datelastpaid timestamp without time zone,
    datelastpremium timestamp without time zone,
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_employeeinsurance_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_employeeinsurance OWNER TO adempiere;

--
-- Name: hr_employeetype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_employeetype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_employeetype_id numeric(10,0) NOT NULL,
    name character varying(40) NOT NULL,
    description character varying(200) DEFAULT NULL::character varying,
    wagelevel character varying(2) NOT NULL,
    hr_payroll_id numeric(10,0) NOT NULL,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_employeetype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_employeetype OWNER TO adempiere;

--
-- Name: hr_employeeweeklyoff; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_employeeweeklyoff (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_employeeweeklyoff_id numeric(10,0) NOT NULL,
    hr_employee_id numeric(10,0),
    description character varying(60),
    onsunday character(1),
    onmonday character(1),
    ontuesday character(1),
    onwednesday character(1),
    onthursday character(1),
    onfriday character(1),
    onsaturday character(1),
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_employeeweeklyoff_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_employeeweeklyoff_onfriday_check CHECK ((onfriday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_employeeweeklyoff_onmonday_check CHECK ((onmonday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_employeeweeklyoff_onsaturday_check CHECK ((onsaturday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_employeeweeklyoff_onsunday_check CHECK ((onsunday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_employeeweeklyoff_onthursday_check CHECK ((onthursday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_employeeweeklyoff_ontuesday_check CHECK ((ontuesday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_employeeweeklyoff_onwednesday_check CHECK ((onwednesday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_employeeweeklyoff OWNER TO adempiere;

--
-- Name: hr_grade; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_grade (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_grade_id numeric(10,0) NOT NULL,
    name character varying(40) NOT NULL,
    description character varying(200) DEFAULT NULL::character varying,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_grade_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_grade OWNER TO adempiere;

--
-- Name: hr_insurancetype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_insurancetype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_insurancetype_id numeric(10,0) NOT NULL,
    name character varying(40) NOT NULL,
    description character varying(200) DEFAULT NULL::character varying,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_insurancetype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_insurancetype OWNER TO adempiere;

--
-- Name: hr_interview; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_interview (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_interview_id numeric(10,0) NOT NULL,
    hr_jobapplication_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    bpname character varying(50) DEFAULT NULL::character varying,
    startdate timestamp without time zone NOT NULL,
    feedback character varying(2000) DEFAULT NULL::character varying,
    isselected character(1) DEFAULT NULL::bpchar,
    isinterviewover character(1) DEFAULT NULL::bpchar,
    seqno numeric(10,0) DEFAULT NULL::numeric,
    rating character varying(50) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_interview_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_interview_isinterviewover_check CHECK ((isinterviewover = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_interview_isselected_check CHECK ((isselected = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_interview OWNER TO adempiere;

--
-- Name: hr_job; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_job (
    name character varying(60) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    hr_department_id numeric(10,0),
    hr_job_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    isparent character(1),
    jobcant numeric(10,0),
    next_job_id numeric(10,0),
    supervisor_id numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    value character varying(40),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_job_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_job_isparent_check CHECK ((isparent = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_job OWNER TO adempiere;

--
-- Name: hr_jobapplication; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_jobapplication (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_jobapplication_id numeric(10,0) NOT NULL,
    firstname character varying(50) NOT NULL,
    middlename character varying(50),
    lastname character varying(50),
    fathername character varying(50) DEFAULT NULL::character varying,
    email character varying(50) DEFAULT NULL::character varying,
    phone2 character varying(10) NOT NULL,
    highesteducation character varying(50) NOT NULL,
    city character varying(50) DEFAULT NULL::character varying,
    company character varying(50) DEFAULT NULL::character varying,
    yearofpassing character varying(4) NOT NULL,
    totalrelevantexperience character varying(10) DEFAULT NULL::character varying,
    identityproof character varying(50) NOT NULL,
    identityproofno character varying(20) NOT NULL,
    status character varying(50) DEFAULT 'Applied'::character varying,
    comments character varying(2000) DEFAULT NULL::character varying,
    isselected character(1) DEFAULT NULL::bpchar,
    c_bpartner_id numeric(10,0),
    ref_bpartner_id numeric(10,0),
    isinterviewover character(1) DEFAULT NULL::bpchar,
    applicantsno character varying(10) DEFAULT NULL::character varying,
    c_location_id numeric(10,0),
    hr_designation_id numeric(10,0) DEFAULT NULL::numeric,
    jobapplicationdate timestamp without time zone NOT NULL,
    hr_jobopening_id numeric(10,0) NOT NULL,
    processed character(1) NOT NULL,
    recruitedemployee_id numeric(10,0) DEFAULT NULL::numeric,
    phone character varying(40) NOT NULL,
    isformeremployee character(1) DEFAULT NULL::bpchar,
    terminationdate timestamp without time zone,
    startdate timestamp without time zone,
    iswillingtorelocate character(1) DEFAULT NULL::bpchar,
    iswillingtotravel character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_jobapplication_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_jobapplication_isformeremployee_check CHECK ((isformeremployee = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_jobapplication_isinterviewover_check CHECK ((isinterviewover = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_jobapplication_isselected_check CHECK ((isselected = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_jobapplication_iswillingtorelocate_check CHECK ((iswillingtorelocate = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_jobapplication_iswillingtotravel_check CHECK ((iswillingtotravel = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_jobapplication_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_jobapplication OWNER TO adempiere;

--
-- Name: hr_jobapplicationhistory; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_jobapplicationhistory (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_jobapplicationhistory_id numeric(10,0) NOT NULL,
    datetrx timestamp without time zone,
    status character varying(50) DEFAULT NULL::character varying,
    hr_jobapplication_id numeric(10,0) DEFAULT NULL::numeric,
    remarks character varying(255) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_jobapplicationhistory_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_jobapplicationhistory OWNER TO adempiere;

--
-- Name: hr_jobeducation; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_jobeducation (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_jobeducation_id numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    name character varying(255) NOT NULL,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_jobeducation_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_jobeducation OWNER TO adempiere;

--
-- Name: hr_jobopening; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_jobopening (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_jobopening_id numeric(10,0) NOT NULL,
    hr_department_id numeric(10,0) DEFAULT NULL::numeric,
    c_location_id numeric(10,0),
    hr_careerlevel_id numeric(10,0),
    hr_jobeducation_id numeric(10,0) DEFAULT NULL::numeric,
    hr_jobtype_id numeric(10,0) DEFAULT NULL::numeric,
    responsibilities character varying(1000) DEFAULT NULL::character varying,
    primaryskills character varying(1000) DEFAULT NULL::character varying,
    secondaryskills character varying(1000) DEFAULT NULL::character varying,
    validfrom timestamp without time zone NOT NULL,
    validto timestamp without time zone NOT NULL,
    docaction character(2) DEFAULT 'CO'::bpchar NOT NULL,
    docstatus character varying(2) DEFAULT 'DR'::character varying NOT NULL,
    processed character(1) NOT NULL,
    isapproved character(1) NOT NULL,
    c_doctype_id numeric(10,0),
    value character varying(50),
    openpositions numeric(10,0) DEFAULT NULL::numeric,
    wfstate character varying(50) DEFAULT 'Requested'::character varying,
    ismanagerapproved character(1) NOT NULL,
    ishrapproved character(1) NOT NULL,
    name character varying(60) NOT NULL,
    hr_designation_id numeric(10,0) DEFAULT NULL::numeric,
    description character varying(255) DEFAULT NULL::character varying,
    supervisor_id numeric(10,0) DEFAULT NULL::numeric,
    ad_user_id numeric(10,0) DEFAULT NULL::numeric,
    pubdate timestamp without time zone NOT NULL,
    hr_salaryrange_id numeric(10,0) DEFAULT NULL::numeric,
    documentno character varying(30),
    datedoc timestamp without time zone NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_jobopening_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_jobopening_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_jobopening_ishrapproved_check CHECK ((ishrapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_jobopening_ismanagerapproved_check CHECK ((ismanagerapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_jobopening_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_jobopening OWNER TO adempiere;

--
-- Name: hr_jobopeninghistory; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_jobopeninghistory (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_jobopeninghistory_id numeric(10,0) NOT NULL,
    hr_jobopening_id numeric(10,0) DEFAULT NULL::numeric,
    ad_user_id numeric(10,0) DEFAULT NULL::numeric,
    status character varying(50) DEFAULT NULL::character varying,
    datetrx timestamp without time zone,
    remarks character varying(50) DEFAULT NULL::character varying,
    currentstatus character varying(50) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_jobopeninghistory_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_jobopeninghistory OWNER TO adempiere;

--
-- Name: hr_jobtype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_jobtype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_jobtype_id numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    name character varying(255) NOT NULL,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_jobtype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_jobtype OWNER TO adempiere;

--
-- Name: hr_leaveassign; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_leaveassign (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_leaveassign_id numeric(10,0) NOT NULL,
    hr_employee_id numeric(10,0),
    noofleavesallocated numeric NOT NULL,
    totalleaves numeric NOT NULL,
    usedleaves numeric,
    hr_leavetype_id numeric(10,0) NOT NULL,
    balance numeric,
    c_year_id numeric(10,0) NOT NULL,
    processing character(2),
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_leaveassign_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_leaveassign OWNER TO adempiere;

--
-- Name: hr_leavecredithistory; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_leavecredithistory (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_leavecredithistory_id numeric(10,0) NOT NULL,
    noofleavescredited numeric NOT NULL,
    hr_leavereason_id numeric(10,0),
    hr_leavetype_id numeric(10,0) NOT NULL,
    c_year_id numeric(10,0) NOT NULL,
    hr_employee_id numeric(10,0),
    hr_leaveassign_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_leavecredithistory_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_leavecredithistory OWNER TO adempiere;

--
-- Name: hr_leavereason; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_leavereason (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_leavereason_id numeric(10,0) NOT NULL,
    name character varying(100) NOT NULL,
    description character varying(200),
    leavereasontype character varying(4) NOT NULL,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_leavereason_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_leavereason OWNER TO adempiere;

--
-- Name: hr_leavetype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_leavetype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_leavetype_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(300),
    isleaverepeated character(1),
    isleavesforwardtonextyear character(1),
    maxleavestoforward numeric,
    repeatedtype character varying(10),
    value character varying(60),
    isprovidentfund character(1),
    maxcontinousleaves numeric,
    isadjacentholidayasleave character(1),
    ishalfdayleaveallowed character(1),
    isallowedencashment character(1),
    minforencashmentdays numeric,
    leavecredittimetype character varying(2) NOT NULL,
    adjacentholidaytype character varying(22),
    minattendancerequire numeric NOT NULL,
    datenextrun timestamp without time zone,
    noofleavesallocated numeric NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_leavetype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_leavetype_isadjacentholidayasleave_check CHECK ((isadjacentholidayasleave = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_leavetype_isallowedencashment_check CHECK ((isallowedencashment = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_leavetype_ishalfdayleaveallowed_check CHECK ((ishalfdayleaveallowed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_leavetype_isleaverepeated_check CHECK ((isleaverepeated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_leavetype_isleavesforwardtonextyear_check CHECK ((isleavesforwardtonextyear = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_leavetype_isprovidentfund_check CHECK ((isprovidentfund = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_leavetype OWNER TO adempiere;

--
-- Name: hr_leavetypecombination; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_leavetypecombination (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_leavetypecombination_id numeric(10,0) NOT NULL,
    hr_leavetype_id numeric(10,0) NOT NULL,
    allowedleavetype_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_leavetypecombination_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_leavetypecombination OWNER TO adempiere;

--
-- Name: hr_leavetypeemployeetype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_leavetypeemployeetype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_leavetypeemployeetype_id numeric(10,0) NOT NULL,
    hr_leavetype_id numeric(10,0) NOT NULL,
    hr_employeetype_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_leavetypeemployeetype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_leavetypeemployeetype OWNER TO adempiere;

--
-- Name: hr_list; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_list (
    name character varying(60) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    hr_department_id numeric(10,0),
    hr_employee_id numeric(10,0),
    hr_listtype_id numeric(10,0),
    hr_list_id numeric(10,0) NOT NULL,
    hr_payroll_id numeric(10,0),
    isactive character(1) NOT NULL,
    isemployee character(1),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone,
    ad_client_id numeric(10,0) NOT NULL,
    value character varying(40),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_list_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_list_isemployee_check CHECK ((isemployee = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_list OWNER TO adempiere;

--
-- Name: hr_listline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_listline (
    name character varying(60),
    ad_org_id numeric(10,0) NOT NULL,
    col_1 numeric,
    col_2 numeric,
    col_3 numeric,
    col_4 numeric,
    col_5 numeric,
    col_6 numeric,
    col_7 numeric,
    col_8 numeric,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    hr_listline_id numeric(10,0) NOT NULL,
    hr_listversion_id numeric(10,0),
    isactive character(1) NOT NULL,
    maxvalue numeric NOT NULL,
    minvalue numeric NOT NULL,
    updated timestamp without time zone NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_listline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_listline OWNER TO adempiere;

--
-- Name: hr_listtype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_listtype (
    name character varying(60) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    hr_listtype_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    value character varying(40),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_listtype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_listtype OWNER TO adempiere;

--
-- Name: hr_listversion; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_listversion (
    name character varying(60) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    hr_listbase_id numeric(10,0),
    hr_listversion_id numeric(10,0) NOT NULL,
    hr_list_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    validto timestamp without time zone NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_listversion_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_listversion OWNER TO adempiere;

--
-- Name: hr_movement; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_movement (
    ismanual character(1),
    hr_concept_category_id numeric(10,0),
    hr_process_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    hr_concept_id numeric(10,0) NOT NULL,
    columntype character(1),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    hr_department_id numeric(10,0),
    hr_job_id numeric(10,0),
    hr_movement_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    isprinted character(1),
    processed character(1) NOT NULL,
    qty numeric,
    servicedate timestamp without time zone,
    textmsg character varying(255),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    validto timestamp without time zone,
    ad_org_id numeric(10,0) NOT NULL,
    ad_rule_id numeric(10,0),
    amount numeric,
    c_activity_id numeric(10,0),
    c_campaign_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    c_projectphase_id numeric(10,0),
    c_projecttask_id numeric(10,0),
    c_project_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    pp_cost_collector_id numeric(10,0),
    c_bp_group_id numeric(10,0),
    c_bp_bankaccount_id numeric(10,0),
    accountsign character(1),
    hr_payrollconcept_id numeric(10,0),
    hr_payroll_id numeric(10,0),
    paymentrule character(1) DEFAULT NULL::bpchar,
    periodno numeric(10,0) DEFAULT NULL::numeric,
    seqno numeric(10,0) DEFAULT NULL::numeric,
    c_salesregion_id numeric(10,0) DEFAULT NULL::numeric,
    hr_attribute_id numeric(10,0) DEFAULT NULL::numeric,
    hr_employeetype_id numeric(10,0) DEFAULT NULL::numeric,
    documentnote character varying(2000) DEFAULT NULL::character varying,
    hr_contract_id numeric(10,0) DEFAULT NULL::numeric,
    hr_skilltype_id numeric(10,0) DEFAULT NULL::numeric,
    hr_designation_id numeric(10,0) DEFAULT NULL::numeric,
    hr_jobtype_id numeric(10,0) DEFAULT NULL::numeric,
    c_payment_id numeric(10,0) DEFAULT NULL::numeric,
    hr_employee_id numeric(10,0) DEFAULT NULL::numeric,
    c_invoiceline_id numeric(10,0) DEFAULT NULL::numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    c_bp_relation_id numeric(10,0) DEFAULT NULL::numeric,
    referenceno character varying(40) DEFAULT NULL::character varying,
    barcodescanner character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_movement_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_movement_ismanual_check CHECK (((ismanual = 'Y'::bpchar) OR (ismanual = 'N'::bpchar))),
    CONSTRAINT hr_movement_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_movement_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_movement OWNER TO adempiere;

--
-- Name: hr_payroll; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_payroll (
    name character varying(60) NOT NULL,
    value character varying(40),
    ad_printformat_id numeric(10,0),
    c_charge_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    hr_contract_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    paymentrule character(1) NOT NULL,
    processed character(1),
    processing character(1),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_payroll_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isignoredefaultpayroll character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_payroll_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payroll_isignoredefaultpayroll_check CHECK ((isignoredefaultpayroll = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payroll_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_payroll OWNER TO adempiere;

--
-- Name: hr_payrollconcept; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_payrollconcept (
    name character varying(60),
    ad_org_id numeric(10,0) NOT NULL,
    ad_rule_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    hr_concept_id numeric(10,0) NOT NULL,
    hr_payrollconcept_id numeric(10,0) NOT NULL,
    hr_payroll_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    isdisplayed character(1) DEFAULT 'Y'::bpchar,
    isinclude character(1),
    isprinted character(1) DEFAULT 'N'::bpchar NOT NULL,
    seqno numeric(10,0),
    updated timestamp without time zone NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_payrollconcept_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payrollconcept_isdisplayed_check CHECK ((isdisplayed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payrollconcept_isinclude_check CHECK ((isinclude = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payrollconcept_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_payrollconcept OWNER TO adempiere;

--
-- Name: hr_payselectionline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_payselectionline (
    hr_payselectionline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_payselectioncheck_id numeric(10,0) DEFAULT NULL::numeric,
    hr_payselection_id numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    differenceamt numeric NOT NULL,
    discountamt numeric NOT NULL,
    ismanual character(1) NOT NULL,
    issotrx character(1) NOT NULL,
    line numeric(10,0) NOT NULL,
    openamt numeric NOT NULL,
    payamt numeric NOT NULL,
    paymentrule character(1) DEFAULT 'S'::bpchar NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    hr_movement_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_payselectionline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payselectionline_ismanual_check CHECK ((ismanual = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payselectionline_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_payselectionline_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_payselectionline OWNER TO adempiere;

--
-- Name: hr_period; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_period (
    name character varying(40) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_period_id numeric(10,0) NOT NULL,
    c_year_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    description character varying(255),
    enddate timestamp without time zone,
    hr_payroll_id numeric(10,0) NOT NULL,
    hr_period_id numeric(10,0) NOT NULL,
    hr_year_id numeric(10,0),
    isactive character(1) NOT NULL,
    periodaction character varying(1),
    periodno numeric(10,0) NOT NULL,
    periodstatus character varying(1),
    processed character(1),
    processing character varying(1),
    startdate timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_period_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_period_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_period OWNER TO adempiere;

--
-- Name: hr_process; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_process (
    hr_job_id numeric(10,0),
    c_doctype_id numeric(10,0),
    c_payselection_id numeric(10,0),
    hr_process_id numeric(10,0) DEFAULT '-1'::integer NOT NULL,
    hr_employee_id numeric(10,0),
    name character varying(60) NOT NULL,
    c_doctypetarget_id numeric(10,0) NOT NULL,
    columnsql character varying(255),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    docaction character(2) DEFAULT 'CO'::bpchar NOT NULL,
    docstatus character varying(2) DEFAULT 'DR'::character varying NOT NULL,
    documentno character varying(90),
    hr_department_id numeric(10,0),
    hr_payroll_id numeric(10,0) NOT NULL,
    hr_period_id numeric(10,0),
    isactive character(1) NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    processed character(1) NOT NULL,
    processing character(1),
    updated timestamp without time zone NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_printformat_id numeric(10,0),
    ad_workflow_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_charge_id numeric(10,0),
    reversal_id numeric(10,0),
    processedon numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_process_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_process_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_process OWNER TO adempiere;

--
-- Name: hr_race; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_race (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_race_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(80) DEFAULT NULL::character varying,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_race_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_race OWNER TO adempiere;

--
-- Name: hr_relationship; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_relationship (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_relationship_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(80) DEFAULT NULL::character varying,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_relationship_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_relationship OWNER TO adempiere;

--
-- Name: hr_salaryrange; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_salaryrange (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_salaryrange_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    value character varying(60) DEFAULT NULL::character varying,
    maxvalue numeric(10,0) DEFAULT NULL::numeric,
    minvalue numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_salaryrange_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_salaryrange OWNER TO adempiere;

--
-- Name: hr_salarystructure; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_salarystructure (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_salarystructure_id numeric(10,0) NOT NULL,
    name character varying(40) NOT NULL,
    validto timestamp without time zone NOT NULL,
    description character varying(500) DEFAULT NULL::character varying,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_salarystructure_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_salarystructure OWNER TO adempiere;

--
-- Name: hr_salarystructureline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_salarystructureline (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_salarystructureline_id numeric(10,0) NOT NULL,
    hr_concept_id numeric(10,0) NOT NULL,
    percentage numeric NOT NULL,
    amount numeric NOT NULL,
    seqno numeric(10,0),
    hr_salarystructure_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_salarystructureline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_salarystructureline OWNER TO adempiere;

--
-- Name: hr_shiftgroup; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_shiftgroup (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_shiftgroup_id numeric(10,0) NOT NULL,
    name character varying(50) NOT NULL,
    description character varying(50) DEFAULT NULL::character varying,
    noofhoursthisshift numeric,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_shiftgroup_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_shiftgroup OWNER TO adempiere;

--
-- Name: hr_skilltype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_skilltype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_skilltype_id numeric(10,0) NOT NULL,
    name character varying(40) NOT NULL,
    description character varying(200) DEFAULT NULL::character varying,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_skilltype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_skilltype OWNER TO adempiere;

--
-- Name: hr_workgroup; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_workgroup (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_workgroup_id numeric(10,0) NOT NULL,
    name character varying(40) NOT NULL,
    description character varying(200) DEFAULT NULL::character varying,
    isshiftallocation character(1) NOT NULL,
    hr_workshift_id numeric(10,0) DEFAULT NULL::numeric,
    hr_shiftgroup_id numeric(10,0) DEFAULT NULL::numeric,
    seqno numeric(10,0) DEFAULT NULL::numeric,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_workgroup_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_workgroup_isshiftallocation_check CHECK ((isshiftallocation = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_workgroup OWNER TO adempiere;

--
-- Name: hr_workshift; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_workshift (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_workshift_id numeric(10,0) NOT NULL,
    shiftfromtime timestamp without time zone NOT NULL,
    shifttotime timestamp without time zone NOT NULL,
    noofhours numeric,
    isovertimeapplicable character(1) NOT NULL,
    overtimeamount numeric,
    name character varying(40) NOT NULL,
    description character varying(200) DEFAULT NULL::character varying,
    hr_shiftgroup_id numeric(10,0) DEFAULT NULL::numeric,
    ishasfixedworkgroup character(1) NOT NULL,
    seqno numeric(10,0) DEFAULT NULL::numeric,
    value character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_workshift_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_workshift_ishasfixedworkgroup_check CHECK ((ishasfixedworkgroup = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_workshift_isovertimeapplicable_check CHECK ((isovertimeapplicable = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_workshift OWNER TO adempiere;

--
-- Name: hr_year; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.hr_year (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_year_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    hr_payroll_id numeric(10,0) NOT NULL,
    hr_year_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    netdays numeric(10,0) NOT NULL,
    processed character(1),
    processing character(1),
    qty numeric(10,0) NOT NULL,
    startdate timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT hr_year_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT hr_year_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.hr_year OWNER TO adempiere;

--
-- Name: i_asset; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_asset (
    i_asset_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    a_accumdepreciation_acct numeric(10,0),
    a_accumulated_depr numeric,
    a_asset_acct numeric(10,0),
    a_asset_cost numeric,
    a_asset_group_id numeric(10,0),
    a_asset_id numeric(10,0),
    a_asset_life_current_year numeric(10,0),
    a_asset_life_years numeric(10,0),
    a_asset_spread_type character varying(10),
    a_base_amount numeric,
    a_calc_accumulated_depr numeric,
    a_curr_dep_exp numeric,
    a_current_period numeric(10,0),
    a_depreciation_acct numeric(10,0),
    a_depreciation_calc_type character varying(10),
    a_depreciation_manual_amount numeric,
    a_depreciation_manual_period character varying(2),
    a_depreciation_table_header_id numeric(10,0),
    a_depreciation_variable_perc numeric,
    a_disposal_loss character varying(22),
    a_disposal_revenue character varying(22),
    a_life_period numeric(10,0),
    a_parent_asset_id numeric(10,0) DEFAULT 0,
    a_period_end numeric(10,0),
    a_period_posted numeric(10,0),
    a_period_start numeric(10,0),
    a_prior_year_accumulated_depr numeric,
    a_qty_current numeric(10,0),
    a_qty_original numeric(10,0),
    a_reval_accumdep_offset_cur character varying(22),
    lifeuseunits numeric(10,0),
    isowned character(1),
    isinposession character(1),
    isfullydepreciated character(1),
    isdisposed character(1),
    isdepreciated character(1),
    isactive character(1),
    i_isimported character(1),
    i_errormsg character varying(2000),
    versionno character varying(20),
    value character varying(40),
    useunits numeric(10,0),
    uselifeyears numeric(10,0),
    uselifemonths numeric(10,0),
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    serno character varying(20),
    processing character(1),
    processed character(1),
    postingtype character varying(10),
    name character varying(60),
    m_product_id numeric(10,0),
    m_locator_id numeric(10,0),
    m_attributesetinstance_id numeric(10,0),
    lot character varying(20),
    locationcomment character varying(255),
    a_reval_accumdep_offset_prior character varying(22),
    a_reval_cal_method character varying(3),
    a_reval_cost_offset character varying(22),
    a_reval_cost_offset_prior character varying(22),
    a_reval_depexp_offset character varying(22),
    a_salvage_value numeric,
    a_split_percent numeric,
    assetdepreciationdate timestamp without time zone,
    assetdisposaldate timestamp without time zone,
    assetmarketvalueamt numeric,
    assetservicedate timestamp without time zone,
    c_acctschema_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_bpartner_location_id numeric(10,0),
    c_location_id numeric(10,0),
    conventiontype character varying(10),
    created timestamp without time zone,
    createdby numeric(10,0),
    depreciationtype character varying(10),
    description character varying(510),
    guaranteedate timestamp without time zone,
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_asset_i_isimported_check CHECK ((i_isimported = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_asset_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_asset_isdepreciated_check CHECK ((isdepreciated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_asset_isdisposed_check CHECK ((isdisposed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_asset_isfullydepreciated_check CHECK ((isfullydepreciated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_asset_isinposession_check CHECK ((isinposession = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_asset_isowned_check CHECK ((isowned = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_asset_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_asset OWNER TO adempiere;

--
-- Name: i_bankstatement; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_bankstatement (
    i_bankstatement_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby numeric(10,0),
    updated timestamp without time zone DEFAULT now(),
    updatedby numeric(10,0),
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_errormsg character varying(2000),
    processed character(1) DEFAULT 'N'::bpchar,
    c_bankstatement_id numeric(10,0),
    statementdate timestamp without time zone,
    description character varying(255),
    c_bankaccount_id numeric(10,0),
    routingno character varying(20),
    bankaccountno character varying(20),
    c_payment_id numeric(10,0),
    paymentdocumentno character varying(30),
    c_currency_id numeric(10,0),
    iso_code character(3),
    c_bpartner_id numeric(10,0),
    name character varying(60),
    bpartnervalue character varying(40),
    c_invoice_id numeric(10,0),
    invoicedocumentno character varying(30),
    c_charge_id numeric(10,0),
    chargename character varying(60),
    chargeamt numeric DEFAULT 0,
    c_bankstatementline_id numeric(10,0),
    line numeric(10,0),
    dateacct timestamp without time zone,
    valutadate timestamp without time zone,
    statementlinedate timestamp without time zone,
    trxtype character varying(20),
    referenceno character varying(40),
    memo character varying(255),
    isreversal character(1) DEFAULT 'N'::bpchar,
    interestamt numeric DEFAULT 0,
    trxamt numeric DEFAULT 0,
    linedescription character varying(255),
    stmtamt numeric DEFAULT 0,
    eftstatementdate timestamp without time zone,
    eftstatementreference character varying(60),
    eftstatementlinedate timestamp without time zone,
    eftvalutadate timestamp without time zone,
    eftreference character varying(60),
    eftcheckno character varying(20),
    efttrxid character varying(40),
    efttrxtype character varying(20),
    eftmemo character varying(2000),
    eftpayee character varying(255),
    eftpayeeaccount character varying(40),
    eftamt numeric DEFAULT 0,
    eftcurrency character varying(20),
    createpayment character(1),
    processing character(1),
    matchstatement character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_bankstatement_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_bankstatement_isreversal_check CHECK ((isreversal = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_bankstatement_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_bankstatement OWNER TO adempiere;

--
-- Name: i_bpartner; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_bpartner (
    i_bpartner_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby numeric(10,0),
    updated timestamp without time zone DEFAULT now(),
    updatedby numeric(10,0),
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_errormsg character varying(2000),
    c_bpartner_id numeric(10,0),
    value character varying(40),
    name character varying(60),
    name2 character varying(60),
    description character varying(255),
    duns character(11),
    taxid character varying(20),
    naics character(6),
    groupvalue character varying(40),
    c_bp_group_id numeric(10,0),
    c_bpartner_location_id numeric(10,0),
    address1 character varying(60),
    address2 character varying(60),
    postal character varying(10),
    postal_add character varying(10),
    city character varying(60),
    c_region_id numeric(10,0),
    regionname character varying(60),
    c_country_id numeric(10,0),
    countrycode character(2),
    title character varying(40),
    contactname character varying(60),
    contactdescription character varying(255),
    comments character varying(2000),
    phone character varying(40),
    phone2 character varying(40),
    fax character varying(40),
    email character varying(60),
    password character varying(20),
    birthday timestamp without time zone,
    c_greeting_id numeric(10,0),
    bpcontactgreeting character varying(60),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar,
    ad_user_id numeric(10,0),
    r_interestarea_id numeric(10,0),
    interestareaname character varying(40),
    iscustomer character(1),
    isemployee character(1),
    isvendor character(1),
    fathersname character varying(60) DEFAULT NULL::character varying,
    placeofbirth character varying(60) DEFAULT NULL::character varying,
    bloodgroup character varying(3) DEFAULT NULL::character varying,
    gender character(1) DEFAULT NULL::bpchar,
    placeofbirth_id numeric(10,0) DEFAULT NULL::numeric,
    birthcountrycode character varying(60) DEFAULT NULL::character varying,
    birthregionname character varying(60) DEFAULT NULL::character varying,
    birthcity character varying(60) DEFAULT NULL::character varying,
    birthpostal character varying(60) DEFAULT NULL::character varying,
    birthcountry_id numeric(10,0) DEFAULT NULL::numeric,
    birthregion_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_bpartner_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_bpartner_iscustomer_check CHECK ((iscustomer = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_bpartner_isemployee_check CHECK ((isemployee = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_bpartner_isvendor_check CHECK ((isvendor = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_bpartner_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_bpartner OWNER TO adempiere;

--
-- Name: i_budget; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_budget (
    a_asset_id numeric(10,0) DEFAULT NULL::numeric,
    account_id numeric(10,0) DEFAULT NULL::numeric,
    accountvalue character varying(40) DEFAULT NULL::character varying,
    acctschemaname character varying(40) DEFAULT NULL::character varying,
    ad_client_id numeric(10,0) DEFAULT NULL::numeric,
    ad_org_id numeric(10,0) DEFAULT NULL::numeric,
    ad_orgtrx_id numeric(10,0) DEFAULT NULL::numeric,
    assetvalue character varying(40) DEFAULT NULL::character varying,
    batchdocumentno character varying(40),
    bpartnervalue character varying(40) DEFAULT NULL::character varying,
    budgetcode character varying(40) DEFAULT NULL::character varying,
    c_acctschema_id numeric(10,0) DEFAULT NULL::numeric,
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    c_locfrom_id numeric(10,0) DEFAULT NULL::numeric,
    c_locto_id numeric(10,0) DEFAULT NULL::numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    c_salesregion_id numeric(10,0) DEFAULT NULL::numeric,
    c_validcombination_id numeric(10,0) DEFAULT NULL::numeric,
    created timestamp without time zone,
    createdby numeric(10,0) DEFAULT NULL::numeric,
    gl_budget_id numeric(10,0) DEFAULT NULL::numeric,
    gl_journalbatch_id numeric(10,0) DEFAULT NULL::numeric,
    i_budget_id numeric(10,0) NOT NULL,
    i_errormsg character varying(2000) DEFAULT NULL::character varying,
    i_isimported character(1),
    isactive character(1) DEFAULT 'Y'::bpchar,
    m_product_id numeric(10,0) DEFAULT NULL::numeric,
    month_0_amt numeric,
    month_1_amt numeric,
    month_10_amt numeric,
    month_11_amt numeric,
    month_2_amt numeric,
    month_3_amt numeric,
    month_4_amt numeric,
    month_5_amt numeric,
    month_6_amt numeric,
    month_7_amt numeric,
    month_8_amt numeric,
    month_9_amt numeric,
    orgtrxvalue character varying(40) DEFAULT NULL::character varying,
    processed character(1) DEFAULT NULL::bpchar,
    processing character(1) DEFAULT NULL::bpchar,
    productvalue character varying(40) DEFAULT NULL::character varying,
    projectvalue character varying(40) DEFAULT NULL::character varying,
    salesregionvalue character varying(40) DEFAULT NULL::character varying,
    updated timestamp without time zone,
    updatedby numeric(10,0) DEFAULT NULL::numeric,
    user1_id numeric(10,0) DEFAULT NULL::numeric,
    user2_id numeric(10,0) DEFAULT NULL::numeric,
    jnl_line_description character varying(255) DEFAULT NULL::character varying,
    month_0_qty numeric,
    month_10_qty numeric,
    month_11_qty numeric,
    month_1_qty numeric,
    month_2_qty numeric,
    month_3_qty numeric,
    month_4_qty numeric,
    month_5_qty numeric,
    month_6_qty numeric,
    month_7_qty numeric,
    month_8_qty numeric,
    month_9_qty numeric,
    campaignvalue character varying(40) DEFAULT NULL::character varying,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    userelement1_id numeric(10,0) DEFAULT NULL::numeric,
    userelement2_id numeric(10,0) DEFAULT NULL::numeric,
    c_subacct_id numeric(10,0) DEFAULT NULL::numeric,
    activityvalue character varying(40) DEFAULT NULL::character varying,
    subacctvalue character varying(40) DEFAULT NULL::character varying,
    uservalue1 character varying(40) DEFAULT NULL::character varying,
    uservalue2 character varying(40) DEFAULT NULL::character varying,
    uservalue3 character varying(40) DEFAULT NULL::character varying,
    uservalue4 character varying(40) DEFAULT NULL::character varying,
    userelementvalue1 character varying(40) DEFAULT NULL::character varying,
    userelementvalue2 character varying(40) DEFAULT NULL::character varying,
    orgvalue character varying(40) DEFAULT NULL::character varying,
    gl_journal_id numeric(10,0) DEFAULT NULL::numeric,
    gl_journalline_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_budget_i_isimported_check CHECK ((i_isimported = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_budget_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_budget_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_budget OWNER TO adempiere;

--
-- Name: i_conversion_rate; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_conversion_rate (
    i_conversion_rate_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby numeric(10,0),
    updated timestamp without time zone DEFAULT now(),
    updatedby numeric(10,0),
    c_conversion_rate_id numeric(10,0),
    iso_code character(3),
    c_currency_id numeric(10,0),
    iso_code_to character(3),
    c_currency_id_to numeric(10,0),
    conversiontypevalue character varying(40),
    c_conversiontype_id numeric(10,0),
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    multiplyrate numeric,
    dividerate numeric,
    createreciprocalrate character(1) DEFAULT 'N'::bpchar,
    i_isimported character(1) DEFAULT 'N'::bpchar,
    i_errormsg character varying(2000),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_conversion_rate_createreciprocalrate_check CHECK ((createreciprocalrate = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_conversion_rate_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_conversion_rate OWNER TO adempiere;

--
-- Name: i_elementvalue; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_elementvalue (
    i_elementvalue_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar,
    createdby numeric(10,0),
    created timestamp without time zone DEFAULT now(),
    updated timestamp without time zone DEFAULT now(),
    updatedby numeric(10,0),
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_errormsg character varying(2000),
    c_element_id numeric(10,0),
    elementname character varying(60),
    c_elementvalue_id numeric(10,0),
    value character varying(40),
    name character varying(60),
    description character varying(255),
    accounttype character(1),
    accountsign character(1),
    isdoccontrolled character(1) DEFAULT 'N'::bpchar,
    issummary character(1) DEFAULT 'N'::bpchar,
    parentvalue character varying(40),
    parentelementvalue_id numeric(10,0),
    postactual character(1) DEFAULT 'Y'::bpchar,
    postbudget character(1) DEFAULT 'Y'::bpchar,
    poststatistical character(1) DEFAULT 'Y'::bpchar,
    postencumbrance character(1) DEFAULT 'Y'::bpchar,
    default_account character varying(30),
    ad_column_id numeric(10,0),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar,
    chargename character varying(60) DEFAULT NULL::character varying,
    c_charge_id numeric(10,0) DEFAULT NULL::numeric,
    c_taxcategory_id numeric(10,0) DEFAULT NULL::numeric,
    taxcategoryname character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_elementvalue_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_elementvalue_isdoccontrolled_check CHECK ((isdoccontrolled = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_elementvalue_postactual_check CHECK ((postactual = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_elementvalue_postbudget_check CHECK ((postbudget = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_elementvalue_postencumbrance_check CHECK ((postencumbrance = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_elementvalue_poststatistical_check CHECK ((poststatistical = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_elementvalue_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_elementvalue OWNER TO adempiere;

--
-- Name: i_fajournal; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_fajournal (
    c_subacct_id numeric(10,0),
    userelement1_id numeric(10,0),
    userelement2_id numeric(10,0),
    i_fajournal_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_orgdoc_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    ad_org_id numeric(10,0),
    a_asset_id numeric(10,0),
    a_entry_type character varying(3),
    accountvalue character varying(80),
    account_id numeric(10,0),
    acctschemaname character varying(120),
    amtacctcr numeric,
    amtacctdr numeric,
    amtsourcecr numeric,
    amtsourcedr numeric,
    bpartnervalue character varying(80),
    batchdescription character varying(510),
    batchdocumentno character varying(60),
    c_acctschema_id numeric(10,0),
    gl_budget_id numeric(10,0),
    doctypename character varying(120),
    description character varying(510),
    dateacct timestamp without time zone,
    currencyratetype character(1),
    currencyrate numeric,
    createdby numeric(10,0),
    created timestamp without time zone,
    conversiontypevalue character varying(40),
    processing character(1),
    processed character(1),
    postingtype character(1),
    orgvalue character varying(40),
    orgtrxvalue character varying(40),
    m_product_id numeric(10,0),
    line numeric(10,0),
    journaldocumentno character varying(60),
    isdepreciated character varying(1),
    user2_id numeric(10,0),
    user1_id numeric(10,0),
    updatedby numeric(10,0),
    updated timestamp without time zone,
    upc character varying(30),
    sku character varying(30),
    qty numeric,
    projectvalue character varying(40),
    productvalue character varying(40),
    isactive character(1) NOT NULL,
    i_isimported character(1) NOT NULL,
    i_errormsg character varying(2000),
    iso_code character varying(3),
    gl_journal_id numeric(10,0),
    gl_journalline_id numeric(10,0),
    gl_journalbatch_id numeric(10,0),
    gl_category_id numeric(10,0),
    clientvalue character varying(80),
    categoryname character varying(120),
    c_validcombination_id numeric(10,0),
    c_uom_id numeric(10,0),
    c_activity_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_conversiontype_id numeric(10,0),
    c_currency_id numeric(10,0),
    c_doctype_id numeric(10,0),
    c_locfrom_id numeric(10,0),
    c_locto_id numeric(10,0),
    c_period_id numeric(10,0),
    c_project_id numeric(10,0),
    c_salesregion_id numeric(10,0),
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_fajournal_i_isimported_check CHECK ((i_isimported = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_fajournal_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_fajournal_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_fajournal OWNER TO adempiere;

--
-- Name: i_fixedasset; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_fixedasset (
    i_fixedasset_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    inventoryno character varying(30) DEFAULT NULL::character varying,
    name character varying(120) DEFAULT NULL::character varying,
    a_asset_group_id numeric(10,0) DEFAULT NULL::numeric,
    a_asset_group_value character varying(40) DEFAULT NULL::character varying,
    a_asset_class_id numeric(10,0) DEFAULT NULL::numeric,
    a_asset_class_value character varying(40) DEFAULT NULL::character varying,
    m_product_id numeric(10,0) DEFAULT NULL::numeric,
    productvalue character varying(40) DEFAULT NULL::character varying,
    assetservicedate timestamp without time zone,
    a_asset_cost numeric DEFAULT (0)::numeric NOT NULL,
    a_accumulated_depr numeric,
    a_accumulated_depr_f numeric,
    uselifemonths numeric(10,0),
    uselifemonths_f numeric(10,0),
    a_current_period numeric(10,0) DEFAULT NULL::numeric,
    dateacct timestamp without time zone,
    a_asset_id numeric(10,0) DEFAULT NULL::numeric,
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_errormsg character varying(2000) DEFAULT NULL::character varying,
    processing character(1) DEFAULT NULL::bpchar,
    processed character(1) DEFAULT NULL::bpchar,
    a_remaining_period numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    docaction character varying(2) DEFAULT 'CO'::character varying NOT NULL,
    assetperioddepreciationamt numeric DEFAULT (0)::numeric NOT NULL,
    assetdepreciationdate timestamp without time zone,
    m_locator_id numeric(10,0) DEFAULT NULL::numeric,
    locatorvalue character varying(40) DEFAULT NULL::character varying,
    qty numeric DEFAULT (1)::numeric,
    uomsymbol character varying(10) DEFAULT NULL::character varying,
    c_uom_id numeric(10,0) DEFAULT NULL::numeric,
    description character varying(255) DEFAULT NULL::character varying,
    c_city_value character varying(40) DEFAULT NULL::character varying,
    seqno numeric(10,0) DEFAULT (1)::numeric,
    bpartner_value character varying(40) DEFAULT NULL::character varying,
    c_bpartnersr_id numeric(10,0) DEFAULT NULL::numeric,
    c_city_id numeric(10,0) DEFAULT NULL::numeric,
    a_asset_type_id numeric(10,0),
    a_asset_type_value character varying(40) DEFAULT NULL::character varying,
    a_salvage_value numeric,
    orgvalue character varying(40) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_fixedasset_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_fixedasset_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_fixedasset OWNER TO adempiere;

--
-- Name: i_forecast; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_forecast (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    i_forecast_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    i_errormsg character varying(2000) DEFAULT NULL::character varying,
    i_isimported character(1) DEFAULT NULL::bpchar,
    processed character(1) DEFAULT NULL::bpchar,
    processing character(1) DEFAULT NULL::bpchar,
    orgvalue character varying(40) DEFAULT NULL::character varying,
    m_product_id numeric(10,0) DEFAULT NULL::numeric,
    m_warehouse_id numeric(10,0) DEFAULT NULL::numeric,
    productvalue character varying(40) DEFAULT NULL::character varying,
    salesrep_name character varying(60) DEFAULT NULL::character varying,
    salesrep_id numeric(10,0) DEFAULT NULL::numeric,
    datepromised timestamp without time zone,
    warehousevalue character varying(40) DEFAULT NULL::character varying,
    qty numeric,
    m_forecast_id numeric(10,0) DEFAULT NULL::numeric,
    m_forecastline_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_forecast_i_isimported_check CHECK ((i_isimported = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_forecast_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_forecast_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_forecast OWNER TO adempiere;

--
-- Name: i_gljournal; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_gljournal (
    i_gljournal_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    clientvalue character varying(40),
    ad_orgdoc_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby numeric(10,0),
    updated timestamp without time zone DEFAULT now(),
    updatedby numeric(10,0),
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_errormsg character varying(2000),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar,
    gl_journalbatch_id numeric(10,0),
    batchdocumentno character varying(30),
    batchdescription character varying(255),
    gl_journal_id numeric(10,0),
    journaldocumentno character varying(30),
    postingtype character(1),
    c_acctschema_id numeric(10,0),
    acctschemaname character varying(60),
    c_doctype_id numeric(10,0),
    doctypename character varying(60),
    gl_category_id numeric(10,0),
    categoryname character varying(60),
    c_period_id numeric(10,0),
    gl_budget_id numeric(10,0),
    gl_journalline_id numeric(10,0),
    line numeric(10,0),
    dateacct timestamp without time zone,
    description character varying(255),
    amtsourcedr numeric DEFAULT 0,
    amtacctdr numeric DEFAULT 0,
    amtsourcecr numeric DEFAULT 0,
    amtacctcr numeric DEFAULT 0,
    c_currency_id numeric(10,0),
    iso_code character(3),
    conversiontypevalue character varying(40),
    c_conversiontype_id numeric(10,0),
    currencyrate numeric DEFAULT 0,
    c_uom_id numeric(10,0),
    qty numeric DEFAULT 0,
    c_validcombination_id numeric(10,0),
    orgvalue character varying(40),
    ad_org_id numeric(10,0),
    account_id numeric(10,0),
    accountvalue character varying(40),
    ad_orgtrx_id numeric(10,0),
    orgtrxvalue character varying(40),
    m_product_id numeric(10,0),
    productvalue character varying(40),
    upc character varying(30),
    sku character varying(30),
    c_bpartner_id numeric(10,0),
    bpartnervalue character varying(40),
    c_project_id numeric(10,0),
    projectvalue character varying(40),
    c_locto_id numeric(10,0),
    c_locfrom_id numeric(10,0),
    c_salesregion_id numeric(10,0),
    c_activity_id numeric(10,0),
    c_campaign_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    iscreatenewbatch character(1),
    iscreatenewjournal character(1),
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    alias character varying(40) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_gljournal_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_gljournal_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_gljournal OWNER TO adempiere;

--
-- Name: i_hr_attribute; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_hr_attribute (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    i_hr_attribute_id numeric(10,0) NOT NULL,
    ad_rule_id numeric(10,0) DEFAULT NULL::numeric,
    value character varying(30) DEFAULT NULL::character varying,
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    description character varying(255) DEFAULT NULL::character varying,
    payrollvalue character varying(30) DEFAULT NULL::character varying,
    hr_payroll_id numeric(10,0) DEFAULT NULL::numeric,
    conceptvalue character varying(30) DEFAULT NULL::character varying,
    hr_concept_id numeric(10,0) DEFAULT NULL::numeric,
    qty numeric,
    amount numeric,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    processed character(1) DEFAULT NULL::bpchar,
    i_isimported character(1) DEFAULT 'N'::bpchar,
    i_errormsg character varying(60) DEFAULT NULL::character varying,
    hr_attribute_id numeric(10,0) DEFAULT NULL::numeric,
    processing character(1) DEFAULT NULL::bpchar,
    textmsg character varying(2000) DEFAULT NULL::character varying,
    servicedate timestamp without time zone,
    minvalue numeric(10,0) DEFAULT NULL::numeric,
    maxvalue numeric(10,0) DEFAULT NULL::numeric,
    isprinted character(1) DEFAULT NULL::bpchar,
    hr_job_id numeric(10,0) DEFAULT NULL::numeric,
    hr_employee_id numeric(10,0) DEFAULT NULL::numeric,
    hr_department_id numeric(10,0) DEFAULT NULL::numeric,
    c_charge_id numeric(10,0) DEFAULT NULL::numeric,
    c_doctype_id numeric(10,0) DEFAULT NULL::numeric,
    referenceno character varying(40) DEFAULT NULL::character varying,
    hr_contract_id numeric(10,0) DEFAULT NULL::numeric,
    contractvalue character varying(60) DEFAULT NULL::character varying,
    hr_shiftgroup_id numeric(10,0) DEFAULT NULL::numeric,
    shiftgroupvalue character varying(60) DEFAULT NULL::character varying,
    hr_workgroup_id numeric(10,0) DEFAULT NULL::numeric,
    workgroupvalue character varying(60) DEFAULT NULL::character varying,
    hr_grade_id numeric(10,0) DEFAULT NULL::numeric,
    gradevalue character varying(60) DEFAULT NULL::character varying,
    hr_degree_id numeric(10,0) DEFAULT NULL::numeric,
    degreevalue character varying(60) DEFAULT NULL::character varying,
    hr_race_id numeric(10,0) DEFAULT NULL::numeric,
    racevalue character varying(40) DEFAULT NULL::character varying,
    hr_careerlevel_id numeric(10,0) DEFAULT NULL::numeric,
    careerlevelvalue character varying(60) DEFAULT NULL::character varying,
    hr_jobeducation_id numeric(10,0) DEFAULT NULL::numeric,
    jobeducationvalue character varying(60) DEFAULT NULL::character varying,
    hr_employeetype_id numeric(10,0) DEFAULT NULL::numeric,
    employeetypevalue character varying(40) DEFAULT NULL::character varying,
    hr_jobtype_id numeric(10,0) DEFAULT NULL::numeric,
    jobtypevalue character varying(60) DEFAULT NULL::character varying,
    hr_skilltype_id numeric(10,0) DEFAULT NULL::numeric,
    skilltypevalue character varying(40) DEFAULT NULL::character varying,
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    activityvalue character varying(40) DEFAULT NULL::character varying,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    campaignvalue character varying(40) DEFAULT NULL::character varying,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    projectvalue character varying(40) DEFAULT NULL::character varying,
    ad_orgtrx_id numeric(10,0) DEFAULT NULL::numeric,
    orgtrxvalue character varying(40) DEFAULT NULL::character varying,
    hr_designation_id numeric(10,0) DEFAULT NULL::numeric,
    designationvalue character varying(60) DEFAULT NULL::character varying,
    hr_salaryrange_id numeric(10,0) DEFAULT NULL::numeric,
    salaryrangevalue character varying(60) DEFAULT NULL::character varying,
    hr_salarystructure_id numeric(10,0) DEFAULT NULL::numeric,
    salarystructurevalue character varying(60) DEFAULT NULL::character varying,
    employeestatus character varying(2) DEFAULT NULL::character varying,
    jobvalue character varying(40) DEFAULT NULL::character varying,
    departmentvalue character varying(40) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_hr_attribute_i_isimported_check CHECK ((i_isimported = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_hr_attribute_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_hr_attribute_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_hr_attribute_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_hr_attribute OWNER TO adempiere;

--
-- Name: i_hr_employee; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_hr_employee (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) DEFAULT '0'::numeric,
    ad_user_id numeric(10,0),
    activityvalue character varying(40),
    bpartnervalue character varying(40),
    birthday timestamp without time zone,
    bloodgroup character varying(10),
    c_activity_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    code character varying(1),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dailysalary numeric,
    departmentname character varying(60),
    departmentvalue character varying(40),
    employeeimage_id numeric(10,0),
    employeestatus character varying(2),
    employeetypename character varying(60),
    employeetypevalue character varying(40),
    enddate timestamp without time zone,
    fathersname character varying(40),
    file_directory character varying(255),
    gender character(1),
    hr_department_id numeric(10,0),
    hr_employeetype_id numeric(10,0),
    hr_employee_id numeric(10,0),
    hr_job_id numeric(10,0),
    hr_payroll_id numeric(10,0),
    hr_race_id numeric(10,0),
    hr_skilltype_id numeric(10,0),
    i_errormsg character varying(2000),
    i_hr_employee_id numeric(10,0) NOT NULL,
    i_isimported character(1),
    identificationmark character varying(120),
    imageurl character varying(120),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismanager character(1) DEFAULT 'N'::bpchar,
    jobname character varying(60),
    jobvalue character varying(40),
    logo_id numeric(10,0),
    maritalstatus character varying(25),
    marriageanniversarydate timestamp without time zone,
    monthlysalary numeric,
    name character varying(30),
    name2 character varying(30),
    nationalcode character varying(60),
    nationality_id numeric(10,0),
    orgvalue character varying(40),
    partnersbirthdate timestamp without time zone,
    partnersname character varying(40),
    paymentrule character(1),
    payrollvalue character varying(40),
    placeofbirth character varying(28),
    processed character(1) DEFAULT 'N'::bpchar,
    processing character(1) DEFAULT 'N'::bpchar NOT NULL,
    racename character varying(60),
    racevalue character varying(40),
    sscode character varying(60),
    skilltypename character varying(60),
    skilltypevalue character varying(40),
    startdate timestamp without time zone NOT NULL,
    thumbimage_id numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    hr_jobtype_id numeric(10,0) DEFAULT NULL::numeric,
    jobtypevalue character varying(60) DEFAULT NULL::character varying,
    jobtypename character varying(255) DEFAULT NULL::character varying,
    hr_careerlevel_id numeric(10,0) DEFAULT NULL::numeric,
    careerlevelvalue character varying(60) DEFAULT NULL::character varying,
    careerlevelname character varying(255) DEFAULT NULL::character varying,
    hr_jobeducation_id numeric(10,0),
    jobeducationvalue character varying(60) DEFAULT NULL::character varying,
    jobeducationname character varying(255) DEFAULT NULL::character varying,
    hr_salarystructure_id numeric(10,0) DEFAULT NULL::numeric,
    salarystructurevalue character varying(60) DEFAULT NULL::character varying,
    hr_salaryrange_id numeric(10,0) DEFAULT NULL::numeric,
    salaryrangevalue character varying(60),
    hr_designation_id numeric(10,0) DEFAULT NULL::numeric,
    designationvalue character varying(60) DEFAULT NULL::character varying,
    projectvalue character varying(40) DEFAULT NULL::character varying,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    ad_orgtrx_id numeric(10,0) DEFAULT NULL::numeric,
    orgtrxvalue character varying(40) DEFAULT NULL::character varying,
    campaignvalue character varying(40) DEFAULT NULL::character varying,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    salesregionvalue character varying(60) DEFAULT NULL::character varying,
    c_salesregion_id numeric(10,0) DEFAULT NULL::numeric,
    hr_workgroup_id numeric(10,0) DEFAULT NULL::numeric,
    workgroupvalue character varying(60) DEFAULT NULL::character varying,
    hr_shiftgroup_id numeric(10,0) DEFAULT NULL::numeric,
    shiftgroupvalue character varying(60) DEFAULT NULL::character varying,
    hr_degree_id numeric(10,0) DEFAULT NULL::numeric,
    degreevalue character varying(60) DEFAULT NULL::character varying,
    degreename character varying(255) DEFAULT NULL::character varying,
    hr_grade_id numeric(10,0) DEFAULT NULL::numeric,
    gradevalue character varying(60) DEFAULT NULL::character varying,
    gradename character varying(255) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_hr_employee_i_isimported_check CHECK ((i_isimported = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_hr_employee_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_hr_employee_ismanager_check CHECK ((ismanager = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_hr_employee_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_hr_employee OWNER TO adempiere;

--
-- Name: i_hr_movement; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_hr_movement (
    i_hr_movement_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    amount numeric,
    c_bpartner_id numeric(10,0),
    created timestamp without time zone,
    createdby numeric(10,0),
    hr_concept_id numeric(10,0),
    hr_process_id numeric(10,0),
    isactive character(1),
    processed character(1) DEFAULT 'N'::bpchar,
    qty numeric,
    servicedate timestamp without time zone,
    textmsg character varying(255),
    updated timestamp without time zone,
    updatedby numeric(10,0),
    validfrom timestamp without time zone,
    i_isimported character varying(1) DEFAULT 'N'::character varying NOT NULL,
    i_errormsg character varying(2000),
    processing character(1),
    bpartner_value character varying(40),
    conceptvalue character varying(40),
    hr_movement_id numeric(10,0),
    processname character varying(60),
    description character varying(255),
    validto timestamp without time zone,
    referenceno character varying(40) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_hr_movement_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_hr_movement_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_hr_movement OWNER TO adempiere;

--
-- Name: i_inoutlineconfirm; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_inoutlineconfirm (
    i_inoutlineconfirm_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_errormsg character varying(2000),
    m_inoutlineconfirm_id numeric(10,0),
    confirmationno character varying(20),
    description character varying(255),
    confirmedqty numeric DEFAULT 0,
    scrappedqty numeric DEFAULT 0,
    differenceqty numeric DEFAULT 0,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_inoutlineconfirm_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_inoutlineconfirm_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_inoutlineconfirm OWNER TO adempiere;

--
-- Name: i_inventory; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_inventory (
    i_inventory_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby numeric(10,0),
    updated timestamp without time zone DEFAULT now(),
    updatedby numeric(10,0),
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_errormsg character varying(2000),
    m_product_id numeric(10,0),
    upc character varying(30),
    value character varying(40),
    lot character varying(20),
    serno character varying(20),
    m_locator_id numeric(10,0),
    m_warehouse_id numeric(10,0),
    warehousevalue character varying(40),
    locatorvalue character varying(40),
    x character varying(60),
    y character varying(60),
    z character varying(60),
    m_inventory_id numeric(10,0),
    m_inventoryline_id numeric(10,0),
    qtybook numeric DEFAULT 0,
    qtycount numeric DEFAULT 0,
    movementdate timestamp without time zone,
    description character varying(255),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar,
    currentcostprice numeric,
    currentcostpricell numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_inventory_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_inventory_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_inventory OWNER TO adempiere;

--
-- Name: i_invoice; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_invoice (
    i_invoice_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby numeric(10,0),
    updated timestamp without time zone DEFAULT now(),
    updatedby numeric(10,0),
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_errormsg character varying(2000),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar,
    m_pricelist_id numeric(10,0),
    c_currency_id numeric(10,0),
    salesrep_id numeric(10,0),
    issotrx character(1) DEFAULT 'Y'::bpchar,
    c_bpartner_id numeric(10,0),
    c_bpartner_location_id numeric(10,0),
    bpartnervalue character varying(40),
    name character varying(60),
    c_location_id numeric(10,0),
    address1 character varying(60),
    address2 character varying(60),
    postal character varying(10),
    city character varying(60),
    c_region_id numeric(10,0),
    regionname character varying(60),
    ad_user_id numeric(10,0),
    email character varying(60),
    contactname character varying(60),
    phone character varying(40),
    c_country_id numeric(10,0),
    countrycode character(2),
    c_doctype_id numeric(10,0),
    doctypename character varying(60),
    c_paymentterm_id numeric(10,0),
    paymenttermvalue character varying(40),
    c_project_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    c_invoice_id numeric(10,0),
    documentno character varying(30),
    dateinvoiced timestamp without time zone,
    dateacct timestamp without time zone,
    description character varying(255),
    m_product_id numeric(10,0),
    productvalue character varying(40),
    upc character varying(30),
    sku character varying(30),
    c_tax_id numeric(10,0),
    taxindicator character varying(10),
    taxamt numeric DEFAULT 0,
    c_invoiceline_id numeric(10,0),
    linedescription character varying(255),
    qtyordered numeric DEFAULT 0,
    priceactual numeric DEFAULT 0,
    projectvalue character varying(40),
    activityvalue character varying(40),
    chargename character varying(60),
    c_charge_id numeric(10,0),
    invoicecollectiontype character(1) DEFAULT NULL::bpchar,
    dunninggrace timestamp without time zone,
    c_dunninglevel_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_invoice_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_invoice_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_invoice_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_invoice OWNER TO adempiere;

--
-- Name: i_movement; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_movement (
    i_movement_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_errormsg character varying(2000),
    productvalue character varying(40),
    m_product_id numeric(10,0),
    movementdate timestamp without time zone,
    m_locator_id numeric(10,0),
    locatorvalue character varying(40),
    m_locatorto_id numeric(10,0),
    locatortovalue character varying(40),
    orgvalue character varying(40),
    movementqty numeric,
    documentno character varying(40) NOT NULL,
    c_doctype_id numeric(10,0),
    doctypename character varying(40),
    c_bpartner_id numeric(10,0),
    bpartnervalue character varying(40),
    m_shipper_id numeric(10,0),
    shippername character varying(40),
    ad_user_id numeric(10,0),
    deliveryviarule character varying(40),
    deliveryrule character varying(40),
    priorityrule character varying(40),
    freightcostrule character varying(40),
    c_project_id numeric(10,0),
    projectvalue character varying(40),
    c_campaign_id numeric(10,0),
    campaignvalue character varying(40),
    ad_orgtrx_id numeric(10,0),
    orgtrxvalue character varying(40),
    user1_id character varying(10),
    user2_id character varying(10),
    m_movement_id numeric(10,0),
    m_movementline_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_movement_i_isimported_check CHECK ((i_isimported = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_movement_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_movement_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_movement OWNER TO adempiere;

--
-- Name: i_order; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_order (
    i_order_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby numeric(10,0),
    updated timestamp without time zone DEFAULT now(),
    updatedby numeric(10,0),
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_errormsg character varying(2000),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar,
    salesrep_id numeric(10,0),
    m_warehouse_id numeric(10,0),
    m_pricelist_id numeric(10,0),
    c_currency_id numeric(10,0),
    m_shipper_id numeric(10,0),
    issotrx character(1) DEFAULT 'Y'::bpchar,
    c_bpartner_id numeric(10,0),
    bpartnervalue character varying(40),
    name character varying(60),
    c_bpartner_location_id numeric(10,0),
    billto_id numeric(10,0),
    c_location_id numeric(10,0),
    address1 character varying(60),
    address2 character varying(60),
    postal character varying(10),
    city character varying(60),
    c_region_id numeric(10,0),
    regionname character varying(60),
    c_country_id numeric(10,0),
    countrycode character(2),
    ad_user_id numeric(10,0),
    contactname character varying(60),
    email character varying(60),
    phone character varying(40),
    c_project_id numeric(10,0),
    c_activity_id numeric(10,0),
    c_doctype_id numeric(10,0),
    doctypename character varying(60),
    c_paymentterm_id numeric(10,0),
    paymenttermvalue character varying(40),
    c_order_id numeric(10,0),
    documentno character varying(30),
    dateordered timestamp without time zone,
    dateacct timestamp without time zone,
    description character varying(255),
    m_product_id numeric(10,0),
    productvalue character varying(40),
    upc character varying(30),
    sku character varying(30),
    c_tax_id numeric(10,0),
    taxindicator character varying(10),
    taxamt numeric DEFAULT 0,
    c_orderline_id numeric(10,0),
    linedescription character varying(255),
    c_uom_id numeric(10,0),
    qtyordered numeric DEFAULT 0,
    priceactual numeric DEFAULT 0,
    freightamt numeric DEFAULT 0,
    c_campaign_id numeric(10,0),
    c_charge_id numeric(10,0),
    chargename character varying(60),
    c_ordersource_id numeric(10,0),
    c_ordersourcevalue character varying(40),
    deliveryrule character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_order_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_order_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_order_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_order OWNER TO adempiere;

--
-- Name: i_payment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_payment (
    i_payment_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby numeric(10,0),
    updated timestamp without time zone DEFAULT now(),
    updatedby numeric(10,0),
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_errormsg character varying(2000),
    processed character(1) DEFAULT 'N'::bpchar,
    c_payment_id numeric(10,0),
    documentno character varying(30),
    datetrx timestamp without time zone,
    isreceipt character(1) DEFAULT 'Y'::bpchar,
    c_doctype_id numeric(10,0),
    doctypename character varying(60),
    trxtype character(1),
    c_bankaccount_id numeric(10,0),
    bankaccountno character varying(20),
    c_bpartner_id numeric(10,0),
    bpartnervalue character varying(40),
    c_invoice_id numeric(10,0),
    invoicedocumentno character varying(30),
    tendertype character(1),
    creditcardtype character(1),
    creditcardnumber character varying(20),
    creditcardvv character varying(4),
    creditcardexpmm numeric(10,0),
    creditcardexpyy numeric(10,0),
    micr character varying(20),
    routingno character varying(20),
    accountno character varying(20),
    checkno character varying(20),
    a_name character varying(60),
    a_street character varying(60),
    a_city character varying(60),
    a_state character varying(40),
    a_zip character varying(20),
    a_country character varying(40),
    a_ident_dl character varying(20),
    a_ident_ssn character varying(20),
    a_email character varying(60),
    voiceauthcode character varying(20),
    swipe character varying(80),
    orig_trxid character varying(20),
    ponum character varying(60),
    c_currency_id numeric(10,0),
    payamt numeric DEFAULT 0,
    discountamt numeric DEFAULT 0,
    writeoffamt numeric DEFAULT 0,
    isoverunderpayment character(1) DEFAULT 'N'::bpchar,
    overunderamt numeric DEFAULT 0,
    c_charge_id numeric(10,0),
    chargename character varying(60),
    chargeamt numeric DEFAULT 0,
    taxamt numeric DEFAULT 0,
    isapproved character(1) DEFAULT 'N'::bpchar,
    isselfservice character(1) DEFAULT 'N'::bpchar,
    isdelayedcapture character(1) DEFAULT 'N'::bpchar,
    r_pnref character varying(20),
    r_result character varying(20),
    r_respmsg character varying(60),
    r_authcode character varying(20),
    r_info character varying(2000),
    processing character(1),
    iso_code character(3),
    dateacct timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_payment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_payment_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_payment_isdelayedcapture_check CHECK ((isdelayedcapture = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_payment_isoverunderpayment_check CHECK ((isoverunderpayment = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_payment_isreceipt_check CHECK ((isreceipt = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_payment_isselfservice_check CHECK ((isselfservice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_payment_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_payment OWNER TO adempiere;

--
-- Name: i_pricelist; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_pricelist (
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    bpartner_value character varying(40),
    breakvalue numeric,
    c_bpartner_id numeric(10,0),
    c_currency_id numeric(10,0),
    created timestamp without time zone,
    createdby numeric(10,0),
    c_uom_id numeric(10,0),
    description character varying(255),
    enforcepricelimit character(1),
    i_errormsg character varying(2000),
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_pricelist_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar,
    iso_code character varying(3),
    issopricelist character(1),
    istaxincluded character(1),
    m_product_id numeric(10,0),
    name character varying(60),
    pricelimit numeric,
    pricelist numeric,
    priceprecision numeric,
    pricestd numeric,
    processed character(1) DEFAULT 'N'::bpchar,
    processing character(1),
    productvalue character varying(40),
    updated timestamp without time zone,
    updatedby numeric(10,0),
    validfrom timestamp without time zone,
    x12de355 character varying(4),
    m_pricelist_id numeric(10,0),
    m_pricelist_version_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_pricelist_enforcepricelimit_check CHECK ((enforcepricelimit = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_pricelist_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_pricelist_issopricelist_check CHECK ((issopricelist = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_pricelist_istaxincluded_check CHECK ((istaxincluded = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_pricelist_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_pricelist OWNER TO adempiere;

--
-- Name: i_product; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_product (
    i_product_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby numeric(10,0),
    updated timestamp without time zone DEFAULT now(),
    updatedby numeric(10,0),
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_errormsg character varying(2000),
    m_product_id numeric(10,0),
    value character varying(40),
    name character varying(255),
    description character varying(255),
    documentnote character varying(2000),
    help character varying(2000),
    upc character varying(30),
    sku character varying(30),
    x12de355 character varying(4),
    c_uom_id numeric(10,0),
    productcategory_value character varying(40),
    m_product_category_id numeric(10,0),
    producttype character(1) DEFAULT 'I'::bpchar,
    classification character varying(12),
    volume numeric DEFAULT 0,
    weight numeric DEFAULT 0,
    shelfwidth numeric(10,0),
    shelfheight numeric(10,0),
    shelfdepth numeric(10,0),
    unitsperpallet numeric(10,0),
    discontinued character(1) DEFAULT 'N'::bpchar,
    discontinuedby timestamp without time zone,
    imageurl character varying(120),
    descriptionurl character varying(120),
    bpartner_value character varying(40),
    c_bpartner_id numeric(10,0),
    iso_code character(3),
    c_currency_id numeric(10,0),
    pricelist numeric DEFAULT 0,
    pricepo numeric DEFAULT 0,
    royaltyamt numeric DEFAULT 0,
    priceeffective timestamp without time zone,
    vendorproductno character varying(40),
    vendorcategory character varying(30),
    manufacturer character varying(30),
    order_min numeric DEFAULT 0,
    order_pack numeric DEFAULT 0,
    costperorder numeric DEFAULT 0,
    deliverytime_promised numeric(10,0),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar,
    pricestd numeric,
    pricelimit numeric,
    discontinuedat timestamp without time zone,
    m_product_classification_id numeric(10,0),
    m_product_class_id numeric(10,0),
    m_product_group_id numeric(10,0),
    productclass_value character varying(40),
    productclassification_value character varying(40),
    productgroup_value character varying(40),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_product_discontinued_check CHECK ((discontinued = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_product OWNER TO adempiere;

--
-- Name: i_product_asi; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_product_asi (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    i_product_asi_id numeric(10,0) NOT NULL,
    i_errormsg character varying(2000) DEFAULT NULL::character varying,
    i_isimported character(1) DEFAULT NULL::bpchar,
    processed character(1) DEFAULT NULL::bpchar,
    processing character(1) DEFAULT NULL::bpchar,
    productvalue character varying(40) DEFAULT NULL::character varying,
    m_product_id numeric(10,0) DEFAULT NULL::numeric,
    m_attributeset_id numeric(10,0) DEFAULT NULL::numeric,
    m_attributesetinstance_id numeric(10,0) DEFAULT NULL::numeric,
    attributevaluetype character(1) DEFAULT NULL::bpchar,
    isinstanceattribute character(1) DEFAULT NULL::bpchar,
    ismandatory character(1) DEFAULT NULL::bpchar,
    m_attributesearch_id numeric(10,0) DEFAULT NULL::numeric,
    attributevalue character varying(60) DEFAULT NULL::character varying,
    m_attribute_id numeric(10,0) DEFAULT NULL::numeric,
    m_attributevalue_id numeric(10,0) DEFAULT NULL::numeric,
    attributename character varying(60) DEFAULT NULL::character varying,
    guaranteedays numeric(10,0) DEFAULT NULL::numeric,
    isguaranteedate character(1) DEFAULT NULL::bpchar,
    isguaranteedatemandatory character(1) DEFAULT NULL::bpchar,
    islot character(1) DEFAULT NULL::bpchar,
    islotmandatory character(1) DEFAULT NULL::bpchar,
    isserno character(1) DEFAULT NULL::bpchar,
    issernomandatory character(1) DEFAULT NULL::bpchar,
    mandatorytype character(1) DEFAULT NULL::bpchar,
    attributesetname character varying(60) DEFAULT NULL::character varying,
    attributesearchname character varying(60) DEFAULT NULL::character varying,
    elementname character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_product_asi_i_isimported_check CHECK ((i_isimported = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_asi_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_asi_isguaranteedate_check CHECK ((isguaranteedate = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_asi_isguaranteedatemandatory_check CHECK ((isguaranteedatemandatory = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_asi_isinstanceattribute_check CHECK ((isinstanceattribute = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_asi_islot_check CHECK ((islot = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_asi_islotmandatory_check CHECK ((islotmandatory = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_asi_ismandatory_check CHECK ((ismandatory = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_asi_isserno_check CHECK ((isserno = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_asi_issernomandatory_check CHECK ((issernomandatory = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_asi_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_product_asi OWNER TO adempiere;

--
-- Name: i_product_bom; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_product_bom (
    i_product_bom_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    i_errormsg character varying(2000),
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    processed character(1),
    processing character(1),
    pp_product_bomline_id numeric(10,0),
    productvalue character varying(60),
    m_product_id numeric(10,0),
    x12de355 character varying(60),
    c_uom_id numeric(10,0),
    value character varying(40),
    name character varying(60),
    validfrom timestamp without time zone,
    bomtype character varying(2),
    bomuse character varying(2),
    description character varying(255),
    documentno character varying(22),
    validto timestamp without time zone,
    help character varying(2000),
    componenttype character varying(2),
    qtybom numeric,
    qtybatch numeric,
    issuemethod character(1),
    isqtypercentage character(1),
    product_bom_value character varying(40),
    orgvalue character varying(40),
    m_changenotice_id numeric(10,0),
    costallocationperc numeric,
    scrap numeric,
    assay numeric,
    backflushgroup character varying(20),
    leadtimeoffset numeric(10,0),
    iscritical character(1) DEFAULT 'N'::bpchar,
    m_bomproduct_id numeric(10,0),
    pp_product_bom_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_product_bom_i_isimported_check CHECK ((i_isimported = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_bom_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_bom_iscritical_check CHECK ((iscritical = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_bom_isqtypercentage_check CHECK ((isqtypercentage = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_product_bom_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_product_bom OWNER TO adempiere;

--
-- Name: i_productplanning; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_productplanning (
    i_productplanning_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    bpartner_value character varying(40),
    c_bpartner_id numeric(10,0),
    i_errormsg character varying(2000),
    i_isimported character(1) NOT NULL,
    processed character(1),
    processing character(1),
    ad_workflow_id numeric(10,0),
    dd_networkdistribution_id numeric(10,0),
    deliverytime_promised numeric,
    iscreateplan character(1) NOT NULL,
    ismps character(1),
    isphantom character(1) NOT NULL,
    m_product_id numeric(10,0),
    m_warehouse_id numeric(10,0),
    order_max numeric,
    order_min numeric,
    order_pack numeric,
    order_period numeric,
    order_policy character varying(3),
    order_qty numeric,
    planner_id numeric(10,0),
    pp_product_bom_id numeric(10,0),
    safetystock numeric,
    s_resource_id numeric(10,0),
    timefence numeric,
    transfertime numeric,
    workingtime numeric,
    yield numeric(10,0),
    datepromised timestamp without time zone,
    m_forecast_id numeric(10,0),
    qty numeric NOT NULL,
    salesrep_id numeric(10,0),
    productvalue character varying(40),
    warehousevalue character varying(40),
    orgvalue character varying(40),
    networkdistributionvalue character varying(40),
    product_bom_value character varying(40),
    forecastvalue character varying(40),
    resourcevalue character varying(40),
    plannervalue character varying(40),
    m_forecastline_id numeric(10,0),
    pp_product_planning_id numeric(10,0),
    vendorproductno character varying(30),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_productplanning_i_isimported_check CHECK ((i_isimported = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_productplanning_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_productplanning_iscreateplan_check CHECK ((iscreateplan = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_productplanning_ismps_check CHECK ((ismps = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_productplanning_isphantom_check CHECK ((isphantom = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_productplanning_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_productplanning OWNER TO adempiere;

--
-- Name: i_reportline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_reportline (
    i_reportline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar,
    created timestamp without time zone DEFAULT now(),
    createdby numeric(10,0),
    updated timestamp without time zone DEFAULT now(),
    updatedby numeric(10,0),
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    i_errormsg character varying(2000),
    reportlinesetname character varying(60),
    pa_reportlineset_id numeric(10,0),
    name character varying(60),
    pa_reportline_id numeric(10,0),
    description character varying(255),
    seqno numeric(10,0),
    issummary character(1) DEFAULT 'N'::bpchar,
    isprinted character(1) DEFAULT 'Y'::bpchar,
    linetype character(1),
    calculationtype character(1),
    amounttype character varying(2),
    postingtype character(1),
    pa_reportsource_id numeric(10,0),
    c_elementvalue_id numeric(10,0),
    elementvalue character varying(40),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar,
    paamounttype character(1),
    paperiodtype character(1),
    reportlinestyle character(1),
    tablevel numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_reportline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_reportline_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_reportline_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_reportline OWNER TO adempiere;

--
-- Name: i_saleshistory; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_saleshistory (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    i_saleshistory_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    c_bpartner_location_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    c_projectphase_id numeric(10,0) DEFAULT NULL::numeric,
    c_projecttask_id numeric(10,0) DEFAULT NULL::numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    c_salesregion_id numeric(10,0) DEFAULT NULL::numeric,
    costamt numeric,
    m_product_category_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_class_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_classification_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_group_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_id numeric(10,0) DEFAULT NULL::numeric,
    m_warehouse_id numeric(10,0) DEFAULT NULL::numeric,
    priceinvoiced numeric,
    qty numeric,
    salesrep_id numeric(10,0) DEFAULT NULL::numeric,
    totalinvamt numeric,
    totalinvcost numeric,
    totalinvqty numeric,
    orgvalue character varying(40) DEFAULT NULL::character varying,
    activityvalue character varying(40) DEFAULT NULL::character varying,
    bpartnervalue character varying(40) DEFAULT NULL::character varying,
    campaignvalue character varying(40) DEFAULT NULL::character varying,
    projectname character varying(60) DEFAULT NULL::character varying,
    projectphasename character varying(60) DEFAULT NULL::character varying,
    regionname character varying(60) DEFAULT NULL::character varying,
    salesrep_name character varying(30) DEFAULT NULL::character varying,
    productvalue character varying(40) DEFAULT NULL::character varying,
    categoryname character varying(60) DEFAULT NULL::character varying,
    warehousevalue character varying(40) DEFAULT NULL::character varying,
    i_errormsg character varying(2000) DEFAULT NULL::character varying,
    i_isimported character(1) DEFAULT NULL::bpchar,
    processing character(1) DEFAULT NULL::bpchar,
    processed character(1) DEFAULT NULL::bpchar,
    c_saleshistory_id numeric(10,0) DEFAULT NULL::numeric,
    dateinvoiced timestamp without time zone,
    groupvalue character varying(40) DEFAULT NULL::character varying,
    c_bp_group_id numeric(10,0) DEFAULT NULL::numeric,
    user1_id numeric(10,0) DEFAULT NULL::numeric,
    user2_id numeric(10,0) DEFAULT NULL::numeric,
    documentno character varying(30) DEFAULT NULL::character varying,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_saleshistory_i_isimported_check CHECK ((i_isimported = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_saleshistory_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_saleshistory_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_saleshistory OWNER TO adempiere;

--
-- Name: i_workflow; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.i_workflow (
    i_workflow_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) DEFAULT NULL::numeric,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    i_errormsg character varying(2000) DEFAULT NULL::character varying,
    i_isimported character(1) DEFAULT 'N'::bpchar NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar,
    processing character(1) DEFAULT 'N'::bpchar,
    orgvalue character varying(40) DEFAULT NULL::character varying,
    value character varying(40) DEFAULT NULL::character varying,
    name character varying(60) DEFAULT NULL::character varying,
    description character varying(255) DEFAULT NULL::character varying,
    isbetafunctionality character(1) DEFAULT NULL::bpchar,
    workflowtype character(1) DEFAULT NULL::bpchar,
    accesslevel character(1) DEFAULT '1'::bpchar,
    ad_wf_responsible_id numeric(10,0) DEFAULT NULL::numeric,
    priority numeric(10,0) DEFAULT NULL::numeric,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    publishstatus character(1) DEFAULT 'U'::bpchar,
    version numeric(10,0) DEFAULT NULL::numeric,
    author character varying(22) DEFAULT NULL::character varying,
    isdefault character(1) DEFAULT NULL::bpchar,
    ad_wf_node_id numeric(10,0) DEFAULT NULL::numeric,
    ad_workflowprocessor_id numeric(10,0) DEFAULT NULL::numeric,
    durationunit character(1) DEFAULT NULL::bpchar,
    "limit" numeric(10,0) DEFAULT NULL::numeric,
    duration numeric(10,0) DEFAULT NULL::numeric,
    cost numeric,
    workingtime numeric(10,0) DEFAULT NULL::numeric,
    waitingtime numeric(10,0) DEFAULT NULL::numeric,
    ad_table_id numeric(10,0) DEFAULT NULL::numeric,
    docvaluelogic character varying(2000) DEFAULT NULL::character varying,
    entitytype character varying(40) DEFAULT NULL::character varying,
    responsiblename character varying(60) DEFAULT NULL::character varying,
    nodevalue character varying(40) DEFAULT NULL::character varying,
    wfprocessorname character varying(60) DEFAULT NULL::character varying,
    tablename character varying(60) DEFAULT NULL::character varying,
    nodename character varying(60) DEFAULT NULL::character varying,
    iscentrallymaintained character(1) DEFAULT NULL::bpchar,
    startmode character(1) DEFAULT NULL::bpchar,
    finishmode character(1) DEFAULT NULL::bpchar,
    joinelement character(1) DEFAULT 'X'::bpchar,
    splitelement character(1) DEFAULT 'X'::bpchar,
    action character(1) DEFAULT 'W'::bpchar,
    ad_image_id numeric(10,0) DEFAULT NULL::numeric,
    dynpriorityunit character(1) DEFAULT NULL::bpchar,
    dynprioritychange numeric,
    docaction character varying(2) DEFAULT NULL::character varying,
    ad_window_id numeric(10,0) DEFAULT NULL::numeric,
    ad_form_id numeric(10,0) DEFAULT NULL::numeric,
    ad_column_id numeric(10,0) DEFAULT NULL::numeric,
    columnname character varying(60) DEFAULT NULL::character varying,
    attributename character varying(60) DEFAULT NULL::character varying,
    attributevalue character varying(60) DEFAULT NULL::character varying,
    emailrecipient character(1) DEFAULT NULL::bpchar,
    email character varying(60) DEFAULT NULL::character varying,
    r_mailtext_id numeric(10,0) DEFAULT NULL::numeric,
    ad_task_id numeric(10,0) DEFAULT NULL::numeric,
    subflowexecution character(1) DEFAULT NULL::bpchar,
    ad_process_id numeric(10,0) DEFAULT NULL::numeric,
    waittime numeric(10,0) DEFAULT NULL::numeric,
    ad_workflow_id numeric(10,0) DEFAULT NULL::numeric,
    documentno character varying(30) DEFAULT NULL::character varying,
    unitscycles numeric,
    overlapunits numeric(10,0) DEFAULT NULL::numeric,
    ismilestone character(1) DEFAULT NULL::bpchar,
    issubcontracting character(1) DEFAULT NULL::bpchar,
    qtybatchsize numeric,
    processtype character varying(2) DEFAULT NULL::character varying,
    help character varying(2000) DEFAULT NULL::character varying,
    s_resource_id numeric(10,0) DEFAULT NULL::numeric,
    movingtime numeric(10,0) DEFAULT NULL::numeric,
    queuingtime numeric(10,0) DEFAULT NULL::numeric,
    setuptime numeric(10,0) DEFAULT NULL::numeric,
    yield numeric(10,0) DEFAULT NULL::numeric,
    resourcevalue character varying(40) DEFAULT NULL::character varying,
    nodenextvalue character varying(22) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT i_workflow_i_isimported_check CHECK ((i_isimported = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_workflow_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_workflow_isbetafunctionality_check CHECK ((isbetafunctionality = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_workflow_iscentrallymaintained_check CHECK ((iscentrallymaintained = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_workflow_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_workflow_ismilestone_check CHECK ((ismilestone = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_workflow_issubcontracting_check CHECK ((issubcontracting = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT i_workflow_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.i_workflow OWNER TO adempiere;

--
-- Name: imp_processor; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.imp_processor (
    imp_processor_id numeric(10,0) NOT NULL,
    imp_processor_type_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    frequencytype character(1) NOT NULL,
    frequency numeric(10,0) NOT NULL,
    datelastrun timestamp without time zone,
    datenextrun timestamp without time zone,
    keeplogdays numeric(10,0) DEFAULT 7 NOT NULL,
    processing character(1),
    host character varying(255),
    port numeric(10,0),
    account character varying(255),
    passwordinfo character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT imp_processor_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.imp_processor OWNER TO adempiere;

--
-- Name: imp_processor_type; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.imp_processor_type (
    imp_processor_type_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    javaclass character varying(255) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT imp_processor_type_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.imp_processor_type OWNER TO adempiere;

--
-- Name: imp_processorlog; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.imp_processorlog (
    imp_processorlog_id numeric(10,0) NOT NULL,
    imp_processor_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    binarydata bytea,
    iserror character(1) DEFAULT 'Y'::bpchar NOT NULL,
    summary character varying(2000),
    textmsg character varying(2000),
    reference character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT imp_processorlog_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT imp_processorlog_iserror_check CHECK ((iserror = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.imp_processorlog OWNER TO adempiere;

--
-- Name: imp_processorparameter; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.imp_processorparameter (
    imp_processorparameter_id numeric(10,0) NOT NULL,
    imp_processor_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    parametervalue character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT imp_processorparameter_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.imp_processorparameter OWNER TO adempiere;

--
-- Name: k_category; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.k_category (
    k_category_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT k_category_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.k_category OWNER TO adempiere;

--
-- Name: k_categoryvalue; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.k_categoryvalue (
    k_categoryvalue_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    k_category_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT k_categoryvalue_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.k_categoryvalue OWNER TO adempiere;

--
-- Name: k_comment; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.k_comment (
    k_comment_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    k_entry_id numeric(10,0) NOT NULL,
    rating numeric(10,0) NOT NULL,
    ispublic character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ad_session_id numeric(10,0),
    textmsg character varying(2000) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT k_comment_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT k_comment_ispublic_check CHECK ((ispublic = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.k_comment OWNER TO adempiere;

--
-- Name: k_entry; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.k_entry (
    k_entry_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    k_topic_id numeric(10,0) NOT NULL,
    rating numeric(10,0) NOT NULL,
    ispublic character(1) DEFAULT 'Y'::bpchar NOT NULL,
    keywords character varying(255),
    k_source_id numeric(10,0),
    descriptionurl character varying(120),
    validto timestamp without time zone,
    ad_session_id numeric(10,0),
    textmsg character varying(2000) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT k_entry_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT k_entry_ispublic_check CHECK ((ispublic = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.k_entry OWNER TO adempiere;

--
-- Name: k_entrycategory; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.k_entrycategory (
    k_category_id numeric(10,0) NOT NULL,
    k_entry_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    k_categoryvalue_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT k_entrycategory_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.k_entrycategory OWNER TO adempiere;

--
-- Name: k_entryrelated; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.k_entryrelated (
    k_entry_id numeric(10,0) NOT NULL,
    k_entryrelated_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT k_entryrelated_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.k_entryrelated OWNER TO adempiere;

--
-- Name: k_index; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.k_index (
    k_index_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    keyword character varying(255) NOT NULL,
    excerpt character varying(2000),
    ad_table_id numeric(10,0) NOT NULL,
    record_id numeric(10,0) NOT NULL,
    sourceupdated timestamp without time zone DEFAULT now() NOT NULL,
    cm_webproject_id numeric(10,0),
    r_requesttype_id numeric(10,0),
    c_doctype_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT k_index_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.k_index OWNER TO adempiere;

--
-- Name: k_indexlog; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.k_indexlog (
    k_indexlog_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    indexquery character varying(255) NOT NULL,
    indexqueryresult numeric(10,0) DEFAULT 0 NOT NULL,
    querysource character(1) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT k_indexlog_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.k_indexlog OWNER TO adempiere;

--
-- Name: k_indexstop; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.k_indexstop (
    k_indexstop_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    keyword character varying(255) NOT NULL,
    ismanual character(1) DEFAULT 'Y'::bpchar NOT NULL,
    cm_webproject_id numeric(10,0),
    r_requesttype_id numeric(10,0),
    c_doctype_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT k_indexstop_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT k_indexstop_ismanual_check CHECK ((ismanual = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.k_indexstop OWNER TO adempiere;

--
-- Name: k_source; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.k_source (
    k_source_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    descriptionurl character varying(120),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT k_source_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.k_source OWNER TO adempiere;

--
-- Name: k_synonym; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.k_synonym (
    k_synonym_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    synonymname character varying(60) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT k_synonym_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.k_synonym OWNER TO adempiere;

--
-- Name: k_topic; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.k_topic (
    k_topic_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    k_type_id numeric(10,0) NOT NULL,
    ispublic character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ispublicwrite character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT k_topic_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT k_topic_ispublic_check CHECK ((ispublic = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.k_topic OWNER TO adempiere;

--
-- Name: k_type; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.k_type (
    k_type_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ispublic character(1) DEFAULT 'N'::bpchar NOT NULL,
    ispublicwrite character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT k_type_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT k_type_ispublic_check CHECK ((ispublic = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.k_type OWNER TO adempiere;

--
-- Name: m_attribute; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_attribute (
    m_attribute_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    ismandatory character(1) DEFAULT 'N'::bpchar NOT NULL,
    isinstanceattribute character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_attributesearch_id numeric(10,0),
    attributevaluetype character(1) DEFAULT 'S'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_attribute_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_attribute_isinstanceattribute_check CHECK ((isinstanceattribute = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_attribute_ismandatory_check CHECK ((ismandatory = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_attribute OWNER TO adempiere;

--
-- Name: m_attributeinstance; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_attributeinstance (
    m_attributesetinstance_id numeric(10,0) DEFAULT 0 NOT NULL,
    m_attribute_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_attributevalue_id numeric(10,0),
    value character varying(40),
    valuenumber numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_attributeinstance_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_attributeinstance OWNER TO adempiere;

--
-- Name: m_attributesearch; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_attributesearch (
    m_attributesearch_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_attributesearch_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_attributesearch OWNER TO adempiere;

--
-- Name: m_attributeset; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_attributeset (
    m_attributeset_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    isserno character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_sernoctl_id numeric(10,0),
    islot character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_lotctl_id numeric(10,0),
    isguaranteedate character(1) DEFAULT 'N'::bpchar NOT NULL,
    guaranteedays numeric(10,0),
    isinstanceattribute character(1) DEFAULT 'N'::bpchar NOT NULL,
    mandatorytype character(1) DEFAULT 'N'::bpchar NOT NULL,
    isguaranteedatemandatory character(1) DEFAULT 'N'::bpchar NOT NULL,
    islotmandatory character(1) DEFAULT 'N'::bpchar NOT NULL,
    issernomandatory character(1) DEFAULT 'N'::bpchar NOT NULL,
    sernocharsoverwrite character(1),
    lotcharsoverwrite character(1),
    lotchareoverwrite character(1),
    sernochareoverwrite character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_attributeset_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_attributeset_isguaranteedate_check CHECK ((isguaranteedate = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_attributeset_islot_check CHECK ((islot = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_attributeset_isserno_check CHECK ((isserno = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_attributeset OWNER TO adempiere;

--
-- Name: m_attributesetexclude; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_attributesetexclude (
    m_attributesetexclude_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_attributeset_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    issotrx character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_attributesetexclude_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_attributesetexclude_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_attributesetexclude OWNER TO adempiere;

--
-- Name: m_attributeuse; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_attributeuse (
    m_attribute_id numeric(10,0) NOT NULL,
    m_attributeset_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_attributeuse_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_attributeuse OWNER TO adempiere;

--
-- Name: m_attributevalue; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_attributevalue (
    m_attributevalue_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_attribute_id numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_attributevalue_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_attributevalue OWNER TO adempiere;

--
-- Name: m_bom; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_bom (
    m_bom_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_changenotice_id numeric(10,0),
    bomtype character(1) NOT NULL,
    bomuse character(1) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_bom_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_bom OWNER TO adempiere;

--
-- Name: m_bomalternative; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_bomalternative (
    m_bomalternative_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    m_product_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_bomalternative_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_bomalternative OWNER TO adempiere;

--
-- Name: m_bomproduct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_bomproduct (
    m_bomproduct_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    line numeric(10,0) DEFAULT 0 NOT NULL,
    m_bom_id numeric(10,0) NOT NULL,
    bomproducttype character(1) NOT NULL,
    isphantom character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_productbom_id numeric(10,0),
    m_changenotice_id numeric(10,0),
    m_attributesetinstance_id numeric(10,0),
    m_bomalternative_id numeric(10,0),
    bomqty numeric DEFAULT 0 NOT NULL,
    description character varying(255),
    help character varying(2000),
    m_productoperation_id numeric(10,0),
    seqno numeric(10,0) DEFAULT 0,
    leadtimeoffset numeric(10,0) DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_bomproduct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_bomproduct_isphantom_check CHECK ((isphantom = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_bomproduct OWNER TO adempiere;

--
-- Name: m_bp_price; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_bp_price (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    breakvalue numeric NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    comments character varying(2000) DEFAULT NULL::character varying,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    discount numeric,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_bp_price_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    pricelimit numeric NOT NULL,
    pricelist numeric NOT NULL,
    priceoverridetype character(1) DEFAULT NULL::bpchar,
    pricestd numeric NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    isnetprice character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_bp_price_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_bp_price_isnetprice_check CHECK ((isnetprice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_bp_price OWNER TO adempiere;

--
-- Name: m_changenotice; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_changenotice (
    m_changenotice_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    detailinfo text,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_changenotice_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_changenotice OWNER TO adempiere;

--
-- Name: m_changerequest; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_changerequest (
    m_changerequest_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_changenotice_id numeric(10,0),
    documentno character varying(30) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    detailinfo text,
    m_fixchangenotice_id numeric(10,0),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    pp_product_bom_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_changerequest_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_changerequest OWNER TO adempiere;

--
-- Name: m_cost; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_cost (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_costtype_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    m_costelement_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    currentcostprice numeric NOT NULL,
    currentqty numeric DEFAULT 0 NOT NULL,
    cumulatedamt numeric DEFAULT 0,
    cumulatedqty numeric DEFAULT 0,
    futurecostprice numeric,
    description character varying(255),
    percent numeric(10,0) DEFAULT 0,
    currentcostpricell numeric DEFAULT 0,
    futurecostpricell numeric,
    iscostfrozen character(1) DEFAULT 'N'::bpchar,
    cumulatedamtll numeric,
    m_warehouse_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_cost_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_cost_iscostfrozen_check CHECK ((iscostfrozen = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_cost OWNER TO adempiere;

--
-- Name: m_costdetail; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_costdetail (
    m_costdetail_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_costelement_id numeric(10,0),
    c_orderline_id numeric(10,0),
    m_inoutline_id numeric(10,0),
    c_invoiceline_id numeric(10,0),
    m_movementline_id numeric(10,0),
    m_inventoryline_id numeric(10,0),
    m_productionline_id numeric(10,0),
    c_projectissue_id numeric(10,0),
    issotrx character(1) DEFAULT 'Y'::bpchar NOT NULL,
    amt numeric DEFAULT 0 NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    deltaamt numeric DEFAULT 0,
    deltaqty numeric DEFAULT 0,
    description character varying(255),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    pp_cost_collector_id numeric(10,0),
    currentcostprice numeric,
    currentqty numeric,
    cumulatedamt numeric,
    cumulatedqty numeric,
    m_costtype_id numeric(10,0) DEFAULT NULL::numeric,
    dateacct timestamp without time zone,
    m_transaction_id numeric(10,0) DEFAULT NULL::numeric,
    costingmethod character(1),
    c_landedcostallocation_id numeric(10,0) DEFAULT NULL::numeric,
    currentcostpricell numeric,
    costadjustment numeric,
    costadjustmentdate timestamp without time zone,
    costamt numeric,
    isreversal character(1) DEFAULT 'N'::bpchar,
    processing character(1) DEFAULT 'N'::bpchar,
    amtll numeric,
    costadjustmentll numeric,
    costadjustmentdatell timestamp without time zone,
    costamtll numeric,
    cumulatedamtll numeric,
    seqno numeric(10,0) DEFAULT NULL::numeric,
    m_warehouse_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_costdetail_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_costdetail_isreversal_check CHECK ((isreversal = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_costdetail_isreversal_check1 CHECK ((isreversal = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_costdetail_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_costdetail_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_costdetail OWNER TO adempiere;

--
-- Name: m_costelement; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_costelement (
    m_costelement_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    costelementtype character(1) NOT NULL,
    costingmethod character(1),
    iscalculated character(1) DEFAULT 'N'::bpchar NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_costelement_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_costelement_iscalculated_check CHECK ((iscalculated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_costelement_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_costelement OWNER TO adempiere;

--
-- Name: m_costqueue; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_costqueue (
    m_costqueue_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_costtype_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    m_costelement_id numeric(10,0) NOT NULL,
    currentcostprice numeric DEFAULT 0 NOT NULL,
    currentqty numeric DEFAULT 0 NOT NULL,
    dateacct timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_costqueue_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_costqueue OWNER TO adempiere;

--
-- Name: m_costtype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_costtype (
    m_costtype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    costingmethod character(1) DEFAULT 'S'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_costtype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_costtype OWNER TO adempiere;

--
-- Name: m_demand; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_demand (
    m_demand_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_calendar_id numeric(10,0) NOT NULL,
    c_year_id numeric(10,0) NOT NULL,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_demand_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_demand_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_demand OWNER TO adempiere;

--
-- Name: m_demanddetail; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_demanddetail (
    m_demanddetail_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_demandline_id numeric(10,0) NOT NULL,
    m_forecastline_id numeric(10,0),
    m_requisitionline_id numeric(10,0),
    c_orderline_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_demanddetail_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_demanddetail OWNER TO adempiere;

--
-- Name: m_demandline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_demandline (
    m_demandline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_demand_id numeric(10,0) NOT NULL,
    c_period_id numeric(10,0) NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    qtycalculated numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_demandline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_demandline OWNER TO adempiere;

--
-- Name: m_discountschema; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_discountschema (
    m_discountschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    validfrom timestamp without time zone NOT NULL,
    discounttype character(1) NOT NULL,
    script character varying(2000),
    flatdiscount numeric,
    isquantitybased character(1) DEFAULT 'Y'::bpchar NOT NULL,
    cumulativelevel character(1),
    processing character(1),
    isbpartnerflatdiscount character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_discountschema_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_discountschema_isquantitybased_check CHECK ((isquantitybased = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_discountschema OWNER TO adempiere;

--
-- Name: m_discountschemabreak; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_discountschemabreak (
    m_discountschemabreak_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_discountschema_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    breakvalue numeric NOT NULL,
    breakdiscount numeric NOT NULL,
    m_product_category_id numeric(10,0),
    m_product_id numeric(10,0),
    isbpartnerflatdiscount character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_discountschemabreak_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_discountschemabreak OWNER TO adempiere;

--
-- Name: m_discountschemaline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_discountschemaline (
    m_discountschemaline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_discountschema_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    m_product_category_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    m_product_id numeric(10,0),
    conversiondate timestamp without time zone NOT NULL,
    list_base character(1) NOT NULL,
    list_addamt numeric DEFAULT 0 NOT NULL,
    list_discount numeric NOT NULL,
    list_rounding character(1) NOT NULL,
    list_minamt numeric DEFAULT 0 NOT NULL,
    list_maxamt numeric DEFAULT 0 NOT NULL,
    list_fixed numeric DEFAULT 0,
    std_base character(1) NOT NULL,
    std_addamt numeric DEFAULT 0 NOT NULL,
    std_discount numeric NOT NULL,
    std_rounding character(1) NOT NULL,
    std_minamt numeric DEFAULT 0 NOT NULL,
    std_maxamt numeric DEFAULT 0 NOT NULL,
    std_fixed numeric DEFAULT 0,
    limit_base character(1) NOT NULL,
    limit_addamt numeric DEFAULT 0 NOT NULL,
    limit_discount numeric NOT NULL,
    limit_rounding character(1) NOT NULL,
    limit_minamt numeric DEFAULT 0 NOT NULL,
    limit_maxamt numeric DEFAULT 0 NOT NULL,
    limit_fixed numeric DEFAULT 0,
    c_conversiontype_id numeric(10,0) NOT NULL,
    classification character varying(12),
    group2 character varying(255),
    group1 character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_discountschemaline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_discountschemaline OWNER TO adempiere;

--
-- Name: m_distributionlist; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_distributionlist (
    m_distributionlist_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ratiototal numeric,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_distributionlist_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_distributionlist OWNER TO adempiere;

--
-- Name: m_distributionlistline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_distributionlistline (
    m_distributionlistline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_distributionlist_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bpartner_location_id numeric(10,0) NOT NULL,
    minqty numeric DEFAULT 0 NOT NULL,
    ratio numeric,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_distributionlistline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_distributionlistline OWNER TO adempiere;

--
-- Name: m_distributionrun; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_distributionrun (
    m_distributionrun_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    iscreatesingleorder character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_bpartner_id numeric(10,0),
    c_bpartner_location_id numeric(10,0),
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_distributionrun_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_distributionrun_iscreatesingleorder_check CHECK ((iscreatesingleorder = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_distributionrun OWNER TO adempiere;

--
-- Name: m_distributionrunline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_distributionrunline (
    m_distributionrunline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_distributionrun_id numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    description character varying(255),
    m_distributionlist_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    totalqty numeric DEFAULT 0 NOT NULL,
    minqty numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_distributionrunline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_distributionrunline OWNER TO adempiere;

--
-- Name: m_edi; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_edi (
    m_edi_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_bp_edi_id numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    line numeric(10,0) NOT NULL,
    trxtype character(1) NOT NULL,
    edistatus character(1) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    request_qty numeric DEFAULT 0 NOT NULL,
    request_shipdate timestamp without time zone NOT NULL,
    request_price numeric DEFAULT 0,
    trxsent timestamp without time zone NOT NULL,
    trxreceived timestamp without time zone,
    reply_received timestamp without time zone,
    reply_qtyconfirmed numeric DEFAULT 0,
    reply_qtyavailable numeric DEFAULT 0,
    reply_shipdate timestamp without time zone,
    reply_price numeric DEFAULT 0,
    reply_remarks character varying(2000),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    CONSTRAINT m_edi_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_edi_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_edi OWNER TO adempiere;

--
-- Name: m_edi_info; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_edi_info (
    m_edi_info_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_edi_id numeric(10,0) NOT NULL,
    info text NOT NULL,
    CONSTRAINT m_edi_info_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_edi_info OWNER TO adempiere;

--
-- Name: m_forecast; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_forecast (
    m_forecast_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_calendar_id numeric(10,0),
    c_year_id numeric(10,0),
    processing character(1),
    m_pricelist_id numeric(10,0),
    pp_calendar_id numeric(10,0) DEFAULT NULL::numeric,
    pp_perioddefinition_id numeric(10,0) DEFAULT NULL::numeric,
    processed character(1) DEFAULT NULL::bpchar,
    processedon numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    c_projectphase_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_forecast_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_forecast_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_forecast_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_forecast OWNER TO adempiere;

--
-- Name: m_forecastline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_forecastline (
    m_forecastline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_forecast_id numeric(10,0) NOT NULL,
    c_period_id numeric(10,0),
    qty numeric DEFAULT 0 NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    qtycalculated numeric DEFAULT 0 NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    datepromised timestamp without time zone NOT NULL,
    salesrep_id numeric(10,0),
    pp_period_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_forecastline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_forecastline OWNER TO adempiere;

--
-- Name: m_freight; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_freight (
    m_freight_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_shipper_id numeric(10,0) NOT NULL,
    m_freightcategory_id numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    c_country_id numeric(10,0),
    to_country_id numeric(10,0),
    c_region_id numeric(10,0),
    to_region_id numeric(10,0),
    c_currency_id numeric(10,0) NOT NULL,
    freightamt numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.m_freight OWNER TO adempiere;

--
-- Name: m_freightcategory; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_freightcategory (
    m_freightcategory_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.m_freightcategory OWNER TO adempiere;

--
-- Name: m_inout_candidate_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_inout_candidate_v AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.c_bpartner_id,
    o.c_order_id,
    o.documentno,
    o.dateordered,
    o.c_doctype_id,
    o.poreference,
    o.description,
    o.salesrep_id,
    l.m_warehouse_id,
    sum(((l.qtyordered - l.qtydelivered) * l.priceactual)) AS totallines
   FROM (adempiere.c_order o
     JOIN adempiere.c_orderline l ON ((o.c_order_id = l.c_order_id)))
  WHERE ((o.docstatus = 'CO'::bpchar) AND (o.isdelivered = 'N'::bpchar) AND (o.c_doctype_id IN ( SELECT c_doctype.c_doctype_id
           FROM adempiere.c_doctype
          WHERE ((c_doctype.docbasetype = 'SOO'::bpchar) AND (c_doctype.docsubtypeso <> ALL (ARRAY['ON'::bpchar, 'OB'::bpchar, 'WR'::bpchar]))))) AND (o.deliveryrule <> 'M'::bpchar) AND ((l.m_product_id IS NULL) OR (EXISTS ( SELECT p.m_product_id,
            p.ad_client_id,
            p.ad_org_id,
            p.isactive,
            p.created,
            p.createdby,
            p.updated,
            p.updatedby,
            p.value,
            p.name,
            p.description,
            p.documentnote,
            p.help,
            p.upc,
            p.sku,
            p.c_uom_id,
            p.salesrep_id,
            p.issummary,
            p.isstocked,
            p.ispurchased,
            p.issold,
            p.isbom,
            p.isinvoiceprintdetails,
            p.ispicklistprintdetails,
            p.isverified,
            p.c_revenuerecognition_id,
            p.m_product_category_id,
            p.classification,
            p.volume,
            p.weight,
            p.shelfwidth,
            p.shelfheight,
            p.shelfdepth,
            p.unitsperpallet,
            p.c_taxcategory_id,
            p.s_resource_id,
            p.discontinued,
            p.discontinuedby,
            p.processing,
            p.s_expensetype_id,
            p.producttype,
            p.imageurl,
            p.descriptionurl,
            p.guaranteedays,
            p.r_mailtext_id,
            p.versionno,
            p.m_attributeset_id,
            p.m_attributesetinstance_id,
            p.downloadurl,
            p.m_freightcategory_id,
            p.m_locator_id,
            p.guaranteedaysmin,
            p.iswebstorefeatured,
            p.isselfservice,
            p.c_subscriptiontype_id,
            p.isdropship,
            p.isexcludeautodelivery,
            p.group1,
            p.group2,
            p.istoformule,
            p.lowlevel,
            p.unitsperpack,
            p.discontinuedat,
            p.copyfrom
           FROM adempiere.m_product p
          WHERE ((l.m_product_id = p.m_product_id) AND (p.isexcludeautodelivery = 'N'::bpchar))))) AND (l.qtyordered <> l.qtydelivered) AND (o.isdropship = 'N'::bpchar) AND ((l.m_product_id IS NOT NULL) OR (l.c_charge_id IS NOT NULL)) AND (NOT (EXISTS ( SELECT iol.m_inoutline_id,
            iol.ad_client_id,
            iol.ad_org_id,
            iol.isactive,
            iol.created,
            iol.createdby,
            iol.updated,
            iol.updatedby,
            iol.line,
            iol.description,
            iol.m_inout_id,
            iol.c_orderline_id,
            iol.m_locator_id,
            iol.m_product_id,
            iol.c_uom_id,
            iol.movementqty,
            iol.isinvoiced,
            iol.m_attributesetinstance_id,
            iol.isdescription,
            iol.confirmedqty,
            iol.pickedqty,
            iol.scrappedqty,
            iol.targetqty,
            iol.ref_inoutline_id,
            iol.processed,
            iol.qtyentered,
            iol.c_charge_id,
            iol.c_project_id,
            iol.c_projectphase_id,
            iol.c_projecttask_id,
            iol.c_campaign_id,
            iol.c_activity_id,
            iol.user1_id,
            iol.user2_id,
            iol.ad_orgtrx_id,
            iol.m_rmaline_id,
            iol.reversalline_id,
            io.m_inout_id,
            io.ad_client_id,
            io.ad_org_id,
            io.isactive,
            io.created,
            io.createdby,
            io.updated,
            io.updatedby,
            io.issotrx,
            io.documentno,
            io.docaction,
            io.docstatus,
            io.posted,
            io.processing,
            io.processed,
            io.c_doctype_id,
            io.description,
            io.c_order_id,
            io.dateordered,
            io.isprinted,
            io.movementtype,
            io.movementdate,
            io.dateacct,
            io.c_bpartner_id,
            io.c_bpartner_location_id,
            io.m_warehouse_id,
            io.poreference,
            io.deliveryrule,
            io.freightcostrule,
            io.freightamt,
            io.deliveryviarule,
            io.m_shipper_id,
            io.c_charge_id,
            io.chargeamt,
            io.priorityrule,
            io.dateprinted,
            io.c_invoice_id,
            io.createfrom,
            io.generateto,
            io.sendemail,
            io.ad_user_id,
            io.salesrep_id,
            io.nopackages,
            io.pickdate,
            io.shipdate,
            io.trackingno,
            io.ad_orgtrx_id,
            io.c_project_id,
            io.c_campaign_id,
            io.c_activity_id,
            io.user1_id,
            io.user2_id,
            io.datereceived,
            io.isintransit,
            io.ref_inout_id,
            io.createconfirm,
            io.createpackage,
            io.isapproved,
            io.isindispute,
            io.volume,
            io.weight,
            io.m_rma_id,
            io.reversal_id,
            io.isdropship,
            io.dropship_bpartner_id,
            io.dropship_location_id,
            io.dropship_user_id,
            io.processedon
           FROM (adempiere.m_inoutline iol
             JOIN adempiere.m_inout io ON ((iol.m_inout_id = io.m_inout_id)))
          WHERE ((iol.c_orderline_id = l.c_orderline_id) AND (io.docstatus = ANY (ARRAY['IP'::bpchar, 'WC'::bpchar])))))))
  GROUP BY o.ad_client_id, o.ad_org_id, o.c_bpartner_id, o.c_order_id, o.documentno, o.dateordered, o.c_doctype_id, o.poreference, o.description, o.salesrep_id, l.m_warehouse_id;


ALTER TABLE adempiere.m_inout_candidate_v OWNER TO adempiere;

--
-- Name: m_locator; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_locator (
    m_locator_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    priorityno numeric(10,0) NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    x character varying(60),
    y character varying(60),
    z character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_locator_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_locator OWNER TO adempiere;

--
-- Name: m_storage; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_storage (
    m_product_id numeric(10,0) NOT NULL,
    m_locator_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    qtyonhand numeric DEFAULT 0 NOT NULL,
    qtyreserved numeric DEFAULT 0 NOT NULL,
    qtyordered numeric DEFAULT 0 NOT NULL,
    datelastinventory timestamp without time zone,
    m_attributesetinstance_id numeric(10,0) DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_storage_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_storage OWNER TO adempiere;

--
-- Name: rv_storage; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_storage AS
 SELECT s.ad_client_id,
    s.ad_org_id,
    s.m_product_id,
    p.value,
    p.name,
    p.description,
    p.upc,
    p.sku,
    p.c_uom_id,
    p.m_product_category_id,
    p.classification,
    p.weight,
    p.volume,
    p.versionno,
    p.guaranteedays,
    p.guaranteedaysmin,
    s.m_locator_id,
    l.m_warehouse_id,
    l.x,
    l.y,
    l.z,
    s.qtyonhand,
    s.qtyreserved,
    (s.qtyonhand - s.qtyreserved) AS qtyavailable,
    s.qtyordered,
    s.datelastinventory,
    s.m_attributesetinstance_id,
    asi.m_attributeset_id,
    asi.serno,
    asi.lot,
    asi.m_lot_id,
    asi.guaranteedate,
    adempiere.daysbetween((asi.guaranteedate)::timestamp with time zone, adempiere.getdate()) AS shelflifedays,
    ((adempiere.daysbetween((asi.guaranteedate)::timestamp with time zone, adempiere.getdate()))::numeric - p.guaranteedaysmin) AS goodfordays,
        CASE
            WHEN (COALESCE(p.guaranteedays, (0)::numeric) > (0)::numeric) THEN round((((adempiere.daysbetween((asi.guaranteedate)::timestamp with time zone, adempiere.getdate()))::numeric / p.guaranteedays) * (100)::numeric), 0)
            ELSE NULL::numeric
        END AS shelfliferemainingpct
   FROM (((adempiere.m_storage s
     JOIN adempiere.m_locator l ON ((s.m_locator_id = l.m_locator_id)))
     JOIN adempiere.m_product p ON ((s.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.m_attributesetinstance asi ON ((s.m_attributesetinstance_id = asi.m_attributesetinstance_id)));


ALTER TABLE adempiere.rv_storage OWNER TO adempiere;

--
-- Name: rv_storage_per_product; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_storage_per_product AS
 SELECT strg.ad_client_id,
    strg.ad_org_id,
    p.m_product_id,
    p.value,
    p.name,
    p.description,
    p.upc,
    p.sku,
    p.c_uom_id,
    p.m_product_category_id,
    p.classification,
    p.weight,
    p.volume,
    p.versionno,
    p.guaranteedays,
    p.guaranteedaysmin,
    strg.sumqtyonhand,
    strg.sumqtyreserved,
    l.m_warehouse_id
   FROM ((adempiere.m_product p
     JOIN ( SELECT rv_storage.m_product_id,
            rv_storage.m_locator_id,
            sum(rv_storage.qtyonhand) AS sumqtyonhand,
            sum(rv_storage.qtyreserved) AS sumqtyreserved,
            rv_storage.ad_client_id,
            rv_storage.ad_org_id
           FROM adempiere.rv_storage
          GROUP BY rv_storage.m_product_id, rv_storage.m_locator_id, rv_storage.ad_client_id, rv_storage.ad_org_id) strg ON ((p.m_product_id = strg.m_product_id)))
     JOIN adempiere.m_locator l ON ((strg.m_locator_id = l.m_locator_id)));


ALTER TABLE adempiere.rv_storage_per_product OWNER TO adempiere;

--
-- Name: m_inout_candidatedetail_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_inout_candidatedetail_v AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.c_bpartner_id,
    o.c_order_id,
    o.documentno,
    o.dateordered,
    o.c_doctype_id,
    o.poreference,
    o.description,
    o.salesrep_id,
    l.m_warehouse_id,
    ((l.qtyordered - l.qtydelivered) * l.priceactual) AS totallines,
    (l.qtyordered - l.qtydelivered) AS qtytodeliver,
    l.c_orderline_id,
    l.datepromised,
    l.m_product_id,
    l.c_charge_id,
    l.qtyordered,
        CASE
            WHEN (iol.unconfirmedlinesnotoship IS NULL) THEN 'N'::text
            ELSE 'Y'::text
        END AS isunconfirmedinout,
    iol.unconfirmedlinesnotoship,
    o.deliveryrule,
    (storage.qtyavailable - l.qtyreserved) AS qtyavailable
   FROM (((adempiere.c_order o
     JOIN adempiere.c_orderline l ON ((o.c_order_id = l.c_order_id)))
     LEFT JOIN ( SELECT count(iol_1.m_inoutline_id) AS unconfirmedlinesnotoship,
            iol_1.c_orderline_id
           FROM (adempiere.m_inoutline iol_1
             JOIN adempiere.m_inout io ON ((iol_1.m_inout_id = io.m_inout_id)))
          WHERE (io.docstatus = ANY (ARRAY['IP'::bpchar, 'WC'::bpchar]))
          GROUP BY iol_1.c_orderline_id) iol ON ((iol.c_orderline_id = l.c_orderline_id)))
     LEFT JOIN ( SELECT sum((rv_storage_per_product.sumqtyonhand - rv_storage_per_product.sumqtyreserved)) AS qtyavailable,
            rv_storage_per_product.m_product_id,
            rv_storage_per_product.m_warehouse_id
           FROM adempiere.rv_storage_per_product
          GROUP BY rv_storage_per_product.m_product_id, rv_storage_per_product.m_warehouse_id) storage ON (((storage.m_product_id = l.m_product_id) AND (storage.m_warehouse_id = o.m_warehouse_id))))
  WHERE ((o.docstatus = 'CO'::bpchar) AND (o.isdelivered = 'N'::bpchar) AND (o.c_doctype_id IN ( SELECT c_doctype.c_doctype_id
           FROM adempiere.c_doctype
          WHERE ((c_doctype.docbasetype = 'SOO'::bpchar) AND (c_doctype.docsubtypeso <> ALL (ARRAY['ON'::bpchar, 'OB'::bpchar, 'WR'::bpchar]))))) AND (o.deliveryrule <> 'M'::bpchar) AND ((l.m_product_id IS NULL) OR (EXISTS ( SELECT p.value
           FROM adempiere.m_product p
          WHERE ((l.m_product_id = p.m_product_id) AND (p.isexcludeautodelivery = 'N'::bpchar))))) AND (l.qtyordered <> l.qtydelivered) AND (o.isdropship = 'N'::bpchar) AND ((l.m_product_id IS NOT NULL) OR (l.c_charge_id IS NOT NULL)) AND (NOT (EXISTS ( SELECT iol_1.m_inoutline_id
           FROM (adempiere.m_inoutline iol_1
             JOIN adempiere.m_inout io ON ((iol_1.m_inout_id = io.m_inout_id)))
          WHERE ((iol_1.c_orderline_id = l.c_orderline_id) AND (io.docstatus = ANY (ARRAY['IP'::bpchar, 'WC'::bpchar])))))));


ALTER TABLE adempiere.m_inout_candidatedetail_v OWNER TO adempiere;

--
-- Name: m_inout_header_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_inout_header_v AS
 SELECT io.ad_client_id,
    io.ad_org_id,
    io.isactive,
    io.created,
    io.createdby,
    io.updated,
    io.updatedby,
    'en_US'::character varying AS ad_language,
    io.m_inout_id,
    io.issotrx,
    io.documentno,
    io.docstatus,
    io.c_doctype_id,
    io.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    io.m_warehouse_id,
    wh.c_location_id AS warehouse_location_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    io.c_order_id,
    io.movementdate,
    io.movementtype,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    bpcg.greeting AS bpcontactgreeting,
    bpc.title,
    bpc.phone,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname,
    bpl.c_location_id,
    ((l.postal)::text || (l.postal_add)::text) AS postal,
    bp.referenceno,
    io.description,
    io.poreference,
    io.dateordered,
    io.volume,
    io.weight,
    io.m_shipper_id,
    io.deliveryrule,
    io.deliveryviarule,
    io.priorityrule,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM ((((((((((adempiere.m_inout io
     JOIN adempiere.c_doctype dt ON ((io.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.c_bpartner bp ON ((io.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting bpg ON ((bp.c_greeting_id = bpg.c_greeting_id)))
     JOIN adempiere.c_bpartner_location bpl ON ((io.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     JOIN adempiere.c_location l ON ((bpl.c_location_id = l.c_location_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((io.ad_user_id = bpc.ad_user_id)))
     LEFT JOIN adempiere.c_greeting bpcg ON ((bpc.c_greeting_id = bpcg.c_greeting_id)))
     JOIN adempiere.ad_orginfo oi ON ((io.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((io.ad_client_id = ci.ad_client_id)))
     JOIN adempiere.m_warehouse wh ON ((io.m_warehouse_id = wh.m_warehouse_id)));


ALTER TABLE adempiere.m_inout_header_v OWNER TO adempiere;

--
-- Name: m_inout_header_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_inout_header_vt AS
 SELECT io.ad_client_id,
    io.ad_org_id,
    io.isactive,
    io.created,
    io.createdby,
    io.updated,
    io.updatedby,
    dt.ad_language,
    io.m_inout_id,
    io.issotrx,
    io.documentno,
    io.docstatus,
    io.c_doctype_id,
    io.c_bpartner_id,
    bp.value AS bpvalue,
    bp.taxid AS bptaxid,
    bp.naics,
    bp.duns,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    io.m_warehouse_id,
    wh.c_location_id AS warehouse_location_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    io.c_order_id,
    bpc.phone,
    io.movementdate,
    io.movementtype,
    bpg.greeting AS bpgreeting,
    bp.name,
    bp.name2,
    bpcg.greeting AS bpcontactgreeting,
    bpc.title,
    NULLIF((bpc.name)::text, (bp.name)::text) AS contactname,
    bpl.c_location_id,
    ((l.postal)::text || (l.postal_add)::text) AS postal,
    bp.referenceno,
    io.description,
    io.poreference,
    io.dateordered,
    io.volume,
    io.weight,
    io.m_shipper_id,
    io.deliveryrule,
    io.deliveryviarule,
    io.priorityrule,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM ((((((((((adempiere.m_inout io
     JOIN adempiere.c_doctype_trl dt ON ((io.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.c_bpartner bp ON ((io.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.c_greeting_trl bpg ON (((bp.c_greeting_id = bpg.c_greeting_id) AND ((dt.ad_language)::text = (bpg.ad_language)::text))))
     JOIN adempiere.c_bpartner_location bpl ON ((io.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     JOIN adempiere.c_location l ON ((bpl.c_location_id = l.c_location_id)))
     LEFT JOIN adempiere.ad_user bpc ON ((io.ad_user_id = bpc.ad_user_id)))
     LEFT JOIN adempiere.c_greeting_trl bpcg ON (((bpc.c_greeting_id = bpcg.c_greeting_id) AND ((dt.ad_language)::text = (bpcg.ad_language)::text))))
     JOIN adempiere.ad_orginfo oi ON ((io.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((io.ad_client_id = ci.ad_client_id)))
     JOIN adempiere.m_warehouse wh ON ((io.m_warehouse_id = wh.m_warehouse_id)));


ALTER TABLE adempiere.m_inout_header_vt OWNER TO adempiere;

--
-- Name: m_inout_line_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_inout_line_v AS
 SELECT iol.ad_client_id,
    iol.ad_org_id,
    iol.isactive,
    iol.created,
    iol.createdby,
    iol.updated,
    iol.updatedby,
    'en_US'::text AS ad_language,
    iol.m_inout_id,
    iol.m_inoutline_id,
    iol.line,
    p.m_product_id,
        CASE
            WHEN ((iol.movementqty <> (0)::numeric) OR (iol.m_product_id IS NOT NULL)) THEN iol.movementqty
            ELSE NULL::numeric
        END AS movementqty,
        CASE
            WHEN ((iol.qtyentered <> (0)::numeric) OR (iol.m_product_id IS NOT NULL)) THEN iol.qtyentered
            ELSE NULL::numeric
        END AS qtyentered,
        CASE
            WHEN ((iol.movementqty <> (0)::numeric) OR (iol.m_product_id IS NOT NULL)) THEN uom.uomsymbol
            ELSE NULL::character varying
        END AS uomsymbol,
    ol.qtyordered,
    ol.qtydelivered,
        CASE
            WHEN ((iol.movementqty <> (0)::numeric) OR (iol.m_product_id IS NOT NULL)) THEN (ol.qtyordered - ol.qtydelivered)
            ELSE NULL::numeric
        END AS qtybackordered,
    COALESCE(((p.name)::text || (adempiere.productattribute(iol.m_attributesetinstance_id))::text), (c.name)::text, (iol.description)::text) AS name,
        CASE
            WHEN (COALESCE(c.name, p.name) IS NOT NULL) THEN iol.description
            ELSE NULL::character varying
        END AS description,
    p.documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    iol.m_locator_id,
    l.m_warehouse_id,
    l.x,
    l.y,
    l.z,
    iol.m_attributesetinstance_id,
    asi.m_attributeset_id,
    asi.serno,
    asi.lot,
    asi.m_lot_id,
    asi.guaranteedate,
    p.description AS productdescription,
    p.imageurl,
    iol.c_campaign_id,
    iol.c_project_id,
    iol.c_activity_id,
    iol.c_projectphase_id,
    iol.c_projecttask_id
   FROM ((((((adempiere.m_inoutline iol
     JOIN adempiere.c_uom uom ON ((iol.c_uom_id = uom.c_uom_id)))
     LEFT JOIN adempiere.m_product p ON ((iol.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.m_attributesetinstance asi ON ((iol.m_attributesetinstance_id = asi.m_attributesetinstance_id)))
     LEFT JOIN adempiere.m_locator l ON ((iol.m_locator_id = l.m_locator_id)))
     LEFT JOIN adempiere.c_orderline ol ON ((iol.c_orderline_id = ol.c_orderline_id)))
     LEFT JOIN adempiere.c_charge c ON ((iol.c_charge_id = c.c_charge_id)))
UNION
 SELECT iol.ad_client_id,
    iol.ad_org_id,
    iol.isactive,
    iol.created,
    iol.createdby,
    iol.updated,
    iol.updatedby,
    'en_US'::text AS ad_language,
    iol.m_inout_id,
    iol.m_inoutline_id,
    (iol.line + (bl.line / (100)::numeric)) AS line,
    p.m_product_id,
        CASE
            WHEN (bl.isqtypercentage = 'N'::bpchar) THEN (iol.movementqty * bl.qtybom)
            ELSE (iol.movementqty * (bl.qtybatch / (100)::numeric))
        END AS movementqty,
        CASE
            WHEN (bl.isqtypercentage = 'N'::bpchar) THEN (iol.qtyentered * bl.qtybom)
            ELSE (iol.qtyentered * (bl.qtybatch / (100)::numeric))
        END AS qtyentered,
    uom.uomsymbol,
    NULL::numeric AS qtyordered,
    NULL::numeric AS qtydelivered,
    NULL::numeric AS qtybackordered,
    p.name,
    b.description,
    p.documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    iol.m_locator_id,
    l.m_warehouse_id,
    l.x,
    l.y,
    l.z,
    iol.m_attributesetinstance_id,
    asi.m_attributeset_id,
    asi.serno,
    asi.lot,
    asi.m_lot_id,
    asi.guaranteedate,
    p.description AS productdescription,
    p.imageurl,
    iol.c_campaign_id,
    iol.c_project_id,
    iol.c_activity_id,
    iol.c_projectphase_id,
    iol.c_projecttask_id
   FROM (((((((adempiere.pp_product_bom b
     JOIN adempiere.m_inoutline iol ON ((b.m_product_id = iol.m_product_id)))
     JOIN adempiere.m_product bp ON (((bp.m_product_id = iol.m_product_id) AND (bp.isbom = 'Y'::bpchar) AND (bp.isverified = 'Y'::bpchar) AND (bp.ispicklistprintdetails = 'Y'::bpchar))))
     JOIN adempiere.pp_product_bomline bl ON ((bl.pp_product_bom_id = b.pp_product_bom_id)))
     JOIN adempiere.m_product p ON ((bl.m_product_id = p.m_product_id)))
     JOIN adempiere.c_uom uom ON ((p.c_uom_id = uom.c_uom_id)))
     LEFT JOIN adempiere.m_attributesetinstance asi ON ((iol.m_attributesetinstance_id = asi.m_attributesetinstance_id)))
     LEFT JOIN adempiere.m_locator l ON ((iol.m_locator_id = l.m_locator_id)));


ALTER TABLE adempiere.m_inout_line_v OWNER TO adempiere;

--
-- Name: m_inout_line_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_inout_line_vt AS
 SELECT iol.ad_client_id,
    iol.ad_org_id,
    iol.isactive,
    iol.created,
    iol.createdby,
    iol.updated,
    iol.updatedby,
    uom.ad_language,
    iol.m_inout_id,
    iol.m_inoutline_id,
    iol.line,
    p.m_product_id,
        CASE
            WHEN ((iol.movementqty <> (0)::numeric) OR (iol.m_product_id IS NOT NULL)) THEN iol.movementqty
            ELSE NULL::numeric
        END AS movementqty,
        CASE
            WHEN ((iol.qtyentered <> (0)::numeric) OR (iol.m_product_id IS NOT NULL)) THEN iol.qtyentered
            ELSE NULL::numeric
        END AS qtyentered,
        CASE
            WHEN ((iol.movementqty <> (0)::numeric) OR (iol.m_product_id IS NOT NULL)) THEN uom.uomsymbol
            ELSE NULL::character varying
        END AS uomsymbol,
    ol.qtyordered,
    ol.qtydelivered,
        CASE
            WHEN ((iol.movementqty <> (0)::numeric) OR (iol.m_product_id IS NOT NULL)) THEN (ol.qtyordered - ol.qtydelivered)
            ELSE NULL::numeric
        END AS qtybackordered,
    COALESCE(((COALESCE(pt.name, p.name))::text || (adempiere.productattribute(iol.m_attributesetinstance_id))::text), (c.name)::text, (iol.description)::text) AS name,
        CASE
            WHEN (COALESCE(pt.name, p.name, c.name) IS NOT NULL) THEN iol.description
            ELSE NULL::character varying
        END AS description,
    COALESCE(pt.documentnote, p.documentnote) AS documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    iol.m_locator_id,
    l.m_warehouse_id,
    l.x,
    l.y,
    l.z,
    iol.m_attributesetinstance_id,
    asi.m_attributeset_id,
    asi.serno,
    asi.lot,
    asi.m_lot_id,
    asi.guaranteedate,
    pt.description AS productdescription,
    p.imageurl,
    iol.c_campaign_id,
    iol.c_project_id,
    iol.c_activity_id,
    iol.c_projectphase_id,
    iol.c_projecttask_id
   FROM (((((((adempiere.m_inoutline iol
     JOIN adempiere.c_uom_trl uom ON ((iol.c_uom_id = uom.c_uom_id)))
     LEFT JOIN adempiere.m_product p ON ((iol.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.m_product_trl pt ON (((iol.m_product_id = pt.m_product_id) AND ((uom.ad_language)::text = (pt.ad_language)::text))))
     LEFT JOIN adempiere.m_attributesetinstance asi ON ((iol.m_attributesetinstance_id = asi.m_attributesetinstance_id)))
     LEFT JOIN adempiere.m_locator l ON ((iol.m_locator_id = l.m_locator_id)))
     LEFT JOIN adempiere.c_orderline ol ON ((iol.c_orderline_id = ol.c_orderline_id)))
     LEFT JOIN adempiere.c_charge_trl c ON ((iol.c_charge_id = c.c_charge_id)))
UNION
 SELECT iol.ad_client_id,
    iol.ad_org_id,
    iol.isactive,
    iol.created,
    iol.createdby,
    iol.updated,
    iol.updatedby,
    uom.ad_language,
    iol.m_inout_id,
    iol.m_inoutline_id,
    (iol.line + (bl.line / (100)::numeric)) AS line,
    p.m_product_id,
        CASE
            WHEN (bl.isqtypercentage = 'N'::bpchar) THEN (iol.movementqty * bl.qtybom)
            ELSE (iol.movementqty * (bl.qtybatch / (100)::numeric))
        END AS movementqty,
        CASE
            WHEN (bl.isqtypercentage = 'N'::bpchar) THEN (iol.qtyentered * bl.qtybom)
            ELSE (iol.qtyentered * (bl.qtybatch / (100)::numeric))
        END AS qtyentered,
    uom.uomsymbol,
    NULL::numeric AS qtyordered,
    NULL::numeric AS qtydelivered,
    NULL::numeric AS qtybackordered,
    COALESCE(pt.name, p.name) AS name,
    b.description,
    COALESCE(pt.documentnote, p.documentnote) AS documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    iol.m_locator_id,
    l.m_warehouse_id,
    l.x,
    l.y,
    l.z,
    iol.m_attributesetinstance_id,
    asi.m_attributeset_id,
    asi.serno,
    asi.lot,
    asi.m_lot_id,
    asi.guaranteedate,
    pt.description AS productdescription,
    p.imageurl,
    iol.c_campaign_id,
    iol.c_project_id,
    iol.c_activity_id,
    iol.c_projectphase_id,
    iol.c_projecttask_id
   FROM ((((((((adempiere.pp_product_bom b
     JOIN adempiere.m_inoutline iol ON ((b.m_product_id = iol.m_product_id)))
     JOIN adempiere.m_product bp ON (((bp.m_product_id = iol.m_product_id) AND (bp.isbom = 'Y'::bpchar) AND (bp.isverified = 'Y'::bpchar) AND (bp.ispicklistprintdetails = 'Y'::bpchar))))
     JOIN adempiere.pp_product_bomline bl ON ((bl.pp_product_bom_id = b.pp_product_bom_id)))
     JOIN adempiere.m_product p ON ((bl.m_product_id = p.m_product_id)))
     JOIN adempiere.c_uom_trl uom ON ((p.c_uom_id = uom.c_uom_id)))
     JOIN adempiere.m_product_trl pt ON (((bl.m_product_id = pt.m_product_id) AND ((uom.ad_language)::text = (pt.ad_language)::text))))
     LEFT JOIN adempiere.m_attributesetinstance asi ON ((iol.m_attributesetinstance_id = asi.m_attributesetinstance_id)))
     LEFT JOIN adempiere.m_locator l ON ((iol.m_locator_id = l.m_locator_id)));


ALTER TABLE adempiere.m_inout_line_vt OWNER TO adempiere;

--
-- Name: m_inoutlineconfirm; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_inoutlineconfirm (
    m_inoutlineconfirm_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_inoutconfirm_id numeric(10,0) NOT NULL,
    m_inoutline_id numeric(10,0) NOT NULL,
    targetqty numeric DEFAULT 0 NOT NULL,
    confirmedqty numeric DEFAULT 0 NOT NULL,
    description character varying(255),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    differenceqty numeric,
    scrappedqty numeric,
    m_inventoryline_id numeric(10,0),
    c_invoiceline_id numeric(10,0),
    confirmationno character varying(20),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_inoutlineconfirm_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inoutlineconfirm_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_inoutlineconfirm OWNER TO adempiere;

--
-- Name: m_inout_lineconfirm_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_inout_lineconfirm_v AS
 SELECT iolc.ad_client_id,
    iolc.ad_org_id,
    iolc.isactive,
    iolc.created,
    iolc.createdby,
    iolc.updated,
    iolc.updatedby,
    'en_US'::character varying AS ad_language,
    iolc.m_inoutlineconfirm_id,
    iolc.m_inoutconfirm_id,
    iolc.targetqty,
    iolc.confirmedqty,
    iolc.differenceqty,
    iolc.scrappedqty,
    iolc.description,
    iolc.processed,
    iol.m_inout_id,
    iol.m_inoutline_id,
    iol.line,
    p.m_product_id,
    iol.movementqty,
    uom.uomsymbol,
    (ol.qtyordered - ol.qtydelivered) AS qtybackordered,
    COALESCE(p.name, iol.description) AS name,
        CASE
            WHEN (p.name IS NOT NULL) THEN iol.description
            ELSE NULL::character varying
        END AS shipdescription,
    p.documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    iol.m_locator_id,
    l.m_warehouse_id,
    l.x,
    l.y,
    l.z,
    iol.m_attributesetinstance_id,
    asi.m_attributeset_id,
    asi.serno,
    asi.lot,
    asi.m_lot_id,
    asi.guaranteedate
   FROM ((((((adempiere.m_inoutlineconfirm iolc
     JOIN adempiere.m_inoutline iol ON ((iolc.m_inoutline_id = iol.m_inoutline_id)))
     JOIN adempiere.c_uom uom ON ((iol.c_uom_id = uom.c_uom_id)))
     LEFT JOIN adempiere.m_product p ON ((iol.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.m_attributesetinstance asi ON ((iol.m_attributesetinstance_id = asi.m_attributesetinstance_id)))
     LEFT JOIN adempiere.m_locator l ON ((iol.m_locator_id = l.m_locator_id)))
     LEFT JOIN adempiere.c_orderline ol ON ((iol.c_orderline_id = ol.c_orderline_id)));


ALTER TABLE adempiere.m_inout_lineconfirm_v OWNER TO adempiere;

--
-- Name: m_inout_lineconfirm_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_inout_lineconfirm_vt AS
 SELECT iolc.ad_client_id,
    iolc.ad_org_id,
    iolc.isactive,
    iolc.created,
    iolc.createdby,
    iolc.updated,
    iolc.updatedby,
    uom.ad_language,
    iolc.m_inoutlineconfirm_id,
    iolc.m_inoutconfirm_id,
    iolc.targetqty,
    iolc.confirmedqty,
    iolc.differenceqty,
    iolc.scrappedqty,
    iolc.description,
    iolc.processed,
    iol.m_inout_id,
    iol.m_inoutline_id,
    iol.line,
    p.m_product_id,
    iol.movementqty,
    uom.uomsymbol,
    (ol.qtyordered - ol.qtydelivered) AS qtybackordered,
    COALESCE(COALESCE(pt.name, p.name), iol.description) AS name,
        CASE
            WHEN (COALESCE(pt.name, p.name) IS NOT NULL) THEN iol.description
            ELSE NULL::character varying
        END AS shipdescription,
    COALESCE(pt.documentnote, p.documentnote) AS documentnote,
    p.upc,
    p.sku,
    p.value AS productvalue,
    iol.m_locator_id,
    l.m_warehouse_id,
    l.x,
    l.y,
    l.z,
    iol.m_attributesetinstance_id,
    asi.m_attributeset_id,
    asi.serno,
    asi.lot,
    asi.m_lot_id,
    asi.guaranteedate
   FROM (((((((adempiere.m_inoutlineconfirm iolc
     JOIN adempiere.m_inoutline iol ON ((iolc.m_inoutline_id = iol.m_inoutline_id)))
     JOIN adempiere.c_uom_trl uom ON ((iol.c_uom_id = uom.c_uom_id)))
     LEFT JOIN adempiere.m_product p ON ((iol.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.m_product_trl pt ON (((iol.m_product_id = pt.m_product_id) AND ((uom.ad_language)::text = (pt.ad_language)::text))))
     LEFT JOIN adempiere.m_attributesetinstance asi ON ((iol.m_attributesetinstance_id = asi.m_attributesetinstance_id)))
     LEFT JOIN adempiere.m_locator l ON ((iol.m_locator_id = l.m_locator_id)))
     LEFT JOIN adempiere.c_orderline ol ON ((iol.c_orderline_id = ol.c_orderline_id)));


ALTER TABLE adempiere.m_inout_lineconfirm_vt OWNER TO adempiere;

--
-- Name: m_inoutconfirm; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_inoutconfirm (
    m_inoutconfirm_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    m_inout_id numeric(10,0) NOT NULL,
    confirmtype character(2) NOT NULL,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    description character varying(255),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    createpackage character(1),
    iscancelled character(1) DEFAULT 'N'::bpchar NOT NULL,
    docstatus character(2) NOT NULL,
    docaction character(2) NOT NULL,
    isindispute character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_inventory_id numeric(10,0),
    c_invoice_id numeric(10,0),
    approvalamt numeric,
    confirmationno character varying(20),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_inoutconfirm_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inoutconfirm_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inoutconfirm_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_inoutconfirm OWNER TO adempiere;

--
-- Name: m_inoutconfirm_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_inoutconfirm_v AS
 SELECT ioc.ad_client_id,
    ioc.ad_org_id,
    ioc.isactive,
    ioc.created,
    ioc.createdby,
    ioc.updated,
    ioc.updatedby,
    'en_US'::character varying AS ad_language,
    ioc.m_inoutconfirm_id,
    ioc.documentno,
    ioc.confirmtype,
    ioc.isapproved,
    ioc.iscancelled,
    ioc.description,
    io.m_inout_id,
    io.description AS shipdescription,
    io.c_bpartner_id,
    io.c_bpartner_location_id,
    io.ad_user_id,
    io.salesrep_id,
    io.c_doctype_id,
    dt.printname AS documenttype,
    io.c_order_id,
    io.dateordered,
    io.movementdate,
    io.movementtype,
    io.m_warehouse_id,
    io.poreference,
    io.deliveryrule,
    io.freightcostrule,
    io.deliveryviarule,
    io.m_shipper_id,
    io.priorityrule,
    ioc.processed
   FROM ((adempiere.m_inoutconfirm ioc
     JOIN adempiere.m_inout io ON ((ioc.m_inout_id = io.m_inout_id)))
     JOIN adempiere.c_doctype dt ON ((io.c_doctype_id = dt.c_doctype_id)));


ALTER TABLE adempiere.m_inoutconfirm_v OWNER TO adempiere;

--
-- Name: m_inoutconfirm_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_inoutconfirm_vt AS
 SELECT ioc.ad_client_id,
    ioc.ad_org_id,
    ioc.isactive,
    ioc.created,
    ioc.createdby,
    ioc.updated,
    ioc.updatedby,
    dt.ad_language,
    ioc.m_inoutconfirm_id,
    ioc.documentno,
    ioc.confirmtype,
    ioc.isapproved,
    ioc.iscancelled,
    ioc.description,
    io.m_inout_id,
    io.description AS shipdescription,
    io.c_bpartner_id,
    io.c_bpartner_location_id,
    io.ad_user_id,
    io.salesrep_id,
    io.c_doctype_id,
    dt.printname AS documenttype,
    io.c_order_id,
    io.dateordered,
    io.movementdate,
    io.movementtype,
    io.m_warehouse_id,
    io.poreference,
    io.deliveryrule,
    io.freightcostrule,
    io.deliveryviarule,
    io.m_shipper_id,
    io.priorityrule,
    ioc.processed
   FROM ((adempiere.m_inoutconfirm ioc
     JOIN adempiere.m_inout io ON ((ioc.m_inout_id = io.m_inout_id)))
     JOIN adempiere.c_doctype_trl dt ON ((io.c_doctype_id = dt.c_doctype_id)));


ALTER TABLE adempiere.m_inoutconfirm_vt OWNER TO adempiere;

--
-- Name: m_inoutlinema; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_inoutlinema (
    m_inoutline_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    movementqty numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_inoutlinema_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_inoutlinema OWNER TO adempiere;

--
-- Name: m_inoutlinema_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_inoutlinema_v AS
 SELECT m.ad_client_id,
    m.ad_org_id,
    m.isactive,
    m.created,
    m.createdby,
    m.updated,
    m.updatedby,
    l.m_inout_id,
    m.m_inoutline_id,
    l.line,
    l.m_product_id,
    m.m_attributesetinstance_id,
    m.movementqty,
    l.m_locator_id
   FROM (adempiere.m_inoutlinema m
     JOIN adempiere.m_inoutline l ON ((m.m_inoutline_id = l.m_inoutline_id)))
UNION
 SELECT m_inoutline.ad_client_id,
    m_inoutline.ad_org_id,
    m_inoutline.isactive,
    m_inoutline.created,
    m_inoutline.createdby,
    m_inoutline.updated,
    m_inoutline.updatedby,
    m_inoutline.m_inout_id,
    m_inoutline.m_inoutline_id,
    m_inoutline.line,
    m_inoutline.m_product_id,
    m_inoutline.m_attributesetinstance_id,
    m_inoutline.movementqty,
    m_inoutline.m_locator_id
   FROM adempiere.m_inoutline;


ALTER TABLE adempiere.m_inoutlinema_v OWNER TO adempiere;

--
-- Name: m_inoutlinema_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_inoutlinema_vt AS
 SELECT m.ad_client_id,
    m.ad_org_id,
    m.isactive,
    m.created,
    m.createdby,
    m.updated,
    m.updatedby,
    l.m_inout_id,
    m.m_inoutline_id,
    l.line,
    l.m_product_id,
    m.m_attributesetinstance_id,
    m.movementqty,
    l.m_locator_id
   FROM (adempiere.m_inoutlinema m
     JOIN adempiere.m_inoutline l ON ((m.m_inoutline_id = l.m_inoutline_id)))
UNION
 SELECT m_inoutline.ad_client_id,
    m_inoutline.ad_org_id,
    m_inoutline.isactive,
    m_inoutline.created,
    m_inoutline.createdby,
    m_inoutline.updated,
    m_inoutline.updatedby,
    m_inoutline.m_inout_id,
    m_inoutline.m_inoutline_id,
    m_inoutline.line,
    m_inoutline.m_product_id,
    m_inoutline.m_attributesetinstance_id,
    m_inoutline.movementqty,
    m_inoutline.m_locator_id
   FROM adempiere.m_inoutline;


ALTER TABLE adempiere.m_inoutlinema_vt OWNER TO adempiere;

--
-- Name: m_inventory; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_inventory (
    m_inventory_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    description character varying(255),
    m_warehouse_id numeric(10,0) NOT NULL,
    movementdate timestamp without time zone NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    updateqty character(1) DEFAULT 'N'::bpchar,
    generatelist character(1) DEFAULT 'Y'::bpchar,
    m_perpetualinv_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    c_project_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    docstatus character(2) NOT NULL,
    docaction character(2) NOT NULL,
    approvalamt numeric,
    c_doctype_id numeric(10,0) NOT NULL,
    reversal_id numeric(10,0),
    processedon numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    isstocktake character(1) DEFAULT 'N'::bpchar,
    updateqtycount character(1) DEFAULT NULL::bpchar,
    barcodescanner character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_inventory_generatelist_check CHECK ((generatelist = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inventory_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inventory_isstocktake_check CHECK ((isstocktake = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inventory_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inventory_updateqty_check CHECK ((updateqty = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_inventory OWNER TO adempiere;

--
-- Name: m_inventoryline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_inventoryline (
    m_inventoryline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_inventory_id numeric(10,0) NOT NULL,
    m_locator_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    line numeric(10,0),
    qtybook numeric DEFAULT 0 NOT NULL,
    qtycount numeric DEFAULT 0 NOT NULL,
    description character varying(255),
    m_attributesetinstance_id numeric(10,0) DEFAULT 0,
    c_charge_id numeric(10,0),
    inventorytype character(1) DEFAULT 'D'::bpchar NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    qtyinternaluse numeric,
    reversalline_id numeric(10,0),
    qtycsv numeric(10,0) DEFAULT 0 NOT NULL,
    currentcostprice numeric,
    firstcountqty numeric,
    secondcountqty numeric,
    countentered character(1) DEFAULT 'N'::bpchar,
    pickedqty numeric DEFAULT '0'::numeric,
    coststandard numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    c_projectphase_id numeric(10,0) DEFAULT NULL::numeric,
    c_projecttask_id numeric(10,0) DEFAULT NULL::numeric,
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    ad_orgtrx_id numeric(10,0) DEFAULT NULL::numeric,
    user1_id numeric(10,0) DEFAULT NULL::numeric,
    user2_id numeric(10,0) DEFAULT NULL::numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    currentcostpricell numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_inventoryline_countentered_check CHECK ((countentered = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_inventoryline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_inventoryline OWNER TO adempiere;

--
-- Name: m_inventorylinema; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_inventorylinema (
    m_inventoryline_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    movementqty numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_inventorylinema_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_inventorylinema OWNER TO adempiere;

--
-- Name: m_lot; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_lot (
    m_lot_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    m_product_id numeric(10,0) NOT NULL,
    help character varying(2000),
    datefrom timestamp without time zone,
    dateto timestamp without time zone,
    m_lotctl_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_lot_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_lot OWNER TO adempiere;

--
-- Name: m_lotctl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_lotctl (
    m_lotctl_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    startno numeric(10,0) NOT NULL,
    incrementno numeric(10,0) NOT NULL,
    currentnext numeric(10,0) NOT NULL,
    prefix character varying(10),
    suffix character varying(10),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_lotctl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_lotctl OWNER TO adempiere;

--
-- Name: m_lotctlexclude; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_lotctlexclude (
    m_lotctlexclude_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_lotctl_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    issotrx character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_lotctlexclude_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_lotctlexclude_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_lotctlexclude OWNER TO adempiere;

--
-- Name: m_matchinv; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_matchinv (
    m_matchinv_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_inoutline_id numeric(10,0) NOT NULL,
    c_invoiceline_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0),
    datetrx timestamp without time zone NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    processing character(1) NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    documentno character varying(30),
    dateacct timestamp without time zone,
    m_attributesetinstance_id numeric(10,0),
    description character varying(255),
    processedon numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_matchinv_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_matchinv_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_matchinv OWNER TO adempiere;

--
-- Name: m_matchpo; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_matchpo (
    m_matchpo_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_orderline_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0),
    m_inoutline_id numeric(10,0),
    c_invoiceline_id numeric(10,0),
    datetrx timestamp without time zone NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    processing character(1) NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    documentno character varying(30),
    dateacct timestamp without time zone,
    m_attributesetinstance_id numeric(10,0),
    pricematchdifference numeric,
    isapproved character(1) DEFAULT 'Y'::bpchar,
    description character varying(255),
    processedon numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_matchpo_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_matchpo_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_matchpo OWNER TO adempiere;

--
-- Name: m_movement; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_movement (
    m_movement_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    documentno character varying(30) NOT NULL,
    description character varying(255),
    movementdate timestamp without time zone NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    ad_orgtrx_id numeric(10,0),
    c_project_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    datereceived timestamp without time zone,
    docaction character(2) NOT NULL,
    docstatus character(2) NOT NULL,
    isintransit character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_doctype_id numeric(10,0) NOT NULL,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    approvalamt numeric,
    freightcostrule character(1),
    m_shipper_id numeric(10,0),
    priorityrule character(1),
    salesrep_id numeric(10,0),
    ad_user_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_bpartner_location_id numeric(10,0),
    c_charge_id numeric(10,0),
    chargeamt numeric,
    createfrom character(1),
    dd_order_id numeric(10,0),
    deliveryrule character(1),
    deliveryviarule character(1),
    freightamt numeric,
    reversal_id numeric(10,0),
    poreference character varying(20),
    processedon numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    m_productionbatch_id numeric(10,0) DEFAULT NULL::numeric,
    barcodescanner character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_movement_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_movement_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_movement OWNER TO adempiere;

--
-- Name: m_movementline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_movementline (
    m_movementline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_movement_id numeric(10,0) NOT NULL,
    m_locator_id numeric(10,0) NOT NULL,
    m_locatorto_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    line numeric(10,0),
    movementqty numeric DEFAULT 0 NOT NULL,
    description character varying(255),
    m_attributesetinstance_id numeric(10,0),
    confirmedqty numeric DEFAULT 0,
    scrappedqty numeric DEFAULT 0,
    targetqty numeric DEFAULT 0,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_attributesetinstanceto_id numeric(10,0),
    dd_orderline_id numeric(10,0),
    reversalline_id numeric(10,0),
    ad_orgtrx_id numeric(10,0) DEFAULT NULL::numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    c_projectphase_id numeric(10,0) DEFAULT NULL::numeric,
    c_projecttask_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    user1_id numeric(10,0) DEFAULT NULL::numeric,
    user2_id numeric(10,0) DEFAULT NULL::numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_movementline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_movementline OWNER TO adempiere;

--
-- Name: m_movement_candidate_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_movement_candidate_v AS
 SELECT o.created,
    o.createdby,
    o.isactive,
    o.updated,
    o.updatedby,
    o.ad_client_id,
    o.ad_org_id,
    o.c_bpartner_id,
    o.dd_order_id,
    o.documentno,
    o.dateordered,
    o.c_doctype_id,
    o.poreference,
    o.description,
    o.salesrep_id,
    l.m_locator_id,
    l.m_locatorto_id
   FROM (adempiere.dd_order o
     JOIN adempiere.dd_orderline l ON ((o.dd_order_id = l.dd_order_id)))
  WHERE ((o.docstatus = 'CO'::bpchar) AND (o.isdelivered = 'N'::bpchar) AND (o.c_doctype_id IN ( SELECT c_doctype.c_doctype_id
           FROM adempiere.c_doctype
          WHERE (c_doctype.docbasetype = 'DOO'::bpchar))) AND (o.deliveryrule <> 'M'::bpchar) AND ((l.m_product_id IS NULL) OR (EXISTS ( SELECT p.m_product_id,
            p.ad_client_id,
            p.ad_org_id,
            p.isactive,
            p.created,
            p.createdby,
            p.updated,
            p.updatedby,
            p.value,
            p.name,
            p.description,
            p.documentnote,
            p.help,
            p.upc,
            p.sku,
            p.c_uom_id,
            p.salesrep_id,
            p.issummary,
            p.isstocked,
            p.ispurchased,
            p.issold,
            p.isbom,
            p.isinvoiceprintdetails,
            p.ispicklistprintdetails,
            p.isverified,
            p.c_revenuerecognition_id,
            p.m_product_category_id,
            p.classification,
            p.volume,
            p.weight,
            p.shelfwidth,
            p.shelfheight,
            p.shelfdepth,
            p.unitsperpallet,
            p.c_taxcategory_id,
            p.s_resource_id,
            p.discontinued,
            p.discontinuedby,
            p.processing,
            p.s_expensetype_id,
            p.producttype,
            p.imageurl,
            p.descriptionurl,
            p.guaranteedays,
            p.r_mailtext_id,
            p.versionno,
            p.m_attributeset_id,
            p.m_attributesetinstance_id,
            p.downloadurl,
            p.m_freightcategory_id,
            p.m_locator_id,
            p.guaranteedaysmin,
            p.iswebstorefeatured,
            p.isselfservice,
            p.c_subscriptiontype_id,
            p.isdropship,
            p.isexcludeautodelivery,
            p.group1,
            p.group2,
            p.istoformule,
            p.lowlevel,
            p.unitsperpack,
            p.discontinuedat,
            p.copyfrom,
            p.m_parttype_id,
            p.iskanban,
            p.ismanufactured,
            p.m_product_class_id,
            p.m_product_group_id,
            p.m_product_classification_id,
            p.isphantom
           FROM adempiere.m_product p
          WHERE ((l.m_product_id = p.m_product_id) AND (p.isexcludeautodelivery = 'N'::bpchar))))) AND (l.qtyordered <> l.qtydelivered) AND (l.confirmedqty > (0)::numeric) AND (o.isdropship = 'N'::bpchar) AND ((l.m_product_id IS NOT NULL) OR (l.c_charge_id IS NOT NULL)) AND (NOT (EXISTS ( SELECT iol.m_movementline_id,
            iol.ad_client_id,
            iol.ad_org_id,
            iol.isactive,
            iol.created,
            iol.createdby,
            iol.updated,
            iol.updatedby,
            iol.m_movement_id,
            iol.m_locator_id,
            iol.m_locatorto_id,
            iol.m_product_id,
            iol.line,
            iol.movementqty,
            iol.description,
            iol.m_attributesetinstance_id,
            iol.confirmedqty,
            iol.scrappedqty,
            iol.targetqty,
            iol.processed,
            iol.m_attributesetinstanceto_id,
            iol.dd_orderline_id,
            iol.reversalline_id,
            io.m_movement_id,
            io.ad_client_id,
            io.ad_org_id,
            io.isactive,
            io.created,
            io.createdby,
            io.updatedby,
            io.updated,
            io.documentno,
            io.description,
            io.movementdate,
            io.posted,
            io.processed,
            io.processing,
            io.ad_orgtrx_id,
            io.c_project_id,
            io.c_campaign_id,
            io.c_activity_id,
            io.user1_id,
            io.user2_id,
            io.datereceived,
            io.docaction,
            io.docstatus,
            io.isintransit,
            io.c_doctype_id,
            io.isapproved,
            io.approvalamt,
            io.freightcostrule,
            io.m_shipper_id,
            io.priorityrule,
            io.salesrep_id,
            io.ad_user_id,
            io.c_bpartner_id,
            io.c_bpartner_location_id,
            io.c_charge_id,
            io.chargeamt,
            io.createfrom,
            io.dd_order_id,
            io.deliveryrule,
            io.deliveryviarule,
            io.freightamt,
            io.reversal_id,
            io.poreference,
            io.processedon
           FROM (adempiere.m_movementline iol
             JOIN adempiere.m_movement io ON ((iol.m_movement_id = io.m_movement_id)))
          WHERE ((iol.dd_orderline_id = l.dd_orderline_id) AND (io.docstatus = ANY (ARRAY['IP'::bpchar, 'WC'::bpchar])))))))
  GROUP BY o.created, o.createdby, o.isactive, o.updated, o.updatedby, o.ad_client_id, o.ad_org_id, o.c_bpartner_id, o.dd_order_id, o.documentno, o.dateordered, o.c_doctype_id, o.poreference, o.description, o.salesrep_id, l.m_locator_id, l.m_locatorto_id;


ALTER TABLE adempiere.m_movement_candidate_v OWNER TO adempiere;

--
-- Name: m_movementconfirm; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_movementconfirm (
    m_movementconfirm_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_movement_id numeric(10,0) NOT NULL,
    description character varying(255),
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    approvalamt numeric DEFAULT 0,
    docaction character(2) NOT NULL,
    docstatus character(2) NOT NULL,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_inventory_id numeric(10,0),
    documentno character varying(30) NOT NULL,
    reversal_id numeric(10,0) DEFAULT NULL::numeric,
    isreversal character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_movementconfirm_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_movementconfirm_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_movementconfirm_isreversal_check CHECK ((isreversal = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_movementconfirm_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_movementconfirm OWNER TO adempiere;

--
-- Name: m_movementlineconfirm; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_movementlineconfirm (
    m_movementlineconfirm_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_movementconfirm_id numeric(10,0) NOT NULL,
    m_movementline_id numeric(10,0) NOT NULL,
    description character varying(255),
    targetqty numeric DEFAULT 0 NOT NULL,
    confirmedqty numeric DEFAULT 0 NOT NULL,
    differenceqty numeric DEFAULT 0 NOT NULL,
    scrappedqty numeric DEFAULT 0 NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_inventoryline_id numeric(10,0),
    reversalline_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_movementlineconfirm_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_movementlineconfirm_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_movementlineconfirm OWNER TO adempiere;

--
-- Name: m_movementlinema; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_movementlinema (
    m_movementline_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    movementqty numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_movementlinema_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_movementlinema OWNER TO adempiere;

--
-- Name: m_movementlinema_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_movementlinema_v AS
 SELECT m.ad_client_id,
    m.ad_org_id,
    m.isactive,
    m.created,
    m.createdby,
    m.updated,
    m.updatedby,
    l.m_movement_id,
    m.m_movementline_id,
    l.line,
    l.m_product_id,
    m.m_attributesetinstance_id,
    m.movementqty,
    l.m_locator_id,
    l.m_locatorto_id
   FROM (adempiere.m_movementlinema m
     JOIN adempiere.m_movementline l ON ((m.m_movementline_id = l.m_movementline_id)))
UNION
 SELECT m_movementline.ad_client_id,
    m_movementline.ad_org_id,
    m_movementline.isactive,
    m_movementline.created,
    m_movementline.createdby,
    m_movementline.updated,
    m_movementline.updatedby,
    m_movementline.m_movement_id,
    m_movementline.m_movementline_id,
    m_movementline.line,
    m_movementline.m_product_id,
    m_movementline.m_attributesetinstance_id,
    m_movementline.movementqty,
    m_movementline.m_locator_id,
    m_movementline.m_locatorto_id
   FROM adempiere.m_movementline;


ALTER TABLE adempiere.m_movementlinema_v OWNER TO adempiere;

--
-- Name: m_movementlinema_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_movementlinema_vt AS
 SELECT m.ad_client_id,
    m.ad_org_id,
    m.isactive,
    m.created,
    m.createdby,
    m.updated,
    m.updatedby,
    l.m_movement_id,
    m.m_movementline_id,
    l.line,
    l.m_product_id,
    m.m_attributesetinstance_id,
    m.movementqty,
    l.m_locator_id,
    l.m_locatorto_id
   FROM (adempiere.m_movementlinema m
     JOIN adempiere.m_movementline l ON ((m.m_movementline_id = l.m_movementline_id)))
UNION
 SELECT m_movementline.ad_client_id,
    m_movementline.ad_org_id,
    m_movementline.isactive,
    m_movementline.created,
    m_movementline.createdby,
    m_movementline.updated,
    m_movementline.updatedby,
    m_movementline.m_movement_id,
    m_movementline.m_movementline_id,
    m_movementline.line,
    m_movementline.m_product_id,
    m_movementline.m_attributesetinstance_id,
    m_movementline.movementqty,
    m_movementline.m_locator_id,
    m_movementline.m_locatorto_id
   FROM adempiere.m_movementline;


ALTER TABLE adempiere.m_movementlinema_vt OWNER TO adempiere;

--
-- Name: m_operationresource; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_operationresource (
    m_operationresource_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_productoperation_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    a_asset_id numeric(10,0),
    c_job_id numeric(10,0),
    setuptime numeric DEFAULT 0 NOT NULL,
    unitruntime numeric DEFAULT 0 NOT NULL,
    teardowntime numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.m_operationresource OWNER TO adempiere;

--
-- Name: m_package; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_package (
    m_package_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    m_inout_id numeric(10,0) NOT NULL,
    description character varying(255),
    m_shipper_id numeric(10,0) NOT NULL,
    trackinginfo character varying(255),
    datereceived timestamp without time zone,
    receivedinfo character varying(255),
    shipdate timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.m_package OWNER TO adempiere;

--
-- Name: m_packageline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_packageline (
    m_packageline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_package_id numeric(10,0) NOT NULL,
    m_inoutline_id numeric(10,0) NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.m_packageline OWNER TO adempiere;

--
-- Name: m_parttype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_parttype (
    m_parttype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(255) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_parttype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_parttype OWNER TO adempiere;

--
-- Name: m_perpetualinv; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_perpetualinv (
    m_perpetualinv_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    noinventorycount numeric(10,0) NOT NULL,
    noproductcount numeric(10,0) NOT NULL,
    counthighmovement character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    datelastrun timestamp without time zone,
    datenextrun timestamp without time zone NOT NULL,
    numberofruns numeric(10,0) NOT NULL,
    m_product_category_id numeric(10,0),
    m_warehouse_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_perpetualinv_counthighmovement_check CHECK ((counthighmovement = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_perpetualinv_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_perpetualinv OWNER TO adempiere;

--
-- Name: m_pricelist; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_pricelist (
    m_pricelist_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    basepricelist_id numeric(10,0),
    istaxincluded character(1) DEFAULT 'N'::bpchar NOT NULL,
    issopricelist character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    enforcepricelimit character(1) DEFAULT 'N'::bpchar NOT NULL,
    priceprecision numeric(10,0) DEFAULT 2 NOT NULL,
    ismandatory character(1) DEFAULT 'N'::bpchar,
    ispresentforproduct character(1) DEFAULT 'N'::bpchar,
    isnetprice character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_pricelist_enforcepricelimit_check CHECK ((enforcepricelimit = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_pricelist_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_pricelist_isnetprice_check CHECK ((isnetprice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_pricelist_issopricelist_check CHECK ((issopricelist = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_pricelist_istaxincluded_check CHECK ((istaxincluded = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_pricelist OWNER TO adempiere;

--
-- Name: m_pricelist_version; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_pricelist_version (
    m_pricelist_version_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    m_pricelist_id numeric(10,0) NOT NULL,
    m_discountschema_id numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    proccreate character(1),
    m_pricelist_version_base_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_pricelist_version_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_pricelist_version OWNER TO adempiere;

--
-- Name: m_product_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_product_acct (
    m_product_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    p_revenue_acct numeric(10,0) NOT NULL,
    p_expense_acct numeric(10,0) NOT NULL,
    p_asset_acct numeric(10,0) NOT NULL,
    p_purchasepricevariance_acct numeric(10,0) NOT NULL,
    p_invoicepricevariance_acct numeric(10,0) NOT NULL,
    p_cogs_acct numeric(10,0) NOT NULL,
    p_tradediscountrec_acct numeric(10,0) NOT NULL,
    p_tradediscountgrant_acct numeric(10,0) NOT NULL,
    p_inventoryclearing_acct numeric(10,0),
    p_costadjustment_acct numeric(10,0),
    p_wip_acct numeric(10,0),
    p_methodchangevariance_acct numeric(10,0),
    p_usagevariance_acct numeric(10,0),
    p_ratevariance_acct numeric(10,0),
    p_mixvariance_acct numeric(10,0),
    p_floorstock_acct numeric(10,0),
    p_costofproduction_acct numeric(10,0),
    p_labor_acct numeric(10,0),
    p_burden_acct numeric(10,0),
    p_outsideprocessing_acct numeric(10,0),
    p_overhead_acct numeric(10,0),
    p_scrap_acct numeric(10,0),
    p_averagecostvariance_acct numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_product_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_product_acct OWNER TO adempiere;

--
-- Name: m_product_bom; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_product_bom (
    m_product_bom_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_productbom_id numeric(10,0) NOT NULL,
    bomqty numeric DEFAULT 0 NOT NULL,
    description character varying(255),
    bomtype character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_product_bom_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_product_bom OWNER TO adempiere;

--
-- Name: m_product_category; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_product_category (
    m_product_category_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    plannedmargin numeric NOT NULL,
    a_asset_group_id numeric(10,0),
    isselfservice character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ad_printcolor_id numeric(10,0),
    mmpolicy character(1) DEFAULT 'F'::bpchar NOT NULL,
    m_product_category_parent_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_product_category_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_product_category OWNER TO adempiere;

--
-- Name: m_product_category_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_product_category_acct (
    m_product_category_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    p_revenue_acct numeric(10,0) NOT NULL,
    p_expense_acct numeric(10,0) NOT NULL,
    p_asset_acct numeric(10,0) NOT NULL,
    p_cogs_acct numeric(10,0) NOT NULL,
    p_purchasepricevariance_acct numeric(10,0) NOT NULL,
    p_invoicepricevariance_acct numeric(10,0) NOT NULL,
    p_tradediscountrec_acct numeric(10,0) NOT NULL,
    p_tradediscountgrant_acct numeric(10,0) NOT NULL,
    processing character(1),
    costingmethod character(1),
    costinglevel character(1),
    p_inventoryclearing_acct numeric(10,0),
    p_costadjustment_acct numeric(10,0),
    p_floorstock_acct numeric(10,0),
    p_wip_acct numeric(10,0),
    p_methodchangevariance_acct numeric(10,0),
    p_usagevariance_acct numeric(10,0),
    p_ratevariance_acct numeric(10,0),
    p_mixvariance_acct numeric(10,0),
    p_costofproduction_acct numeric(10,0),
    p_labor_acct numeric(10,0),
    p_burden_acct numeric(10,0),
    p_outsideprocessing_acct numeric(10,0),
    p_overhead_acct numeric(10,0),
    p_scrap_acct numeric(10,0),
    p_averagecostvariance_acct numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_product_category_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_product_category_acct OWNER TO adempiere;

--
-- Name: m_product_class; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_product_class (
    m_product_class_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isdefault character(1) NOT NULL,
    m_product_class_parent_id numeric(10,0) DEFAULT NULL::numeric,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(255) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_product_class_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_class_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_product_class OWNER TO adempiere;

--
-- Name: m_product_classification; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_product_classification (
    m_product_classification_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isdefault character(1) NOT NULL,
    m_classification_parent_id numeric(10,0) DEFAULT NULL::numeric,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(12) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_product_classification_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_classification_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_product_classification OWNER TO adempiere;

--
-- Name: m_product_costing; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_product_costing (
    m_product_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    currentcostprice numeric DEFAULT 0 NOT NULL,
    futurecostprice numeric DEFAULT 0 NOT NULL,
    coststandard numeric DEFAULT 0 NOT NULL,
    coststandardpoqty numeric DEFAULT 0 NOT NULL,
    coststandardpoamt numeric DEFAULT 0 NOT NULL,
    coststandardcumqty numeric DEFAULT 0 NOT NULL,
    coststandardcumamt numeric DEFAULT 0 NOT NULL,
    costaverage numeric DEFAULT 0 NOT NULL,
    costaveragecumqty numeric DEFAULT 0 NOT NULL,
    costaveragecumamt numeric DEFAULT 0 NOT NULL,
    pricelastpo numeric DEFAULT 0 NOT NULL,
    pricelastinv numeric DEFAULT 0 NOT NULL,
    totalinvqty numeric DEFAULT 0 NOT NULL,
    totalinvamt numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_product_costing_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_product_costing OWNER TO adempiere;

--
-- Name: m_product_group; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_product_group (
    m_product_group_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isdefault character(1) NOT NULL,
    m_product_group_parent_id numeric(10,0) DEFAULT NULL::numeric,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(255) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_product_group_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_product_group_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_product_group OWNER TO adempiere;

--
-- Name: m_product_qualitytest; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_product_qualitytest (
    m_product_qualitytest_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_qualitytest_id numeric(10,0) NOT NULL,
    expectedresult character varying(255) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_product_qualitytest_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_product_qualitytest OWNER TO adempiere;

--
-- Name: m_product_stock_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_product_stock_v AS
 SELECT ms.isactive,
    ms.created,
    ms.createdby,
    ms.updated,
    ms.updatedby,
    mp.m_product_id,
    mp.value,
    mp.help,
    (ms.qtyonhand - ms.qtyreserved) AS qtyavailable,
    ms.qtyonhand,
    ms.qtyreserved,
    ms.qtyordered,
    mp.description,
    mw.name AS warehousename,
    mw.m_warehouse_id,
    mw.ad_client_id,
    mw.ad_org_id,
    mp.documentnote
   FROM (((adempiere.m_storage ms
     JOIN adempiere.m_product mp ON ((ms.m_product_id = mp.m_product_id)))
     JOIN adempiere.m_locator ml ON ((ms.m_locator_id = ml.m_locator_id)))
     JOIN adempiere.m_warehouse mw ON ((ml.m_warehouse_id = mw.m_warehouse_id)))
  ORDER BY mw.name;


ALTER TABLE adempiere.m_product_stock_v OWNER TO adempiere;

--
-- Name: m_productprice; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_productprice (
    m_pricelist_version_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    pricelist numeric DEFAULT 0 NOT NULL,
    pricestd numeric DEFAULT 0 NOT NULL,
    pricelimit numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_productprice_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_productprice OWNER TO adempiere;

--
-- Name: m_relatedproduct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_relatedproduct (
    m_product_id numeric(10,0) NOT NULL,
    relatedproduct_id numeric(10,0) NOT NULL,
    relatedproducttype character(1) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_relatedproduct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_relatedproduct OWNER TO adempiere;

--
-- Name: m_substitute; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_substitute (
    m_product_id numeric(10,0) NOT NULL,
    substitute_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60),
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_substitute_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_substitute OWNER TO adempiere;

--
-- Name: m_product_substituterelated_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_product_substituterelated_v AS
 SELECT s.ad_client_id,
    s.ad_org_id,
    s.isactive,
    s.created,
    s.createdby,
    s.updated,
    s.updatedby,
    s.m_product_id,
    s.substitute_id,
    s.name AS description,
    'S'::text AS rowtype,
    mp.value,
    mp.name,
    sum((ms.qtyonhand - ms.qtyreserved)) AS qtyavailable,
    sum(ms.qtyonhand) AS qtyonhand,
    sum(ms.qtyreserved) AS qtyreserved,
    round(max(mpr.pricestd), 0) AS pricestd,
    mpr.m_pricelist_version_id,
    mw.m_warehouse_id,
    org.name AS orgname
   FROM ((((((adempiere.m_substitute s
     JOIN adempiere.m_storage ms ON ((ms.m_product_id = s.substitute_id)))
     JOIN adempiere.m_product mp ON ((ms.m_product_id = mp.m_product_id)))
     JOIN adempiere.m_locator ml ON ((ms.m_locator_id = ml.m_locator_id)))
     JOIN adempiere.m_warehouse mw ON ((ml.m_warehouse_id = mw.m_warehouse_id)))
     JOIN adempiere.m_productprice mpr ON ((ms.m_product_id = mpr.m_product_id)))
     JOIN adempiere.ad_org org ON ((org.ad_org_id = mw.ad_org_id)))
  GROUP BY s.ad_client_id, s.ad_org_id, s.isactive, s.created, s.createdby, s.updated, s.updatedby, s.m_product_id, s.substitute_id, s.name, mp.value, mw.m_warehouse_id, mpr.m_pricelist_version_id, org.name, mp.name
UNION
 SELECT r.ad_client_id,
    r.ad_org_id,
    r.isactive,
    r.created,
    r.createdby,
    r.updated,
    r.updatedby,
    r.m_product_id,
    r.relatedproduct_id AS substitute_id,
    r.name AS description,
    'R'::text AS rowtype,
    mp.value,
    mp.name,
    sum((ms.qtyonhand - ms.qtyreserved)) AS qtyavailable,
    sum(ms.qtyonhand) AS qtyonhand,
    sum(ms.qtyreserved) AS qtyreserved,
    round(max(mpr.pricestd), 0) AS pricestd,
    mpr.m_pricelist_version_id,
    mw.m_warehouse_id,
    org.name AS orgname
   FROM ((((((adempiere.m_relatedproduct r
     JOIN adempiere.m_storage ms ON ((ms.m_product_id = r.relatedproduct_id)))
     JOIN adempiere.m_product mp ON ((ms.m_product_id = mp.m_product_id)))
     JOIN adempiere.m_locator ml ON ((ms.m_locator_id = ml.m_locator_id)))
     JOIN adempiere.m_warehouse mw ON ((ml.m_warehouse_id = mw.m_warehouse_id)))
     JOIN adempiere.m_productprice mpr ON ((ms.m_product_id = mpr.m_product_id)))
     JOIN adempiere.ad_org org ON ((org.ad_org_id = mw.ad_org_id)))
  GROUP BY r.ad_client_id, r.ad_org_id, r.isactive, r.created, r.createdby, r.updated, r.updatedby, r.m_product_id, r.relatedproduct_id, r.name, mw.m_warehouse_id, mpr.m_pricelist_version_id, org.name, mp.value, mp.name;


ALTER TABLE adempiere.m_product_substituterelated_v OWNER TO adempiere;

--
-- Name: m_productdownload; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_productdownload (
    m_productdownload_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    downloadurl character varying(120) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_productdownload_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_productdownload OWNER TO adempiere;

--
-- Name: m_production; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_production (
    m_production_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60),
    description character varying(255),
    movementdate timestamp without time zone NOT NULL,
    iscreated character(1) DEFAULT 'N'::bpchar NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    ad_orgtrx_id numeric(10,0),
    c_project_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    processedon numeric,
    documentno character varying(30),
    m_product_id numeric(10,0),
    m_locator_id numeric(10,0),
    productionqty numeric DEFAULT '0'::numeric,
    datepromised timestamp without time zone,
    iscomplete character(1),
    c_orderline_id numeric(10,0),
    createfrom character(1) DEFAULT 'N'::bpchar,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    iswip character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_doctype_id numeric(10,0) DEFAULT NULL::numeric,
    docaction character(2) DEFAULT 'CO'::bpchar,
    docstatus character varying(2) DEFAULT 'DR'::character varying,
    reversal_id numeric(10,0),
    m_productionbatch_id numeric(10,0),
    mustbestocked character(1) DEFAULT 'Y'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_production_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_production_iscreated_check CHECK ((iscreated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_production_iswip_check CHECK ((iswip = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_production_mustbestocked_check CHECK ((mustbestocked = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_production_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_production OWNER TO adempiere;

--
-- Name: m_productionbatch; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_productionbatch (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    documentno character varying(30) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    iscomplete character(1),
    iscreated character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_locator_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_productionbatch_id numeric(10,0) NOT NULL,
    movementdate timestamp without time zone NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    processed character(1) NOT NULL,
    processedon numeric,
    processing character(1),
    qtyordered numeric NOT NULL,
    targetqty numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    countorder numeric(10,0) NOT NULL,
    qtycompleted numeric NOT NULL,
    c_doctype_id numeric(10,0) DEFAULT '0'::numeric NOT NULL,
    docaction character(2) DEFAULT 'CO'::bpchar,
    docstatus character varying(2) DEFAULT 'DR'::character varying,
    qtyreserved numeric,
    iscreatemove character(1) DEFAULT 'N'::bpchar,
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    user1_id numeric(10,0) DEFAULT NULL::numeric,
    user2_id numeric(10,0) DEFAULT NULL::numeric,
    isautoproduction character(1) DEFAULT 'Y'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_productionbatch_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_productionbatch_isautoproduction_check CHECK ((isautoproduction = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_productionbatch_iscreatemove_check CHECK ((iscreatemove = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_productionbatch_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_productionbatch_processing_check CHECK ((processing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_productionbatch OWNER TO adempiere;

--
-- Name: m_productionbatchline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_productionbatchline (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isendproduct character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_productionbatchline_id numeric(10,0) NOT NULL,
    m_productionbatch_id numeric(10,0) NOT NULL,
    qtyreserved numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_productionbatchline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_productionbatchline_isendproduct_check CHECK ((isendproduct = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_productionbatchline OWNER TO adempiere;

--
-- Name: m_productionline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_productionline (
    m_productionline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_productionplan_id numeric(10,0),
    line numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    movementqty numeric DEFAULT 0 NOT NULL,
    m_locator_id numeric(10,0) NOT NULL,
    description character varying(255),
    m_attributesetinstance_id numeric(10,0) DEFAULT 0,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_production_id numeric(10,0) NOT NULL,
    plannedqty numeric,
    qtyused numeric,
    isendproduct character(1) DEFAULT NULL::bpchar,
    pickedqty numeric DEFAULT '0'::numeric,
    qtyreserved numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    c_projectphase_id numeric(10,0) DEFAULT NULL::numeric,
    c_projecttask_id numeric(10,0) DEFAULT NULL::numeric,
    user1_id numeric(10,0) DEFAULT NULL::numeric,
    user2_id numeric(10,0) DEFAULT NULL::numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    ad_orgtrx_id numeric(10,0) DEFAULT NULL::numeric,
    reversalline_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_productionline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_productionline_isendproduct_check CHECK ((isendproduct = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_productionline OWNER TO adempiere;

--
-- Name: m_productionlinema; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_productionlinema (
    m_productionline_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    movementqty numeric DEFAULT 0 NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_productionlinema_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_productionlinema OWNER TO adempiere;

--
-- Name: m_productionplan; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_productionplan (
    m_productionplan_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_production_id numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    productionqty numeric DEFAULT 0 NOT NULL,
    m_locator_id numeric(10,0) NOT NULL,
    description character varying(255),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_productionplan_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_productionplan OWNER TO adempiere;

--
-- Name: m_productoperation; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_productoperation (
    m_productoperation_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    m_product_id numeric(10,0) NOT NULL,
    setuptime numeric DEFAULT 0,
    unitruntime numeric DEFAULT 0,
    teardowntime numeric DEFAULT 0,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_productoperation_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_productoperation OWNER TO adempiere;

--
-- Name: m_productpricevendorbreak; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_productpricevendorbreak (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    breakvalue numeric NOT NULL,
    c_bpartner_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_pricelist_version_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    pricelimit numeric NOT NULL,
    pricelist numeric NOT NULL,
    pricestd numeric NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_productpricevendorbreak_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_productpricevendorbreak_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_productpricevendorbreak OWNER TO adempiere;

--
-- Name: m_promotion; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_promotion (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_promotion_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    promotionpriority numeric(10,0) DEFAULT 0 NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_campaign_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_promotion_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_promotion OWNER TO adempiere;

--
-- Name: m_promotiondistribution; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_promotiondistribution (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    distributionsorting character(1),
    distributiontype character(1) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_promotiondistribution_id numeric(10,0) NOT NULL,
    m_promotionline_id numeric(10,0) NOT NULL,
    m_promotion_id numeric(10,0) NOT NULL,
    operation character varying(2) NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    seqno numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    qtyreward numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_promotiondistribution_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_promotiondistribution OWNER TO adempiere;

--
-- Name: m_promotiongroup; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_promotiongroup (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_promotiongroup_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_promotiongroup_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_promotiongroup OWNER TO adempiere;

--
-- Name: m_promotiongroupline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_promotiongroupline (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_promotiongroupline_id numeric(10,0) NOT NULL,
    m_promotiongroup_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_promotiongroupline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_promotiongroupline OWNER TO adempiere;

--
-- Name: m_promotionline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_promotionline (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismandatorypl character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_promotiongroup_id numeric(10,0),
    m_promotionline_id numeric(10,0) NOT NULL,
    m_promotion_id numeric(10,0) NOT NULL,
    minimumamt numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_promotionline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_promotionline_ismandatorypl_check CHECK ((ismandatorypl = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_promotionline OWNER TO adempiere;

--
-- Name: m_promotionprecondition; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_promotionprecondition (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_bp_group_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    enddate timestamp without time zone,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_pricelist_id numeric(10,0),
    m_promotionprecondition_id numeric(10,0) NOT NULL,
    m_promotion_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0),
    promotioncode character varying(30),
    promotioncounter numeric(10,0) DEFAULT 0,
    promotionusagelimit numeric(10,0) DEFAULT 0,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    startdate timestamp without time zone NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_activity_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_promotionprecondition_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_promotionprecondition OWNER TO adempiere;

--
-- Name: m_promotionreward; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_promotionreward (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    amount numeric,
    c_charge_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    distributionsorting character(1),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isforalldistribution character(1) DEFAULT 'N'::bpchar NOT NULL,
    issamedistribution character(1) DEFAULT 'Y'::bpchar,
    m_promotiondistribution_id numeric(10,0),
    m_promotionreward_id numeric(10,0) NOT NULL,
    m_promotion_id numeric(10,0) NOT NULL,
    m_targetdistribution_id numeric(10,0),
    qty numeric,
    rewardtype character(1) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_promotionreward_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_promotionreward_isforalldistribution_check CHECK ((isforalldistribution = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_promotionreward_issamedistribution_check CHECK ((issamedistribution = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_promotionreward OWNER TO adempiere;

--
-- Name: m_qualitytest; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_qualitytest (
    m_qualitytest_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    help character varying(2000) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_qualitytest_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_qualitytest OWNER TO adempiere;

--
-- Name: m_qualitytestresult; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_qualitytestresult (
    m_qualitytestresult_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    m_qualitytest_id numeric(10,0) NOT NULL,
    isqcpass character(1) DEFAULT 'N'::bpchar NOT NULL,
    result character varying(255) DEFAULT NULL::character varying,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_qualitytestresult_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_qualitytestresult_isqcpass_check CHECK ((isqcpass = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_qualitytestresult_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_qualitytestresult OWNER TO adempiere;

--
-- Name: m_replenish; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_replenish (
    m_product_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    replenishtype character(1) NOT NULL,
    level_min numeric DEFAULT 0 NOT NULL,
    level_max numeric DEFAULT 0 NOT NULL,
    m_warehousesource_id numeric(10,0),
    m_locator_id numeric(10,0),
    qtybatchsize numeric DEFAULT '0'::numeric NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_replenish_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_replenish OWNER TO adempiere;

--
-- Name: m_replenishplan; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_replenishplan (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    datefinish timestamp without time zone,
    datestart timestamp without time zone,
    generatereport character(20),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_replenishplan_id numeric(10,0) NOT NULL,
    name character varying(60),
    processing character(1),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isdeleteunconfirmedproduction character(1) DEFAULT 'N'::bpchar NOT NULL,
    isdeleteplannedpo character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_pricelist_id numeric(10,0) DEFAULT NULL::numeric,
    plannedproductionreport character(1) DEFAULT NULL::bpchar,
    suggestedrequisitionreport character(1) DEFAULT NULL::bpchar,
    c_doctype_plannedorder numeric(10,0) DEFAULT NULL::numeric,
    c_doctype_requisition numeric(10,0) DEFAULT NULL::numeric,
    c_doctype_po numeric(10,0) DEFAULT NULL::numeric,
    c_doctype_confirmedorder numeric(10,0) DEFAULT NULL::numeric,
    replenishplaninitialsetup character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_replenishplan_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_replenishplan_isdeleteplannedpo_check CHECK ((isdeleteplannedpo = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_replenishplan_isdeleteunconfirmedproduction_check CHECK ((isdeleteunconfirmedproduction = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_replenishplan OWNER TO adempiere;

--
-- Name: m_replenishplanline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_replenishplanline (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_order_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    datefinish timestamp without time zone,
    datestart timestamp without time zone,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    line numeric(10,0),
    m_product_category_id numeric(10,0),
    m_product_id numeric(10,0),
    m_replenishplanline_id numeric(10,0) NOT NULL,
    m_replenishplan_id numeric(10,0),
    productname character varying(255),
    recordtype character varying(2),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    week1 numeric(10,0),
    week10 numeric(10,0),
    week11 numeric(10,0),
    week12 numeric(10,0),
    week13 numeric(10,0),
    week14 numeric(10,0),
    week15 numeric(10,0),
    week16 numeric(10,0),
    week17 numeric(10,0),
    week18 numeric(10,0),
    week19 numeric(10,0),
    week2 numeric(10,0),
    week20 numeric(10,0),
    week21 numeric(10,0),
    week22 numeric(10,0),
    week23 numeric(10,0),
    week24 numeric(10,0),
    week3 numeric(10,0),
    week4 numeric(10,0),
    week5 numeric(10,0),
    week6 numeric(10,0),
    week7 numeric(10,0),
    week8 numeric(10,0),
    week9 numeric(10,0),
    m_production_id numeric(10,0) DEFAULT NULL::numeric,
    orderinfo character varying(50) DEFAULT NULL::character varying,
    productioninfo character varying(50) DEFAULT NULL::character varying,
    m_requisition_id numeric(10,0) DEFAULT NULL::numeric,
    hassupplydemand character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_replenishplanline_hassupplydemand_check CHECK ((hassupplydemand = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_replenishplanline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_replenishplanline OWNER TO adempiere;

--
-- Name: m_requisition; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_requisition (
    m_requisition_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ad_user_id numeric(10,0) NOT NULL,
    m_pricelist_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    isapproved character(1) DEFAULT 'Y'::bpchar NOT NULL,
    priorityrule character(1) NOT NULL,
    daterequired timestamp without time zone NOT NULL,
    totallines numeric DEFAULT 0 NOT NULL,
    docaction character(2) NOT NULL,
    docstatus character(2) NOT NULL,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    posted character(1) DEFAULT 'N'::bpchar NOT NULL,
    datedoc timestamp without time zone DEFAULT now() NOT NULL,
    c_doctype_id numeric(10,0) NOT NULL,
    processedon numeric,
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    ad_orgtrx_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    user1_id numeric(10,0) DEFAULT NULL::numeric,
    user2_id numeric(10,0) DEFAULT NULL::numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_requisition_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_requisition_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_requisition_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_requisition OWNER TO adempiere;

--
-- Name: m_requisitionline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_requisitionline (
    m_requisitionline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    m_requisition_id numeric(10,0) NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    m_product_id numeric(10,0),
    description character varying(255),
    priceactual numeric DEFAULT 0 NOT NULL,
    linenetamt numeric DEFAULT 0 NOT NULL,
    c_orderline_id numeric(10,0),
    m_attributesetinstance_id numeric,
    c_charge_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_uom_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    c_activity_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_projectphase_id numeric(10,0) DEFAULT NULL::numeric,
    c_projecttask_id numeric(10,0) DEFAULT NULL::numeric,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    user1_id numeric(10,0) DEFAULT NULL::numeric,
    user2_id numeric(10,0) DEFAULT NULL::numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_requisitionline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_requisitionline OWNER TO adempiere;

--
-- Name: m_rma; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_rma (
    m_rma_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    inout_id numeric(10,0) NOT NULL,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_order_id numeric(10,0),
    c_doctype_id numeric(10,0) NOT NULL,
    salesrep_id numeric(10,0) NOT NULL,
    docaction character(2) NOT NULL,
    docstatus character(2) NOT NULL,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    amt numeric,
    m_rmatype_id numeric(10,0),
    help character varying(2000),
    c_currency_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    issotrx character(1) DEFAULT 'Y'::bpchar NOT NULL,
    generateto character(1),
    ref_rma_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_rma_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_rma OWNER TO adempiere;

--
-- Name: m_rmaline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_rmaline (
    m_rmaline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_rma_id numeric(10,0) NOT NULL,
    m_inoutline_id numeric(10,0),
    qty numeric DEFAULT 0 NOT NULL,
    description character varying(255),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    amt numeric(22,0),
    c_charge_id numeric(10,0),
    line numeric(10,0) DEFAULT 0 NOT NULL,
    linenetamt numeric(22,0),
    qtydelivered numeric(22,0),
    qtyinvoiced numeric,
    ref_rmaline_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.m_rmaline OWNER TO adempiere;

--
-- Name: m_rmatype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_rmatype (
    m_rmatype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_rmatype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_rmatype OWNER TO adempiere;

--
-- Name: m_sernoctl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_sernoctl (
    m_sernoctl_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    startno numeric(10,0) NOT NULL,
    incrementno numeric(10,0) NOT NULL,
    currentnext numeric(10,0) NOT NULL,
    prefix character varying(10),
    suffix character varying(10),
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_sernoctl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_sernoctl OWNER TO adempiere;

--
-- Name: m_sernoctlexclude; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_sernoctlexclude (
    m_sernoctlexclude_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_sernoctl_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0) NOT NULL,
    issotrx character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_sernoctlexclude_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_sernoctlexclude_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_sernoctlexclude OWNER TO adempiere;

--
-- Name: m_shipper; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_shipper (
    m_shipper_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    c_bpartner_id numeric(10,0),
    trackingurl character varying(120),
    calculationclass character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_shipper_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_shipper OWNER TO adempiere;

--
-- Name: m_transaction; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_transaction (
    m_transaction_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    movementtype character(2) NOT NULL,
    m_locator_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    movementdate timestamp without time zone NOT NULL,
    movementqty numeric DEFAULT 0 NOT NULL,
    m_inventoryline_id numeric(10,0),
    m_movementline_id numeric(10,0),
    m_inoutline_id numeric(10,0),
    m_productionline_id numeric(10,0),
    c_projectissue_id numeric(10,0),
    m_attributesetinstance_id numeric(10,0) DEFAULT 0 NOT NULL,
    pp_cost_collector_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_transaction_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_transaction OWNER TO adempiere;

--
-- Name: m_transaction_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.m_transaction_v AS
 SELECT t.m_transaction_id,
    t.ad_client_id,
    t.ad_org_id,
    t.isactive,
    t.created,
    t.createdby,
    t.updated,
    t.updatedby,
    t.movementtype,
    t.m_locator_id,
    t.m_product_id,
    t.movementdate,
    t.movementqty,
    t.m_inventoryline_id,
    i.m_inventory_id,
    t.m_movementline_id,
    m.m_movement_id,
    t.m_inoutline_id,
    io.m_inout_id,
    t.m_productionline_id,
    pp.m_production_id,
    t.c_projectissue_id,
    pi.c_project_id,
    t.m_attributesetinstance_id
   FROM ((((((adempiere.m_transaction t
     LEFT JOIN adempiere.m_inoutline io ON (((t.m_inoutline_id = io.m_inoutline_id) AND (t.m_attributesetinstance_id = io.m_attributesetinstance_id))))
     LEFT JOIN adempiere.m_movementline m ON (((t.m_movementline_id = m.m_movementline_id) AND (t.m_attributesetinstance_id = m.m_attributesetinstance_id))))
     LEFT JOIN adempiere.m_inventoryline i ON (((t.m_inventoryline_id = i.m_inventoryline_id) AND (t.m_attributesetinstance_id = i.m_attributesetinstance_id))))
     LEFT JOIN adempiere.c_projectissue pi ON (((t.c_projectissue_id = pi.c_projectissue_id) AND (t.m_attributesetinstance_id = pi.m_attributesetinstance_id))))
     LEFT JOIN adempiere.m_productionline pl ON (((t.m_productionline_id = pl.m_productionline_id) AND (t.m_attributesetinstance_id = pl.m_attributesetinstance_id))))
     LEFT JOIN adempiere.m_productionplan pp ON ((pl.m_productionplan_id = pp.m_productionplan_id)));


ALTER TABLE adempiere.m_transaction_v OWNER TO adempiere;

--
-- Name: m_transactionallocation; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_transactionallocation (
    m_transaction_id numeric(10,0) NOT NULL,
    allocationstrategytype character(1) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) DEFAULT 0 NOT NULL,
    isallocated character(1) DEFAULT 'N'::bpchar NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    ismanual character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_inoutline_id numeric(10,0),
    m_productionline_id numeric(10,0),
    m_inventoryline_id numeric(10,0),
    out_m_transaction_id numeric(10,0),
    out_m_inoutline_id numeric(10,0),
    out_m_productionline_id numeric(10,0),
    out_m_inventoryline_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_transactionallocation_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_transactionallocation_isallocated_check CHECK ((isallocated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT m_transactionallocation_ismanual_check CHECK ((ismanual = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_transactionallocation OWNER TO adempiere;

--
-- Name: m_warehouse_acct; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.m_warehouse_acct (
    m_warehouse_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    w_inventory_acct numeric(10,0) NOT NULL,
    w_invactualadjust_acct numeric(10,0) NOT NULL,
    w_differences_acct numeric(10,0) NOT NULL,
    w_revaluation_acct numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT m_warehouse_acct_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.m_warehouse_acct OWNER TO adempiere;

--
-- Name: pa_achievement; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_achievement (
    pa_achievement_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    note character varying(2000),
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    pa_measure_id numeric(10,0) NOT NULL,
    manualactual numeric DEFAULT 0 NOT NULL,
    isachieved character(1) NOT NULL,
    datedoc timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_achievement_isachieved_check CHECK ((isachieved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_achievement_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_achievement OWNER TO adempiere;

--
-- Name: pa_benchmark; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_benchmark (
    pa_benchmark_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    accumulationtype character(1) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_benchmark_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_benchmark OWNER TO adempiere;

--
-- Name: pa_benchmarkdata; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_benchmarkdata (
    pa_benchmarkdata_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    pa_benchmark_id numeric(10,0) NOT NULL,
    benchmarkdate timestamp without time zone NOT NULL,
    benchmarkvalue numeric NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_benchmarkdata_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_benchmarkdata OWNER TO adempiere;

--
-- Name: pa_colorschema; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_colorschema (
    pa_colorschema_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    mark1percent numeric(10,0) DEFAULT 0 NOT NULL,
    ad_printcolor1_id numeric(10,0) NOT NULL,
    mark2percent numeric(10,0) DEFAULT 0 NOT NULL,
    ad_printcolor2_id numeric(10,0) NOT NULL,
    mark3percent numeric(10,0) DEFAULT 0,
    ad_printcolor3_id numeric(10,0),
    mark4percent numeric(10,0) DEFAULT 0,
    ad_printcolor4_id numeric(10,0),
    entitytype character varying(40) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_colorschema_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_colorschema OWNER TO adempiere;

--
-- Name: pa_dashboardcontent; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_dashboardcontent (
    pa_dashboardcontent_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    name character varying(120) NOT NULL,
    ad_window_id numeric(10,0),
    description character varying(255),
    html text,
    line numeric,
    pa_goal_id numeric(10,0),
    columnno numeric(10,0) DEFAULT 1,
    zulfilepath character varying(255),
    iscollapsible character(1) DEFAULT 'Y'::bpchar NOT NULL,
    goaldisplay character(1) DEFAULT 'T'::bpchar,
    isopenbydefault character(1) DEFAULT 'Y'::bpchar,
    iseventrequired character(1) DEFAULT 'N'::bpchar,
    zoom_window_id numeric(10,0),
    zoom_tab_id numeric(10,0),
    pagesize numeric(10,0),
    onevent character varying(30),
    ad_browse_id numeric(10,0),
    zoom_field_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_dashboardcontent_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_dashboardcontent_iscollapsible_check CHECK ((iscollapsible = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_dashboardcontent_isopenbydefault_check CHECK ((isopenbydefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_dashboardcontent OWNER TO adempiere;

--
-- Name: pa_dashboardcontent_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_dashboardcontent_trl (
    ad_client_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    istranslated character(1) NOT NULL,
    name character varying(60) NOT NULL,
    pa_dashboardcontent_id numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_dashboardcontent_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_dashboardcontent_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_dashboardcontent_trl OWNER TO adempiere;

--
-- Name: pa_documentstatus; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_documentstatus (
    ad_client_id numeric(10,0) NOT NULL,
    ad_form_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0),
    ad_table_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    ad_window_id numeric(10,0),
    c_project_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    name_printcolor_id numeric(10,0) NOT NULL,
    name_printfont_id numeric(10,0) NOT NULL,
    number_printcolor_id numeric(10,0) NOT NULL,
    number_printfont_id numeric(10,0) NOT NULL,
    pa_documentstatus_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    whereclause character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_documentstatus_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_documentstatus OWNER TO adempiere;

--
-- Name: pa_goal; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_goal (
    pa_goal_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    note character varying(2000),
    ad_user_id numeric(10,0),
    pa_colorschema_id numeric(10,0) NOT NULL,
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    pa_goalparent_id numeric(10,0),
    pa_measure_id numeric(10,0),
    relativeweight numeric,
    measuretarget numeric DEFAULT 0 NOT NULL,
    measurescope character(1) NOT NULL,
    measuredisplay character(1),
    datefrom timestamp without time zone,
    dateto timestamp without time zone,
    measureactual numeric DEFAULT 0,
    goalperformance numeric,
    datelastrun timestamp without time zone,
    ad_role_id numeric(10,0),
    charttype character varying(2) DEFAULT 'BC'::character varying NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_goal_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_goal OWNER TO adempiere;

--
-- Name: pa_goalrestriction; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_goalrestriction (
    pa_goalrestriction_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    goalrestrictiontype character(1) NOT NULL,
    pa_goal_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0),
    m_product_id numeric(10,0),
    org_id numeric(10,0),
    c_bp_group_id numeric(10,0),
    m_product_category_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_goalrestriction_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_goalrestriction OWNER TO adempiere;

--
-- Name: pa_hierarchy; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_hierarchy (
    pa_hierarchy_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ad_tree_org_id numeric(10,0) NOT NULL,
    ad_tree_bpartner_id numeric(10,0) NOT NULL,
    ad_tree_project_id numeric(10,0) NOT NULL,
    ad_tree_salesregion_id numeric(10,0) NOT NULL,
    ad_tree_product_id numeric(10,0) NOT NULL,
    ad_tree_campaign_id numeric(10,0) NOT NULL,
    ad_tree_activity_id numeric(10,0) NOT NULL,
    ad_tree_account_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_hierarchy_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_hierarchy OWNER TO adempiere;

--
-- Name: pa_measure; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_measure (
    pa_measure_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    measuretype character(1) NOT NULL,
    manualactual numeric,
    manualnote character varying(2000),
    calculationclass character varying(60),
    pa_measurecalc_id numeric(10,0),
    pa_benchmark_id numeric(10,0),
    pa_ratio_id numeric(10,0),
    pa_hierarchy_id numeric(10,0),
    measuredatatype character(1) NOT NULL,
    r_requesttype_id numeric(10,0),
    c_projecttype_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_measure_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_measure OWNER TO adempiere;

--
-- Name: pa_measurecalc; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_measurecalc (
    pa_measurecalc_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    selectclause character varying(2000) NOT NULL,
    whereclause character varying(2000) NOT NULL,
    datecolumn character varying(60) NOT NULL,
    orgcolumn character varying(60),
    bpartnercolumn character varying(60),
    productcolumn character varying(60),
    ad_table_id numeric(10,0) NOT NULL,
    keycolumn character varying(60) NOT NULL,
    entitytype character varying(40) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_measurecalc_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_measurecalc OWNER TO adempiere;

--
-- Name: pa_ratio; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_ratio (
    pa_ratio_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    c_acctschema_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_ratio_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_ratio OWNER TO adempiere;

--
-- Name: pa_ratioelement; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_ratioelement (
    pa_ratioelement_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    pa_ratio_id numeric(10,0) NOT NULL,
    ratiooperand character(1) NOT NULL,
    ratioelementtype character(1) NOT NULL,
    account_id numeric(10,0),
    pa_ratioused_id numeric(10,0),
    pa_measurecalc_id numeric(10,0),
    constantvalue numeric,
    seqno numeric(10,0) NOT NULL,
    postingtype character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_ratioelement_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_ratioelement OWNER TO adempiere;

--
-- Name: pa_report; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_report (
    pa_report_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    pa_reportlineset_id numeric(10,0) NOT NULL,
    pa_reportcolumnset_id numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    c_calendar_id numeric(10,0) NOT NULL,
    processing character(1) NOT NULL,
    ad_printformat_id numeric(10,0),
    listsources character(1) DEFAULT 'N'::bpchar NOT NULL,
    listtrx character(1) DEFAULT 'N'::bpchar NOT NULL,
    jasperprocess_id numeric(10,0),
    jasperprocessing character(1),
    pa_reportcube_id numeric(10,0),
    preperiodname character varying(20),
    posperiodname character varying(20),
    ad_printformatheader_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_report_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_report OWNER TO adempiere;

--
-- Name: pa_reportcolumn; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_reportcolumn (
    pa_reportcolumn_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    pa_reportcolumnset_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    description character varying(255),
    isprinted character(1) DEFAULT 'Y'::bpchar NOT NULL,
    postingtype character(1) NOT NULL,
    gl_budget_id numeric(10,0),
    columntype character(1) NOT NULL,
    relativeperiod numeric(10,0),
    currencytype character(1),
    calculationtype character(1),
    amounttype character(2),
    c_currency_id numeric(10,0),
    isadhocconversion character(1) DEFAULT 'N'::bpchar,
    oper_1_id numeric(10,0),
    oper_2_id numeric(10,0),
    elementtype character(2),
    org_id numeric(10,0),
    c_elementvalue_id numeric(10,0),
    c_project_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    m_product_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_location_id numeric(10,0),
    c_salesregion_id numeric(10,0),
    c_activity_id numeric(10,0),
    userelement1_id numeric(10,0),
    userelement2_id numeric(10,0),
    isincludenullsorg character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullselementvalue character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsbpartner character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsproduct character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullslocation character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsproject character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullssalesregion character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsactivity character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullscampaign character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsuserelement1 character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsuserelement2 character(1) DEFAULT 'N'::bpchar NOT NULL,
    factor character(1),
    formatpattern character varying(22),
    isincludenullsorgtrx character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_orgtrx_id numeric(10,0),
    paperiodtype character(1) DEFAULT 'P'::bpchar,
    paamounttype character(1) DEFAULT 'B'::bpchar,
    user1_id numeric(10,0),
    user2_id numeric(10,0) DEFAULT NULL::numeric,
    isincludenullsuser1 character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsuser2 character(1) DEFAULT 'N'::bpchar NOT NULL,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    isincludenullsuser3 character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsuser4 character(1) DEFAULT 'N'::bpchar NOT NULL,
    relativeperiodto numeric,
    isallowoppositesign character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_reportcolumn_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isadhocconversion_check CHECK ((isadhocconversion = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isallowoppositesign_check CHECK ((isallowoppositesign = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullsactivity_check CHECK ((isincludenullsactivity = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullsbpartner_check CHECK ((isincludenullsbpartner = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullscampaign_check CHECK ((isincludenullscampaign = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullselementvalue_check CHECK ((isincludenullselementvalue = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullslocation_check CHECK ((isincludenullslocation = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullsorg_check CHECK ((isincludenullsorg = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullsorgtrx_check CHECK ((isincludenullsorgtrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullsproduct_check CHECK ((isincludenullsproduct = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullsproject_check CHECK ((isincludenullsproject = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullssalesregion_check CHECK ((isincludenullssalesregion = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullsuser1_check CHECK ((isincludenullsuser1 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullsuser2_check CHECK ((isincludenullsuser2 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullsuser3_check CHECK ((isincludenullsuser3 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullsuser4_check CHECK ((isincludenullsuser4 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullsuserelement1_check CHECK ((isincludenullsuserelement1 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isincludenullsuserelement2_check CHECK ((isincludenullsuserelement2 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcolumn_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_reportcolumn OWNER TO adempiere;

--
-- Name: pa_reportcolumnset; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_reportcolumnset (
    pa_reportcolumnset_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    processing character(1) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_reportcolumnset_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_reportcolumnset OWNER TO adempiere;

--
-- Name: pa_reportcube; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_reportcube (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    c_calendar_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    isactive character(1),
    isactivitydim character(1),
    isbpartnerdim character(1),
    iscampaigndim character(1),
    isglbudgetdim character(1),
    islocfromdim character(1),
    isloctodim character(1),
    isorgtrxdim character(1),
    isproductdim character(1),
    isprojectdim character(1),
    isprojectphasedim character(1),
    isprojecttaskdim character(1),
    issalesregiondim character(1),
    issubacctdim character(1),
    isuser1dim character(1),
    isuser2dim character(1),
    name character varying(60) NOT NULL,
    pa_reportcube_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    processing character(1) DEFAULT 'N'::bpchar NOT NULL,
    lastrecalculated timestamp without time zone,
    isuserelement2dim character(1),
    isuserelement1dim character(1),
    isuser3dim character(1) DEFAULT NULL::bpchar,
    isuser4dim character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_reportcube_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isactivitydim_check CHECK ((isactivitydim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isbpartnerdim_check CHECK ((isbpartnerdim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_iscampaigndim_check CHECK ((iscampaigndim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isglbudgetdim_check CHECK ((isglbudgetdim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_islocfromdim_check CHECK ((islocfromdim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isloctodim_check CHECK ((isloctodim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isorgtrxdim_check CHECK ((isorgtrxdim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isproductdim_check CHECK ((isproductdim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isprojectdim_check CHECK ((isprojectdim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isprojectphasedim_check CHECK ((isprojectphasedim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isprojecttaskdim_check CHECK ((isprojecttaskdim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_issalesregiondim_check CHECK ((issalesregiondim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_issubacctdim_check CHECK ((issubacctdim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isuser1dim_check CHECK ((isuser1dim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isuser2dim_check CHECK ((isuser2dim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isuser3dim_check CHECK ((isuser3dim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isuser4dim_check CHECK ((isuser4dim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isuserelement1dim_check CHECK ((isuserelement1dim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_isuserelement2dim_check CHECK ((isuserelement2dim = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportcube_processing_check CHECK ((processing = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_reportcube OWNER TO adempiere;

--
-- Name: pa_reportline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_reportline (
    pa_reportline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    pa_reportlineset_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    description character varying(255),
    isprinted character(1) DEFAULT 'Y'::bpchar NOT NULL,
    parent_id numeric(10,0),
    issummary character(1) DEFAULT 'N'::bpchar NOT NULL,
    linetype character(1) NOT NULL,
    calculationtype character(1),
    oper_1_id numeric(10,0),
    oper_2_id numeric(10,0),
    postingtype character(1),
    gl_budget_id numeric(10,0),
    amounttype character(2),
    paamounttype character(1),
    paperiodtype character(1),
    reportlinestyle character(1),
    tablevel numeric(10,0),
    fixedpercentage numeric,
    underlinestroketype character varying(5) DEFAULT NULL::character varying,
    overlinestroketype character varying(5) DEFAULT NULL::character varying,
    isshowoppositesign character(1) DEFAULT 'N'::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_reportline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportline_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportline_isshowoppositesign_check CHECK ((isshowoppositesign = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_reportline OWNER TO adempiere;

--
-- Name: pa_reportlineset; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_reportlineset (
    pa_reportlineset_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    processing character(1) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_reportlineset_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_reportlineset OWNER TO adempiere;

--
-- Name: pa_reportsource; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_reportsource (
    pa_reportsource_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    description character varying(255),
    pa_reportline_id numeric(10,0),
    elementtype character(2) NOT NULL,
    org_id numeric(10,0),
    c_elementvalue_id numeric(10,0),
    c_project_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    m_product_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_location_id numeric(10,0),
    c_salesregion_id numeric(10,0),
    c_activity_id numeric(10,0),
    userelement1_id numeric(10,0),
    userelement2_id numeric(10,0),
    isincludenullsorg character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullselementvalue character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsbpartner character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsproduct character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullslocation character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsproject character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullssalesregion character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsactivity character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullscampaign character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsuserelement1 character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsuserelement2 character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsorgtrx character(1) DEFAULT 'N'::bpchar NOT NULL,
    ad_orgtrx_id numeric(10,0),
    user1_id numeric(10,0) DEFAULT NULL::numeric,
    user2_id numeric(10,0) DEFAULT NULL::numeric,
    isincludenullsuser1 character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsuser2 character(1) DEFAULT 'N'::bpchar NOT NULL,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    isincludenullsuser3 character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsuser4 character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsuserlist1 character(1) DEFAULT 'N'::bpchar NOT NULL,
    isincludenullsuserlist2 character(1) DEFAULT 'N'::bpchar NOT NULL,
    pa_reportcolumn_id numeric(10,0) DEFAULT NULL::numeric,
    listsources character(1) DEFAULT 'N'::bpchar,
    listtrx character(1) DEFAULT 'N'::bpchar,
    isincludenullsuserlist3 character(1) DEFAULT NULL::bpchar,
    isincludenullsuserlist4 character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_reportsource_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsactivity_check CHECK ((isincludenullsactivity = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsbpartner_check CHECK ((isincludenullsbpartner = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullscampaign_check CHECK ((isincludenullscampaign = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullselementvalue_check CHECK ((isincludenullselementvalue = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullslocation_check CHECK ((isincludenullslocation = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsorg_check CHECK ((isincludenullsorg = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsorgtrx_check CHECK ((isincludenullsorgtrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsproduct_check CHECK ((isincludenullsproduct = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsproject_check CHECK ((isincludenullsproject = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullssalesregion_check CHECK ((isincludenullssalesregion = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsuser1_check CHECK ((isincludenullsuser1 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsuser2_check CHECK ((isincludenullsuser2 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsuser3_check CHECK ((isincludenullsuser3 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsuser4_check CHECK ((isincludenullsuser4 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsuserelement1_check CHECK ((isincludenullsuserelement1 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsuserelement2_check CHECK ((isincludenullsuserelement2 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsuserlist1_check CHECK ((isincludenullsuserlist1 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsuserlist2_check CHECK ((isincludenullsuserlist2 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsuserlist3_check CHECK ((isincludenullsuserlist3 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_isincludenullsuserlist4_check CHECK ((isincludenullsuserlist4 = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_listsources_check CHECK ((listsources = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_reportsource_listtrx_check CHECK ((listtrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_reportsource OWNER TO adempiere;

--
-- Name: pa_sla_criteria; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_sla_criteria (
    pa_sla_criteria_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    ismanual character(1) DEFAULT 'Y'::bpchar NOT NULL,
    classname character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_sla_criteria_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_sla_criteria_ismanual_check CHECK ((ismanual = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_sla_criteria OWNER TO adempiere;

--
-- Name: pa_sla_goal; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_sla_goal (
    pa_sla_goal_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    pa_sla_criteria_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    measuretarget numeric DEFAULT 0 NOT NULL,
    measureactual numeric DEFAULT 0 NOT NULL,
    datelastrun timestamp without time zone,
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_sla_goal_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_sla_goal_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_sla_goal OWNER TO adempiere;

--
-- Name: pa_sla_measure; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pa_sla_measure (
    pa_sla_measure_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    pa_sla_goal_id numeric(10,0) NOT NULL,
    datetrx timestamp without time zone NOT NULL,
    measureactual numeric DEFAULT 0 NOT NULL,
    description character varying(255),
    ad_table_id numeric(10,0),
    record_id numeric(10,0),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pa_sla_measure_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pa_sla_measure_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pa_sla_measure OWNER TO adempiere;

--
-- Name: pos_orderline_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.pos_orderline_v AS
 SELECT ol.c_orderline_id,
    ol.c_order_id,
    ol.ad_client_id,
    ol.ad_org_id,
    ol.isactive,
    ol.created,
    ol.createdby,
    ol.updated,
    ol.updatedby,
    p.name AS productname,
    ol.priceactual,
    ol.qtyordered,
    uom.uomsymbol,
    t.taxindicator,
    t.rate,
    ol.linenetamt,
    (ol.linenetamt + ((ol.linenetamt * t.rate) / (100)::numeric)) AS grandtotal,
    ol.discount
   FROM ((((adempiere.c_orderline ol
     JOIN adempiere.c_uom uom ON ((ol.c_uom_id = uom.c_uom_id)))
     JOIN adempiere.c_order i ON ((ol.c_order_id = i.c_order_id)))
     LEFT JOIN adempiere.m_product p ON ((ol.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.c_tax t ON ((ol.c_tax_id = t.c_tax_id)))
  ORDER BY ol.line DESC;


ALTER TABLE adempiere.pos_orderline_v OWNER TO adempiere;

--
-- Name: pp_calendar; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_calendar (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    pp_calendar_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(30) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_calendar_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_calendar OWNER TO adempiere;

--
-- Name: pp_cost_collector; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_cost_collector (
    m_product_id numeric(10,0) NOT NULL,
    ad_orgtrx_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    c_activity_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_doctypetarget_id numeric(10,0) NOT NULL,
    c_doctype_id numeric(10,0) NOT NULL,
    c_project_id numeric(10,0),
    c_uom_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    description character varying(255),
    docaction character(2) DEFAULT 'CO'::bpchar,
    docstatus character(2) DEFAULT 'DR'::bpchar,
    durationreal numeric,
    isactive character(1) NOT NULL,
    isbatchtime character(1) DEFAULT 'N'::bpchar,
    m_attributesetinstance_id numeric(10,0),
    m_locator_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    movementdate timestamp without time zone NOT NULL,
    movementqty numeric DEFAULT 0 NOT NULL,
    pp_cost_collector_id numeric(10,0) NOT NULL,
    pp_order_bomline_id numeric(10,0),
    pp_order_id numeric(10,0) NOT NULL,
    pp_order_node_id numeric(10,0),
    pp_order_workflow_id numeric(10,0),
    posted character(1) NOT NULL,
    processed character(1) NOT NULL,
    processing character(1),
    qtyreject numeric DEFAULT 0,
    s_resource_id numeric(10,0) NOT NULL,
    scrappedqty numeric DEFAULT 0,
    setuptimereal numeric DEFAULT 0,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    user1_id numeric(10,0),
    ad_client_id numeric(10,0) NOT NULL,
    user2_id numeric(10,0),
    reversal_id numeric(10,0),
    costcollectortype character varying(3) NOT NULL,
    issubcontracting character(1),
    documentno character varying(30) NOT NULL,
    processedon numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_cost_collector_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_cost_collector_isbatchtime_check CHECK ((isbatchtime = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_cost_collector_issubcontracting_check CHECK ((issubcontracting = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_cost_collector_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_cost_collector OWNER TO adempiere;

--
-- Name: pp_cost_collectorma; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_cost_collectorma (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    movementqty numeric NOT NULL,
    pp_cost_collectorma_id numeric(10,0) NOT NULL,
    pp_cost_collector_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_ccma_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_cost_collectorma_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_cost_collectorma OWNER TO adempiere;

--
-- Name: pp_forecastdefinition; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_forecastdefinition (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    pp_forecastdefinition_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_forecastdefinition_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_forecastdefinition OWNER TO adempiere;

--
-- Name: pp_forecastdefinitionline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_forecastdefinitionline (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    pp_forecastdefinitionline_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    pp_forecastdefinition_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    seqno numeric(10,0) DEFAULT NULL::numeric,
    m_product_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_category_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_classification_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_class_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_group_id numeric(10,0) DEFAULT NULL::numeric,
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    c_salesregion_id numeric(10,0) DEFAULT NULL::numeric,
    c_bp_group_id numeric(10,0) DEFAULT NULL::numeric,
    factorgamma numeric,
    factoralpha numeric,
    factormultiplier numeric,
    factorscale numeric,
    factorbeta numeric,
    factoruser numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_forecastdefinitionline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_forecastdefinitionline OWNER TO adempiere;

--
-- Name: pp_forecastrule; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_forecastrule (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    pp_forecastrule_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_rule_id numeric(10,0) DEFAULT NULL::numeric,
    calculationclass character varying(60) DEFAULT NULL::character varying,
    name character varying(60) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    help character varying(2000) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_forecastrule_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_forecastrule OWNER TO adempiere;

--
-- Name: pp_forecastrun; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_forecastrun (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    pp_forecastrun_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    pp_forecastdefinition_id numeric(10,0) NOT NULL,
    pp_perioddefinition_id numeric(10,0) NOT NULL,
    pp_calendar_id numeric(10,0) NOT NULL,
    periodhistory numeric(10,0) DEFAULT NULL::numeric,
    documentno character varying(30) NOT NULL,
    description character varying(255) NOT NULL,
    processed character(1) DEFAULT NULL::bpchar,
    processing character(1) DEFAULT NULL::bpchar,
    ref_definitionperiod_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) DEFAULT NULL::numeric,
    m_warehousesource_id numeric(10,0) NOT NULL,
    pp_forecastrule_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_forecastrun_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_forecastrun_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_forecastrun OWNER TO adempiere;

--
-- Name: pp_forecastrundetail; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_forecastrundetail (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    pp_forecastrundetail_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    pp_period_id numeric(10,0) NOT NULL,
    qtycalculated numeric,
    pp_forecastrun_id numeric(10,0) DEFAULT NULL::numeric,
    periodno numeric(10,0) DEFAULT NULL::numeric,
    pp_forecastrunmaster_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_forecastrundetail_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_forecastrundetail OWNER TO adempiere;

--
-- Name: pp_forecastrunline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_forecastrunline (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    pp_forecastrunline_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_saleshistory_id numeric(10,0) NOT NULL,
    pp_period_id numeric(10,0) DEFAULT NULL::numeric,
    pp_forecastrundetail_id numeric(10,0) DEFAULT NULL::numeric,
    pp_forecastrun_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_forecastrunline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_forecastrunline OWNER TO adempiere;

--
-- Name: pp_forecastrunmaster; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_forecastrunmaster (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    pp_forecastrunmaster_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    pp_forecastrun_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_id numeric(10,0) DEFAULT NULL::numeric,
    m_warehouse_id numeric(10,0) DEFAULT NULL::numeric,
    factoralpha numeric,
    factorgamma numeric,
    factormultiplier numeric,
    factorscale numeric,
    pp_forecastdefinitionline_id numeric(10,0) DEFAULT NULL::numeric,
    factorbeta numeric,
    factoruser numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_forecastrunmaster_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_forecastrunmaster OWNER TO adempiere;

--
-- Name: pp_forecastrunresult; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_forecastrunresult (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    pp_forecastrunresult_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    qtycalculated numeric,
    qtyplan numeric,
    pp_period_id numeric(10,0) DEFAULT NULL::numeric,
    qtyabnormal numeric,
    pp_forecastrun_id numeric(10,0) DEFAULT NULL::numeric,
    periodno numeric(10,0) DEFAULT NULL::numeric,
    pp_forecastrunmaster_id numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_forecastrunresult_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_forecastrunresult OWNER TO adempiere;

--
-- Name: pp_mrp; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_mrp (
    name character varying(120),
    ad_org_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0),
    c_orderline_id numeric(10,0),
    c_order_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dateconfirm timestamp without time zone,
    datefinishschedule timestamp without time zone,
    dateordered timestamp without time zone NOT NULL,
    datepromised timestamp without time zone NOT NULL,
    datesimulation timestamp without time zone,
    datestart timestamp without time zone,
    datestartschedule timestamp without time zone,
    description character varying(1020),
    docstatus character varying(2),
    isactive character(1) NOT NULL,
    isavailable character(1),
    m_forecastline_id numeric(10,0),
    m_forecast_id numeric(10,0),
    m_product_id numeric(10,0),
    m_requisitionline_id numeric(10,0),
    m_requisition_id numeric(10,0),
    m_warehouse_id numeric(10,0) NOT NULL,
    pp_mrp_id numeric(10,0) NOT NULL,
    pp_order_bomline_id numeric(10,0),
    pp_order_id numeric(10,0),
    planner_id numeric(10,0),
    priority character varying(10),
    qty numeric,
    s_resource_id numeric(10,0),
    ordertype character varying(3),
    typemrp character(1),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(80) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    version numeric,
    dd_order_id numeric(10,0),
    dd_orderline_id numeric(10,0),
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    c_projectphase_id numeric(10,0) DEFAULT NULL::numeric,
    c_projecttask_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_mrp_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_mrp_isavailable_check CHECK ((isavailable = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_mrp OWNER TO adempiere;

--
-- Name: pp_mrp_detail; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_mrp_detail (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    pp_mrp_detail_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    mrp_supply_id numeric(10,0) DEFAULT NULL::numeric,
    mrp_demand_id numeric(10,0) DEFAULT NULL::numeric,
    qty numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_mrp_detail_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_mrp_detail OWNER TO adempiere;

--
-- Name: pp_order; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_order (
    documentno character varying(60) NOT NULL,
    s_resource_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    assay numeric DEFAULT 0,
    c_activity_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_doctypetarget_id numeric(10,0) DEFAULT 0 NOT NULL,
    c_doctype_id numeric(10,0) DEFAULT 0,
    c_orderline_id numeric(10,0),
    c_project_id numeric(10,0),
    c_uom_id numeric(10,0) NOT NULL,
    copyfrom character(1),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dateconfirm timestamp without time zone,
    datedelivered timestamp without time zone,
    datefinish timestamp without time zone,
    datefinishschedule timestamp without time zone,
    dateordered timestamp without time zone NOT NULL,
    datepromised timestamp without time zone NOT NULL,
    datestart timestamp without time zone,
    datestartschedule timestamp without time zone NOT NULL,
    description character varying(510),
    docaction character(2) DEFAULT '--'::bpchar NOT NULL,
    docstatus character(2) DEFAULT 'DR'::bpchar NOT NULL,
    floatafter numeric,
    floatbefored numeric,
    isactive character(1) NOT NULL,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    isprinted character(1) DEFAULT 'N'::bpchar NOT NULL,
    isqtypercentage character(1),
    issotrx character(1) DEFAULT 'N'::bpchar NOT NULL,
    isselected character(1) DEFAULT 'N'::bpchar NOT NULL,
    line numeric(10,0) NOT NULL,
    lot character varying(20),
    m_attributesetinstance_id numeric(10,0),
    ordertype character varying(1),
    pp_order_id numeric(10,0) NOT NULL,
    pp_product_bom_id numeric(10,0) NOT NULL,
    planner_id numeric(10,0),
    posted character(1),
    priorityrule character(1) NOT NULL,
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    processing character(1),
    qtybatchsize numeric DEFAULT 0,
    qtybatchs numeric DEFAULT 0,
    qtydelivered numeric DEFAULT 0 NOT NULL,
    qtyentered numeric DEFAULT 1,
    qtyordered numeric DEFAULT 1 NOT NULL,
    qtyreject numeric DEFAULT 0 NOT NULL,
    qtyreserved numeric,
    qtyscrap numeric DEFAULT 0 NOT NULL,
    scheduletype character varying(1) DEFAULT 'D'::character varying,
    serno character varying(20),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    ad_client_id numeric(10,0) NOT NULL,
    yield numeric DEFAULT 100 NOT NULL,
    ad_orgtrx_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    ad_workflow_id numeric(10,0) NOT NULL,
    processedon numeric,
    c_projectphase_id numeric(10,0) DEFAULT NULL::numeric,
    c_projecttask_id numeric(10,0) DEFAULT NULL::numeric,
    m_shipper_id numeric(10,0) DEFAULT NULL::numeric,
    deliveryrule character(1) DEFAULT NULL::bpchar,
    deliveryviarule character(1) DEFAULT NULL::bpchar,
    freightcostrule character(1) DEFAULT NULL::bpchar,
    m_freightcategory_id numeric(10,0) DEFAULT NULL::numeric,
    trackingno character varying(60) DEFAULT NULL::character varying,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_order_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_isqtypercentage_check CHECK ((isqtypercentage = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_isselected_check CHECK ((isselected = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_order OWNER TO adempiere;

--
-- Name: pp_order_bom; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_order_bom (
    name character varying(60) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    bomtype character(1),
    bomuse character(1),
    c_uom_id numeric(10,0) NOT NULL,
    copyfrom character(1),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    documentno character varying(20),
    help character varying(2000),
    isactive character(1) NOT NULL,
    m_attributesetinstance_id numeric(10,0),
    m_changenotice_id numeric(10,0),
    m_product_id numeric(10,0) NOT NULL,
    pp_order_bom_id numeric(10,0) NOT NULL,
    pp_order_id numeric(10,0) NOT NULL,
    processing character(1),
    revision character varying(10),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    validto timestamp without time zone,
    ad_client_id numeric(10,0) NOT NULL,
    value character varying(80) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_order_bom_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_order_bom OWNER TO adempiere;

--
-- Name: pp_order_bom_header_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.pp_order_bom_header_v AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    'en_US'::character varying AS ad_language,
    o.pp_order_id,
    o.documentno,
    o.docstatus,
    o.c_doctype_id,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    o.m_warehouse_id,
    wh.c_location_id AS warehouse_location_id,
    d.printname AS documenttype,
    d.documentnote AS documenttypenote,
    o.planner_id,
    u.name AS salesrep_name,
    o.datestart,
    o.datestartschedule,
    o.floatafter,
    o.floatbefored,
    o.line,
    o.lot,
    o.serno,
    o.c_uom_id,
    o.s_resource_id,
    o.pp_product_bom_id,
    o.ad_workflow_id,
    o.assay,
    o.c_orderline_id,
    o.priorityrule,
    o.qtybatchsize,
    o.qtybatchs,
    o.qtydelivered,
    o.qtyentered,
    o.qtyordered,
    o.dateconfirm,
    o.datedelivered,
    o.datefinish,
    o.datefinishschedule,
    o.dateordered,
    o.datepromised,
    o.qtyreject,
    o.qtyreserved,
    o.qtyscrap,
    o.yield,
    o.c_campaign_id,
    o.c_project_id,
    o.c_activity_id,
    ob.bomtype,
    ob.bomuse,
    ob.description,
    ob.help,
    ob.m_attributesetinstance_id,
    ob.m_product_id,
    ob.name,
    ob.revision,
    ob.validfrom,
    ob.validto,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM ((((((adempiere.pp_order o
     JOIN adempiere.c_doctype d ON ((o.c_doctype_id = d.c_doctype_id)))
     JOIN adempiere.pp_order_bom ob ON ((ob.pp_order_id = o.pp_order_id)))
     JOIN adempiere.m_warehouse wh ON ((o.m_warehouse_id = wh.m_warehouse_id)))
     JOIN adempiere.ad_orginfo oi ON ((o.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((o.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((o.planner_id = u.ad_user_id)));


ALTER TABLE adempiere.pp_order_bom_header_v OWNER TO adempiere;

--
-- Name: pp_order_bom_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_order_bom_trl (
    ad_client_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    istranslated character(1) NOT NULL,
    name character varying(60) NOT NULL,
    pp_order_bom_id numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_order_bom_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_bom_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_order_bom_trl OWNER TO adempiere;

--
-- Name: pp_order_bom_header_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.pp_order_bom_header_vt AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    obt.ad_language,
    o.pp_order_id,
    o.documentno,
    o.docstatus,
    o.c_doctype_id,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    o.m_warehouse_id,
    wh.c_location_id AS warehouse_location_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    o.planner_id,
    u.name AS salesrep_name,
    o.datestart,
    o.datestartschedule,
    o.floatafter,
    o.floatbefored,
    o.line,
    o.lot,
    o.serno,
    o.c_uom_id,
    o.s_resource_id,
    o.pp_product_bom_id,
    o.ad_workflow_id,
    o.assay,
    o.c_orderline_id,
    o.priorityrule,
    o.qtybatchsize,
    o.qtybatchs,
    o.qtydelivered,
    o.qtyentered,
    o.qtyordered,
    o.dateconfirm,
    o.datedelivered,
    o.datefinish,
    o.datefinishschedule,
    o.dateordered,
    o.datepromised,
    o.qtyreject,
    o.qtyreserved,
    o.qtyscrap,
    o.yield,
    o.c_campaign_id,
    o.c_project_id,
    o.c_activity_id,
    ob.bomtype,
    ob.bomuse,
    obt.description,
    obt.help,
    ob.m_attributesetinstance_id,
    ob.m_product_id,
    obt.name,
    ob.revision,
    ob.validfrom,
    ob.validto,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM (((((((adempiere.pp_order o
     JOIN adempiere.c_doctype_trl dt ON ((o.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.pp_order_bom ob ON ((ob.pp_order_id = o.pp_order_id)))
     JOIN adempiere.pp_order_bom_trl obt ON ((obt.pp_order_bom_id = ob.pp_order_bom_id)))
     JOIN adempiere.m_warehouse wh ON ((o.m_warehouse_id = wh.m_warehouse_id)))
     JOIN adempiere.ad_orginfo oi ON ((o.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((o.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((o.planner_id = u.ad_user_id)));


ALTER TABLE adempiere.pp_order_bom_header_vt OWNER TO adempiere;

--
-- Name: pp_order_bomline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_order_bomline (
    description character varying(255),
    feature character varying(30),
    m_product_id numeric(10,0) NOT NULL,
    backflushgroup character varying(30),
    c_uom_id numeric(10,0) NOT NULL,
    componenttype character(2) DEFAULT 'CO'::bpchar,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    datedelivered timestamp without time zone,
    forecast numeric,
    help character varying(2000),
    isactive character(1) NOT NULL,
    iscritical character(1) NOT NULL,
    isqtypercentage character(1),
    issuemethod character(1),
    leadtimeoffset numeric(10,0),
    line numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0),
    m_changenotice_id numeric(10,0),
    m_locator_id numeric(10,0),
    m_warehouse_id numeric(10,0) NOT NULL,
    pp_order_bomline_id numeric(10,0) NOT NULL,
    pp_order_bom_id numeric(10,0) NOT NULL,
    pp_order_id numeric(10,0) NOT NULL,
    qtybom numeric NOT NULL,
    qtybatch numeric NOT NULL,
    qtydelivered numeric NOT NULL,
    qtyentered numeric,
    qtypost numeric NOT NULL,
    qtyreject numeric NOT NULL,
    qtyrequired numeric NOT NULL,
    qtyreserved numeric NOT NULL,
    qtyscrap numeric NOT NULL,
    scrap numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    validto timestamp without time zone,
    ad_org_id numeric(10,0) NOT NULL,
    assay numeric,
    ad_user_id numeric(10,0),
    costallocationperc numeric DEFAULT 0,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_order_bomline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_bomline_iscritical_check CHECK ((iscritical = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_bomline_isqtypercentage_check CHECK ((isqtypercentage = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_order_bomline OWNER TO adempiere;

--
-- Name: pp_order_bomline_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_order_bomline_trl (
    ad_client_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    istranslated character(1) NOT NULL,
    pp_order_bomline_id numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_order_bomline_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_bomline_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_order_bomline_trl OWNER TO adempiere;

--
-- Name: pp_order_bomline_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.pp_order_bomline_v AS
 SELECT obl.ad_client_id,
    obl.ad_org_id,
    obl.isactive,
    obl.created,
    obl.createdby,
    obl.updated,
    obl.updatedby,
    'en_US'::character varying AS ad_language,
    obl.description,
    obl.feature,
    obl.m_product_id,
    obl.backflushgroup,
    obl.c_uom_id,
    obl.componenttype,
    obl.datedelivered,
    obl.forecast,
    obl.help,
    obl.iscritical,
    obl.issuemethod,
    obl.leadtimeoffset,
    obl.line,
    obl.m_attributesetinstance_id,
    obl.m_changenotice_id,
    obl.m_locator_id,
    obl.m_warehouse_id,
    obl.pp_order_bom_id,
    obl.pp_order_bomline_id,
    obl.pp_order_id,
    obl.qtydelivered,
    obl.qtypost,
    obl.qtyreject,
    obl.qtyscrap,
    obl.scrap,
    obl.validfrom,
    obl.validto,
    obl.assay,
    obl.ad_user_id,
    round(obl.qtyrequired, 4) AS qtyrequired,
    round(adempiere.bomqtyreserved(obl.m_product_id, obl.m_warehouse_id, (0)::numeric), 4) AS qtyreserved,
    round(adempiere.bomqtyavailable(obl.m_product_id, obl.m_warehouse_id, (0)::numeric), 4) AS qtyavailable,
    round(adempiere.bomqtyonhand(obl.m_product_id, obl.m_warehouse_id, (0)::numeric), 4) AS qtyonhand,
    round(obl.qtybom, 4) AS qtybom,
    obl.isqtypercentage,
    round(obl.qtybatch, 4) AS qtybatch,
        CASE
            WHEN (o.qtybatchs = (0)::numeric) THEN (1)::numeric
            ELSE round((obl.qtyrequired / o.qtybatchs), 4)
        END AS qtybatchsize
   FROM (adempiere.pp_order_bomline obl
     JOIN adempiere.pp_order o ON ((o.pp_order_id = obl.pp_order_id)));


ALTER TABLE adempiere.pp_order_bomline_v OWNER TO adempiere;

--
-- Name: pp_order_bomline_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.pp_order_bomline_vt AS
 SELECT obl.ad_client_id,
    obl.ad_org_id,
    obl.isactive,
    obl.created,
    obl.createdby,
    obl.updated,
    obl.updatedby,
    oblt.ad_language,
    oblt.description,
    obl.feature,
    obl.m_product_id,
    obl.backflushgroup,
    obl.c_uom_id,
    obl.componenttype,
    obl.datedelivered,
    obl.forecast,
    oblt.help,
    obl.iscritical,
    obl.issuemethod,
    obl.leadtimeoffset,
    obl.line,
    obl.m_attributesetinstance_id,
    obl.m_changenotice_id,
    obl.m_locator_id,
    obl.m_warehouse_id,
    obl.pp_order_bom_id,
    obl.pp_order_bomline_id,
    obl.pp_order_id,
    obl.qtydelivered,
    obl.qtypost,
    obl.qtyreject,
    obl.qtyscrap,
    obl.scrap,
    obl.validfrom,
    obl.validto,
    obl.assay,
    obl.ad_user_id,
    o.qtybatchs,
    round(obl.qtyrequired, 4) AS qtyrequired,
    round(adempiere.bomqtyreserved(obl.m_product_id, obl.m_warehouse_id, (0)::numeric), 4) AS qtyreserved,
    round(adempiere.bomqtyavailable(obl.m_product_id, obl.m_warehouse_id, (0)::numeric), 4) AS qtyavailable,
    round(adempiere.bomqtyonhand(obl.m_product_id, obl.m_warehouse_id, (0)::numeric), 4) AS qtyonhand,
    round(obl.qtybom, 4) AS qtybom,
    obl.isqtypercentage,
    round(obl.qtybatch, 4) AS qtybatch,
        CASE
            WHEN (o.qtybatchs = (0)::numeric) THEN (1)::numeric
            ELSE round((obl.qtyrequired / o.qtybatchs), 4)
        END AS qtybatchsize
   FROM ((adempiere.pp_order_bomline obl
     JOIN adempiere.pp_order o ON ((o.pp_order_id = obl.pp_order_id)))
     LEFT JOIN adempiere.pp_order_bomline_trl oblt ON ((oblt.pp_order_bomline_id = obl.pp_order_bomline_id)));


ALTER TABLE adempiere.pp_order_bomline_vt OWNER TO adempiere;

--
-- Name: pp_order_cost; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_order_cost (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_workflow_id numeric(10,0),
    c_acctschema_id numeric(10,0) NOT NULL,
    costingmethod character(1) DEFAULT 'x'::bpchar,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    cumulatedamt numeric,
    cumulatedamtpost numeric,
    cumulatedqty numeric,
    cumulatedqtypost numeric,
    currentcostprice numeric,
    currentcostpricell numeric,
    currentqty numeric,
    isactive character(1) NOT NULL,
    m_attributesetinstance_id numeric(10,0),
    m_costelement_id numeric(10,0),
    m_costtype_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    pp_order_cost_id numeric(10,0) NOT NULL,
    pp_order_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_order_cost_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_order_cost OWNER TO adempiere;

--
-- Name: pp_order_header_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.pp_order_header_v AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    'en_US'::character varying AS ad_language,
    o.pp_order_id,
    o.documentno,
    o.docstatus,
    o.c_doctype_id,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    o.m_warehouse_id,
    wh.c_location_id AS warehouse_location_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    o.planner_id,
    u.name AS salesrep_name,
    o.datestart,
    o.datestartschedule,
    o.floatafter,
    o.floatbefored,
    o.line,
    o.lot,
    o.serno,
    o.description,
    o.m_product_id,
    o.m_attributesetinstance_id,
    o.c_uom_id,
    o.s_resource_id,
    o.pp_product_bom_id,
    o.ad_workflow_id,
    o.assay,
    o.c_orderline_id,
    o.priorityrule,
    o.qtybatchsize,
    o.qtybatchs,
    o.qtydelivered,
    o.qtyentered,
    o.qtyordered,
    o.dateconfirm,
    o.datedelivered,
    o.datefinish,
    o.datefinishschedule,
    o.dateordered,
    o.datepromised,
    o.qtyreject,
    o.qtyreserved,
    o.qtyscrap,
    o.yield,
    o.c_campaign_id,
    o.c_project_id,
    o.c_activity_id,
    o.user1_id,
    o.user2_id,
    o.user3_id,
    o.user4_id,
    o.ad_orgtrx_id,
    o.c_doctypetarget_id,
    o.scheduletype,
    o.isapproved,
    o.docaction,
    o.posted,
    o.isprinted,
    o.ordertype,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM (((((adempiere.pp_order o
     JOIN adempiere.c_doctype dt ON ((o.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.m_warehouse wh ON ((o.m_warehouse_id = wh.m_warehouse_id)))
     JOIN adempiere.ad_orginfo oi ON ((o.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((o.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((o.planner_id = u.ad_user_id)));


ALTER TABLE adempiere.pp_order_header_v OWNER TO adempiere;

--
-- Name: pp_order_header_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.pp_order_header_vt AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    dt.ad_language,
    o.pp_order_id,
    o.documentno,
    o.docstatus,
    o.c_doctype_id,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    o.m_warehouse_id,
    wh.c_location_id AS warehouse_location_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    o.planner_id,
    u.name AS salesrep_name,
    o.datestart,
    o.datestartschedule,
    o.floatafter,
    o.floatbefored,
    o.line,
    o.lot,
    o.serno,
    o.description,
    o.m_product_id,
    o.m_attributesetinstance_id,
    o.c_uom_id,
    o.s_resource_id,
    o.pp_product_bom_id,
    o.ad_workflow_id,
    o.assay,
    o.c_orderline_id,
    o.priorityrule,
    o.qtybatchsize,
    o.qtybatchs,
    o.qtydelivered,
    o.qtyentered,
    o.qtyordered,
    o.dateconfirm,
    o.datedelivered,
    o.datefinish,
    o.datefinishschedule,
    o.dateordered,
    o.datepromised,
    o.qtyreject,
    o.qtyreserved,
    o.qtyscrap,
    o.yield,
    o.c_campaign_id,
    o.c_project_id,
    o.c_activity_id,
    o.user1_id,
    o.user2_id,
    o.user3_id,
    o.user4_id,
    o.ad_orgtrx_id,
    o.c_doctypetarget_id,
    o.scheduletype,
    o.isapproved,
    o.docaction,
    o.posted,
    o.isprinted,
    o.ordertype,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM (((((adempiere.pp_order o
     JOIN adempiere.c_doctype_trl dt ON ((o.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.m_warehouse wh ON ((o.m_warehouse_id = wh.m_warehouse_id)))
     JOIN adempiere.ad_orginfo oi ON ((o.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((o.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((o.planner_id = u.ad_user_id)));


ALTER TABLE adempiere.pp_order_header_vt OWNER TO adempiere;

--
-- Name: pp_order_node; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_order_node (
    name character varying(60) NOT NULL,
    ad_column_id numeric(10,0),
    ad_form_id numeric(10,0),
    ad_image_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    ad_process_id numeric(10,0),
    ad_task_id numeric(10,0),
    ad_wf_block_id numeric(10,0),
    ad_wf_node_id numeric(10,0) NOT NULL,
    ad_wf_responsible_id numeric(10,0),
    ad_window_id numeric(10,0),
    ad_workflow_id numeric(10,0) NOT NULL,
    action character(1) DEFAULT 'N'::bpchar NOT NULL,
    attributename character varying(60),
    attributevalue character varying(60),
    c_bpartner_id numeric(10,0),
    cost numeric NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    datefinish timestamp without time zone,
    datefinishschedule timestamp without time zone,
    datestart timestamp without time zone,
    datestartschedule timestamp without time zone,
    description character varying(255),
    docaction character(2),
    docstatus character(2),
    duration numeric(10,0) DEFAULT 0,
    durationreal numeric(10,0),
    durationrequired numeric(10,0),
    entitytype character varying(40) DEFAULT 'U'::character varying NOT NULL,
    finishmode character(1),
    help character varying(2000),
    isactive character(1) NOT NULL,
    iscentrallymaintained character(1) NOT NULL,
    ismilestone character(1),
    issubcontracting character(1),
    joinelement character(1) DEFAULT 'X'::bpchar NOT NULL,
    "limit" numeric(10,0) NOT NULL,
    movingtime numeric(10,0),
    overlapunits numeric(10,0),
    pp_order_id numeric(10,0) NOT NULL,
    pp_order_node_id numeric(10,0) NOT NULL,
    pp_order_workflow_id numeric(10,0) NOT NULL,
    priority numeric(10,0) NOT NULL,
    qtydelivered numeric,
    qtyreject numeric,
    qtyrequired numeric,
    qtyscrap numeric,
    queuingtime numeric(10,0),
    s_resource_id numeric(10,0),
    setuptime numeric(10,0),
    setuptimereal numeric(10,0),
    setuptimerequired numeric(10,0),
    splitelement character(1) DEFAULT 'X'::bpchar NOT NULL,
    startmode character(1),
    subflowexecution character(1),
    unitscycles numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    value character varying(40) NOT NULL,
    waitingtime numeric(10,0) NOT NULL,
    workflow_id numeric(10,0),
    workingtime numeric(10,0) NOT NULL,
    xposition numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    yposition numeric(10,0) NOT NULL,
    yield numeric(10,0) DEFAULT 100,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_order_node_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_node_iscentrallymaintained_check CHECK ((iscentrallymaintained = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_node_ismilestone_check CHECK ((ismilestone = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_node_issubcontracting_check CHECK ((issubcontracting = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_order_node OWNER TO adempiere;

--
-- Name: pp_order_node_asset; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_order_node_asset (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    pp_order_id numeric(10,0) NOT NULL,
    pp_order_node_asset_id numeric(10,0) NOT NULL,
    pp_order_node_id numeric(10,0) NOT NULL,
    pp_order_workflow_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_order_node_asset_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_order_node_asset OWNER TO adempiere;

--
-- Name: pp_order_node_product; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_order_node_product (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    pp_order_id numeric(10,0) NOT NULL,
    pp_order_node_id numeric(10,0) NOT NULL,
    pp_order_node_product_id numeric(10,0) NOT NULL,
    pp_order_workflow_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    yield numeric(10,0),
    issubcontracting character(1),
    seqno numeric(10,0),
    qty numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_order_node_product_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_node_product_issubcontracting_check CHECK ((issubcontracting = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_order_node_product OWNER TO adempiere;

--
-- Name: pp_order_node_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_order_node_trl (
    ad_client_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    istranslated character(1) NOT NULL,
    name character varying(60) NOT NULL,
    pp_order_node_id numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_order_node_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_node_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_order_node_trl OWNER TO adempiere;

--
-- Name: pp_order_node_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.pp_order_node_v AS
 SELECT onode.ad_client_id,
    onode.ad_org_id,
    onode.isactive,
    onode.created,
    onode.createdby,
    onode.updated,
    onode.updatedby,
    'en_US'::character varying AS ad_language,
    onode.name,
    onode.c_bpartner_id,
    onode.cost,
    onode.datefinish,
    onode.datefinishschedule,
    onode.datestart,
    onode.datestartschedule,
    onode.description,
    onode.docaction,
    onode.docstatus,
    onode.duration,
    onode.durationreal,
    onode.durationrequired,
    onode.help,
    onode.ismilestone,
    onode.issubcontracting,
    onode.movingtime,
    onode.overlapunits,
    onode.pp_order_id,
    onode.pp_order_workflow_id,
    onode.pp_order_node_id,
    onode.priority,
    onode.qtydelivered,
    onode.qtyrequired,
    onode.qtyscrap,
    onode.queuingtime,
    onode.s_resource_id,
    onode.setuptime,
    onode.setuptimereal,
    onode.unitscycles,
    onode.validfrom,
    onode.validto,
    onode.value,
    onode.waitingtime,
    onode.workingtime,
    onode.yield
   FROM adempiere.pp_order_node onode;


ALTER TABLE adempiere.pp_order_node_v OWNER TO adempiere;

--
-- Name: pp_order_node_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.pp_order_node_vt AS
 SELECT onode.ad_client_id,
    onode.ad_org_id,
    onode.isactive,
    onode.created,
    onode.createdby,
    onode.updated,
    onode.updatedby,
    ont.ad_language,
    ont.name,
    onode.c_bpartner_id,
    onode.cost,
    onode.datefinish,
    onode.datefinishschedule,
    onode.datestart,
    onode.datestartschedule,
    ont.description,
    onode.docaction,
    onode.docstatus,
    onode.duration,
    onode.durationreal,
    onode.durationrequired,
    ont.help,
    onode.ismilestone,
    onode.issubcontracting,
    onode.movingtime,
    onode.overlapunits,
    onode.pp_order_id,
    onode.pp_order_workflow_id,
    onode.pp_order_node_id,
    onode.priority,
    onode.qtydelivered,
    onode.qtyrequired,
    onode.qtyscrap,
    onode.queuingtime,
    onode.s_resource_id,
    onode.setuptime,
    onode.setuptimereal,
    onode.unitscycles,
    onode.validfrom,
    onode.validto,
    onode.value,
    onode.waitingtime,
    onode.workingtime,
    onode.yield
   FROM (adempiere.pp_order_node onode
     LEFT JOIN adempiere.pp_order_node_trl ont ON ((ont.pp_order_node_id = onode.pp_order_node_id)));


ALTER TABLE adempiere.pp_order_node_vt OWNER TO adempiere;

--
-- Name: pp_order_nodenext; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_order_nodenext (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_wf_next_id numeric(10,0),
    ad_wf_node_id numeric(10,0) NOT NULL,
    created timestamp without time zone,
    createdby numeric(10,0),
    description character varying(255),
    entitytype character varying(40) DEFAULT 'U'::character varying NOT NULL,
    isactive character(1) NOT NULL,
    isstduserworkflow character(1),
    pp_order_id numeric(10,0) NOT NULL,
    pp_order_next_id numeric(10,0),
    pp_order_nodenext_id numeric(10,0) NOT NULL,
    pp_order_node_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) DEFAULT 10 NOT NULL,
    transitioncode character varying(2000),
    updated timestamp without time zone,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_order_nodenext_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_nodenext_isstduserworkflow_check CHECK ((isstduserworkflow = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_order_nodenext OWNER TO adempiere;

--
-- Name: pp_order_workflow; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_order_workflow (
    workflowtype character(1) DEFAULT 'M'::bpchar,
    name character varying(60) NOT NULL,
    ad_table_id numeric(10,0),
    ad_wf_node_id numeric(10,0),
    ad_wf_responsible_id numeric(10,0),
    ad_workflowprocessor_id numeric(10,0),
    ad_workflow_id numeric(10,0) NOT NULL,
    accesslevel character(1) NOT NULL,
    author character varying(20) NOT NULL,
    cost numeric,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    documentno character varying(32),
    duration numeric(10,0) DEFAULT 0 NOT NULL,
    durationunit character(1) DEFAULT 'h'::bpchar NOT NULL,
    entitytype character varying(40) DEFAULT 'U'::character varying NOT NULL,
    help character varying(2000),
    isactive character(1) NOT NULL,
    isdefault character(1),
    "limit" numeric(10,0) NOT NULL,
    movingtime numeric(10,0),
    pp_order_id numeric(10,0) NOT NULL,
    pp_order_node_id numeric(10,0),
    pp_order_workflow_id numeric(10,0) NOT NULL,
    priority numeric(10,0) NOT NULL,
    processtype character(2),
    publishstatus character(1) DEFAULT 'U'::bpchar NOT NULL,
    qtybatchsize numeric DEFAULT 1,
    queuingtime numeric(10,0),
    s_resource_id numeric(10,0),
    setuptime numeric(10,0),
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    validateworkflow character(1),
    value character varying(240),
    version numeric(10,0) NOT NULL,
    waitingtime numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    workingtime numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    yield numeric(10,0) DEFAULT 100,
    unitscycles numeric,
    overlapunits numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_order_workflow_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_workflow_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_order_workflow OWNER TO adempiere;

--
-- Name: pp_order_workflow_header_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.pp_order_workflow_header_v AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    'en_US'::character varying AS ad_language,
    o.pp_order_id,
    o.docstatus,
    o.c_doctype_id,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    o.m_warehouse_id,
    wh.c_location_id AS warehouse_location_id,
    d.printname AS documenttype,
    d.documentnote AS documenttypenote,
    o.planner_id,
    u.name AS salesrep_name,
    o.datestart,
    o.datestartschedule,
    o.floatafter,
    o.floatbefored,
    o.line,
    o.lot,
    o.serno,
    o.c_uom_id,
    o.s_resource_id,
    o.pp_product_bom_id,
    o.ad_workflow_id,
    o.assay,
    o.c_orderline_id,
    o.priorityrule,
    o.qtybatchsize,
    o.qtybatchs,
    o.qtydelivered,
    o.qtyentered,
    o.qtyordered,
    o.dateconfirm,
    o.datedelivered,
    o.datefinish,
    o.datefinishschedule,
    o.dateordered,
    o.datepromised,
    o.qtyreject,
    o.qtyreserved,
    o.qtyscrap,
    o.c_campaign_id,
    o.c_project_id,
    o.c_activity_id,
    ow.name,
    ow.description,
    ow.help,
    ow.author,
    ow.cost,
    ow.documentno,
    ow.duration,
    ow.durationunit,
    ow.version,
    ow.validfrom,
    ow.validto,
    ow.movingtime,
    ow.overlapunits,
    ow.publishstatus,
    ow.queuingtime,
    ow.setuptime,
    ow.unitscycles,
    ow.waitingtime,
    ow.workflowtype,
    ow.workingtime,
    ow.yield,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM ((((((adempiere.pp_order o
     JOIN adempiere.pp_order_workflow ow ON ((ow.pp_order_id = o.pp_order_id)))
     JOIN adempiere.c_doctype d ON ((o.c_doctype_id = d.c_doctype_id)))
     JOIN adempiere.m_warehouse wh ON ((o.m_warehouse_id = wh.m_warehouse_id)))
     JOIN adempiere.ad_orginfo oi ON ((o.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((o.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((o.planner_id = u.ad_user_id)));


ALTER TABLE adempiere.pp_order_workflow_header_v OWNER TO adempiere;

--
-- Name: pp_order_workflow_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_order_workflow_trl (
    ad_client_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    istranslated character(1) NOT NULL,
    name character varying(60) NOT NULL,
    pp_order_workflow_id numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_order_workflow_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_order_workflow_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_order_workflow_trl OWNER TO adempiere;

--
-- Name: pp_order_workflow_header_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.pp_order_workflow_header_vt AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    owt.ad_language,
    o.pp_order_id,
    o.docstatus,
    o.c_doctype_id,
    oi.c_location_id AS org_location_id,
    oi.taxid,
    o.m_warehouse_id,
    wh.c_location_id AS warehouse_location_id,
    dt.printname AS documenttype,
    dt.documentnote AS documenttypenote,
    o.planner_id,
    u.name AS salesrep_name,
    o.datestart,
    o.datestartschedule,
    o.floatafter,
    o.floatbefored,
    o.line,
    o.lot,
    o.serno,
    o.c_uom_id,
    o.pp_product_bom_id,
    o.assay,
    o.c_orderline_id,
    o.priorityrule,
    o.qtybatchsize,
    o.qtybatchs,
    o.qtydelivered,
    o.qtyentered,
    o.qtyordered,
    o.dateconfirm,
    o.datedelivered,
    o.datefinish,
    o.datefinishschedule,
    o.dateordered,
    o.datepromised,
    o.qtyreject,
    o.qtyreserved,
    o.qtyscrap,
    o.s_resource_id,
    o.c_campaign_id,
    o.c_project_id,
    o.c_activity_id,
    owt.name,
    owt.description,
    owt.help,
    ow.author,
    ow.cost,
    ow.documentno,
    ow.duration,
    ow.durationunit,
    ow.version,
    ow.validfrom,
    ow.validto,
    ow.movingtime,
    ow.overlapunits,
    ow.ad_workflow_id,
    ow.publishstatus,
    ow.queuingtime,
    ow.setuptime,
    ow.unitscycles,
    ow.waitingtime,
    ow.workflowtype,
    ow.workingtime,
    ow.yield,
    COALESCE(oi.logo_id, ci.logo_id) AS logo_id
   FROM (((((((adempiere.pp_order o
     JOIN adempiere.pp_order_workflow ow ON ((ow.pp_order_id = o.pp_order_id)))
     JOIN adempiere.pp_order_workflow_trl owt ON ((owt.pp_order_workflow_id = ow.pp_order_workflow_id)))
     JOIN adempiere.c_doctype dt ON ((o.c_doctype_id = dt.c_doctype_id)))
     JOIN adempiere.m_warehouse wh ON ((o.m_warehouse_id = wh.m_warehouse_id)))
     JOIN adempiere.ad_orginfo oi ON ((o.ad_org_id = oi.ad_org_id)))
     JOIN adempiere.ad_clientinfo ci ON ((o.ad_client_id = ci.ad_client_id)))
     LEFT JOIN adempiere.ad_user u ON ((o.planner_id = u.ad_user_id)));


ALTER TABLE adempiere.pp_order_workflow_header_vt OWNER TO adempiere;

--
-- Name: pp_period; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_period (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    pp_period_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    pp_perioddefinition_id numeric(10,0) DEFAULT NULL::numeric,
    periodno numeric(10,0) DEFAULT NULL::numeric,
    startdate timestamp without time zone,
    enddate timestamp without time zone,
    name character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_period_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_period OWNER TO adempiere;

--
-- Name: pp_perioddefinition; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_perioddefinition (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    pp_perioddefinition_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(30) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    processing character(1) DEFAULT NULL::bpchar,
    pp_calendar_id numeric(10,0) DEFAULT NULL::numeric,
    calendaryear character varying(4) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_perioddefinition_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_perioddefinition OWNER TO adempiere;

--
-- Name: pp_product_bom_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_product_bom_trl (
    ad_client_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    istranslated character(1) NOT NULL,
    name character varying(60) NOT NULL,
    pp_product_bom_id numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_product_bom_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_product_bom_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_product_bom_trl OWNER TO adempiere;

--
-- Name: pp_product_bomline_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_product_bomline_trl (
    ad_client_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    istranslated character(1) NOT NULL,
    pp_product_bomline_id numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_product_bomline_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_product_bomline_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_product_bomline_trl OWNER TO adempiere;

--
-- Name: pp_product_bomline_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.pp_product_bomline_v AS
 SELECT bl.feature,
    bl.ad_org_id,
    bl.assay,
    bl.backflushgroup,
    bl.c_uom_id,
    bl.componenttype,
    bl.created,
    bl.createdby,
    'en_US'::character varying AS ad_language,
    blt.description,
    bl.forecast,
    blt.help,
    bl.isactive,
    bl.iscritical,
    bl.isqtypercentage,
    bl.issuemethod,
    bl.leadtimeoffset,
    bl.line,
    bl.m_attributesetinstance_id,
    bl.m_changenotice_id,
    bl.m_product_id,
    bl.pp_product_bomline_id,
    bl.pp_product_bom_id,
    bl.qtybom,
    bl.qtybatch,
    bl.scrap,
    bl.updated,
    bl.updatedby,
    bl.validfrom,
    bl.ad_client_id,
    bl.validto
   FROM (adempiere.pp_product_bomline bl
     JOIN adempiere.pp_product_bomline_trl blt ON ((blt.pp_product_bomline_id = bl.pp_product_bomline_id)));


ALTER TABLE adempiere.pp_product_bomline_v OWNER TO adempiere;

--
-- Name: pp_product_bomline_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.pp_product_bomline_vt AS
 SELECT bl.feature,
    bl.ad_org_id,
    bl.assay,
    bl.backflushgroup,
    bl.c_uom_id,
    bl.componenttype,
    bl.created,
    bl.createdby,
    blt.ad_language,
    blt.description,
    bl.forecast,
    blt.help,
    bl.isactive,
    bl.iscritical,
    bl.isqtypercentage,
    bl.issuemethod,
    bl.leadtimeoffset,
    bl.line,
    bl.m_attributesetinstance_id,
    bl.m_changenotice_id,
    bl.m_product_id,
    bl.pp_product_bomline_id,
    bl.pp_product_bom_id,
    bl.qtybom,
    bl.qtybatch,
    bl.scrap,
    bl.updated,
    bl.updatedby,
    bl.validfrom,
    bl.ad_client_id,
    bl.validto
   FROM (adempiere.pp_product_bomline bl
     JOIN adempiere.pp_product_bomline_trl blt ON ((blt.pp_product_bomline_id = bl.pp_product_bomline_id)));


ALTER TABLE adempiere.pp_product_bomline_vt OWNER TO adempiere;

--
-- Name: pp_product_planning; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_product_planning (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) DEFAULT 0 NOT NULL,
    ad_workflow_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    deliverytime_promised numeric,
    isactive character(1) NOT NULL,
    iscreateplan character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isissue character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismps character(1),
    isphantom character(1) NOT NULL,
    isrequiredmrp character(1) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0),
    order_max numeric,
    order_min numeric,
    order_pack numeric,
    order_period numeric,
    order_policy character varying(3),
    order_qty numeric,
    pp_product_bom_id numeric(10,0),
    pp_product_planning_id numeric(10,0) NOT NULL,
    planner_id numeric(10,0),
    s_resource_id numeric(10,0),
    timefence numeric,
    transfertime numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    workingtime numeric,
    yield numeric(10,0) DEFAULT 100,
    dd_networkdistribution_id numeric(10,0),
    safetystock numeric,
    isrequireddrp character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_product_planning_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_product_planning_iscreateplan_check CHECK ((iscreateplan = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_product_planning_isissue_check CHECK ((isissue = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_product_planning_ismps_check CHECK ((ismps = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_product_planning_isphantom_check CHECK ((isphantom = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_product_planning_isrequireddrp_check CHECK ((isrequireddrp = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_product_planning_isrequiredmrp_check CHECK ((isrequiredmrp = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_product_planning OWNER TO adempiere;

--
-- Name: pp_wf_node_asset; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_wf_node_asset (
    pp_wf_node_asset_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    ad_wf_node_id numeric(10,0) NOT NULL,
    a_asset_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_wf_node_asset_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_wf_node_asset OWNER TO adempiere;

--
-- Name: pp_wf_node_product; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.pp_wf_node_product (
    entitytype character varying(40) DEFAULT 'U'::character varying NOT NULL,
    configurationlevel character(1) DEFAULT 'S'::bpchar,
    ad_wf_node_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    pp_wf_node_product_id numeric(10,0) NOT NULL,
    qty numeric,
    seqno numeric(10,0),
    updated timestamp without time zone NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    issubcontracting character(1) DEFAULT 'N'::bpchar,
    yield numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT pp_wf_node_product_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT pp_wf_node_product_issubcontracting_check CHECK ((issubcontracting = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.pp_wf_node_product OWNER TO adempiere;

--
-- Name: qm_specification; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.qm_specification (
    qm_specification_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40),
    name character varying(60),
    description character varying(255),
    m_product_id numeric(10,0) NOT NULL,
    pp_product_bom_id numeric(10,0),
    ad_workflow_id numeric(10,0),
    m_attributeset_id numeric(10,0) NOT NULL,
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    ad_client_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT qm_specification_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.qm_specification OWNER TO adempiere;

--
-- Name: qm_specificationline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.qm_specificationline (
    qm_specificationline_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    seqno numeric(10,0),
    m_attribute_id numeric(10,0) NOT NULL,
    validfrom character varying(22),
    validto timestamp without time zone,
    andor character(1) NOT NULL,
    value character varying(40),
    operation character(2) NOT NULL,
    qm_specification_id numeric(10,0),
    ad_client_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT qm_specificationline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.qm_specificationline OWNER TO adempiere;

--
-- Name: r_category; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_category (
    r_category_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    m_product_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_category_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_category OWNER TO adempiere;

--
-- Name: r_categoryupdates; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_categoryupdates (
    ad_user_id numeric(10,0) NOT NULL,
    r_category_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_categoryupdates_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT r_categoryupdates_isselfservice_check CHECK ((isselfservice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_categoryupdates OWNER TO adempiere;

--
-- Name: r_contactinterest; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_contactinterest (
    r_interestarea_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    subscribedate timestamp without time zone,
    optoutdate timestamp without time zone,
    ad_user_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_contactinterest_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_contactinterest OWNER TO adempiere;

--
-- Name: r_group; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_group (
    r_group_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    m_bom_id numeric(10,0),
    m_changenotice_id numeric(10,0),
    pp_product_bom_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_group_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_group OWNER TO adempiere;

--
-- Name: r_groupupdates; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_groupupdates (
    ad_user_id numeric(10,0) NOT NULL,
    r_group_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_groupupdates_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT r_groupupdates_isselfservice_check CHECK ((isselfservice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_groupupdates OWNER TO adempiere;

--
-- Name: r_interestarea; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_interestarea (
    r_interestarea_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    value character varying(40) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_interestarea_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_interestarea OWNER TO adempiere;

--
-- Name: r_issueknown; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_issueknown (
    r_issueknown_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    issuesummary character varying(255) NOT NULL,
    releaseno character varying(10) NOT NULL,
    sourceclassname character varying(60),
    sourcemethodname character varying(60),
    loggername character varying(60),
    lineno numeric(10,0) DEFAULT 0,
    description character varying(255),
    issuestatus character varying(2000),
    r_issuestatus_id numeric(10,0),
    r_request_id numeric(10,0),
    processing character(1),
    r_issuerecommendation_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_issueknown_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_issueknown OWNER TO adempiere;

--
-- Name: r_issueproject; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_issueproject (
    r_issueproject_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    a_asset_id numeric(10,0),
    c_project_id numeric(10,0),
    statisticsinfo character varying(60),
    profileinfo character varying(60),
    systemstatus character(1) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_issueproject_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_issueproject OWNER TO adempiere;

--
-- Name: r_issuerecommendation; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_issuerecommendation (
    r_issuerecommendation_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_issuerecommendation_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_issuerecommendation OWNER TO adempiere;

--
-- Name: r_issuesource; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_issuesource (
    r_issuesource_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    r_issuesystem_id numeric(10,0) NOT NULL,
    r_issueproject_id numeric(10,0) NOT NULL,
    r_issueuser_id numeric(10,0) NOT NULL,
    statisticsinfo character varying(60),
    profileinfo character varying(60),
    CONSTRAINT r_issuesource_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_issuesource OWNER TO adempiere;

--
-- Name: r_issuestatus; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_issuestatus (
    r_issuestatus_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_issuestatus_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_issuestatus OWNER TO adempiere;

--
-- Name: r_issuesystem; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_issuesystem (
    r_issuesystem_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    dbaddress character varying(255) NOT NULL,
    statisticsinfo character varying(60),
    profileinfo character varying(60),
    systemstatus character(1) NOT NULL,
    a_asset_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_issuesystem_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_issuesystem OWNER TO adempiere;

--
-- Name: r_issueuser; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_issueuser (
    r_issueuser_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    username character varying(60) NOT NULL,
    description character varying(255),
    ad_user_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_issueuser_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_issueuser OWNER TO adempiere;

--
-- Name: r_mailtext; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_mailtext (
    r_mailtext_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    ishtml character(1) DEFAULT 'N'::bpchar NOT NULL,
    mailheader character varying(2000),
    mailtext character varying(2000) NOT NULL,
    mailtext2 character varying(2000),
    mailtext3 character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_mailtext_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT r_mailtext_ishtml_check CHECK ((ishtml = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_mailtext OWNER TO adempiere;

--
-- Name: r_mailtext_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_mailtext_trl (
    r_mailtext_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    mailheader character varying(2000),
    mailtext character varying(2000) NOT NULL,
    mailtext2 character varying(2000),
    mailtext3 character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_mailtext_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT r_mailtext_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_mailtext_trl OWNER TO adempiere;

--
-- Name: r_request; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_request (
    r_request_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    r_requesttype_id numeric(10,0) NOT NULL,
    r_group_id numeric(10,0),
    r_category_id numeric(10,0),
    r_status_id numeric(10,0),
    r_resolution_id numeric(10,0),
    r_requestrelated_id numeric(10,0),
    priority character(1) NOT NULL,
    priorityuser character(1),
    duetype character(1) NOT NULL,
    summary character varying(2000) NOT NULL,
    confidentialtype character(1) DEFAULT 'C'::bpchar NOT NULL,
    isescalated character(1) DEFAULT 'N'::bpchar NOT NULL,
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    salesrep_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0),
    datelastaction timestamp without time zone,
    datelastalert timestamp without time zone,
    lastresult character varying(2000),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    isinvoiced character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_bpartner_id numeric(10,0),
    ad_user_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_order_id numeric(10,0),
    c_invoice_id numeric(10,0),
    c_payment_id numeric(10,0),
    m_product_id numeric(10,0),
    c_project_id numeric(10,0),
    a_asset_id numeric(10,0),
    m_inout_id numeric(10,0),
    m_rma_id numeric(10,0),
    ad_table_id numeric(10,0),
    record_id numeric(10,0),
    requestamt numeric DEFAULT 0 NOT NULL,
    r_mailtext_id numeric(10,0),
    result character varying(2000),
    confidentialtypeentry character(1) NOT NULL,
    r_standardresponse_id numeric(10,0),
    nextaction character(1),
    datenextaction timestamp without time zone,
    starttime timestamp without time zone,
    endtime timestamp without time zone,
    qtyspent numeric DEFAULT 0,
    qtyinvoiced numeric DEFAULT 0,
    m_productspent_id numeric(10,0),
    c_activity_id numeric(10,0),
    startdate timestamp without time zone,
    closedate timestamp without time zone,
    c_invoicerequest_id numeric(10,0),
    m_changerequest_id numeric(10,0),
    taskstatus character(1),
    qtyplan numeric,
    datecompleteplan timestamp without time zone,
    datestartplan timestamp without time zone,
    m_fixchangenotice_id numeric(10,0),
    c_projectphase_id numeric(10,0),
    c_projecttask_id numeric(10,0),
    user1_id numeric(10,0) DEFAULT NULL::numeric,
    user2_id numeric(10,0) DEFAULT NULL::numeric,
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    c_orderline_id numeric(10,0),
    c_invoiceline_id numeric(10,0),
    dd_order_id numeric(10,0),
    dd_orderline_id numeric(10,0),
    pp_order_id numeric(10,0),
    pp_cost_collector_id numeric(10,0),
    m_requisition_id numeric(10,0),
    m_requisitionline_id numeric(10,0),
    ad_orgtrx_id numeric(10,0) DEFAULT NULL::numeric,
    m_inoutline_id numeric(10,0),
    m_rmaline_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_request_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT r_request_isescalated_check CHECK ((isescalated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT r_request_isinvoiced_check CHECK ((isinvoiced = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT r_request_isselfservice_check CHECK ((isselfservice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT r_request_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_request OWNER TO adempiere;

--
-- Name: r_request_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.r_request_v AS
 SELECT r_request.r_request_id,
    r_request.ad_client_id,
    r_request.ad_org_id,
    r_request.isactive,
    r_request.created,
    r_request.createdby,
    r_request.updated,
    r_request.updatedby,
    r_request.documentno,
    r_request.r_requesttype_id,
    r_request.r_group_id,
    r_request.r_category_id,
    r_request.r_status_id,
    r_request.r_resolution_id,
    r_request.r_requestrelated_id,
    r_request.priority,
    r_request.priorityuser,
    r_request.duetype,
    r_request.summary,
    r_request.confidentialtype,
    r_request.isescalated,
    r_request.isselfservice,
    r_request.salesrep_id,
    r_request.ad_role_id,
    r_request.datelastaction,
    r_request.datelastalert,
    r_request.lastresult,
    r_request.processed,
    r_request.isinvoiced,
    r_request.c_bpartner_id,
    r_request.ad_user_id,
    r_request.c_campaign_id,
    r_request.c_order_id,
    r_request.c_invoice_id,
    r_request.c_payment_id,
    r_request.m_product_id,
    r_request.c_project_id,
    r_request.a_asset_id,
    r_request.m_inout_id,
    r_request.m_rma_id,
    r_request.ad_table_id,
    r_request.record_id,
    r_request.requestamt,
    r_request.r_mailtext_id,
    r_request.result,
    r_request.confidentialtypeentry,
    r_request.r_standardresponse_id,
    r_request.nextaction,
    r_request.datenextaction,
    r_request.starttime,
    r_request.endtime,
    r_request.qtyspent,
    r_request.qtyinvoiced,
    r_request.m_productspent_id,
    r_request.c_activity_id,
    r_request.startdate,
    r_request.closedate,
    r_request.c_invoicerequest_id,
    r_request.m_changerequest_id,
    r_request.taskstatus,
    r_request.qtyplan,
    r_request.datecompleteplan,
    r_request.datestartplan,
    r_request.m_fixchangenotice_id
   FROM adempiere.r_request
  WHERE ((r_request.isactive = 'Y'::bpchar) AND (r_request.processed = 'N'::bpchar) AND (adempiere.getdate() > r_request.datenextaction));


ALTER TABLE adempiere.r_request_v OWNER TO adempiere;

--
-- Name: r_requestaction; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_requestaction (
    r_requestaction_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    r_request_id numeric(10,0) NOT NULL,
    r_group_id numeric(10,0),
    r_category_id numeric(10,0),
    r_status_id numeric(10,0),
    r_resolution_id numeric(10,0),
    salesrep_id numeric(10,0),
    ad_role_id numeric(10,0),
    isescalated character(1),
    isinvoiced character(1),
    confidentialtype character(1),
    isselfservice character(1),
    priority character(1),
    priorityuser character(1),
    c_bpartner_id numeric(10,0),
    ad_user_id numeric(10,0),
    c_order_id numeric(10,0),
    c_invoice_id numeric(10,0),
    c_payment_id numeric(10,0),
    m_product_id numeric(10,0),
    c_project_id numeric(10,0),
    summary character varying(2000),
    datenextaction timestamp without time zone,
    c_activity_id numeric(10,0),
    r_requesttype_id numeric(10,0),
    a_asset_id numeric(10,0),
    m_inout_id numeric(10,0),
    m_rma_id numeric(10,0),
    nullcolumns character varying(255),
    taskstatus character(1),
    datecompleteplan timestamp without time zone,
    qtyplan numeric,
    qtyspent numeric,
    startdate timestamp without time zone,
    enddate timestamp without time zone,
    datestartplan timestamp without time zone,
    qtyinvoiced numeric,
    m_productspent_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_requestaction_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_requestaction OWNER TO adempiere;

--
-- Name: r_requestprocessor; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_requestprocessor (
    r_requestprocessor_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    frequency numeric(10,0) NOT NULL,
    frequencytype character(1) NOT NULL,
    datelastrun timestamp without time zone,
    datenextrun timestamp without time zone,
    processing character(1),
    overduealertdays numeric(10,0) NOT NULL,
    overdueassigndays numeric(10,0) NOT NULL,
    supervisor_id numeric(10,0) NOT NULL,
    keeplogdays numeric(10,0) NOT NULL,
    reminddays numeric(10,0) DEFAULT 7 NOT NULL,
    inactivityalertdays numeric(10,0) DEFAULT 0 NOT NULL,
    r_requesttype_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_requestprocessor_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_requestprocessor OWNER TO adempiere;

--
-- Name: r_requestprocessor_route; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_requestprocessor_route (
    r_requestprocessor_route_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    r_requestprocessor_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    keyword character varying(60),
    ad_user_id numeric(10,0) NOT NULL,
    r_requesttype_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_requestprocessor_route_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_requestprocessor_route OWNER TO adempiere;

--
-- Name: r_requestprocessorlog; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_requestprocessorlog (
    r_requestprocessor_id numeric(10,0) NOT NULL,
    r_requestprocessorlog_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    iserror character(1) DEFAULT 'N'::bpchar NOT NULL,
    summary character varying(2000),
    reference character varying(60),
    description character varying(255),
    textmsg character varying(2000),
    binarydata bytea,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.r_requestprocessorlog OWNER TO adempiere;

--
-- Name: r_requesttype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_requesttype (
    r_requesttype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    isselfservice character(1) DEFAULT 'Y'::bpchar NOT NULL,
    duedatetolerance numeric(10,0) DEFAULT 7 NOT NULL,
    isemailwhenoverdue character(1) DEFAULT 'N'::bpchar NOT NULL,
    isemailwhendue character(1) DEFAULT 'N'::bpchar NOT NULL,
    isinvoiced character(1),
    autoduedatedays numeric(10,0),
    confidentialtype character(1) DEFAULT 'C'::bpchar NOT NULL,
    isautochangerequest character(1) DEFAULT 'N'::bpchar NOT NULL,
    isconfidentialinfo character(1) DEFAULT 'N'::bpchar NOT NULL,
    r_statuscategory_id numeric(10,0) NOT NULL,
    isindexed character(1) DEFAULT 'Y'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_requesttype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_requesttype OWNER TO adempiere;

--
-- Name: r_requesttypeupdates; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_requesttypeupdates (
    ad_user_id numeric(10,0) NOT NULL,
    r_requesttype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_requesttypeupdates_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT r_requesttypeupdates_isselfservice_check CHECK ((isselfservice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_requesttypeupdates OWNER TO adempiere;

--
-- Name: r_requestupdate; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_requestupdate (
    r_requestupdate_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    r_request_id numeric(10,0) NOT NULL,
    confidentialtypeentry character(1) NOT NULL,
    starttime timestamp without time zone,
    endtime timestamp without time zone,
    qtyspent numeric DEFAULT 0,
    qtyinvoiced numeric DEFAULT 0,
    m_productspent_id numeric(10,0),
    result character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_requestupdate_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_requestupdate OWNER TO adempiere;

--
-- Name: r_requestupdates; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_requestupdates (
    ad_user_id numeric(10,0) NOT NULL,
    r_request_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_requestupdates_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT r_requestupdates_isselfservice_check CHECK ((isselfservice = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_requestupdates OWNER TO adempiere;

--
-- Name: r_resolution; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_resolution (
    r_resolution_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_resolution_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_resolution OWNER TO adempiere;

--
-- Name: r_standardresponse; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_standardresponse (
    r_standardresponse_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    responsetext character varying(2000) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_standardresponse_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_standardresponse OWNER TO adempiere;

--
-- Name: r_status; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_status (
    r_status_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    isopen character(1) DEFAULT 'N'::bpchar NOT NULL,
    isclosed character(1) DEFAULT 'N'::bpchar NOT NULL,
    value character varying(40) NOT NULL,
    next_status_id numeric(10,0),
    update_status_id numeric(10,0),
    timeoutdays numeric(10,0),
    iswebcanupdate character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isfinalclose character(1) DEFAULT 'N'::bpchar NOT NULL,
    seqno numeric(10,0) DEFAULT 0 NOT NULL,
    r_statuscategory_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_status_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_status OWNER TO adempiere;

--
-- Name: r_statuscategory; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.r_statuscategory (
    r_statuscategory_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT r_statuscategory_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT r_statuscategory_isdefault_check CHECK ((isdefault = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.r_statuscategory OWNER TO adempiere;

--
-- Name: rv_allocation; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_allocation AS
 SELECT h.c_allocationhdr_id,
    h.ad_client_id,
    h.ad_org_id,
    h.isactive,
    h.created,
    h.createdby,
    h.updated,
    h.updatedby,
    h.documentno,
    h.description,
    h.datetrx,
    h.dateacct,
    h.c_currency_id,
    h.approvalamt,
    h.ismanual,
    h.docstatus,
    h.docaction,
    h.processed,
    l.c_allocationline_id,
    l.c_invoice_id,
    l.c_bpartner_id,
    l.c_order_id,
    l.c_payment_id,
    l.c_cashline_id,
    l.amount,
    l.discountamt,
    l.writeoffamt,
    l.overunderamt
   FROM (adempiere.c_allocationhdr h
     JOIN adempiere.c_allocationline l ON ((h.c_allocationhdr_id = l.c_allocationhdr_id)));


ALTER TABLE adempiere.rv_allocation OWNER TO adempiere;

--
-- Name: rv_asset_customer; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_asset_customer AS
 SELECT a.a_asset_id,
    a.ad_client_id,
    a.ad_org_id,
    a.isactive,
    a.created,
    a.createdby,
    a.updated,
    a.updatedby,
    a.value,
    a.name,
    a.description,
    a.help,
    a.a_asset_group_id,
    a.m_product_id,
    a.serno,
    a.lot,
    a.versionno,
    a.guaranteedate,
    a.assetservicedate,
    a.c_bpartner_id,
    a.c_bpartner_location_id,
    a.ad_user_id,
    ( SELECT count(*) AS count
           FROM adempiere.a_asset_delivery ad
          WHERE (a.a_asset_id = ad.a_asset_id)) AS deliverycount
   FROM adempiere.a_asset a
  WHERE (a.c_bpartner_id IS NOT NULL);


ALTER TABLE adempiere.rv_asset_customer OWNER TO adempiere;

--
-- Name: rv_asset_delivery; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_asset_delivery AS
 SELECT ad.a_asset_delivery_id,
    ad.ad_client_id,
    ad.ad_org_id,
    ad.isactive,
    ad.created,
    ad.createdby,
    ad.updated,
    ad.updatedby,
    a.a_asset_id,
    a.a_asset_group_id,
    a.m_product_id,
    a.guaranteedate,
    a.assetservicedate,
    a.c_bpartner_id,
    ad.ad_user_id,
    ad.movementdate,
    ad.serno,
    ad.lot,
    ad.versionno,
    ad.m_inoutline_id,
    ad.email,
    ad.messageid,
    ad.deliveryconfirmation,
    ad.url,
    ad.remote_addr,
    ad.remote_host,
    ad.referrer,
    ad.description
   FROM (adempiere.a_asset_delivery ad
     JOIN adempiere.a_asset a ON ((a.a_asset_id = ad.a_asset_id)));


ALTER TABLE adempiere.rv_asset_delivery OWNER TO adempiere;

--
-- Name: rv_asset_summonth; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_asset_summonth AS
 SELECT a.ad_client_id,
    a.ad_org_id,
    a.isactive,
    a.created,
    a.createdby,
    a.updated,
    a.updatedby,
    a.a_asset_id,
    a.a_asset_group_id,
    a.m_product_id,
    a.value,
    a.name,
    a.description,
    a.help,
    a.guaranteedate,
    a.assetservicedate,
    a.c_bpartner_id,
    a.ad_user_id,
    a.serno,
    a.lot,
    a.versionno,
    adempiere.firstof((ad.movementdate)::timestamp with time zone, 'MM'::character varying) AS movementdate,
    count(*) AS deliverycount
   FROM (adempiere.a_asset a
     JOIN adempiere.a_asset_delivery ad ON ((a.a_asset_id = ad.a_asset_id)))
  GROUP BY a.ad_client_id, a.ad_org_id, a.isactive, a.created, a.createdby, a.updated, a.updatedby, a.a_asset_id, a.a_asset_group_id, a.m_product_id, a.value, a.name, a.description, a.help, a.guaranteedate, a.assetservicedate, a.c_bpartner_id, a.ad_user_id, a.serno, a.lot, a.versionno, (adempiere.firstof((ad.movementdate)::timestamp with time zone, 'MM'::character varying));


ALTER TABLE adempiere.rv_asset_summonth OWNER TO adempiere;

--
-- Name: rv_bpartner; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_bpartner AS
 SELECT bp.ad_client_id,
    bp.ad_org_id,
    bp.isactive,
    bp.created,
    bp.createdby,
    bp.updated,
    bp.updatedby,
    bp.c_bpartner_id,
    bp.value,
    bp.name,
    bp.name2,
    bp.description,
    bp.issummary,
    bp.c_bp_group_id,
    bp.isonetime,
    bp.isprospect,
    bp.isvendor,
    bp.iscustomer,
    bp.isemployee,
    bp.issalesrep,
    bp.referenceno,
    bp.duns,
    bp.url,
    bp.ad_language,
    bp.taxid,
    bp.istaxexempt,
    bp.c_invoiceschedule_id,
    bp.rating,
    bp.salesvolume,
    bp.numberemployees,
    bp.naics,
    bp.firstsale,
    bp.acqusitioncost,
    bp.potentiallifetimevalue,
    bp.actuallifetimevalue,
    bp.shareofcustomer,
    bp.paymentrule,
    bp.so_creditlimit,
    bp.so_creditused,
    (bp.so_creditused - bp.so_creditlimit) AS so_creditavailable,
    bp.c_paymentterm_id,
    bp.m_pricelist_id,
    bp.m_discountschema_id,
    bp.c_dunning_id,
    bp.isdiscountprinted,
    bp.so_description,
    bp.poreference,
    bp.paymentrulepo,
    bp.po_pricelist_id,
    bp.po_discountschema_id,
    bp.po_paymentterm_id,
    bp.documentcopies,
    bp.c_greeting_id,
    bp.invoicerule,
    bp.deliveryrule,
    bp.freightcostrule,
    bp.deliveryviarule,
    bp.salesrep_id,
    bp.sendemail,
    bp.bpartner_parent_id,
    bp.invoice_printformat_id,
    bp.socreditstatus,
    bp.shelflifeminpct,
    bp.ad_orgbp_id,
    bp.flatdiscount,
    bp.totalopenbalance,
    c.ad_user_id,
    c.name AS contactname,
    c.description AS contactdescription,
    c.email,
    c.supervisor_id,
    c.emailuser,
    c.c_greeting_id AS bpcontactgreeting,
    c.title,
    c.comments,
    c.phone,
    c.phone2,
    c.fax,
    c.lastcontact,
    c.lastresult,
    c.birthday,
    c.ad_orgtrx_id,
    c.emailverify,
    c.ldapuser,
    c.emailverifydate,
    c.notificationtype,
    l.c_bpartner_location_id,
    a.postal,
    a.city,
    a.address1,
    a.address2,
    a.address3,
    a.c_region_id,
    COALESCE(r.name, a.regionname) AS regionname,
    a.c_country_id,
    cc.name AS countryname
   FROM (((((adempiere.c_bpartner bp
     LEFT JOIN adempiere.c_bpartner_location l ON (((bp.c_bpartner_id = l.c_bpartner_id) AND (l.isactive = 'Y'::bpchar))))
     LEFT JOIN adempiere.ad_user c ON (((bp.c_bpartner_id = c.c_bpartner_id) AND ((c.c_bpartner_location_id IS NULL) OR (c.c_bpartner_location_id = l.c_bpartner_location_id)) AND (c.isactive = 'Y'::bpchar))))
     LEFT JOIN adempiere.c_location a ON ((l.c_location_id = a.c_location_id)))
     LEFT JOIN adempiere.c_region r ON ((a.c_region_id = r.c_region_id)))
     JOIN adempiere.c_country cc ON ((a.c_country_id = cc.c_country_id)));


ALTER TABLE adempiere.rv_bpartner OWNER TO adempiere;

--
-- Name: rv_bpartneropen; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_bpartneropen AS
 SELECT i.ad_client_id,
    i.ad_org_id,
    i.isactive,
    i.created,
    i.createdby,
    i.updated,
    i.updatedby,
    i.c_bpartner_id,
    i.c_currency_id,
    (i.grandtotal * i.multiplierap) AS amt,
    (adempiere.invoiceopen(i.c_invoice_id, i.c_invoicepayschedule_id) * i.multiplierap) AS openamt,
    i.dateinvoiced AS datedoc,
    COALESCE(adempiere.daysbetween(adempiere.getdate(), (ips.duedate)::timestamp with time zone), adempiere.paymenttermduedays(i.c_paymentterm_id, (i.dateinvoiced)::timestamp with time zone, adempiere.getdate())) AS daysdue,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id
   FROM (adempiere.c_invoice_v i
     LEFT JOIN adempiere.c_invoicepayschedule ips ON ((i.c_invoicepayschedule_id = ips.c_invoicepayschedule_id)))
  WHERE ((i.ispaid = 'N'::bpchar) AND (i.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar])))
UNION
 SELECT p.ad_client_id,
    p.ad_org_id,
    p.isactive,
    p.created,
    p.createdby,
    p.updated,
    p.updatedby,
    p.c_bpartner_id,
    p.c_currency_id,
    ((p.payamt * (p.multiplierap)::numeric) * ('-1'::integer)::numeric) AS amt,
    ((adempiere.paymentavailable(p.c_payment_id) * (p.multiplierap)::numeric) * ('-1'::integer)::numeric) AS openamt,
    p.datetrx AS datedoc,
    NULL::integer AS daysdue,
    p.c_campaign_id,
    p.c_project_id,
    p.c_activity_id
   FROM adempiere.c_payment_v p
  WHERE ((p.isallocated = 'N'::bpchar) AND (p.c_bpartner_id IS NOT NULL) AND (p.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar])));


ALTER TABLE adempiere.rv_bpartneropen OWNER TO adempiere;

--
-- Name: rv_c_bankaccount; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_bankaccount AS
 SELECT c_bankaccount.c_bankaccount_id,
    c_bankaccount.ad_client_id,
    c_bankaccount.ad_org_id,
    c_bankaccount.isactive,
    c_bankaccount.created,
    c_bankaccount.createdby,
    c_bankaccount.updated,
    c_bankaccount.updatedby,
    c_bankaccount.c_bank_id,
    c_bankaccount.c_currency_id,
    c_bankaccount.bankaccounttype,
    c_bankaccount.accountno,
    c_bankaccount.currentbalance,
    c_bankaccount.creditlimit,
    c_bankaccount.isdefault,
    c_bankaccount.iban,
    c_bankaccount.description,
    c_bankaccount.bban,
    c_bankaccount.paymentexportclass,
    114 AS c_conversiontype_id,
    adempiere.getdate() AS datetrx
   FROM adempiere.c_bankaccount;


ALTER TABLE adempiere.rv_c_bankaccount OWNER TO adempiere;

--
-- Name: rv_c_bankstatement; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_bankstatement AS
 SELECT bsl.c_bankstatementline_id,
    bsl.ad_client_id,
    bsl.ad_org_id,
    bsl.isactive,
    bsl.created,
    bsl.createdby,
    bsl.updated,
    bsl.updatedby,
    bsl.line,
    bsl.description,
    bsl.isreversal,
    bsl.c_payment_id,
    bsl.valutadate,
    bsl.dateacct,
    bsl.c_currency_id,
    bsl.trxamt,
    bsl.stmtamt,
    bsl.c_charge_id,
    bsl.chargeamt,
    bsl.interestamt,
    bsl.memo,
    bsl.referenceno,
    bsl.ismanual,
    bsl.efttrxid,
    bsl.efttrxtype,
    bsl.eftmemo,
    bsl.eftpayee,
    bsl.eftpayeeaccount,
    bsl.createpayment,
    bsl.statementlinedate,
    bsl.eftstatementlinedate,
    bsl.eftvalutadate,
    bsl.eftreference,
    bsl.eftcurrency,
    bsl.eftamt,
    bsl.eftcheckno,
    bsl.matchstatement,
    bsl.c_bpartner_id,
    bsl.c_invoice_id,
    bsl.processed,
    bs.c_bankstatement_id,
    bs.c_bankaccount_id,
    bs.name,
    bs.description AS note,
    bs.docstatus,
    bs.beginningbalance,
    bs.statementdifference,
    bs.endingbalance,
    bs.statementdate,
    bs.eftstatementdate,
    bs.eftstatementreference,
    ba.c_bank_id,
    p.datetrx,
    p.c_doctype_id,
    p.tendertype,
    p.payamt,
    o.c_order_id,
    o.dateordered,
    o.grandtotal,
    o.c_pos_id,
    o.salesrep_id,
    o.amountrefunded,
    o.amounttendered,
    i.dateinvoiced,
    i.ispaid,
    i.grandtotal AS invoiceamt
   FROM (((((adempiere.c_bankstatementline bsl
     JOIN adempiere.c_bankstatement bs ON ((bsl.c_bankstatement_id = bs.c_bankstatement_id)))
     LEFT JOIN adempiere.c_bankaccount ba ON ((bs.c_bankaccount_id = ba.c_bankaccount_id)))
     LEFT JOIN adempiere.c_payment p ON ((bsl.c_payment_id = p.c_payment_id)))
     LEFT JOIN adempiere.c_order o ON ((p.c_order_id = o.c_order_id)))
     LEFT JOIN adempiere.c_invoice i ON ((bsl.c_invoice_id = i.c_invoice_id)));


ALTER TABLE adempiere.rv_c_bankstatement OWNER TO adempiere;

--
-- Name: rv_c_invoice; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_invoice AS
 SELECT i.c_invoice_id,
    i.ad_client_id,
    i.ad_org_id,
    i.isactive,
    i.created,
    i.createdby,
    i.updated,
    i.updatedby,
    i.issotrx,
    i.documentno,
    i.docstatus,
    i.docaction,
    i.isprinted,
    i.isdiscountprinted,
    i.processing,
    i.processed,
    i.istransferred,
    i.ispaid,
    i.c_doctype_id,
    i.c_doctypetarget_id,
    i.c_order_id,
    i.description,
    i.isapproved,
    i.salesrep_id,
    i.dateinvoiced,
    i.dateprinted,
    i.dateacct,
    i.c_bpartner_id,
    i.c_bpartner_location_id,
    i.ad_user_id,
    b.c_bp_group_id,
    i.poreference,
    i.dateordered,
    i.c_currency_id,
    i.c_conversiontype_id,
    i.paymentrule,
    i.c_paymentterm_id,
    i.m_pricelist_id,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id,
    i.ispayschedulevalid,
    i.invoicecollectiontype,
    loc.c_country_id,
    loc.c_region_id,
    loc.postal,
    loc.city,
    i.c_charge_id,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN (i.chargeamt * ('-1'::integer)::numeric)
            ELSE i.chargeamt
        END AS chargeamt,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN (i.totallines * ('-1'::integer)::numeric)
            ELSE i.totallines
        END AS totallines,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN (i.grandtotal * ('-1'::integer)::numeric)
            ELSE i.grandtotal
        END AS grandtotal,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN '-1'::integer
            ELSE 1
        END AS multiplier
   FROM ((((adempiere.c_invoice i
     JOIN adempiere.c_doctype d ON ((i.c_doctype_id = d.c_doctype_id)))
     JOIN adempiere.c_bpartner b ON ((i.c_bpartner_id = b.c_bpartner_id)))
     JOIN adempiere.c_bpartner_location bpl ON ((i.c_bpartner_location_id = bpl.c_bpartner_location_id)))
     JOIN adempiere.c_location loc ON ((bpl.c_location_id = loc.c_location_id)));


ALTER TABLE adempiere.rv_c_invoice OWNER TO adempiere;

--
-- Name: rv_c_invoiceline; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_invoiceline AS
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.isactive,
    il.created,
    il.createdby,
    il.updated,
    il.updatedby,
    il.c_invoiceline_id,
    i.c_invoice_id,
    i.salesrep_id,
    i.c_bpartner_id,
    i.c_bp_group_id,
    il.m_product_id,
    p.m_product_category_id,
    i.dateinvoiced,
    i.dateacct,
    i.issotrx,
    i.c_doctype_id,
    i.docstatus,
    i.ispaid,
    il.c_campaign_id,
    il.c_project_id,
    il.c_activity_id,
    il.c_projectphase_id,
    il.c_projecttask_id,
    (il.qtyinvoiced * (i.multiplier)::numeric) AS qtyinvoiced,
    (il.qtyentered * (i.multiplier)::numeric) AS qtyentered,
    il.m_attributesetinstance_id,
    adempiere.productattribute(il.m_attributesetinstance_id) AS productattribute,
    pasi.m_attributeset_id,
    pasi.m_lot_id,
    pasi.guaranteedate,
    pasi.lot,
    pasi.serno,
    il.pricelist,
    il.priceactual,
    il.pricelimit,
    il.priceentered,
        CASE
            WHEN (il.pricelist = (0)::numeric) THEN (0)::numeric
            ELSE round((((il.pricelist - il.priceactual) / il.pricelist) * (100)::numeric), 2)
        END AS discount,
        CASE
            WHEN (il.pricelimit = (0)::numeric) THEN (0)::numeric
            ELSE round((((il.priceactual - il.pricelimit) / il.pricelimit) * (100)::numeric), 2)
        END AS margin,
        CASE
            WHEN (il.pricelimit = (0)::numeric) THEN (0)::numeric
            ELSE ((il.priceactual - il.pricelimit) * il.qtyinvoiced)
        END AS marginamt,
    round(((i.multiplier)::numeric * il.linenetamt), 2) AS linenetamt,
    round((((i.multiplier)::numeric * il.pricelist) * il.qtyinvoiced), 2) AS linelistamt,
        CASE
            WHEN (COALESCE(il.pricelimit, (0)::numeric) = (0)::numeric) THEN round(((i.multiplier)::numeric * il.linenetamt), 2)
            ELSE round((((i.multiplier)::numeric * il.pricelimit) * il.qtyinvoiced), 2)
        END AS linelimitamt,
    round(((((i.multiplier)::numeric * il.pricelist) * il.qtyinvoiced) - il.linenetamt), 2) AS linediscountamt,
        CASE
            WHEN (COALESCE(il.pricelimit, (0)::numeric) = (0)::numeric) THEN (0)::numeric
            ELSE round((((i.multiplier)::numeric * il.linenetamt) - (il.pricelimit * il.qtyinvoiced)), 2)
        END AS lineoverlimitamt
   FROM (((adempiere.rv_c_invoice i
     JOIN adempiere.c_invoiceline il ON ((i.c_invoice_id = il.c_invoice_id)))
     LEFT JOIN adempiere.m_product p ON ((il.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.m_attributesetinstance pasi ON ((il.m_attributesetinstance_id = pasi.m_attributesetinstance_id)));


ALTER TABLE adempiere.rv_c_invoiceline OWNER TO adempiere;

--
-- Name: rv_c_invoice_customerprodqtr; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_invoice_customerprodqtr AS
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.c_bpartner_id,
    il.m_product_category_id,
    adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'Q'::character varying) AS dateinvoiced,
    sum(il.linenetamt) AS linenetamt,
    sum(il.linelistamt) AS linelistamt,
    sum(il.linelimitamt) AS linelimitamt,
    sum(il.linediscountamt) AS linediscountamt,
        CASE
            WHEN (sum(il.linelistamt) = (0)::numeric) THEN (0)::numeric
            ELSE round((((sum(il.linelistamt) - sum(il.linenetamt)) / sum(il.linelistamt)) * (100)::numeric), 2)
        END AS linediscount,
    sum(il.lineoverlimitamt) AS lineoverlimitamt,
        CASE
            WHEN (sum(il.linenetamt) = (0)::numeric) THEN (0)::numeric
            ELSE ((100)::numeric - round((((sum(il.linenetamt) - sum(il.lineoverlimitamt)) / sum(il.linenetamt)) * (100)::numeric), 2))
        END AS lineoverlimit,
    sum(il.qtyinvoiced) AS qtyinvoiced,
    il.issotrx
   FROM adempiere.rv_c_invoiceline il
  GROUP BY il.ad_client_id, il.ad_org_id, il.c_bpartner_id, il.m_product_category_id, (adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'Q'::character varying)), il.issotrx;


ALTER TABLE adempiere.rv_c_invoice_customerprodqtr OWNER TO adempiere;

--
-- Name: rv_c_invoice_customervendqtr; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_invoice_customervendqtr AS
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.c_bpartner_id,
    po.c_bpartner_id AS vendor_id,
    adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'Q'::character varying) AS dateinvoiced,
    sum(il.linenetamt) AS linenetamt,
    sum(il.linelistamt) AS linelistamt,
    sum(il.linelimitamt) AS linelimitamt,
    sum(il.linediscountamt) AS linediscountamt,
        CASE
            WHEN (sum(il.linelistamt) = (0)::numeric) THEN (0)::numeric
            ELSE round((((sum(il.linelistamt) - sum(il.linenetamt)) / sum(il.linelistamt)) * (100)::numeric), 2)
        END AS linediscount,
    sum(il.lineoverlimitamt) AS lineoverlimitamt,
        CASE
            WHEN (sum(il.linenetamt) = (0)::numeric) THEN (0)::numeric
            ELSE ((100)::numeric - round((((sum(il.linenetamt) - sum(il.lineoverlimitamt)) / sum(il.linenetamt)) * (100)::numeric), 2))
        END AS lineoverlimit,
    sum(il.qtyinvoiced) AS qtyinvoiced
   FROM (adempiere.rv_c_invoiceline il
     JOIN adempiere.m_product_po po ON ((il.m_product_id = po.m_product_id)))
  WHERE (il.issotrx = 'Y'::bpchar)
  GROUP BY il.ad_client_id, il.ad_org_id, il.c_bpartner_id, po.c_bpartner_id, (adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'Q'::character varying));


ALTER TABLE adempiere.rv_c_invoice_customervendqtr OWNER TO adempiere;

--
-- Name: rv_c_invoice_day; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_invoice_day AS
 SELECT rv_c_invoiceline.ad_client_id,
    rv_c_invoiceline.ad_org_id,
    rv_c_invoiceline.salesrep_id,
    adempiere.firstof((rv_c_invoiceline.dateinvoiced)::timestamp with time zone, 'DD'::character varying) AS dateinvoiced,
    sum(rv_c_invoiceline.linenetamt) AS linenetamt,
    sum(rv_c_invoiceline.linelistamt) AS linelistamt,
    sum(rv_c_invoiceline.linelimitamt) AS linelimitamt,
    sum(rv_c_invoiceline.linediscountamt) AS linediscountamt,
        CASE
            WHEN (sum(rv_c_invoiceline.linelistamt) = (0)::numeric) THEN (0)::numeric
            ELSE round((((sum(rv_c_invoiceline.linelistamt) - sum(rv_c_invoiceline.linenetamt)) / sum(rv_c_invoiceline.linelistamt)) * (100)::numeric), 2)
        END AS linediscount,
    sum(rv_c_invoiceline.lineoverlimitamt) AS lineoverlimitamt,
        CASE
            WHEN (sum(rv_c_invoiceline.linenetamt) = (0)::numeric) THEN (0)::numeric
            ELSE ((100)::numeric - round((((sum(rv_c_invoiceline.linenetamt) - sum(rv_c_invoiceline.lineoverlimitamt)) / sum(rv_c_invoiceline.linenetamt)) * (100)::numeric), 2))
        END AS lineoverlimit,
    rv_c_invoiceline.issotrx
   FROM adempiere.rv_c_invoiceline
  GROUP BY rv_c_invoiceline.ad_client_id, rv_c_invoiceline.ad_org_id, rv_c_invoiceline.salesrep_id, (adempiere.firstof((rv_c_invoiceline.dateinvoiced)::timestamp with time zone, 'DD'::character varying)), rv_c_invoiceline.issotrx;


ALTER TABLE adempiere.rv_c_invoice_day OWNER TO adempiere;

--
-- Name: rv_c_invoice_month; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_invoice_month AS
 SELECT rv_c_invoiceline.ad_client_id,
    rv_c_invoiceline.ad_org_id,
    rv_c_invoiceline.salesrep_id,
    adempiere.firstof((rv_c_invoiceline.dateinvoiced)::timestamp with time zone, 'MM'::character varying) AS dateinvoiced,
    sum(rv_c_invoiceline.linenetamt) AS linenetamt,
    sum(rv_c_invoiceline.linelistamt) AS linelistamt,
    sum(rv_c_invoiceline.linelimitamt) AS linelimitamt,
    sum(rv_c_invoiceline.linediscountamt) AS linediscountamt,
        CASE
            WHEN (sum(rv_c_invoiceline.linelistamt) = (0)::numeric) THEN (0)::numeric
            ELSE round((((sum(rv_c_invoiceline.linelistamt) - sum(rv_c_invoiceline.linenetamt)) / sum(rv_c_invoiceline.linelistamt)) * (100)::numeric), 2)
        END AS linediscount,
    sum(rv_c_invoiceline.lineoverlimitamt) AS lineoverlimitamt,
        CASE
            WHEN (sum(rv_c_invoiceline.linenetamt) = (0)::numeric) THEN (0)::numeric
            ELSE ((100)::numeric - round((((sum(rv_c_invoiceline.linenetamt) - sum(rv_c_invoiceline.lineoverlimitamt)) / sum(rv_c_invoiceline.linenetamt)) * (100)::numeric), 2))
        END AS lineoverlimit,
    rv_c_invoiceline.issotrx
   FROM adempiere.rv_c_invoiceline
  GROUP BY rv_c_invoiceline.ad_client_id, rv_c_invoiceline.ad_org_id, rv_c_invoiceline.salesrep_id, (adempiere.firstof((rv_c_invoiceline.dateinvoiced)::timestamp with time zone, 'MM'::character varying)), rv_c_invoiceline.issotrx;


ALTER TABLE adempiere.rv_c_invoice_month OWNER TO adempiere;

--
-- Name: rv_c_invoice_prodmonth; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_invoice_prodmonth AS
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.m_product_category_id,
    adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'MM'::character varying) AS dateinvoiced,
    sum(il.linenetamt) AS linenetamt,
    sum(il.linelistamt) AS linelistamt,
    sum(il.linelimitamt) AS linelimitamt,
    sum(il.linediscountamt) AS linediscountamt,
        CASE
            WHEN (sum(il.linelistamt) = (0)::numeric) THEN (0)::numeric
            ELSE round((((sum(il.linelistamt) - sum(il.linenetamt)) / sum(il.linelistamt)) * (100)::numeric), 2)
        END AS linediscount,
    sum(il.lineoverlimitamt) AS lineoverlimitamt,
        CASE
            WHEN (sum(il.linenetamt) = (0)::numeric) THEN (0)::numeric
            ELSE ((100)::numeric - round((((sum(il.linenetamt) - sum(il.lineoverlimitamt)) / sum(il.linenetamt)) * (100)::numeric), 2))
        END AS lineoverlimit,
    sum(il.qtyinvoiced) AS qtyinvoiced,
    il.issotrx
   FROM adempiere.rv_c_invoiceline il
  GROUP BY il.ad_client_id, il.ad_org_id, il.m_product_category_id, (adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'MM'::character varying)), il.issotrx;


ALTER TABLE adempiere.rv_c_invoice_prodmonth OWNER TO adempiere;

--
-- Name: rv_c_invoice_productmonth; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_invoice_productmonth AS
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.m_product_id,
    adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'MM'::character varying) AS dateinvoiced,
    sum(il.linenetamt) AS linenetamt,
    sum(il.linelistamt) AS linelistamt,
    sum(il.linelimitamt) AS linelimitamt,
    sum(il.linediscountamt) AS linediscountamt,
        CASE
            WHEN (sum(il.linelistamt) = (0)::numeric) THEN (0)::numeric
            ELSE round((((sum(il.linelistamt) - sum(il.linenetamt)) / sum(il.linelistamt)) * (100)::numeric), 2)
        END AS linediscount,
    sum(il.lineoverlimitamt) AS lineoverlimitamt,
        CASE
            WHEN (sum(il.linenetamt) = (0)::numeric) THEN (0)::numeric
            ELSE ((100)::numeric - round((((sum(il.linenetamt) - sum(il.lineoverlimitamt)) / sum(il.linenetamt)) * (100)::numeric), 2))
        END AS lineoverlimit,
    sum(il.qtyinvoiced) AS qtyinvoiced,
    il.issotrx
   FROM adempiere.rv_c_invoiceline il
  GROUP BY il.ad_client_id, il.ad_org_id, il.m_product_id, (adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'MM'::character varying)), il.issotrx;


ALTER TABLE adempiere.rv_c_invoice_productmonth OWNER TO adempiere;

--
-- Name: rv_c_invoice_productqtr; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_invoice_productqtr AS
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.m_product_id,
    adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'Q'::character varying) AS dateinvoiced,
    sum(il.linenetamt) AS linenetamt,
    sum(il.linelistamt) AS linelistamt,
    sum(il.linelimitamt) AS linelimitamt,
    sum(il.linediscountamt) AS linediscountamt,
        CASE
            WHEN (sum(il.linelistamt) = (0)::numeric) THEN (0)::numeric
            ELSE round((((sum(il.linelistamt) - sum(il.linenetamt)) / sum(il.linelistamt)) * (100)::numeric), 2)
        END AS linediscount,
    sum(il.lineoverlimitamt) AS lineoverlimitamt,
        CASE
            WHEN (sum(il.linenetamt) = (0)::numeric) THEN (0)::numeric
            ELSE ((100)::numeric - round((((sum(il.linenetamt) - sum(il.lineoverlimitamt)) / sum(il.linenetamt)) * (100)::numeric), 2))
        END AS lineoverlimit,
    sum(il.qtyinvoiced) AS qtyinvoiced,
    il.issotrx
   FROM adempiere.rv_c_invoiceline il
  GROUP BY il.ad_client_id, il.ad_org_id, il.m_product_id, (adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'Q'::character varying)), il.issotrx;


ALTER TABLE adempiere.rv_c_invoice_productqtr OWNER TO adempiere;

--
-- Name: rv_c_invoice_prodweek; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_invoice_prodweek AS
 SELECT il.ad_client_id,
    il.ad_org_id,
    il.m_product_category_id,
    adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'DY'::character varying) AS dateinvoiced,
    sum(il.linenetamt) AS linenetamt,
    sum(il.linelistamt) AS linelistamt,
    sum(il.linelimitamt) AS linelimitamt,
    sum(il.linediscountamt) AS linediscountamt,
        CASE
            WHEN (sum(il.linelistamt) = (0)::numeric) THEN (0)::numeric
            ELSE round((((sum(il.linelistamt) - sum(il.linenetamt)) / sum(il.linelistamt)) * (100)::numeric), 2)
        END AS linediscount,
    sum(il.lineoverlimitamt) AS lineoverlimitamt,
        CASE
            WHEN (sum(il.linenetamt) = (0)::numeric) THEN (0)::numeric
            ELSE ((100)::numeric - round((((sum(il.linenetamt) - sum(il.lineoverlimitamt)) / sum(il.linenetamt)) * (100)::numeric), 2))
        END AS lineoverlimit,
    sum(il.qtyinvoiced) AS qtyinvoiced,
    il.issotrx
   FROM adempiere.rv_c_invoiceline il
  GROUP BY il.ad_client_id, il.ad_org_id, il.m_product_category_id, (adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'DY'::character varying)), il.issotrx;


ALTER TABLE adempiere.rv_c_invoice_prodweek OWNER TO adempiere;

--
-- Name: rv_c_invoice_vendormonth; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_invoice_vendormonth AS
 SELECT il.ad_client_id,
    il.ad_org_id,
    po.c_bpartner_id,
    il.m_product_category_id,
    adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'MM'::character varying) AS dateinvoiced,
    sum(il.linenetamt) AS linenetamt,
    sum(il.linelistamt) AS linelistamt,
    sum(il.linelimitamt) AS linelimitamt,
    sum(il.linediscountamt) AS linediscountamt,
        CASE
            WHEN (sum(il.linelistamt) = (0)::numeric) THEN (0)::numeric
            ELSE round((((sum(il.linelistamt) - sum(il.linenetamt)) / sum(il.linelistamt)) * (100)::numeric), 2)
        END AS linediscount,
    sum(il.lineoverlimitamt) AS lineoverlimitamt,
        CASE
            WHEN (sum(il.linenetamt) = (0)::numeric) THEN (0)::numeric
            ELSE ((100)::numeric - round((((sum(il.linenetamt) - sum(il.lineoverlimitamt)) / sum(il.linenetamt)) * (100)::numeric), 2))
        END AS lineoverlimit,
    sum(il.qtyinvoiced) AS qtyinvoiced
   FROM (adempiere.rv_c_invoiceline il
     JOIN adempiere.m_product_po po ON ((il.m_product_id = po.m_product_id)))
  WHERE (il.issotrx = 'Y'::bpchar)
  GROUP BY il.ad_client_id, il.ad_org_id, po.c_bpartner_id, il.m_product_category_id, (adempiere.firstof((il.dateinvoiced)::timestamp with time zone, 'MM'::character varying));


ALTER TABLE adempiere.rv_c_invoice_vendormonth OWNER TO adempiere;

--
-- Name: rv_c_invoice_week; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_invoice_week AS
 SELECT rv_c_invoiceline.ad_client_id,
    rv_c_invoiceline.ad_org_id,
    rv_c_invoiceline.salesrep_id,
    adempiere.firstof((rv_c_invoiceline.dateinvoiced)::timestamp with time zone, 'DY'::character varying) AS dateinvoiced,
    sum(rv_c_invoiceline.linenetamt) AS linenetamt,
    sum(rv_c_invoiceline.linelistamt) AS linelistamt,
    sum(rv_c_invoiceline.linelimitamt) AS linelimitamt,
    sum(rv_c_invoiceline.linediscountamt) AS linediscountamt,
        CASE
            WHEN (sum(rv_c_invoiceline.linelistamt) = (0)::numeric) THEN (0)::numeric
            ELSE round((((sum(rv_c_invoiceline.linelistamt) - sum(rv_c_invoiceline.linenetamt)) / sum(rv_c_invoiceline.linelistamt)) * (100)::numeric), 2)
        END AS linediscount,
    sum(rv_c_invoiceline.lineoverlimitamt) AS lineoverlimitamt,
        CASE
            WHEN (sum(rv_c_invoiceline.linenetamt) = (0)::numeric) THEN (0)::numeric
            ELSE ((100)::numeric - round((((sum(rv_c_invoiceline.linenetamt) - sum(rv_c_invoiceline.lineoverlimitamt)) / sum(rv_c_invoiceline.linenetamt)) * (100)::numeric), 2))
        END AS lineoverlimit,
    rv_c_invoiceline.issotrx
   FROM adempiere.rv_c_invoiceline
  GROUP BY rv_c_invoiceline.ad_client_id, rv_c_invoiceline.ad_org_id, rv_c_invoiceline.salesrep_id, (adempiere.firstof((rv_c_invoiceline.dateinvoiced)::timestamp with time zone, 'DY'::character varying)), rv_c_invoiceline.issotrx;


ALTER TABLE adempiere.rv_c_invoice_week OWNER TO adempiere;

--
-- Name: rv_c_invoicetax; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_invoicetax AS
 SELECT i.ad_client_id,
    i.ad_org_id,
    i.isactive,
    t.created,
    t.createdby,
    t.updated,
    t.updatedby,
    t.c_tax_id,
    i.c_invoice_id,
    i.c_doctype_id,
    i.c_bpartner_id,
    bp.taxid,
    bp.istaxexempt,
    i.dateacct,
    i.dateinvoiced,
    i.issotrx,
    i.documentno,
    i.ispaid,
    i.c_currency_id,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN (t.taxbaseamt * ('-1'::integer)::numeric)
            ELSE t.taxbaseamt
        END AS taxbaseamt,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN (t.taxamt * ('-1'::integer)::numeric)
            ELSE t.taxamt
        END AS taxamt,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN ((t.taxbaseamt + t.taxamt) * ('-1'::integer)::numeric)
            ELSE (t.taxbaseamt + t.taxamt)
        END AS taxlinetotal,
        CASE
            WHEN ((adempiere.charat((d.docbasetype)::character varying, 3))::text = 'C'::text) THEN '-1'::integer
            ELSE 1
        END AS multiplier
   FROM (((adempiere.c_invoicetax t
     JOIN adempiere.c_invoice i ON ((t.c_invoice_id = i.c_invoice_id)))
     JOIN adempiere.c_doctype d ON ((i.c_doctype_id = d.c_doctype_id)))
     JOIN adempiere.c_bpartner bp ON ((i.c_bpartner_id = bp.c_bpartner_id)));


ALTER TABLE adempiere.rv_c_invoicetax OWNER TO adempiere;

--
-- Name: rv_c_rfq_unanswered; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_rfq_unanswered AS
 SELECT q.ad_client_id,
    q.ad_org_id,
    q.c_rfq_id,
    q.name,
    q.description,
    q.help,
    q.salesrep_id,
    q.c_rfq_topic_id,
    q.quotetype,
    q.isquotetotalamt,
    q.isquoteallqty,
    q.c_currency_id,
    q.dateresponse,
    q.isrfqresponseaccepted,
    q.dateworkstart,
    q.deliverydays,
    q.dateworkcomplete,
    r.c_bpartner_id,
    r.c_bpartner_location_id,
    r.ad_user_id
   FROM (adempiere.c_rfq q
     JOIN adempiere.c_rfqresponse r ON ((q.c_rfq_id = r.c_rfq_id)))
  WHERE ((r.iscomplete = 'N'::bpchar) AND (q.processed = 'N'::bpchar));


ALTER TABLE adempiere.rv_c_rfq_unanswered OWNER TO adempiere;

--
-- Name: rv_c_rfqresponse; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_rfqresponse AS
 SELECT q.ad_client_id,
    q.ad_org_id,
    q.c_rfq_id,
    q.c_rfq_topic_id,
    r.c_bpartner_id,
    r.c_bpartner_location_id,
    r.ad_user_id,
    r.c_rfqresponse_id,
    r.c_currency_id,
    r.dateresponse,
    r.dateworkstart,
    r.deliverydays,
    r.dateworkcomplete,
    r.price,
    r.ranking,
    r.isselfservice,
    r.description,
    r.help,
    ql.m_product_id,
    ql.m_attributesetinstance_id,
    ql.line,
    rl.dateworkstart AS linedateworkstart,
    rl.deliverydays AS linedeliverydays,
    rl.dateworkcomplete AS linedateworkcomplete,
    rl.description AS linedescription,
    rl.help AS linehelp,
    qlq.c_uom_id,
    qlq.qty,
    qlq.benchmarkprice,
    (rlq.price - qlq.benchmarkprice) AS benchmarkdifference,
    rlq.price AS qtyprice,
    rlq.discount,
    rlq.ranking AS qtyranking
   FROM (((((adempiere.c_rfq q
     JOIN adempiere.c_rfqline ql ON ((q.c_rfq_id = ql.c_rfq_id)))
     JOIN adempiere.c_rfqlineqty qlq ON ((ql.c_rfqline_id = qlq.c_rfqline_id)))
     JOIN adempiere.c_rfqresponse r ON ((q.c_rfq_id = r.c_rfq_id)))
     JOIN adempiere.c_rfqresponseline rl ON (((r.c_rfqresponse_id = rl.c_rfqresponse_id) AND (ql.c_rfqline_id = rl.c_rfqline_id))))
     JOIN adempiere.c_rfqresponselineqty rlq ON (((rl.c_rfqresponseline_id = rlq.c_rfqresponseline_id) AND (qlq.c_rfqlineqty_id = rlq.c_rfqlineqty_id))))
  WHERE ((r.iscomplete = 'Y'::bpchar) AND (q.processed = 'N'::bpchar));


ALTER TABLE adempiere.rv_c_rfqresponse OWNER TO adempiere;

--
-- Name: rv_c_salesdashboard; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_c_salesdashboard AS
 SELECT ad_user.ad_client_id,
    ad_user.ad_org_id,
    ad_user.created,
    ad_user.createdby,
    ad_user.updated,
    ad_user.updatedby,
    ad_user.isactive,
    ad_user.ad_user_id,
    ad_user.name,
    0 AS salespipeline
   FROM adempiere.ad_user;


ALTER TABLE adempiere.rv_c_salesdashboard OWNER TO adempiere;

--
-- Name: rv_cash_detail; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_cash_detail AS
 SELECT cl.c_cash_id,
    cl.c_cashline_id,
    c.ad_client_id,
    c.ad_org_id,
    cl.isactive,
    cl.created,
    cl.createdby,
    cl.updated,
    cl.updatedby,
    c.c_cashbook_id,
    c.name,
    c.statementdate,
    c.dateacct,
    c.processed,
    c.posted,
    cl.line,
    cl.description,
    cl.cashtype,
    cl.c_currency_id,
    cl.amount,
    adempiere.currencyconvert(cl.amount, cl.c_currency_id, cb.c_currency_id, (c.statementdate)::timestamp with time zone, (0)::numeric, c.ad_client_id, c.ad_org_id) AS convertedamt,
    cl.c_bankaccount_id,
    cl.c_invoice_id,
    cl.c_charge_id
   FROM ((adempiere.c_cash c
     JOIN adempiere.c_cashline cl ON ((c.c_cash_id = cl.c_cash_id)))
     JOIN adempiere.c_cashbook cb ON ((c.c_cashbook_id = cb.c_cashbook_id)));


ALTER TABLE adempiere.rv_cash_detail OWNER TO adempiere;

--
-- Name: w_click; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.w_click (
    w_click_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    targeturl character varying(120),
    referrer character varying(120),
    remote_host character varying(120),
    remote_addr character varying(60),
    useragent character varying(255),
    acceptlanguage character varying(60),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    w_clickcount_id numeric(10,0),
    ad_user_id numeric(10,0),
    email character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT w_click_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT w_click_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.w_click OWNER TO adempiere;

--
-- Name: w_clickcount; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.w_clickcount (
    w_clickcount_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    targeturl character varying(120) NOT NULL,
    c_bpartner_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT w_clickcount_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.w_clickcount OWNER TO adempiere;

--
-- Name: rv_click_month; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_click_month AS
 SELECT cc.ad_client_id,
    cc.ad_org_id,
    cc.name,
    cc.description,
    cc.targeturl,
    cc.c_bpartner_id,
    adempiere.firstof((c.created)::timestamp with time zone, 'MM'::character varying) AS created,
    count(*) AS counter
   FROM (adempiere.w_clickcount cc
     JOIN adempiere.w_click c ON ((cc.w_clickcount_id = c.w_clickcount_id)))
  WHERE (cc.isactive = 'Y'::bpchar)
  GROUP BY cc.ad_client_id, cc.ad_org_id, cc.name, cc.description, cc.targeturl, cc.c_bpartner_id, (adempiere.firstof((c.created)::timestamp with time zone, 'MM'::character varying));


ALTER TABLE adempiere.rv_click_month OWNER TO adempiere;

--
-- Name: rv_click_unprocessed; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_click_unprocessed AS
 SELECT w_click.w_click_id,
    w_click.ad_client_id,
    w_click.ad_org_id,
    w_click.isactive,
    w_click.created,
    w_click.createdby,
    w_click.updated,
    w_click.updatedby,
    w_click.targeturl,
    w_click.referrer,
    w_click.remote_host,
    w_click.remote_addr,
    w_click.useragent,
    w_click.acceptlanguage,
    w_click.processed,
    w_click.w_clickcount_id,
    w_click.ad_user_id,
    w_click.email
   FROM adempiere.w_click
  WHERE ((w_click.w_clickcount_id IS NULL) OR (w_click.processed = 'N'::bpchar));


ALTER TABLE adempiere.rv_click_unprocessed OWNER TO adempiere;

--
-- Name: rv_combinedopenitem; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_combinedopenitem AS
 SELECT i.ad_org_id,
    i.ad_client_id,
    i.documentno,
    i.c_invoice_id,
    NULL::numeric AS c_payment_id,
    i.c_order_id,
    i.c_bpartner_id,
    i.issotrx,
    i.dateinvoiced,
    i.dateacct,
    p.netdays,
    adempiere.paymenttermduedate(i.c_paymentterm_id, (i.dateinvoiced)::timestamp with time zone) AS duedate,
    adempiere.paymenttermduedays(i.c_paymentterm_id, (i.dateinvoiced)::timestamp with time zone, adempiere.getdate()) AS daysdue,
    adempiere.adddays((i.dateinvoiced)::timestamp with time zone, p.discountdays) AS discountdate,
    round(((i.grandtotal * p.discount) / (100)::numeric), 2) AS discountamt,
    i.grandtotal,
    i.c_currency_id,
    i.c_conversiontype_id,
    i.c_paymentterm_id,
    i.ispayschedulevalid,
    NULL::numeric AS c_invoicepayschedule_id,
    i.invoicecollectiontype,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id
   FROM (adempiere.rv_c_invoice i
     JOIN adempiere.c_paymentterm p ON ((i.c_paymentterm_id = p.c_paymentterm_id)))
  WHERE (((i.ispayschedulevalid <> 'Y'::bpchar) OR (NOT (EXISTS ( SELECT 1
           FROM adempiere.c_invoicepayschedule ps
          WHERE (ps.c_invoice_id = i.c_invoice_id))))) AND (i.docstatus <> ALL (ARRAY['DR'::bpchar, 'IP'::bpchar, 'VO'::bpchar, 'RE'::bpchar])))
UNION ALL
 SELECT i.ad_org_id,
    i.ad_client_id,
    i.documentno,
    i.c_invoice_id,
    NULL::numeric AS c_payment_id,
    i.c_order_id,
    i.c_bpartner_id,
    i.issotrx,
    i.dateinvoiced,
    i.dateacct,
    adempiere.daysbetween((ips.duedate)::timestamp with time zone, (i.dateinvoiced)::timestamp with time zone) AS netdays,
    ips.duedate,
    adempiere.daysbetween(adempiere.getdate(), (ips.duedate)::timestamp with time zone) AS daysdue,
    ips.discountdate,
    ips.discountamt,
    ips.dueamt AS grandtotal,
    i.c_currency_id,
    i.c_conversiontype_id,
    i.c_paymentterm_id,
    i.ispayschedulevalid,
    ips.c_invoicepayschedule_id,
    i.invoicecollectiontype,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id
   FROM (adempiere.rv_c_invoice i
     JOIN adempiere.c_invoicepayschedule ips ON ((i.c_invoice_id = ips.c_invoice_id)))
  WHERE ((i.ispayschedulevalid = 'Y'::bpchar) AND (i.docstatus <> ALL (ARRAY['DR'::bpchar, 'IP'::bpchar, 'VO'::bpchar, 'RE'::bpchar])) AND (ips.isvalid = 'Y'::bpchar))
UNION ALL
 SELECT p.ad_org_id,
    p.ad_client_id,
    p.documentno,
    NULL::numeric AS c_invoice_id,
    p.c_payment_id,
    NULL::numeric AS c_order_id,
    p.c_bpartner_id,
    p.isreceipt AS issotrx,
    p.datetrx AS dateinvoiced,
    p.dateacct,
    0 AS netdays,
    p.datetrx AS duedate,
    0 AS daysdue,
    NULL::timestamp without time zone AS discountdate,
    0 AS discountamt,
    (p.payamt * ('-1'::integer)::numeric) AS grandtotal,
    p.c_currency_id,
    p.c_conversiontype_id,
    NULL::numeric AS c_paymentterm_id,
    NULL::bpchar AS ispayschedulevalid,
    NULL::numeric AS c_invoicepayschedule_id,
    NULL::bpchar AS invoicecollectiontype,
    p.c_campaign_id,
    p.c_project_id,
    p.c_activity_id
   FROM adempiere.c_payment p
  WHERE (p.docstatus <> ALL (ARRAY['DR'::bpchar, 'IP'::bpchar, 'VO'::bpchar, 'RE'::bpchar]));


ALTER TABLE adempiere.rv_combinedopenitem OWNER TO adempiere;

--
-- Name: rv_commissionrun; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_commissionrun AS
 SELECT cr.ad_client_id,
    cr.ad_org_id,
    cr.isactive,
    cr.c_commissionrun_id,
    cr.created,
    cr.updated,
    cr.createdby,
    cr.updatedby,
    cr.datedoc,
    cr.startdate,
    cr.enddate,
    cr.grandtotal,
    ca.c_commissionamt_id,
    ca.c_bpartner_id AS commission_bpartner_id,
    ca.convertedamt,
    ca.actualqty,
    ca.commissionamt,
    cl.qtymultiplier,
    cl.c_bpartner_id,
    cl.m_product_id,
    cl.qtysubtract,
    cl.org_id,
    cl.c_commission_id,
    cl.c_bp_group_id,
    cl.line,
    cl.amtsubtract,
    cl.c_salesregion_id,
    cl.c_commissionline_id,
    cl.commissionorders,
    cl.amtmultiplier,
    cl.m_product_category_id,
    cl.ispositiveonly,
    cl.paymentrule,
    cl.daysfrom,
    cl.daysto,
    cl.c_channel_id,
    cl.invoicecollectiontype,
    cl.c_dunninglevel_id,
    cl.description,
    cl.m_product_class_id,
    cl.m_product_classification_id,
    cl.m_product_group_id,
    cl.c_campaign_id,
    cl.c_project_id,
    cl.c_paymentterm_id,
    c.c_commissiongroup_id,
    c.name,
    c.c_currency_id,
    c.docbasistype,
    c.frequencytype,
    c.c_charge_id,
    c.isallowrma,
    c.listdetails,
    c.datelastrun,
    c.istotallypaid,
    cr.docstatus,
    cr.c_doctype_id
   FROM (((adempiere.c_commissionrun cr
     JOIN adempiere.c_commissionamt ca ON ((ca.c_commissionrun_id = cr.c_commissionrun_id)))
     JOIN adempiere.c_commissionline cl ON ((cl.c_commissionline_id = ca.c_commissionline_id)))
     JOIN adempiere.c_commission c ON ((c.c_commission_id = cl.c_commission_id)));


ALTER TABLE adempiere.rv_commissionrun OWNER TO adempiere;

--
-- Name: rv_commissionrundetail; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_commissionrundetail AS
 SELECT cr.ad_client_id,
    cr.ad_org_id,
    cr.isactive,
    cr.created,
    cr.createdby,
    cr.updated,
    cr.updatedby,
    cr.c_commissionrun_id,
    cr.documentno,
    cr.description,
    cr.startdate,
    cr.grandtotal,
    cr.processed,
    c.c_commission_id,
    ca.c_bpartner_id AS commission_bpartner_id,
    ca.c_commissionamt_id,
    cd.convertedamt AS commissionconvertedamt,
    cd.actualqty AS commissionqty,
    cd.commissionamt,
    cd.c_commissiondetail_id,
    cd.reference,
    cd.c_orderline_id,
    cd.c_invoiceline_id,
    cd.info,
    cd.c_currency_id,
    cd.actualamt,
    cd.convertedamt,
    cd.actualqty,
    i.documentno AS invoicedocumentno,
    COALESCE(i.dateinvoiced, o.dateordered) AS datedoc,
    COALESCE(il.m_product_id, ol.m_product_id) AS m_product_id,
    COALESCE(i.c_bpartner_id, o.c_bpartner_id) AS c_bpartner_id,
    COALESCE(i.c_bpartner_location_id, o.c_bpartner_location_id) AS c_bpartner_location_id,
    COALESCE(i.ad_user_id, o.ad_user_id) AS ad_user_id,
    COALESCE(i.c_doctype_id, o.c_doctype_id) AS c_doctype_id
   FROM (((((((adempiere.c_commissionrun cr
     JOIN adempiere.c_commission c ON ((cr.c_commission_id = c.c_commission_id)))
     JOIN adempiere.c_commissionamt ca ON ((cr.c_commissionrun_id = ca.c_commissionrun_id)))
     JOIN adempiere.c_commissiondetail cd ON ((ca.c_commissionamt_id = cd.c_commissionamt_id)))
     LEFT JOIN adempiere.c_orderline ol ON ((cd.c_orderline_id = ol.c_orderline_id)))
     LEFT JOIN adempiere.c_invoiceline il ON ((cd.c_invoiceline_id = il.c_invoiceline_id)))
     LEFT JOIN adempiere.c_order o ON ((ol.c_order_id = o.c_order_id)))
     LEFT JOIN adempiere.c_invoice i ON ((il.c_invoice_id = i.c_invoice_id)));


ALTER TABLE adempiere.rv_commissionrundetail OWNER TO adempiere;

--
-- Name: rv_copyprocess_para; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_copyprocess_para AS
 SELECT c.ad_client_id,
    c.ad_org_id,
    c.created,
    c.createdby,
    c.updated,
    c.updatedby,
    c.isactive,
    c.ad_element_id,
    c.columnname,
    c.ad_reference_id,
    c.ismandatory,
    'N'::text AS isrange,
    c.defaultvalue,
    NULL::character varying AS defaultvalue2,
    rv.ad_reportview_id,
    'N'::text AS copyfromprocess,
    NULL::numeric AS ad_process_id,
    NULL::numeric AS ad_process_para_id,
    c.ad_column_id
   FROM ((adempiere.ad_reportview rv
     JOIN adempiere.ad_table t ON ((t.ad_table_id = rv.ad_table_id)))
     JOIN adempiere.ad_column c ON ((c.ad_table_id = t.ad_table_id)))
UNION ALL
 SELECT pp.ad_client_id,
    pp.ad_org_id,
    pp.created,
    pp.createdby,
    pp.updated,
    pp.updatedby,
    pp.isactive,
    pp.ad_element_id,
    pp.columnname,
    pp.ad_reference_id,
    pp.ismandatory,
    'N'::text AS isrange,
    pp.defaultvalue,
    pp.defaultvalue2,
    NULL::numeric AS ad_reportview_id,
    'Y'::text AS copyfromprocess,
    p.ad_process_id,
    pp.ad_process_para_id,
    NULL::numeric AS ad_column_id
   FROM (adempiere.ad_process p
     JOIN adempiere.ad_process_para pp ON ((pp.ad_process_id = p.ad_process_id)));


ALTER TABLE adempiere.rv_copyprocess_para OWNER TO adempiere;

--
-- Name: rv_cost; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_cost AS
 SELECT c.ad_client_id,
    c.ad_org_id,
    c.isactive,
    c.created,
    c.createdby,
    c.updated,
    c.updatedby,
    p.m_product_id,
    p.value,
    p.name,
    p.upc,
    p.isbom,
    p.producttype,
    p.m_product_category_id,
    c.m_costtype_id,
    ce.m_costelement_id,
    ce.costelementtype,
    ce.costingmethod,
    ce.iscalculated,
    acct.c_acctschema_id,
    acct.c_currency_id,
    c.currentcostprice,
    c.futurecostprice,
    c.description,
    c.currentcostpricell,
    c.futurecostpricell,
    c.iscostfrozen,
    c.m_warehouse_id
   FROM (((adempiere.m_cost c
     JOIN adempiere.m_product p ON ((c.m_product_id = p.m_product_id)))
     JOIN adempiere.m_costelement ce ON ((c.m_costelement_id = ce.m_costelement_id)))
     JOIN adempiere.c_acctschema acct ON ((c.c_acctschema_id = acct.c_acctschema_id)));


ALTER TABLE adempiere.rv_cost OWNER TO adempiere;

--
-- Name: rv_costdetail; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_costdetail AS
 SELECT c.ad_client_id,
    c.ad_org_id,
    c.isactive,
    c.created,
    c.createdby,
    c.updated,
    c.updatedby,
    p.m_product_id,
    p.value,
    p.name,
    p.upc,
    p.isbom,
    p.producttype,
    p.m_product_category_id,
    c.m_inoutline_id,
    c.c_invoiceline_id,
    asi.m_attributesetinstance_id,
    asi.m_attributeset_id,
    asi.lot,
    asi.serno,
    acct.c_acctschema_id,
    acct.c_currency_id,
    c.amt,
    c.qty,
    c.description,
    c.processed,
    c.m_warehouse_id
   FROM (((adempiere.m_costdetail c
     JOIN adempiere.m_product p ON ((c.m_product_id = p.m_product_id)))
     JOIN adempiere.c_acctschema acct ON ((c.c_acctschema_id = acct.c_acctschema_id)))
     JOIN adempiere.m_attributesetinstance asi ON ((c.m_attributesetinstance_id = asi.m_attributesetinstance_id)));


ALTER TABLE adempiere.rv_costdetail OWNER TO adempiere;

--
-- Name: rv_costsummary; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_costsummary AS
 SELECT c.ad_client_id,
    c.ad_org_id,
    c.isactive,
    0 AS createdby,
    adempiere.getdate() AS created,
    0 AS updatedby,
    adempiere.getdate() AS updated,
    p.m_product_id,
    p.value,
    p.name,
    p.upc,
    p.isbom,
    p.producttype,
    p.m_product_category_id,
    c.m_costtype_id,
    acct.c_acctschema_id,
    acct.c_currency_id,
    sum(c.currentcostprice) AS currentcostprice,
    sum(c.futurecostprice) AS futurecostprice,
    c.m_warehouse_id
   FROM ((adempiere.m_cost c
     JOIN adempiere.m_product p ON ((c.m_product_id = p.m_product_id)))
     JOIN adempiere.c_acctschema acct ON ((c.c_acctschema_id = acct.c_acctschema_id)))
  WHERE (acct.m_costtype_id = c.m_costtype_id)
  GROUP BY c.ad_client_id, c.ad_org_id, c.isactive, p.m_product_id, p.value, p.name, p.upc, p.isbom, p.producttype, p.m_product_category_id, c.m_costtype_id, acct.c_acctschema_id, acct.c_currency_id, c.m_warehouse_id;


ALTER TABLE adempiere.rv_costsummary OWNER TO adempiere;

--
-- Name: rv_dd_orderdetail; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_dd_orderdetail AS
 SELECT l.ad_client_id,
    l.ad_org_id,
    l.isactive,
    l.created,
    l.createdby,
    l.updated,
    l.updatedby,
    o.dd_order_id,
    o.c_order_id,
    o.docstatus,
    o.docaction,
    o.c_doctype_id,
    o.isapproved,
    o.salesrep_id,
    o.isdropship,
    o.c_bpartner_id,
    bp.c_bp_group_id,
    o.ad_user_id,
    o.poreference,
    o.issotrx,
    l.c_campaign_id,
    l.c_project_id,
    l.c_activity_id,
    l.dd_orderline_id,
    l.dateordered,
    l.datepromised,
    l.m_product_id,
    l.m_locator_id,
    l.m_locatorto_id,
    l.m_attributesetinstance_id,
    adempiere.productattribute(l.m_attributesetinstance_id) AS productattribute,
    l.m_attributesetinstanceto_id,
    adempiere.productattribute(l.m_attributesetinstanceto_id) AS productattributeto,
    pasi.m_attributeset_id,
    pasi.m_lot_id,
    pasi.guaranteedate,
    pasi.lot,
    pasi.serno,
    l.c_uom_id,
    l.qtyentered,
    l.qtyordered,
    l.qtyreserved,
    l.qtydelivered,
    l.confirmedqty,
    l.qtyintransit,
    l.targetqty,
    (l.qtyordered - l.qtydelivered) AS qtytodeliver,
    l.description
   FROM ((((adempiere.dd_order o
     JOIN adempiere.dd_orderline l ON ((l.dd_order_id = o.dd_order_id)))
     JOIN adempiere.c_bpartner bp ON ((bp.c_bpartner_id = o.c_bpartner_id)))
     LEFT JOIN adempiere.m_attributesetinstance pasi ON ((l.m_attributesetinstance_id = pasi.m_attributesetinstance_id)))
     LEFT JOIN adempiere.m_attributesetinstance pasito ON ((l.m_attributesetinstanceto_id = pasito.m_attributesetinstance_id)));


ALTER TABLE adempiere.rv_dd_orderdetail OWNER TO adempiere;

--
-- Name: rv_fact_acct; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_fact_acct AS
 SELECT f.ad_client_id,
    f.ad_org_id,
    f.isactive,
    f.created,
    f.createdby,
    f.updated,
    f.updatedby,
    f.fact_acct_id,
    f.c_acctschema_id,
    f.account_id,
    f.datetrx,
    f.dateacct,
    f.c_period_id,
    f.ad_table_id,
    f.record_id,
    f.line_id,
    f.gl_category_id,
    f.gl_budget_id,
    f.c_tax_id,
    f.m_locator_id,
    f.postingtype,
    f.c_currency_id,
    f.amtsourcedr,
    f.amtsourcecr,
    (f.amtsourcedr - f.amtsourcecr) AS amtsource,
    f.amtacctdr,
    f.amtacctcr,
    (f.amtacctdr - f.amtacctcr) AS amtacct,
        CASE
            WHEN ((f.amtsourcedr - f.amtsourcecr) = (0)::numeric) THEN (0)::numeric
            ELSE ((f.amtacctdr - f.amtacctcr) / (f.amtsourcedr - f.amtsourcecr))
        END AS rate,
    f.c_uom_id,
    f.qty,
    f.m_product_id,
    f.c_bpartner_id,
    f.ad_orgtrx_id,
    f.c_locfrom_id,
    f.c_locto_id,
    f.c_salesregion_id,
    f.c_project_id,
    f.c_campaign_id,
    f.c_activity_id,
    f.user1_id,
    f.user2_id,
    f.user3_id,
    f.user4_id,
    f.userelement1_id,
    f.userelement2_id,
    f.a_asset_id,
    f.description,
    o.value AS orgvalue,
    o.name AS orgname,
    ev.value AS accountvalue,
    ev.name,
    ev.accounttype,
    bp.value AS bpartnervalue,
    bp.name AS bpname,
    bp.c_bp_group_id,
    p.value AS productvalue,
    p.name AS productname,
    p.upc,
    p.m_product_category_id
   FROM ((((adempiere.fact_acct f
     JOIN adempiere.ad_org o ON ((f.ad_org_id = o.ad_org_id)))
     JOIN adempiere.c_elementvalue ev ON ((f.account_id = ev.c_elementvalue_id)))
     LEFT JOIN adempiere.c_bpartner bp ON ((f.c_bpartner_id = bp.c_bpartner_id)))
     LEFT JOIN adempiere.m_product p ON ((f.m_product_id = p.m_product_id)));


ALTER TABLE adempiere.rv_fact_acct OWNER TO adempiere;

--
-- Name: rv_fact_acct_balance; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_fact_acct_balance AS
 SELECT a.ad_client_id,
    a.ad_org_id,
    a.c_acctschema_id,
    adempiere.trunc((a.dateacct)::timestamp with time zone) AS dateacct,
    a.account_id,
    a.postingtype,
    a.m_product_id,
    a.c_bpartner_id,
    a.c_project_id,
    a.ad_orgtrx_id,
    a.c_salesregion_id,
    a.c_activity_id,
    a.c_campaign_id,
    a.c_locto_id,
    a.c_locfrom_id,
    a.user1_id,
    a.user2_id,
    a.user3_id,
    a.user4_id,
    a.gl_budget_id,
    COALESCE(sum(a.amtacctdr), (0)::numeric) AS amtacctdr,
    COALESCE(sum(a.amtacctcr), (0)::numeric) AS amtacctcr,
    COALESCE(sum(a.qty), (0)::numeric) AS qty,
    max(a.createdby) AS createdby,
    max(a.created) AS created,
    max(a.updatedby) AS updatedby,
    max(a.updated) AS updated,
    max(a.isactive) AS isactive,
    max(a.c_subacct_id) AS c_subacct_id,
    a.userelement1_id,
    a.userelement2_id,
    max(a.c_projectphase_id) AS c_projectphase_id,
    max(a.c_projecttask_id) AS c_projecttask_id
   FROM adempiere.fact_acct a
  GROUP BY a.ad_client_id, a.ad_org_id, a.c_acctschema_id, (adempiere.trunc((a.dateacct)::timestamp with time zone)), a.account_id, a.postingtype, a.m_product_id, a.c_bpartner_id, a.c_project_id, a.ad_orgtrx_id, a.c_salesregion_id, a.c_activity_id, a.c_campaign_id, a.c_locto_id, a.c_locfrom_id, a.user1_id, a.user2_id, a.user3_id, a.user4_id, a.userelement1_id, a.userelement2_id, a.gl_budget_id;


ALTER TABLE adempiere.rv_fact_acct_balance OWNER TO adempiere;

--
-- Name: rv_fact_acct_day; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_fact_acct_day AS
 SELECT fact_acct.ad_client_id,
    fact_acct.ad_org_id,
    fact_acct.c_acctschema_id,
    fact_acct.account_id,
    adempiere.firstof((fact_acct.dateacct)::timestamp with time zone, 'DD'::character varying) AS dateacct,
    fact_acct.c_period_id,
    fact_acct.gl_category_id,
    fact_acct.gl_budget_id,
    fact_acct.c_tax_id,
    fact_acct.m_locator_id,
    fact_acct.postingtype,
    fact_acct.c_currency_id,
    sum(fact_acct.amtsourcedr) AS amtsourcedr,
    sum(fact_acct.amtsourcecr) AS amtsourcecr,
    sum((fact_acct.amtsourcedr - fact_acct.amtsourcecr)) AS amtsource,
    sum(fact_acct.amtacctdr) AS amtacctdr,
    sum(fact_acct.amtacctcr) AS amtacctcr,
    sum((fact_acct.amtacctdr - fact_acct.amtacctcr)) AS amtacct,
        CASE
            WHEN (sum((fact_acct.amtsourcedr - fact_acct.amtsourcecr)) = (0)::numeric) THEN (0)::numeric
            ELSE (sum((fact_acct.amtacctdr - fact_acct.amtacctcr)) / sum((fact_acct.amtsourcedr - fact_acct.amtsourcecr)))
        END AS rate,
    fact_acct.m_product_id,
    fact_acct.c_bpartner_id,
    fact_acct.ad_orgtrx_id,
    fact_acct.c_locfrom_id,
    fact_acct.c_locto_id,
    fact_acct.c_salesregion_id,
    fact_acct.c_project_id,
    fact_acct.c_campaign_id,
    fact_acct.c_activity_id,
    fact_acct.user1_id,
    fact_acct.user2_id,
    fact_acct.user3_id,
    fact_acct.user4_id,
    fact_acct.a_asset_id
   FROM adempiere.fact_acct
  GROUP BY fact_acct.ad_client_id, fact_acct.ad_org_id, fact_acct.c_acctschema_id, fact_acct.account_id, (adempiere.firstof((fact_acct.dateacct)::timestamp with time zone, 'DD'::character varying)), fact_acct.c_period_id, fact_acct.gl_category_id, fact_acct.gl_budget_id, fact_acct.c_tax_id, fact_acct.m_locator_id, fact_acct.postingtype, fact_acct.c_currency_id, fact_acct.m_product_id, fact_acct.c_bpartner_id, fact_acct.ad_orgtrx_id, fact_acct.c_locfrom_id, fact_acct.c_locto_id, fact_acct.c_salesregion_id, fact_acct.c_project_id, fact_acct.c_campaign_id, fact_acct.c_activity_id, fact_acct.user1_id, fact_acct.user2_id, fact_acct.user3_id, fact_acct.user4_id, fact_acct.a_asset_id;


ALTER TABLE adempiere.rv_fact_acct_day OWNER TO adempiere;

--
-- Name: rv_fact_acct_period; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_fact_acct_period AS
 SELECT fact_acct.ad_client_id,
    fact_acct.ad_org_id,
    fact_acct.c_acctschema_id,
    fact_acct.account_id,
    fact_acct.c_period_id,
    fact_acct.gl_category_id,
    fact_acct.gl_budget_id,
    fact_acct.c_tax_id,
    fact_acct.m_locator_id,
    fact_acct.postingtype,
    fact_acct.c_currency_id,
    sum(fact_acct.amtsourcedr) AS amtsourcedr,
    sum(fact_acct.amtsourcecr) AS amtsourcecr,
    sum((fact_acct.amtsourcedr - fact_acct.amtsourcecr)) AS amtsource,
    sum(fact_acct.amtacctdr) AS amtacctdr,
    sum(fact_acct.amtacctcr) AS amtacctcr,
    sum((fact_acct.amtacctdr - fact_acct.amtacctcr)) AS amtacct,
        CASE
            WHEN (sum((fact_acct.amtsourcedr - fact_acct.amtsourcecr)) = (0)::numeric) THEN (0)::numeric
            ELSE (sum((fact_acct.amtacctdr - fact_acct.amtacctcr)) / sum((fact_acct.amtsourcedr - fact_acct.amtsourcecr)))
        END AS rate,
    fact_acct.m_product_id,
    fact_acct.c_bpartner_id,
    fact_acct.ad_orgtrx_id,
    fact_acct.c_locfrom_id,
    fact_acct.c_locto_id,
    fact_acct.c_salesregion_id,
    fact_acct.c_project_id,
    fact_acct.c_campaign_id,
    fact_acct.c_activity_id,
    fact_acct.user1_id,
    fact_acct.user2_id,
    fact_acct.user3_id,
    fact_acct.user4_id,
    fact_acct.a_asset_id
   FROM adempiere.fact_acct
  GROUP BY fact_acct.ad_client_id, fact_acct.ad_org_id, fact_acct.c_acctschema_id, fact_acct.account_id, fact_acct.c_period_id, fact_acct.gl_category_id, fact_acct.gl_budget_id, fact_acct.c_tax_id, fact_acct.m_locator_id, fact_acct.postingtype, fact_acct.c_currency_id, fact_acct.m_product_id, fact_acct.c_bpartner_id, fact_acct.ad_orgtrx_id, fact_acct.c_locfrom_id, fact_acct.c_locto_id, fact_acct.c_salesregion_id, fact_acct.c_project_id, fact_acct.c_campaign_id, fact_acct.c_activity_id, fact_acct.user1_id, fact_acct.user2_id, fact_acct.user3_id, fact_acct.user4_id, fact_acct.a_asset_id;


ALTER TABLE adempiere.rv_fact_acct_period OWNER TO adempiere;

--
-- Name: rv_hr_employee; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_hr_employee AS
 SELECT bp.ad_client_id,
    bp.ad_org_id,
    bp.isactive,
    bp.created,
    bp.createdby,
    bp.updated,
    bp.updatedby,
    bp.value,
    bp.taxid,
    COALESCE(e.name, bp.name) AS name,
    COALESCE(e.name2, bp.name2) AS name2,
    ((COALESCE(e.name, bp.name))::text || COALESCE((' '::text || (COALESCE(e.name2, bp.name2))::text), ''::text)) AS bpname,
    bp.c_bpartner_id,
    bp.c_bp_group_id,
    COALESCE(e.employeestatus, e.employeestatus) AS employeestatus,
    bp.gender,
    bp.birthday,
    COALESCE(e.maritalstatus, bp.maritalstatus) AS maritalstatus,
    bp.bloodgroup,
    bp.placeofbirth_id,
    bp.fathersname,
    e.marriageanniversarydate,
    COALESCE(e.paymentrule, bp.paymentrule) AS paymentrule,
    e.hr_job_id,
    e.nationalcode,
    e.partnersname,
    e.identificationmark,
    e.ismanager,
    e.hr_employeetype_id,
    e.enddate,
    e.hr_department_id,
    e.sscode,
    e.hr_payroll_id,
    e.code,
    e.c_activity_id,
    e.startdate,
    e.hr_jobtype_id,
    e.hr_jobopening_id,
    e.hr_jobeducation_id,
    e.hr_careerlevel_id,
    e.hr_salaryrange_id,
    e.hr_salarystructure_id,
    e.hr_designation_id,
    e.hr_grade_id,
    e.c_project_id,
    e.ad_orgtrx_id,
    e.c_salesregion_id,
    e.hr_shiftgroup_id,
    e.hr_degree_id,
    e.c_campaign_id,
    e.hr_workgroup_id,
    adempiere.monthlysalary(bp.c_bpartner_id) AS monthlysalary,
    adempiere.dailysalary(bp.c_bpartner_id) AS dailysalary,
    e.hr_contract_id
   FROM (adempiere.c_bpartner bp
     LEFT JOIN ( SELECT e_1.marriageanniversarydate,
            e_1.ad_user_id,
            e_1.hr_job_id,
            e_1.nationalcode,
            e_1.partnersname,
            e_1.nationality_id,
            e_1.maritalstatus,
            e_1.partnersbirthdate,
            e_1.hr_race_id,
            e_1.hr_skilltype_id,
            e_1.identificationmark,
            e_1.monthlysalary,
            e_1.dailysalary,
            e_1.employeestatus,
            e_1.paymentrule,
            e_1.ismanager,
            e_1.hr_employeetype_id,
            e_1.name,
            e_1.enddate,
            e_1.hr_department_id,
            e_1.isactive,
            e_1.sscode,
            e_1.hr_payroll_id,
            e_1.code,
            e_1.c_activity_id,
            e_1.c_bpartner_id,
            e_1.ad_org_id,
            e_1.startdate,
            e_1.updated,
            e_1.name2,
            e_1.hr_jobtype_id,
            e_1.hr_jobopening_id,
            e_1.hr_jobeducation_id,
            e_1.hr_careerlevel_id,
            e_1.hr_salaryrange_id,
            e_1.hr_salarystructure_id,
            e_1.hr_designation_id,
            e_1.hr_grade_id,
            e_1.c_project_id,
            e_1.ad_orgtrx_id,
            e_1.c_salesregion_id,
            e_1.hr_shiftgroup_id,
            e_1.hr_degree_id,
            e_1.c_campaign_id,
            e_1.hr_workgroup_id,
            p.hr_contract_id
           FROM (adempiere.hr_employee e_1
             LEFT JOIN adempiere.hr_payroll p ON ((p.hr_payroll_id = e_1.hr_payroll_id)))
          WHERE ((e_1.isactive = 'Y'::bpchar) AND (e_1.hr_employee_id = ( SELECT ee.hr_employee_id
                   FROM adempiere.hr_employee ee
                  WHERE ((ee.c_bpartner_id = e_1.c_bpartner_id) AND (ee.isactive = 'Y'::bpchar))
                  ORDER BY ee.startdate DESC
                 LIMIT 1)))) e ON ((e.c_bpartner_id = bp.c_bpartner_id)))
  WHERE (bp.isemployee = 'Y'::bpchar);


ALTER TABLE adempiere.rv_hr_employee OWNER TO adempiere;

--
-- Name: rv_hr_employeebankaccount; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_hr_employeebankaccount AS
 SELECT e.ad_client_id,
    e.ad_org_id,
    e.isactive,
    e.created,
    e.createdby,
    e.updated,
    e.updatedby,
    e.value,
    e.taxid,
    e.name2,
    e.bpname,
    e.c_bpartner_id,
    e.c_bp_group_id,
    e.employeestatus,
    e.gender,
    e.birthday,
    e.maritalstatus,
    e.bloodgroup,
    e.placeofbirth_id,
    e.fathersname,
    e.marriageanniversarydate,
    e.paymentrule,
    e.hr_job_id,
    e.nationalcode,
    e.partnersname,
    e.identificationmark,
    e.ismanager,
    e.hr_employeetype_id,
    e.enddate,
    e.hr_department_id,
    e.sscode,
    e.hr_payroll_id,
    e.code,
    e.c_activity_id,
    e.startdate,
    e.hr_jobtype_id,
    e.hr_jobopening_id,
    e.hr_jobeducation_id,
    e.hr_careerlevel_id,
    e.hr_salaryrange_id,
    e.hr_salarystructure_id,
    e.hr_designation_id,
    e.hr_grade_id,
    e.c_project_id,
    e.ad_orgtrx_id,
    e.c_salesregion_id,
    e.hr_shiftgroup_id,
    e.hr_degree_id,
    e.c_campaign_id,
    e.hr_workgroup_id,
    e.monthlysalary,
    e.dailysalary,
    ba.accountno,
    ba.a_city,
    ba.a_country,
    ba.ad_user_id,
    ba.a_email,
    ba.a_ident_dl,
    ba.a_ident_ssn,
    ba.a_name,
    ba.a_state,
    ba.a_street,
    ba.a_zip,
    ba.bankaccounttype,
    ba.bpbankacctuse,
    ba.c_bank_id,
    ba.c_bp_bankaccount_id,
    ba.creditcardexpmm,
    ba.creditcardexpyy,
    ba.creditcardnumber,
    ba.creditcardtype,
    ba.creditcardvv,
    ba.isach,
    ba.ispayrollaccount,
    ba.r_avsaddr,
    ba.r_avszip,
    ba.routingno
   FROM (adempiere.rv_hr_employee e
     LEFT JOIN adempiere.c_bp_bankaccount ba ON (((ba.c_bpartner_id = e.c_bpartner_id) AND (ba.isactive = 'Y'::bpchar))));


ALTER TABLE adempiere.rv_hr_employeebankaccount OWNER TO adempiere;

--
-- Name: rv_hr_employeedependent; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_hr_employeedependent AS
 SELECT e.ad_client_id,
    e.ad_org_id,
    e.isactive,
    e.created,
    e.createdby,
    e.updated,
    e.updatedby,
    e.value,
    e.taxid,
    e.name2,
    e.bpname,
    e.c_bpartner_id,
    e.c_bp_group_id,
    e.employeestatus,
    e.gender,
    e.birthday,
    e.maritalstatus,
    e.bloodgroup,
    e.placeofbirth_id,
    e.fathersname,
    e.marriageanniversarydate,
    e.paymentrule,
    e.hr_job_id,
    e.nationalcode,
    e.partnersname,
    e.identificationmark,
    e.ismanager,
    e.hr_employeetype_id,
    e.enddate,
    e.hr_department_id,
    e.sscode,
    e.hr_payroll_id,
    e.code,
    e.c_activity_id,
    e.startdate,
    e.hr_jobtype_id,
    e.hr_jobopening_id,
    e.hr_jobeducation_id,
    e.hr_careerlevel_id,
    e.hr_salaryrange_id,
    e.hr_salarystructure_id,
    e.hr_designation_id,
    e.hr_grade_id,
    e.c_project_id,
    e.ad_orgtrx_id,
    e.c_salesregion_id,
    e.hr_shiftgroup_id,
    e.hr_degree_id,
    e.c_campaign_id,
    e.hr_workgroup_id,
    e.monthlysalary,
    e.dailysalary,
    ed.hr_employeedependent_id,
    ed.birthday AS dependentbirthday,
    ed.hr_employee_id,
    ed.hr_relationship_id,
    ed.iscollectcash
   FROM (adempiere.rv_hr_employee e
     JOIN adempiere.hr_employeedependent ed ON (((ed.c_bpartner_id = e.c_bpartner_id) AND (ed.isactive = 'Y'::bpchar))));


ALTER TABLE adempiere.rv_hr_employeedependent OWNER TO adempiere;

--
-- Name: rv_hr_employeesalarychange; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_hr_employeesalarychange AS
 SELECT e.ad_client_id,
    e.ad_org_id,
    e.isactive,
    e.created,
    e.createdby,
    e.updated,
    e.updatedby,
    e.value,
    e.taxid,
    e.name2,
    e.bpname,
    e.c_bpartner_id,
    e.c_bp_group_id,
    e.employeestatus,
    e.gender,
    e.birthday,
    e.maritalstatus,
    e.bloodgroup,
    e.placeofbirth_id,
    e.fathersname,
    e.marriageanniversarydate,
    e.paymentrule,
    e.hr_job_id,
    e.nationalcode,
    e.partnersname,
    e.identificationmark,
    e.ismanager,
    e.hr_employeetype_id,
    e.enddate,
    e.hr_department_id,
    e.sscode,
    e.hr_payroll_id,
    e.code,
    e.c_activity_id,
    e.startdate,
    e.hr_jobtype_id,
    e.hr_jobopening_id,
    e.hr_jobeducation_id,
    e.hr_careerlevel_id,
    e.hr_salaryrange_id,
    e.hr_salarystructure_id,
    e.hr_designation_id,
    e.hr_grade_id,
    e.c_project_id,
    e.ad_orgtrx_id,
    e.c_salesregion_id,
    e.hr_shiftgroup_id,
    e.hr_degree_id,
    e.c_campaign_id,
    e.hr_workgroup_id,
    COALESCE(ds.validfrom, ms.validfrom) AS validfrom,
    ms.amount AS monthlysalary,
    ds.amount AS dailysalary,
    COALESCE(ds.description, ms.description) AS description
   FROM ((adempiere.rv_hr_employee e
     LEFT JOIN ( SELECT a.c_bpartner_id,
            a.validfrom,
                CASE
                    WHEN (c.columntype = 'A'::bpchar) THEN a.amount
                    ELSE a.qty
                END AS amount,
            a.description
           FROM (adempiere.hr_attribute a
             JOIN adempiere.hr_concept c ON ((c.hr_concept_id = a.hr_concept_id)))
          WHERE ((c.columntype = ANY (ARRAY['A'::bpchar, 'Q'::bpchar])) AND (EXISTS ( SELECT 1
                   FROM (adempiere.rv_hr_employee r
                     JOIN adempiere.hr_contract c_1 ON ((c_1.hr_contract_id = r.hr_contract_id)))
                  WHERE (c_1.dailysalary_id = a.hr_concept_id))))) ds ON ((ds.c_bpartner_id = e.c_bpartner_id)))
     LEFT JOIN ( SELECT a.c_bpartner_id,
            a.validfrom,
                CASE
                    WHEN (c.columntype = 'A'::bpchar) THEN a.amount
                    ELSE a.qty
                END AS amount,
            a.description
           FROM (adempiere.hr_attribute a
             JOIN adempiere.hr_concept c ON ((c.hr_concept_id = a.hr_concept_id)))
          WHERE ((c.columntype = ANY (ARRAY['A'::bpchar, 'Q'::bpchar])) AND (EXISTS ( SELECT 1
                   FROM (adempiere.rv_hr_employee r
                     JOIN adempiere.hr_contract c_1 ON ((c_1.hr_contract_id = r.hr_contract_id)))
                  WHERE (c_1.monthlysalary_id = a.hr_concept_id))))) ms ON ((ms.c_bpartner_id = e.c_bpartner_id)));


ALTER TABLE adempiere.rv_hr_employeesalarychange OWNER TO adempiere;

--
-- Name: rv_inout_createfrom; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_inout_createfrom AS
 SELECT l.ad_client_id,
    l.ad_org_id,
    l.createdby,
    l.created,
    l.updatedby,
    l.updated,
    l.isactive,
    l.c_orderline_id AS rv_inout_createfrom_id,
    l.line,
    (
        CASE
            WHEN (l.qtyordered = (0)::numeric) THEN (0)::numeric
            ELSE (l.qtyentered / l.qtyordered)
        END * (l.qtyordered - sum(COALESCE(m.qty, (0)::numeric)))) AS qtyentered,
    l.c_uom_id,
    (l.qtyordered - sum(COALESCE(m.qty, (0)::numeric))) AS movementqty,
        CASE
            WHEN (l.qtyordered = (0)::numeric) THEN (0)::numeric
            ELSE (l.qtyentered / l.qtyordered)
        END AS multiplier,
    p.m_locator_id,
    COALESCE(p.name, c.name) AS name,
    l.m_product_id,
    l.m_attributesetinstance_id,
    l.c_charge_id,
    l.description,
    po.vendorproductno,
    o.c_order_id,
    0 AS c_invoice_id,
    0 AS m_rma_id,
    o.dateordered AS datedoc,
    o.c_bpartner_id,
    o.docstatus,
    'O'::text AS createfromtype,
    l.c_activity_id,
    l.c_project_id,
    l.c_campaign_id,
    l.user1_id,
    l.user2_id
   FROM (((((adempiere.c_order o
     JOIN adempiere.c_orderline l ON ((l.c_order_id = o.c_order_id)))
     LEFT JOIN adempiere.m_product_po po ON (((l.m_product_id = po.m_product_id) AND (l.c_bpartner_id = po.c_bpartner_id))))
     LEFT JOIN adempiere.m_matchpo m ON (((l.c_orderline_id = m.c_orderline_id) AND (m.m_inoutline_id IS NOT NULL))))
     LEFT JOIN adempiere.m_product p ON ((l.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.c_charge c ON ((l.c_charge_id = c.c_charge_id)))
  WHERE (l.qtyordered <> (0)::numeric)
  GROUP BY l.ad_client_id, l.ad_org_id, l.createdby, l.created, l.updatedby, l.updated, l.isactive, l.c_orderline_id, l.line, l.qtyordered, l.qtyentered, l.c_uom_id, p.m_locator_id, p.name, c.name, l.m_product_id, l.m_attributesetinstance_id, l.c_charge_id, l.description, po.vendorproductno, o.c_order_id, o.dateordered, o.c_bpartner_id, o.docstatus, l.c_activity_id, l.c_project_id, l.c_campaign_id, l.user1_id, l.user2_id
 HAVING ((l.qtyordered - sum(COALESCE(m.qty, (0)::numeric))) <> (0)::numeric)
UNION ALL
 SELECT l.ad_client_id,
    l.ad_org_id,
    l.createdby,
    l.created,
    l.updatedby,
    l.updated,
    l.isactive,
    l.c_invoiceline_id AS rv_inout_createfrom_id,
    l.line,
    (
        CASE
            WHEN (l.qtyinvoiced = (0)::numeric) THEN (0)::numeric
            ELSE (l.qtyentered / l.qtyinvoiced)
        END * (l.qtyinvoiced - sum(COALESCE(m.qty, (0)::numeric)))) AS qtyentered,
    l.c_uom_id,
    (l.qtyinvoiced - sum(COALESCE(m.qty, (0)::numeric))) AS movementqty,
        CASE
            WHEN (l.qtyinvoiced = (0)::numeric) THEN (0)::numeric
            ELSE (l.qtyentered / l.qtyinvoiced)
        END AS multiplier,
    p.m_locator_id,
    COALESCE(p.name, c.name) AS name,
    l.m_product_id,
    l.m_attributesetinstance_id,
    l.c_charge_id,
    l.description,
    po.vendorproductno,
    inv.c_order_id,
    inv.c_invoice_id,
    0 AS m_rma_id,
    inv.dateinvoiced AS datedoc,
    inv.c_bpartner_id,
    inv.docstatus,
    'I'::text AS createfromtype,
    l.c_activity_id,
    l.c_project_id,
    l.c_campaign_id,
    l.user1_id,
    l.user2_id
   FROM (((((adempiere.c_invoice inv
     JOIN adempiere.c_invoiceline l ON ((l.c_invoice_id = inv.c_invoice_id)))
     LEFT JOIN adempiere.m_product p ON ((l.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.c_charge c ON ((l.c_charge_id = c.c_charge_id)))
     LEFT JOIN adempiere.m_product_po po ON (((l.m_product_id = po.m_product_id) AND (inv.c_bpartner_id = po.c_bpartner_id))))
     LEFT JOIN adempiere.m_matchinv m ON (((l.c_invoiceline_id = m.c_invoiceline_id) AND (l.qtyinvoiced <> (0)::numeric))))
  GROUP BY l.ad_client_id, l.ad_org_id, l.createdby, l.created, l.updatedby, l.updated, l.isactive, l.c_invoiceline_id, l.line, l.qtyinvoiced, l.qtyentered, l.c_uom_id, p.m_locator_id, p.name, c.name, l.m_product_id, l.m_attributesetinstance_id, l.c_charge_id, l.description, po.vendorproductno, inv.c_order_id, inv.c_invoice_id, inv.dateinvoiced, inv.c_bpartner_id, inv.docstatus, l.c_activity_id, l.c_project_id, l.c_campaign_id, l.user1_id, l.user2_id
 HAVING ((l.qtyinvoiced - sum(COALESCE(m.qty, (0)::numeric))) <> (0)::numeric)
UNION ALL
 SELECT l.ad_client_id,
    l.ad_org_id,
    l.createdby,
    l.created,
    l.updatedby,
    l.updated,
    l.isactive,
    l.m_rmaline_id AS rv_inout_createfrom_id,
    l.line,
    (l.qty - COALESCE(iolp.movementqty, (0)::numeric)) AS qtyentered,
    COALESCE(iol.c_uom_id, (100)::numeric) AS c_uom_id,
    (l.qty - COALESCE(iolp.movementqty, (0)::numeric)) AS movementqty,
    1 AS multiplier,
    p.m_locator_id,
    COALESCE(p.name, c.name) AS name,
    iol.m_product_id,
    iol.m_attributesetinstance_id,
    NULL::numeric AS c_charge_id,
    l.description,
    NULL::character varying AS vendorproductno,
    NULL::numeric AS c_order_id,
    NULL::numeric AS c_invoice_id,
    r.m_rma_id,
    r.created AS datedoc,
    io.c_bpartner_id,
    r.docstatus,
    'A'::text AS createfromtype,
    0 AS c_activity_id,
    0 AS c_project_id,
    0 AS c_campaign_id,
    0 AS user1_id,
    0 AS user2_id
   FROM ((((((adempiere.m_rma r
     JOIN adempiere.m_rmaline l ON ((l.m_rma_id = r.m_rma_id)))
     JOIN adempiere.m_inout io ON ((io.m_inout_id = r.inout_id)))
     LEFT JOIN adempiere.m_inoutline iol ON ((iol.m_inoutline_id = l.m_inoutline_id)))
     LEFT JOIN ( SELECT iolr.m_rmaline_id,
            sum(iolr.movementqty) AS movementqty
           FROM (adempiere.m_inout ior
             JOIN adempiere.m_inoutline iolr ON ((iolr.m_inout_id = ior.m_inout_id)))
          WHERE (ior.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar]))
          GROUP BY iolr.m_rmaline_id) iolp ON ((iolp.m_rmaline_id = l.m_rmaline_id)))
     LEFT JOIN adempiere.m_product p ON ((p.m_product_id = iol.m_product_id)))
     LEFT JOIN adempiere.c_charge c ON ((l.c_charge_id = c.c_charge_id)))
  WHERE ((l.qty <> (0)::numeric) AND ((l.m_inoutline_id IS NOT NULL) OR (l.c_charge_id IS NOT NULL)));


ALTER TABLE adempiere.rv_inout_createfrom OWNER TO adempiere;

--
-- Name: rv_inoutconfirm; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_inoutconfirm AS
 SELECT c.m_inoutconfirm_id,
    c.ad_client_id,
    c.ad_org_id,
    c.isactive,
    c.created,
    c.createdby,
    c.updated,
    c.updatedby,
    c.m_inout_id,
    c.documentno,
    c.confirmtype,
    c.isapproved,
    c.iscancelled,
    c.description,
    c.processing,
    c.processed,
    i.c_bpartner_id,
    i.c_bpartner_location_id,
    i.m_warehouse_id,
    i.c_order_id,
    i.issotrx
   FROM (adempiere.m_inoutconfirm c
     JOIN adempiere.m_inout i ON ((c.m_inout_id = i.m_inout_id)));


ALTER TABLE adempiere.rv_inoutconfirm OWNER TO adempiere;

--
-- Name: rv_inoutdetails; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_inoutdetails AS
 SELECT h.ad_client_id,
    h.ad_org_id,
    l.isactive,
    l.created,
    l.createdby,
    l.updated,
    l.updatedby,
    h.m_inout_id,
    h.issotrx,
    h.documentno,
    h.docaction,
    h.docstatus,
    h.posted,
    h.processed,
    h.c_doctype_id,
    h.description,
    h.c_order_id,
    h.dateordered,
    h.movementtype,
    h.movementdate,
    h.dateacct,
    h.c_bpartner_id,
    h.c_bpartner_location_id,
    h.ad_user_id,
    h.salesrep_id,
    h.m_warehouse_id,
    h.poreference,
    h.deliveryrule,
    h.freightcostrule,
    h.freightamt,
    h.deliveryviarule,
    h.m_shipper_id,
    h.priorityrule,
    h.dateprinted,
    h.nopackages,
    h.pickdate,
    h.shipdate,
    h.trackingno,
    h.ad_orgtrx_id,
    h.c_project_id,
    h.c_campaign_id,
    h.c_activity_id,
    h.user1_id,
    h.user2_id,
    h.user3_id,
    h.user4_id,
    h.datereceived,
    h.isapproved,
    h.isindispute,
    l.m_inoutline_id,
    l.line,
    l.description AS linedescription,
    l.c_orderline_id,
    l.m_locator_id,
    l.m_product_id,
    l.c_uom_id,
    l.m_attributesetinstance_id,
    adempiere.productattribute(l.m_attributesetinstance_id) AS productattribute,
    pasi.m_attributeset_id,
    pasi.m_lot_id,
    pasi.guaranteedate,
    pasi.lot,
    pasi.serno,
    l.movementqty,
    l.qtyentered,
    l.isdescription,
    l.confirmedqty,
    l.pickedqty,
    l.scrappedqty,
    l.targetqty,
    loc.value AS locatorvalue,
    loc.x,
    loc.y,
    loc.z
   FROM (((adempiere.m_inout h
     JOIN adempiere.m_inoutline l ON ((h.m_inout_id = l.m_inout_id)))
     LEFT JOIN adempiere.m_locator loc ON ((l.m_locator_id = loc.m_locator_id)))
     LEFT JOIN adempiere.m_attributesetinstance pasi ON ((l.m_attributesetinstance_id = pasi.m_attributesetinstance_id)));


ALTER TABLE adempiere.rv_inoutdetails OWNER TO adempiere;

--
-- Name: rv_inoutlineconfirm; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_inoutlineconfirm AS
 SELECT cl.m_inoutconfirm_id,
    cl.m_inoutlineconfirm_id,
    cl.ad_client_id,
    cl.ad_org_id,
    cl.isactive,
    cl.created,
    cl.createdby,
    cl.updated,
    cl.updatedby,
    cl.targetqty,
    cl.confirmedqty,
    cl.differenceqty,
    cl.scrappedqty,
    cl.description,
    cl.processed,
    c.m_inout_id,
    c.documentno,
    c.confirmtype,
    c.isapproved,
    c.iscancelled,
    i.c_bpartner_id,
    i.c_bpartner_location_id,
    i.m_warehouse_id,
    i.c_order_id,
    i.issotrx,
    cl.m_inoutline_id,
    il.m_product_id,
    il.m_attributesetinstance_id,
    il.m_locator_id
   FROM (((adempiere.m_inoutlineconfirm cl
     JOIN adempiere.m_inoutconfirm c ON ((cl.m_inoutconfirm_id = c.m_inoutconfirm_id)))
     JOIN adempiere.m_inout i ON ((c.m_inout_id = i.m_inout_id)))
     JOIN adempiere.m_inoutline il ON ((cl.m_inoutline_id = il.m_inoutline_id)));


ALTER TABLE adempiere.rv_inoutlineconfirm OWNER TO adempiere;

--
-- Name: rv_invoice_createfrom; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_invoice_createfrom AS
 SELECT l.ad_client_id,
    l.ad_org_id,
    l.createdby,
    l.created,
    l.updatedby,
    l.updated,
    l.isactive,
    l.c_orderline_id AS rv_invoice_createfrom_id,
    l.line,
    (
        CASE
            WHEN (l.qtyordered = (0)::numeric) THEN (0)::numeric
            ELSE (l.qtyentered / l.qtyordered)
        END * (l.qtyordered - sum(COALESCE(m.qty, (0)::numeric)))) AS qtyentered,
    l.c_uom_id,
    (l.qtyordered - sum(COALESCE(m.qty, (0)::numeric))) AS movementqty,
        CASE
            WHEN (l.qtyordered = (0)::numeric) THEN (0)::numeric
            ELSE (l.qtyentered / l.qtyordered)
        END AS multiplier,
    COALESCE(p.name, c.name) AS name,
    l.m_product_id,
    l.m_attributesetinstance_id,
    l.c_charge_id,
    l.description,
    po.vendorproductno,
    o.c_order_id,
    0 AS c_invoice_id,
    0 AS m_inout_id,
    0 AS m_rma_id,
    o.dateordered AS datedoc,
    o.c_bpartner_id,
    o.docstatus,
    'O'::text AS createfromtype
   FROM (((((adempiere.c_order o
     JOIN adempiere.c_orderline l ON ((l.c_order_id = o.c_order_id)))
     LEFT JOIN adempiere.m_product_po po ON (((l.m_product_id = po.m_product_id) AND (l.c_bpartner_id = po.c_bpartner_id))))
     LEFT JOIN adempiere.m_matchpo m ON (((l.c_orderline_id = m.c_orderline_id) AND (m.c_invoiceline_id IS NOT NULL))))
     LEFT JOIN adempiere.m_product p ON ((l.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.c_charge c ON ((l.c_charge_id = c.c_charge_id)))
  WHERE (l.qtyordered <> (0)::numeric)
  GROUP BY l.ad_client_id, l.ad_org_id, l.createdby, l.created, l.updatedby, l.updated, l.isactive, l.c_orderline_id, l.line, l.qtyordered, l.qtyentered, l.c_uom_id, p.name, c.name, l.m_product_id, l.m_attributesetinstance_id, l.c_charge_id, l.description, po.vendorproductno, o.c_order_id, o.dateordered, o.c_bpartner_id, o.docstatus
 HAVING ((l.qtyordered - sum(COALESCE(m.qty, (0)::numeric))) <> (0)::numeric)
UNION ALL
 SELECT l.ad_client_id,
    l.ad_org_id,
    l.createdby,
    l.created,
    l.updatedby,
    l.updated,
    l.isactive,
    l.m_inoutline_id AS rv_invoice_createfrom_id,
    l.line,
    (
        CASE
            WHEN (l.movementqty = (0)::numeric) THEN (0)::numeric
            ELSE (l.qtyentered / l.movementqty)
        END * (l.movementqty - sum(COALESCE(m.qty, (0)::numeric)))) AS qtyentered,
    l.c_uom_id,
    (l.movementqty - sum(COALESCE(m.qty, (0)::numeric))) AS movementqty,
        CASE
            WHEN (l.movementqty = (0)::numeric) THEN (0)::numeric
            ELSE (l.qtyentered / l.movementqty)
        END AS multiplier,
    COALESCE(p.name, c.name) AS name,
    l.m_product_id,
    l.m_attributesetinstance_id,
    l.c_charge_id,
    l.description,
    po.vendorproductno,
    io.c_order_id,
    0 AS c_invoice_id,
    io.m_inout_id,
    0 AS m_rma_id,
    io.movementdate AS datedoc,
    io.c_bpartner_id,
    io.docstatus,
    'R'::text AS createfromtype
   FROM (((((adempiere.m_inout io
     JOIN adempiere.m_inoutline l ON ((l.m_inout_id = io.m_inout_id)))
     LEFT JOIN adempiere.m_product p ON ((l.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.c_charge c ON ((l.c_charge_id = c.c_charge_id)))
     LEFT JOIN adempiere.m_product_po po ON (((l.m_product_id = po.m_product_id) AND (io.c_bpartner_id = po.c_bpartner_id))))
     LEFT JOIN adempiere.m_matchinv m ON (((l.m_inoutline_id = m.m_inoutline_id) AND (l.movementqty <> (0)::numeric))))
  GROUP BY l.ad_client_id, l.ad_org_id, l.createdby, l.created, l.updatedby, l.updated, l.isactive, l.m_inoutline_id, l.line, l.movementqty, l.qtyentered, l.c_uom_id, p.name, c.name, l.m_product_id, l.m_attributesetinstance_id, l.c_charge_id, l.description, po.vendorproductno, io.c_order_id, io.m_inout_id, io.movementdate, io.c_bpartner_id, io.docstatus
 HAVING ((l.movementqty - sum(COALESCE(m.qty, (0)::numeric))) <> (0)::numeric)
UNION ALL
 SELECT l.ad_client_id,
    l.ad_org_id,
    l.createdby,
    l.created,
    l.updatedby,
    l.updated,
    l.isactive,
    l.m_rmaline_id AS rv_invoice_createfrom_id,
    l.line,
    (l.qty - COALESCE(inlp.qtyinvoiced, (0)::numeric)) AS qtyentered,
    COALESCE(iol.c_uom_id, (100)::numeric) AS c_uom_id,
    (l.qty - COALESCE(inlp.qtyinvoiced, (0)::numeric)) AS movementqty,
    1 AS multiplier,
    COALESCE(p.name, c.name) AS name,
    iol.m_product_id,
    iol.m_attributesetinstance_id,
    NULL::numeric AS c_charge_id,
    l.description,
    NULL::character varying AS vendorproductno,
    0 AS c_order_id,
    0 AS c_invoice_id,
    0 AS m_inout_id,
    r.m_rma_id,
    r.created AS datedoc,
    io.c_bpartner_id,
    r.docstatus,
    'A'::text AS createfromtype
   FROM ((((((adempiere.m_rma r
     JOIN adempiere.m_rmaline l ON ((l.m_rma_id = r.m_rma_id)))
     JOIN adempiere.m_inout io ON ((io.m_inout_id = r.inout_id)))
     LEFT JOIN adempiere.m_inoutline iol ON ((iol.m_inoutline_id = l.m_inoutline_id)))
     LEFT JOIN ( SELECT inlr.m_rmaline_id,
            sum(inlr.qtyinvoiced) AS qtyinvoiced
           FROM (adempiere.c_invoice inr
             JOIN adempiere.c_invoiceline inlr ON ((inlr.c_invoice_id = inr.c_invoice_id)))
          WHERE (inr.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar]))
          GROUP BY inlr.m_rmaline_id) inlp ON ((inlp.m_rmaline_id = l.m_rmaline_id)))
     LEFT JOIN adempiere.m_product p ON ((p.m_product_id = iol.m_product_id)))
     LEFT JOIN adempiere.c_charge c ON ((l.c_charge_id = c.c_charge_id)))
  WHERE ((l.qty <> (0)::numeric) AND ((l.m_inoutline_id IS NOT NULL) OR (l.c_charge_id IS NOT NULL)))
UNION ALL
 SELECT l.ad_client_id,
    l.ad_org_id,
    l.createdby,
    l.created,
    l.updatedby,
    l.updated,
    l.isactive,
    l.c_invoiceline_id AS rv_invoice_createfrom_id,
    l.line,
    (
        CASE
            WHEN (l.qtyinvoiced = (0)::numeric) THEN (0)::numeric
            ELSE (l.qtyentered / l.qtyinvoiced)
        END * l.qtyinvoiced) AS qtyentered,
    l.c_uom_id,
    l.qtyinvoiced AS movementqty,
        CASE
            WHEN (l.qtyinvoiced = (0)::numeric) THEN (0)::numeric
            ELSE (l.qtyentered / l.qtyinvoiced)
        END AS multiplier,
    COALESCE(p.name, c.name) AS name,
    l.m_product_id,
    l.m_attributesetinstance_id,
    l.c_charge_id,
    l.description,
    po.vendorproductno,
    0 AS c_order_id,
    i.c_invoice_id,
    0 AS m_inout_id,
    0 AS m_rma_id,
    i.dateinvoiced AS datedoc,
    i.c_bpartner_id,
    i.docstatus,
    'I'::text AS createfromtype
   FROM ((((adempiere.c_invoice i
     JOIN adempiere.c_invoiceline l ON ((l.c_invoice_id = i.c_invoice_id)))
     LEFT JOIN adempiere.m_product_po po ON (((l.m_product_id = po.m_product_id) AND (i.c_bpartner_id = po.c_bpartner_id))))
     LEFT JOIN adempiere.m_product p ON ((l.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.c_charge c ON ((l.c_charge_id = c.c_charge_id)));


ALTER TABLE adempiere.rv_invoice_createfrom OWNER TO adempiere;

--
-- Name: rv_m_forecast; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_m_forecast AS
 SELECT f.ad_client_id,
    fl.ad_org_id,
    f.m_forecast_id,
    f.name,
    f.pp_calendar_id,
    f.pp_perioddefinition_id,
    f.c_project_id,
    f.c_projectphase_id,
    f.c_campaign_id,
    fl.pp_period_id,
    fl.datepromised,
    fl.m_product_id,
    fl.salesrep_id,
    p.c_uom_id,
    fl.qty,
    fl.qtycalculated,
    ( SELECT pp.pricelist
           FROM (adempiere.m_pricelist_version plv
             JOIN adempiere.m_productprice pp ON ((pp.m_pricelist_version_id = plv.m_pricelist_version_id)))
          WHERE ((plv.isactive = 'Y'::bpchar) AND (pp.m_product_id = fl.m_product_id) AND (plv.m_pricelist_id = pl.m_pricelist_id))) AS pricelist,
    ( SELECT pp.pricestd
           FROM (adempiere.m_pricelist_version plv
             JOIN adempiere.m_productprice pp ON ((pp.m_pricelist_version_id = plv.m_pricelist_version_id)))
          WHERE ((plv.isactive = 'Y'::bpchar) AND (pp.m_product_id = fl.m_product_id) AND (plv.m_pricelist_id = pl.m_pricelist_id))) AS pricestd,
    ( SELECT pp.pricelimit
           FROM (adempiere.m_pricelist_version plv
             JOIN adempiere.m_productprice pp ON ((pp.m_pricelist_version_id = plv.m_pricelist_version_id)))
          WHERE ((plv.isactive = 'Y'::bpchar) AND (pp.m_product_id = fl.m_product_id) AND (plv.m_pricelist_id = pl.m_pricelist_id))) AS pricelimit,
    (( SELECT pp.pricestd
           FROM (adempiere.m_pricelist_version plv
             JOIN adempiere.m_productprice pp ON ((pp.m_pricelist_version_id = plv.m_pricelist_version_id)))
          WHERE ((plv.isactive = 'Y'::bpchar) AND (pp.m_product_id = fl.m_product_id) AND (plv.m_pricelist_id = pl.m_pricelist_id))) * fl.qty) AS totalamt,
    p.m_product_category_id,
    p.classification,
    p.group1,
    p.group2
   FROM (((adempiere.m_forecast f
     JOIN adempiere.m_forecastline fl ON ((f.m_forecast_id = fl.m_forecast_id)))
     JOIN adempiere.m_product p ON ((p.m_product_id = fl.m_product_id)))
     JOIN adempiere.m_pricelist pl ON ((pl.m_pricelist_id = f.m_pricelist_id)));


ALTER TABLE adempiere.rv_m_forecast OWNER TO adempiere;

--
-- Name: rv_m_forecast_period; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_m_forecast_period AS
 SELECT f.ad_client_id,
    f.ad_org_id,
    f.m_forecast_id,
    max((f.name)::text) AS name,
    f.pp_calendar_id,
    f.pp_perioddefinition_id,
    f.pp_period_id,
    f.c_project_id,
    f.c_projectphase_id,
    f.c_campaign_id,
    f.m_product_id,
    f.c_uom_id,
    sum(f.qty) AS qty,
    sum(f.qtycalculated) AS qtycalculated,
    sum(f.totalamt) AS totalamt
   FROM adempiere.rv_m_forecast f
  GROUP BY f.ad_client_id, f.ad_org_id, f.m_forecast_id, f.m_product_id, f.c_uom_id, f.pp_calendar_id, f.pp_perioddefinition_id, f.pp_period_id, f.c_project_id, f.c_projectphase_id, f.c_campaign_id;


ALTER TABLE adempiere.rv_m_forecast_period OWNER TO adempiere;

--
-- Name: rv_m_replenishplan_production; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_m_replenishplan_production AS
 SELECT mrl.ad_client_id,
    mrl.ad_org_id,
    mrl.m_replenishplan_id,
    p.m_product_id,
    pd.m_production_id,
    pd.productionqty,
    pd.datepromised,
    pd.movementdate,
    pd.isactive,
    p.m_product_category_id,
    trunc(c.currentcostprice, 6) AS currentcostprice,
    (trunc(c.currentcostprice, 6) * pd.productionqty) AS currentcostvalue
   FROM (((adempiere.m_replenishplanline mrl
     JOIN adempiere.m_production pd ON ((pd.m_production_id = mrl.m_production_id)))
     JOIN adempiere.m_product p ON ((p.m_product_id = pd.m_product_id)))
     LEFT JOIN adempiere.m_cost c ON ((c.m_product_id = p.m_product_id)))
  WHERE (((mrl.recordtype)::text = 'Planned Production'::text) AND (c.m_costelement_id = ( SELECT m_costelement.m_costelement_id
           FROM adempiere.m_costelement
          WHERE ((m_costelement.ad_client_id = p.ad_client_id) AND (m_costelement.costingmethod = 'S'::bpchar) AND (m_costelement.costelementtype = 'M'::bpchar)))))
  ORDER BY pd.m_production_id;


ALTER TABLE adempiere.rv_m_replenishplan_production OWNER TO adempiere;

--
-- Name: rv_m_replenishplan_requisition; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_m_replenishplan_requisition AS
 SELECT mrl.ad_client_id,
    mrl.ad_org_id,
    mrl.m_replenishplanline_id,
    mrl.m_replenishplan_id,
    r.m_requisition_id,
    r.documentno,
    rl.line,
    p.m_product_id,
    po.vendorproductno,
    rl.c_bpartner_id,
    rl.qty,
    rl.priceactual,
    rl.isactive,
    r.daterequired,
    p.m_product_category_id,
    (rl.priceactual * rl.qty) AS amount
   FROM ((((adempiere.m_replenishplanline mrl
     JOIN adempiere.m_requisitionline rl ON (((rl.m_requisition_id = mrl.m_requisition_id) AND (rl.m_product_id = mrl.m_product_id))))
     JOIN adempiere.m_requisition r ON ((r.m_requisition_id = rl.m_requisition_id)))
     JOIN adempiere.m_product p ON ((p.m_product_id = rl.m_product_id)))
     LEFT JOIN adempiere.m_product_po po ON (((po.m_product_id = p.m_product_id) AND (po.c_bpartner_id = rl.c_bpartner_id))))
  ORDER BY r.m_requisition_id, rl.line;


ALTER TABLE adempiere.rv_m_replenishplan_requisition OWNER TO adempiere;

--
-- Name: rv_m_requisition; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_m_requisition AS
 SELECT r.m_requisition_id,
    r.ad_client_id,
    r.ad_org_id,
    r.isactive,
    r.created,
    r.createdby,
    r.updated,
    r.updatedby,
    r.documentno,
    r.description,
    r.help,
    r.ad_user_id,
    r.m_pricelist_id,
    r.m_warehouse_id,
    r.isapproved,
    r.priorityrule,
    r.daterequired,
    r.totallines,
    r.docaction,
    r.docstatus,
    r.processed,
    l.m_requisitionline_id,
    l.line,
    l.qty,
        CASE
            WHEN (l.c_orderline_id IS NOT NULL) THEN l.qty
            ELSE (0)::numeric
        END AS qtyordered,
    l.m_product_id,
    l.description AS linedescription,
    l.priceactual,
    l.linenetamt
   FROM (adempiere.m_requisition r
     JOIN adempiere.m_requisitionline l ON ((r.m_requisition_id = l.m_requisition_id)));


ALTER TABLE adempiere.rv_m_requisition OWNER TO adempiere;

--
-- Name: rv_m_transaction; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_m_transaction AS
 SELECT t.ad_client_id,
    t.ad_org_id,
    t.movementdate,
    t.movementqty,
    t.m_product_id,
    t.m_locator_id,
    t.m_attributesetinstance_id,
    p.m_product_category_id,
    p.value,
    po.c_bpartner_id,
    po.pricepo,
    po.pricelastpo,
    po.pricelist
   FROM ((adempiere.m_transaction t
     JOIN adempiere.m_product p ON ((t.m_product_id = p.m_product_id)))
     JOIN adempiere.m_product_po po ON ((t.m_product_id = po.m_product_id)))
  WHERE (po.iscurrentvendor = 'Y'::bpchar);


ALTER TABLE adempiere.rv_m_transaction OWNER TO adempiere;

--
-- Name: rv_transaction; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_transaction AS
 SELECT t.m_transaction_id,
    t.ad_client_id,
    t.ad_org_id,
    t.movementtype,
    t.movementdate,
    t.movementqty,
    t.m_attributesetinstance_id,
    asi.m_attributeset_id,
    asi.serno,
    asi.lot,
    asi.m_lot_id,
    asi.guaranteedate,
    t.m_product_id,
    p.value,
    p.name,
    p.description,
    p.upc,
    p.sku,
    p.c_uom_id,
    p.m_product_category_id,
    p.classification,
    p.weight,
    p.volume,
    p.versionno,
    t.m_locator_id,
    l.m_warehouse_id,
    l.x,
    l.y,
    l.z,
    t.m_inventoryline_id,
    il.m_inventory_id,
    t.m_movementline_id,
    ml.m_movement_id,
    t.m_inoutline_id,
    iol.m_inout_id,
    t.m_productionline_id,
    prdl.m_productionplan_id,
    prdl.m_production_id,
    t.c_projectissue_id,
    t.pp_cost_collector_id,
    COALESCE(il.line, ml.line, iol.line, prdl.line, pjl.line) AS line,
    COALESCE(i.movementdate, m.movementdate, io.dateacct, prd.movementdate, pjl.movementdate, cc.dateacct) AS dateacct,
    COALESCE(i.documentno, m.documentno, io.documentno, prd.name, pj.value, cc.documentno) AS documentno,
    COALESCE(i.c_doctype_id, m.c_doctype_id, io.c_doctype_id, (0)::numeric, (0)::numeric, cc.c_doctype_id) AS c_doctype_id,
    COALESCE(pjl.c_project_id, iol.c_project_id, i.c_project_id, m.c_project_id, cc.c_project_id) AS c_project_id,
    COALESCE(i.c_activity_id, iol.c_activity_id, m.c_activity_id, cc.c_activity_id) AS c_activity_id,
    COALESCE(i.c_campaign_id, iol.c_campaign_id, m.c_campaign_id) AS c_campaign_id,
    0 AS c_region_id,
    COALESCE(il.createdby, io.c_bpartner_id, m.c_bpartner_id) AS c_bpartner_id,
    COALESCE(i.user1_id, iol.user1_id, m.user1_id, cc.user1_id) AS user1_id,
    COALESCE(i.user2_id, iol.user2_id, m.user2_id, cc.user2_id) AS user2_id,
    COALESCE(i.user3_id, iol.user1_id, m.user3_id, cc.user3_id) AS user3_id,
    COALESCE(i.user4_id, iol.user4_id, m.user4_id, cc.user4_id) AS user4_id,
    p.lowlevel
   FROM ((((((((((((((adempiere.m_transaction t
     JOIN adempiere.m_locator l ON ((t.m_locator_id = l.m_locator_id)))
     JOIN adempiere.m_product p ON ((t.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.m_attributesetinstance asi ON ((t.m_attributesetinstance_id = asi.m_attributesetinstance_id)))
     LEFT JOIN adempiere.m_inventoryline il ON ((t.m_inventoryline_id = il.m_inventoryline_id)))
     LEFT JOIN adempiere.m_inventory i ON ((il.m_inventory_id = i.m_inventory_id)))
     LEFT JOIN adempiere.m_movementline ml ON ((t.m_movementline_id = ml.m_movementline_id)))
     LEFT JOIN adempiere.m_movement m ON ((ml.m_movement_id = m.m_movement_id)))
     LEFT JOIN adempiere.m_inoutline iol ON ((t.m_inoutline_id = iol.m_inoutline_id)))
     LEFT JOIN adempiere.m_inout io ON ((iol.m_inout_id = io.m_inout_id)))
     LEFT JOIN adempiere.m_productionline prdl ON ((t.m_productionline_id = prdl.m_productionline_id)))
     LEFT JOIN adempiere.m_production prd ON ((prdl.m_production_id = prd.m_production_id)))
     LEFT JOIN adempiere.c_projectissue pjl ON ((t.c_projectissue_id = pjl.c_projectissue_id)))
     LEFT JOIN adempiere.c_project pj ON ((pjl.c_project_id = pj.c_project_id)))
     LEFT JOIN adempiere.pp_cost_collector cc ON ((t.pp_cost_collector_id = cc.pp_cost_collector_id)));


ALTER TABLE adempiere.rv_transaction OWNER TO adempiere;

--
-- Name: rv_m_transaction_costing; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_m_transaction_costing AS
 SELECT t.m_transaction_id,
    t.ad_client_id,
    t.ad_org_id,
    t.movementtype,
    t.movementdate,
    t.movementqty,
    t.m_attributesetinstance_id,
    t.m_attributeset_id,
    t.serno,
    t.lot,
    t.m_lot_id,
    t.guaranteedate,
    t.m_product_id,
    p.value,
    p.name,
    p.description,
    p.upc,
    p.sku,
    p.c_uom_id,
    p.m_product_category_id,
    p.classification,
    p.group1,
    p.group2,
    p.weight,
    p.volume,
    p.versionno,
    t.documentno,
    t.c_doctype_id,
    t.m_locator_id,
    t.x,
    t.y,
    t.z,
    t.m_warehouse_id,
    t.m_inventoryline_id,
    t.m_inventory_id,
    t.m_movementline_id,
    t.m_movement_id,
    t.m_inoutline_id,
    t.m_inout_id,
    t.m_productionline_id,
    t.m_productionplan_id,
    t.m_production_id,
    t.c_projectissue_id,
    t.pp_cost_collector_id,
    cd.c_landedcostallocation_id,
    cd.c_acctschema_id,
    cd.m_costtype_id,
    cd.m_costelement_id,
    cd.seqno,
    cd.costadjustmentdate,
    cd.costadjustmentdatell,
    cd.dateacct,
    cd.cumulatedqty AS beginningqtybalance,
    cd.currentcostprice,
    cd.currentcostpricell,
    cd.isreversal,
    cd.issotrx,
    cd.m_costdetail_id,
    (cd.cumulatedamt + cd.cumulatedamtll) AS beginningbalance,
    cd.qty,
        CASE
            WHEN (cd.qty < (0)::numeric) THEN (cd.amt * ('-1'::integer)::numeric)
            ELSE cd.amt
        END AS amt,
        CASE
            WHEN (cd.qty < (0)::numeric) THEN (cd.amtll * ('-1'::integer)::numeric)
            ELSE cd.amtll
        END AS amtll,
        CASE
            WHEN (cd.qty < (0)::numeric) THEN (cd.costamt * ('-1'::integer)::numeric)
            ELSE cd.costamt
        END AS costamt,
        CASE
            WHEN (cd.qty < (0)::numeric) THEN (cd.costamtll * ('-1'::integer)::numeric)
            ELSE cd.costamtll
        END AS costamtll,
        CASE
            WHEN (cd.qty < (0)::numeric) THEN (cd.costadjustment * ('-1'::integer)::numeric)
            ELSE cd.costadjustment
        END AS costadjustment,
        CASE
            WHEN (cd.qty < (0)::numeric) THEN (cd.costadjustmentll * ('-1'::integer)::numeric)
            ELSE cd.costadjustmentll
        END AS costadjustmentll,
    cd.cumulatedamt,
    cd.cumulatedamtll,
    (cd.cumulatedqty + cd.qty) AS endingqtybalance,
    (((((cd.cumulatedamt + cd.cumulatedamtll) +
        CASE
            WHEN ((cd.qty < (0)::numeric) OR ((cd.qty = (0)::numeric) AND (cd.cumulatedqty < (0)::numeric))) THEN (cd.costamt * ('-1'::integer)::numeric)
            ELSE cd.costamt
        END) +
        CASE
            WHEN ((cd.qty < (0)::numeric) OR ((cd.qty = (0)::numeric) AND (cd.cumulatedqty < (0)::numeric))) THEN (cd.costamtll * ('-1'::integer)::numeric)
            ELSE cd.costamtll
        END) +
        CASE
            WHEN ((cd.qty < (0)::numeric) OR ((cd.qty = (0)::numeric) AND (cd.cumulatedqty < (0)::numeric))) THEN (cd.costadjustment * ('-1'::integer)::numeric)
            ELSE cd.costadjustment
        END) +
        CASE
            WHEN ((cd.qty < (0)::numeric) OR ((cd.qty = (0)::numeric) AND (cd.cumulatedqty < (0)::numeric))) THEN (cd.costadjustmentll * ('-1'::integer)::numeric)
            ELSE cd.costadjustmentll
        END) AS endingbalance,
    t.c_project_id,
    t.c_activity_id,
    t.c_campaign_id,
    t.c_region_id,
    t.c_bpartner_id,
    t.user1_id,
    t.user2_id,
    t.user3_id,
    t.user4_id
   FROM ((((adempiere.m_product p
     JOIN adempiere.rv_transaction t ON ((t.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.m_costdetail cd ON (((cd.m_transaction_id = t.m_transaction_id) AND (cd.m_product_id = p.m_product_id))))
     LEFT JOIN adempiere.m_costtype ct ON ((ct.m_costtype_id = cd.m_costtype_id)))
     LEFT JOIN adempiere.m_costelement ce ON ((ce.m_costelement_id = cd.m_costelement_id)));


ALTER TABLE adempiere.rv_m_transaction_costing OWNER TO adempiere;

--
-- Name: rv_m_transaction_sum; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_m_transaction_sum AS
 SELECT t.ad_client_id,
    t.ad_org_id,
    t.movementtype,
    l.m_warehouse_id,
    t.m_locator_id,
    t.m_product_id,
    t.movementdate,
    sum(t.movementqty) AS movementqty
   FROM adempiere.m_transaction t,
    adempiere.m_locator l
  WHERE (t.m_locator_id = l.m_locator_id)
  GROUP BY t.ad_client_id, t.ad_org_id, t.movementtype, l.m_warehouse_id, t.m_locator_id, t.m_product_id, t.movementdate;


ALTER TABLE adempiere.rv_m_transaction_sum OWNER TO adempiere;

--
-- Name: rv_openitem; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_openitem AS
 SELECT i.ad_org_id,
    i.ad_client_id,
    i.documentno,
    i.c_invoice_id,
    i.c_order_id,
    i.c_bpartner_id,
    i.issotrx,
    i.dateinvoiced,
    i.dateacct,
    p.netdays,
    adempiere.paymenttermduedate(i.c_paymentterm_id, (i.dateinvoiced)::timestamp with time zone) AS duedate,
    adempiere.paymenttermduedays(i.c_paymentterm_id, (i.dateinvoiced)::timestamp with time zone, adempiere.getdate()) AS daysdue,
    adempiere.adddays((i.dateinvoiced)::timestamp with time zone, p.discountdays) AS discountdate,
    round(((i.grandtotal * p.discount) / (100)::numeric), 2) AS discountamt,
    i.grandtotal,
    adempiere.invoicepaid(i.c_invoice_id, i.c_currency_id, (1)::numeric) AS paidamt,
    adempiere.invoiceopen(i.c_invoice_id, (0)::numeric) AS openamt,
    i.c_currency_id,
    i.c_conversiontype_id,
    i.c_paymentterm_id,
    i.ispayschedulevalid,
    NULL::numeric AS c_invoicepayschedule_id,
    i.invoicecollectiontype,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id
   FROM (adempiere.rv_c_invoice i
     JOIN adempiere.c_paymentterm p ON ((i.c_paymentterm_id = p.c_paymentterm_id)))
  WHERE ((adempiere.invoiceopen(i.c_invoice_id, (0)::numeric) <> (0)::numeric) AND (i.ispayschedulevalid <> 'Y'::bpchar) AND (i.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar])))
UNION
 SELECT i.ad_org_id,
    i.ad_client_id,
    i.documentno,
    i.c_invoice_id,
    i.c_order_id,
    i.c_bpartner_id,
    i.issotrx,
    i.dateinvoiced,
    i.dateacct,
    adempiere.daysbetween((ips.duedate)::timestamp with time zone, (i.dateinvoiced)::timestamp with time zone) AS netdays,
    ips.duedate,
    adempiere.daysbetween(adempiere.getdate(), (ips.duedate)::timestamp with time zone) AS daysdue,
    ips.discountdate,
    ips.discountamt,
    ips.dueamt AS grandtotal,
    adempiere.invoicepaid(i.c_invoice_id, i.c_currency_id, (1)::numeric) AS paidamt,
    adempiere.invoiceopen(i.c_invoice_id, ips.c_invoicepayschedule_id) AS openamt,
    i.c_currency_id,
    i.c_conversiontype_id,
    i.c_paymentterm_id,
    i.ispayschedulevalid,
    ips.c_invoicepayschedule_id,
    i.invoicecollectiontype,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id
   FROM (adempiere.rv_c_invoice i
     JOIN adempiere.c_invoicepayschedule ips ON ((i.c_invoice_id = ips.c_invoice_id)))
  WHERE ((adempiere.invoiceopen(i.c_invoice_id, ips.c_invoicepayschedule_id) <> (0)::numeric) AND (i.ispayschedulevalid = 'Y'::bpchar) AND (i.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar])) AND (ips.isvalid = 'Y'::bpchar));


ALTER TABLE adempiere.rv_openitem OWNER TO adempiere;

--
-- Name: rv_openitemtodate; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_openitemtodate AS
 SELECT i.ad_org_id,
    i.ad_client_id,
    i.documentno,
    i.c_invoice_id,
    i.c_order_id,
    i.c_bpartner_id,
    i.issotrx,
    i.dateinvoiced,
    i.dateacct,
    p.netdays,
    adempiere.paymenttermduedate(i.c_paymentterm_id, (i.dateinvoiced)::timestamp with time zone) AS duedate,
    adempiere.paymenttermduedays(i.c_paymentterm_id, (i.dateinvoiced)::timestamp with time zone, adempiere.getdate()) AS daysdue,
    adempiere.adddays((i.dateinvoiced)::timestamp with time zone, p.discountdays) AS discountdate,
    round(((i.grandtotal * p.discount) / (100)::numeric), 2) AS discountamt,
    i.grandtotal,
    i.c_currency_id,
    i.c_conversiontype_id,
    i.c_paymentterm_id,
    i.ispayschedulevalid,
    NULL::numeric AS c_invoicepayschedule_id,
    i.invoicecollectiontype,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id
   FROM (adempiere.rv_c_invoice i
     JOIN adempiere.c_paymentterm p ON ((i.c_paymentterm_id = p.c_paymentterm_id)))
  WHERE ((i.ispayschedulevalid <> 'Y'::bpchar) AND (i.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar])))
UNION
 SELECT i.ad_org_id,
    i.ad_client_id,
    i.documentno,
    i.c_invoice_id,
    i.c_order_id,
    i.c_bpartner_id,
    i.issotrx,
    i.dateinvoiced,
    i.dateacct,
    adempiere.daysbetween((ips.duedate)::timestamp with time zone, (i.dateinvoiced)::timestamp with time zone) AS netdays,
    ips.duedate,
    adempiere.daysbetween(adempiere.getdate(), (ips.duedate)::timestamp with time zone) AS daysdue,
    ips.discountdate,
    ips.discountamt,
    ips.dueamt AS grandtotal,
    i.c_currency_id,
    i.c_conversiontype_id,
    i.c_paymentterm_id,
    i.ispayschedulevalid,
    ips.c_invoicepayschedule_id,
    i.invoicecollectiontype,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id
   FROM (adempiere.rv_c_invoice i
     JOIN adempiere.c_invoicepayschedule ips ON ((i.c_invoice_id = ips.c_invoice_id)))
  WHERE ((i.ispayschedulevalid = 'Y'::bpchar) AND (i.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar])) AND (ips.isvalid = 'Y'::bpchar));


ALTER TABLE adempiere.rv_openitemtodate OWNER TO adempiere;

--
-- Name: rv_orderdetail; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_orderdetail AS
 SELECT l.ad_client_id,
    l.ad_org_id,
    l.isactive,
    l.created,
    l.createdby,
    l.updated,
    l.updatedby,
    o.c_order_id,
    o.docstatus,
    o.docaction,
    o.c_doctype_id,
    o.isapproved,
    o.iscreditapproved,
    o.salesrep_id,
    o.bill_bpartner_id,
    o.bill_location_id,
    o.bill_user_id,
    o.isdropship,
    l.c_bpartner_id,
    l.c_bpartner_location_id,
    o.ad_user_id,
    o.poreference,
    o.c_currency_id,
    o.issotrx,
    l.c_campaign_id,
    l.c_project_id,
    l.c_activity_id,
    l.c_projectphase_id,
    l.c_projecttask_id,
    l.c_orderline_id,
    l.dateordered,
    l.datepromised,
    l.m_product_id,
    l.m_warehouse_id,
    l.m_attributesetinstance_id,
    adempiere.productattribute(l.m_attributesetinstance_id) AS productattribute,
    pasi.m_attributeset_id,
    pasi.m_lot_id,
    pasi.guaranteedate,
    pasi.lot,
    pasi.serno,
    l.c_uom_id,
    l.qtyentered,
    l.qtyordered,
    l.qtyreserved,
    l.qtydelivered,
    l.qtyinvoiced,
    l.priceactual,
    l.priceentered,
    (l.qtyordered - l.qtydelivered) AS qtytodeliver,
    (l.qtyordered - l.qtyinvoiced) AS qtytoinvoice,
    ((l.qtyordered - l.qtyinvoiced) * l.priceactual) AS netamttoinvoice,
    l.qtylostsales,
    (l.qtylostsales * l.priceactual) AS amtlostsales,
        CASE
            WHEN (l.pricelist = (0)::numeric) THEN (0)::numeric
            ELSE round((((l.pricelist - l.priceactual) / l.pricelist) * (100)::numeric), 2)
        END AS discount,
        CASE
            WHEN (l.pricelimit = (0)::numeric) THEN (0)::numeric
            ELSE round((((l.priceactual - l.pricelimit) / l.pricelimit) * (100)::numeric), 2)
        END AS margin,
        CASE
            WHEN (l.pricelimit = (0)::numeric) THEN (0)::numeric
            ELSE ((l.priceactual - l.pricelimit) * l.qtydelivered)
        END AS marginamt
   FROM ((adempiere.c_order o
     JOIN adempiere.c_orderline l ON ((o.c_order_id = l.c_order_id)))
     LEFT JOIN adempiere.m_attributesetinstance pasi ON ((l.m_attributesetinstance_id = pasi.m_attributesetinstance_id)));


ALTER TABLE adempiere.rv_orderdetail OWNER TO adempiere;

--
-- Name: rv_orderline_storage; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_orderline_storage AS
 SELECT oline.c_orderline_id,
    oline.ad_client_id,
    oline.ad_org_id,
    oline.isactive,
    oline.created,
    oline.createdby,
    oline.updated,
    oline.updatedby,
    oline.c_order_id,
    oline.line,
    oline.c_bpartner_id,
    oline.c_bpartner_location_id,
    oline.dateordered,
    oline.datepromised,
    oline.datedelivered,
    oline.dateinvoiced,
    oline.description,
    oline.m_product_id,
    oline.m_warehouse_id,
    oline.c_uom_id,
    oline.qtyordered,
    oline.qtyreserved,
    oline.qtydelivered,
    oline.qtyinvoiced,
    oline.m_shipper_id,
    oline.c_currency_id,
    oline.pricelist,
    oline.priceactual,
    oline.pricelimit,
    oline.linenetamt,
    oline.discount,
    oline.freightamt,
    oline.c_charge_id,
    oline.c_tax_id,
    oline.s_resourceassignment_id,
    oline.ref_orderline_id,
    oline.m_attributesetinstance_id,
    oline.isdescription,
    oline.processed,
    oline.qtyentered,
    oline.priceentered,
    oline.c_project_id,
    oline.pricecost,
    oline.qtylostsales,
    oline.c_projectphase_id,
    oline.c_projecttask_id,
    oline.rrstartdate,
    oline.rramt,
    oline.c_campaign_id,
    oline.c_activity_id,
    oline.user1_id,
    oline.user2_id,
    oline.ad_orgtrx_id,
    oline.link_orderline_id,
    oline.pp_cost_collector_id,
    oline.m_promotion_id,
    oline.isconsumesforecast,
    oline.createfrom,
    oline.createshipment,
    st.qtyreserved AS qtyreservedtotal,
    st.qtyonhand AS qtyonhandtotal,
    st.qtyordered AS qtyorderedtotal,
    oline.qtyreserved AS qtytodeliver,
    COALESCE(ioldr.qtymovementdrafted, (0)::numeric) AS qtymovementdrafted,
    (oline.qtyordered - oline.qtyinvoiced) AS qtyopentoinvoice,
    o.documentno,
    o.docstatus
   FROM (((adempiere.c_orderline oline
     JOIN adempiere.c_order o ON ((oline.c_order_id = o.c_order_id)))
     LEFT JOIN ( SELECT sum(s.qtyonhand) AS qtyonhand,
            sum(s.qtyreserved) AS qtyreserved,
            s.m_product_id,
            l.m_warehouse_id,
            sum(s.qtyordered) AS qtyordered
           FROM (adempiere.m_storage s
             JOIN adempiere.m_locator l ON ((s.m_locator_id = l.m_locator_id)))
          GROUP BY s.m_product_id, l.m_warehouse_id) st ON (((st.m_product_id = oline.m_product_id) AND (o.m_warehouse_id = st.m_warehouse_id))))
     LEFT JOIN ( SELECT iol.c_orderline_id,
            sum(iol.movementqty) AS qtymovementdrafted
           FROM (adempiere.m_inoutline iol
             JOIN adempiere.m_inout io ON ((iol.m_inout_id = io.m_inout_id)))
          WHERE (io.docstatus = ANY (ARRAY['DR'::bpchar, 'IP'::bpchar]))
          GROUP BY iol.c_orderline_id) ioldr ON ((oline.c_orderline_id = ioldr.c_orderline_id)));


ALTER TABLE adempiere.rv_orderline_storage OWNER TO adempiere;

--
-- Name: rv_payment; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_payment AS
 SELECT c_payment.c_payment_id,
    c_payment.ad_client_id,
    c_payment.ad_org_id,
    c_payment.isactive,
    c_payment.created,
    c_payment.createdby,
    c_payment.updated,
    c_payment.updatedby,
    c_payment.documentno,
    c_payment.datetrx,
    c_payment.isreceipt,
    c_payment.c_doctype_id,
    c_payment.trxtype,
    c_payment.c_bankaccount_id,
    c_payment.c_bpartner_id,
    c_payment.c_invoice_id,
    c_payment.c_bp_bankaccount_id,
    c_payment.c_paymentbatch_id,
    c_payment.tendertype,
    c_payment.creditcardtype,
    c_payment.creditcardnumber,
    c_payment.creditcardvv,
    c_payment.creditcardexpmm,
    c_payment.creditcardexpyy,
    c_payment.micr,
    c_payment.routingno,
    c_payment.accountno,
    c_payment.checkno,
    c_payment.a_name,
    c_payment.a_street,
    c_payment.a_city,
    c_payment.a_state,
    c_payment.a_zip,
    c_payment.a_ident_dl,
    c_payment.a_ident_ssn,
    c_payment.a_email,
    c_payment.voiceauthcode,
    c_payment.orig_trxid,
    c_payment.ponum,
    c_payment.c_currency_id,
    c_payment.c_conversiontype_id,
        CASE c_payment.isreceipt
            WHEN 'Y'::bpchar THEN c_payment.payamt
            ELSE (c_payment.payamt * ('-1'::integer)::numeric)
        END AS payamt,
        CASE c_payment.isreceipt
            WHEN 'Y'::bpchar THEN c_payment.discountamt
            ELSE (c_payment.discountamt * ('-1'::integer)::numeric)
        END AS discountamt,
        CASE c_payment.isreceipt
            WHEN 'Y'::bpchar THEN c_payment.writeoffamt
            ELSE (c_payment.writeoffamt * ('-1'::integer)::numeric)
        END AS writeoffamt,
        CASE c_payment.isreceipt
            WHEN 'Y'::bpchar THEN c_payment.taxamt
            ELSE (c_payment.taxamt * ('-1'::integer)::numeric)
        END AS taxamt,
        CASE c_payment.isreceipt
            WHEN 'Y'::bpchar THEN c_payment.overunderamt
            ELSE (c_payment.overunderamt * ('-1'::integer)::numeric)
        END AS overunderamt,
        CASE c_payment.isreceipt
            WHEN 'Y'::bpchar THEN 1
            ELSE '-1'::integer
        END AS multiplierap,
    adempiere.paymentallocated(c_payment.c_payment_id, c_payment.c_currency_id) AS allocatedamt,
    adempiere.paymentavailable(c_payment.c_payment_id) AS availableamt,
    c_payment.isoverunderpayment,
    c_payment.isapproved,
    c_payment.r_pnref,
    c_payment.r_result,
    c_payment.r_respmsg,
    c_payment.r_authcode,
    c_payment.r_avsaddr,
    c_payment.r_avszip,
    c_payment.r_info,
    c_payment.processing,
    c_payment.oprocessing,
    c_payment.docstatus,
    c_payment.docaction,
    c_payment.isprepayment,
    c_payment.c_charge_id,
    c_payment.isreconciled,
    c_payment.isallocated,
    c_payment.isonline,
    c_payment.processed,
    c_payment.posted,
    c_payment.c_campaign_id,
    c_payment.c_project_id,
    c_payment.c_activity_id
   FROM adempiere.c_payment;


ALTER TABLE adempiere.rv_payment OWNER TO adempiere;

--
-- Name: rv_pp_forecastrun; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_forecastrun AS
 SELECT frun.isactive,
    frun.created,
    frun.createdby,
    frun.updated,
    frun.updatedby,
    frun.ad_client_id,
    frun.ad_org_id,
    frun.pp_forecastrun_id,
    frun.documentno,
    frun.description,
    frun.pp_forecastrule_id,
    frun.pp_calendar_id,
    frun.pp_perioddefinition_id,
    frun.ref_definitionperiod_id,
    frun.periodhistory,
    fmaster.m_product_id,
    p.value,
    p.name,
    pc.m_product_category_id,
    pcl.m_product_classification_id,
    pclass.m_product_class_id,
    pg.m_product_group_id,
    frun.m_warehousesource_id,
    fmaster.factoralpha,
    fmaster.factorgamma,
    fmaster.factormultiplier,
    fmaster.factorscale,
    pd.name AS periodname,
    frun.m_warehouse_id,
    fdetail.qtycalculated AS qtyinvoiced,
    fresult.pp_period_id,
    pr.startdate,
    pr.enddate,
    fresult.periodno,
    fresult.description AS linedescription,
    fresult.qtycalculated,
    fresult.qtyplan,
    fresult.qtyabnormal
   FROM ((((((((((adempiere.pp_forecastrun frun
     JOIN adempiere.pp_forecastrunmaster fmaster ON ((fmaster.pp_forecastrun_id = frun.pp_forecastrun_id)))
     JOIN adempiere.pp_forecastrundetail fdetail ON ((fdetail.pp_forecastrunmaster_id = fmaster.pp_forecastrunmaster_id)))
     LEFT JOIN adempiere.pp_forecastrunresult fresult ON ((fresult.pp_forecastrunmaster_id = fmaster.pp_forecastrunmaster_id)))
     JOIN adempiere.pp_period pd ON ((pd.pp_period_id = fdetail.pp_period_id)))
     JOIN adempiere.pp_period pr ON ((pr.pp_period_id = fresult.pp_period_id)))
     JOIN adempiere.m_product p ON ((p.m_product_id = fmaster.m_product_id)))
     LEFT JOIN adempiere.m_product_category pc ON ((pc.m_product_category_id = p.m_product_category_id)))
     LEFT JOIN adempiere.m_product_classification pcl ON ((pcl.m_product_classification_id = p.m_product_classification_id)))
     LEFT JOIN adempiere.m_product_class pclass ON ((pclass.m_product_class_id = p.m_product_class_id)))
     LEFT JOIN adempiere.m_product_group pg ON ((pg.m_product_group_id = p.m_product_group_id)));


ALTER TABLE adempiere.rv_pp_forecastrun OWNER TO adempiere;

--
-- Name: rv_pp_mrp; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_mrp AS
 SELECT mrp.pp_mrp_id,
    mrp.ad_client_id,
    mrp.ad_org_id,
    mrp.created,
    mrp.createdby,
    mrp.isactive,
    mrp.isavailable,
    mrp.updated,
    mrp.updatedby,
    pp.ismps,
    mrp.name,
    mrp.description,
    mrp.c_order_id,
    mrp.c_orderline_id,
    mrp.dateordered,
    mrp.dateconfirm,
    mrp.datepromised,
    mrp.datestartschedule,
    mrp.datefinishschedule,
    mrp.datestart,
    mrp.datesimulation,
    mrp.docstatus,
    mrp.m_forecast_id,
    mrp.m_forecastline_id,
    mrp.value,
    mrp.m_product_id,
    mrp.m_requisition_id,
    mrp.m_requisitionline_id,
    mrp.m_warehouse_id,
    mrp.pp_order_id,
    mrp.pp_order_bomline_id,
    mrp.dd_order_id,
    mrp.dd_orderline_id,
    mrp.qty,
    mrp.s_resource_id,
    mrp.planner_id,
    mrp.priority,
    mrp.ordertype,
    mrp.typemrp,
    p.lowlevel,
    mrp.c_bpartner_id,
    mrp.version,
    adempiere.documentno(mrp.pp_mrp_id) AS documentno,
    mrp.c_projectphase_id,
    mrp.c_projecttask_id,
    mrp.c_project_id,
    pp.isrequiredmrp,
    pp.isrequireddrp,
    p.ispurchased,
    p.isbom,
    p.m_product_category_id
   FROM ((adempiere.pp_mrp mrp
     JOIN adempiere.m_product p ON ((mrp.m_product_id = p.m_product_id)))
     LEFT JOIN adempiere.pp_product_planning pp ON (((pp.m_product_id = mrp.m_product_id) AND (mrp.m_warehouse_id = pp.m_warehouse_id))))
  WHERE (mrp.qty <> (0)::numeric)
UNION
 SELECT 0 AS pp_mrp_id,
    pp.ad_client_id,
    pp.ad_org_id,
    pp.created,
    pp.createdby,
    pp.isactive,
    'Y'::bpchar AS isavailable,
    pp.updated,
    pp.updatedby,
    pp.ismps,
    NULL::character varying AS name,
    NULL::character varying AS description,
    NULL::numeric AS c_order_id,
    NULL::numeric AS c_orderline_id,
    now() AS dateordered,
    now() AS dateconfirm,
    now() AS datepromised,
    now() AS datestartschedule,
    now() AS datefinishschedule,
    now() AS datestart,
    now() AS datesimulation,
    'CO'::character varying AS docstatus,
    NULL::numeric AS m_forecast_id,
    NULL::numeric AS m_forecastline_id,
    NULL::character varying AS value,
    pp.m_product_id,
    NULL::numeric AS m_requisition_id,
    NULL::numeric AS m_requisitionline_id,
    pp.m_warehouse_id,
    NULL::numeric AS pp_order_id,
    NULL::numeric AS pp_order_bomline_id,
    NULL::numeric AS dd_order_id,
    NULL::numeric AS dd_orderline_id,
    (pp.safetystock - adempiere.bomqtyonhand(pp.m_product_id, pp.m_warehouse_id, (0)::numeric)) AS qty,
    pp.s_resource_id,
    NULL::numeric AS planner_id,
    NULL::character varying AS priority,
    'STK'::character varying AS ordertype,
    'D'::bpchar AS typemrp,
    p.lowlevel,
    NULL::numeric AS c_bpartner_id,
    NULL::numeric AS version,
    'Safety Strock'::character varying AS documentno,
    NULL::numeric AS c_projectphase_id,
    NULL::numeric AS c_projecttask_id,
    NULL::numeric AS c_project_id,
    pp.isrequiredmrp,
    pp.isrequireddrp,
    p.ispurchased,
    p.isbom,
    p.m_product_category_id
   FROM (adempiere.pp_product_planning pp
     JOIN adempiere.m_product p ON ((pp.m_product_id = p.m_product_id)))
  WHERE (adempiere.bomqtyonhand(pp.m_product_id, pp.m_warehouse_id, (0)::numeric) < pp.safetystock);


ALTER TABLE adempiere.rv_pp_mrp OWNER TO adempiere;

--
-- Name: rv_pp_mrp_demand; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_mrp_demand AS
 SELECT mrp.ad_client_id,
    mrp.ad_org_id,
    mrp.created,
    mrp.createdby,
    mrp.updated,
    mrp.updatedby,
    mrp.isactive,
    mrp.pp_mrp_id,
    mrp.documentno,
    mrp.ordertype,
    mrp.docstatus,
    mrp.c_bpartner_id,
        CASE
            WHEN ((mrp.ordertype)::text = 'SOO'::text) THEN ( SELECT o.c_bpartner_location_id
               FROM adempiere.c_order o
              WHERE (o.c_order_id = mrp.c_order_id))
            WHEN ((mrp.ordertype)::text = 'DOO'::text) THEN ( SELECT o.c_bpartner_location_id
               FROM adempiere.dd_order o
              WHERE (o.dd_order_id = mrp.dd_order_id))
            WHEN ((mrp.ordertype)::text = 'MOP'::text) THEN ( SELECT max(bpl.c_bpartner_location_id) AS max
               FROM adempiere.c_bpartner_location bpl
              WHERE ((bpl.c_bpartner_location_id = mrp.c_bpartner_id) AND (bpl.isshipto = 'Y'::bpchar) AND (bpl.isactive = 'Y'::bpchar)))
            ELSE NULL::numeric
        END AS c_bpartner_location_id,
        CASE
            WHEN ((mrp.ordertype)::text = 'SOO'::text) THEN ( SELECT o.m_shipper_id
               FROM adempiere.c_order o
              WHERE (o.c_order_id = mrp.c_order_id))
            WHEN ((mrp.ordertype)::text = 'DOO'::text) THEN ( SELECT o.m_shipper_id
               FROM adempiere.dd_order o
              WHERE (o.dd_order_id = mrp.dd_order_id))
            WHEN ((mrp.ordertype)::text = 'MOP'::text) THEN ( SELECT o.m_shipper_id
               FROM adempiere.pp_order o
              WHERE (o.pp_order_id = mrp.pp_order_id))
            ELSE NULL::numeric
        END AS m_shipper_id,
        CASE
            WHEN ((mrp.ordertype)::text = 'SOO'::text) THEN NULL::character varying
            WHEN ((mrp.ordertype)::text = 'DOO'::text) THEN ( SELECT o.trackingno
               FROM adempiere.dd_order o
              WHERE (o.dd_order_id = mrp.dd_order_id))
            WHEN ((mrp.ordertype)::text = 'MOP'::text) THEN ( SELECT o.trackingno
               FROM adempiere.pp_order o
              WHERE (o.pp_order_id = mrp.pp_order_id))
            ELSE NULL::character varying
        END AS trackingno,
        CASE
            WHEN ((mrp.ordertype)::text = 'SOO'::text) THEN ( SELECT o.deliveryrule
               FROM adempiere.c_order o
              WHERE (o.c_order_id = mrp.c_order_id))
            WHEN ((mrp.ordertype)::text = 'DOO'::text) THEN ( SELECT o.deliveryrule
               FROM adempiere.dd_order o
              WHERE (o.dd_order_id = mrp.dd_order_id))
            WHEN ((mrp.ordertype)::text = 'MOP'::text) THEN ( SELECT o.deliveryrule
               FROM adempiere.pp_order o
              WHERE (o.pp_order_id = mrp.pp_order_id))
            ELSE NULL::bpchar
        END AS deliveryrule,
        CASE
            WHEN ((mrp.ordertype)::text = 'SOO'::text) THEN ( SELECT o.deliveryviarule
               FROM adempiere.c_order o
              WHERE (o.c_order_id = mrp.c_order_id))
            WHEN ((mrp.ordertype)::text = 'DOO'::text) THEN ( SELECT o.deliveryviarule
               FROM adempiere.dd_order o
              WHERE (o.dd_order_id = mrp.dd_order_id))
            WHEN ((mrp.ordertype)::text = 'MOP'::text) THEN ( SELECT o.deliveryviarule
               FROM adempiere.pp_order o
              WHERE (o.pp_order_id = mrp.pp_order_id))
            ELSE NULL::bpchar
        END AS deliveryviarule,
        CASE
            WHEN ((mrp.ordertype)::text = 'SOO'::text) THEN ( SELECT o.m_freightcategory_id
               FROM adempiere.c_order o
              WHERE (o.c_order_id = mrp.c_order_id))
            WHEN ((mrp.ordertype)::text = 'DOO'::text) THEN ( SELECT p.m_freightcategory_id
               FROM adempiere.dd_order o
              WHERE (o.dd_order_id = mrp.dd_order_id))
            WHEN ((mrp.ordertype)::text = 'MOP'::text) THEN ( SELECT o.m_freightcategory_id
               FROM adempiere.pp_order o
              WHERE (o.pp_order_id = mrp.pp_order_id))
            ELSE NULL::numeric
        END AS m_freightcategory_id,
        CASE
            WHEN ((mrp.ordertype)::text = 'SOO'::text) THEN ( SELECT o.freightcostrule
               FROM adempiere.c_order o
              WHERE (o.c_order_id = mrp.c_order_id))
            WHEN ((mrp.ordertype)::text = 'DOO'::text) THEN ( SELECT o.freightcostrule
               FROM adempiere.dd_order o
              WHERE (o.dd_order_id = mrp.dd_order_id))
            WHEN ((mrp.ordertype)::text = 'MOP'::text) THEN ( SELECT o.freightcostrule
               FROM adempiere.pp_order o
              WHERE (o.pp_order_id = mrp.pp_order_id))
            ELSE NULL::bpchar
        END AS freightcostrule,
    mrp.planner_id,
    mrp.s_resource_id,
    mrp.m_warehouse_id,
    mrp.dateordered,
    mrp.datepromised,
    mrp.priority,
    mrp.m_product_id,
    p.m_attributesetinstance_id,
    p.sku,
    p.c_uom_id,
    p.issold,
    mrp.m_product_category_id,
    mrp.isbom,
    mrp.ispurchased,
    mrp.qty,
    mrp.ismps,
    mrp.isrequiredmrp,
    mrp.isrequireddrp,
    mrp.c_project_id,
    mrp.c_projectphase_id,
    mrp.c_projecttask_id,
    mrp.datestartschedule,
    mrp.datefinishschedule,
    (p.weight * mrp.qty) AS weight,
    (p.volume * mrp.qty) AS volume,
    adempiere.bomqtyonhand(mrp.m_product_id, mrp.m_warehouse_id, (0)::numeric) AS qtyonhand,
    adempiere.bomqtyordered(mrp.m_product_id, mrp.m_warehouse_id, (0)::numeric) AS qtyordered,
    adempiere.bomqtyreserved(mrp.m_product_id, mrp.m_warehouse_id, (0)::numeric) AS qtyreserved,
    adempiere.bomqtyavailable(mrp.m_product_id, mrp.m_warehouse_id, (0)::numeric) AS qtyavailable
   FROM (adempiere.rv_pp_mrp mrp
     JOIN adempiere.m_product p ON ((p.m_product_id = mrp.m_product_id)))
  WHERE ((mrp.typemrp = 'D'::bpchar) AND (mrp.qty > (0)::numeric))
  ORDER BY mrp.datepromised;


ALTER TABLE adempiere.rv_pp_mrp_demand OWNER TO adempiere;

--
-- Name: rv_pp_mrp_detail_demand; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_mrp_detail_demand AS
 SELECT mrp_detail.ad_client_id,
    mrp_detail.ad_org_id,
    mrp_detail.created,
    mrp_detail.createdby,
    mrp_detail.updated,
    mrp_detail.updatedby,
    mrp_detail.isactive,
    mrp_detail.mrp_demand_id,
    mrp_detail.mrp_supply_id,
    mrp_detail.qty,
    demand.ordertype,
    demand.docstatus,
    demand.dateordered,
    demand.datepromised,
    demand.priority,
    demand.s_resource_id,
    demand.m_warehouse_id,
    demand.c_bpartner_id,
    demand.planner_id,
    demand.c_project_id,
    demand.c_projectphase_id,
    demand.c_projecttask_id,
    demand.datestartschedule,
    demand.datefinishschedule
   FROM (adempiere.pp_mrp_detail mrp_detail
     LEFT JOIN adempiere.rv_pp_mrp demand ON ((demand.pp_mrp_id = mrp_detail.mrp_demand_id)));


ALTER TABLE adempiere.rv_pp_mrp_detail_demand OWNER TO adempiere;

--
-- Name: rv_pp_mrp_detail_supply; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_mrp_detail_supply AS
 SELECT mrp_detail.ad_client_id,
    mrp_detail.ad_org_id,
    mrp_detail.created,
    mrp_detail.createdby,
    mrp_detail.updated,
    mrp_detail.updatedby,
    mrp_detail.isactive,
    mrp_detail.mrp_demand_id,
    mrp_detail.mrp_supply_id,
    mrp_detail.qty,
    supply.ordertype,
    supply.docstatus,
    supply.dateordered,
    supply.datepromised,
    supply.priority,
    supply.s_resource_id,
    supply.m_warehouse_id,
    supply.c_bpartner_id,
    supply.planner_id,
    supply.c_project_id,
    supply.c_projectphase_id,
    supply.c_projecttask_id,
    supply.datestartschedule,
    supply.datefinishschedule
   FROM (adempiere.pp_mrp_detail mrp_detail
     LEFT JOIN adempiere.rv_pp_mrp supply ON ((supply.pp_mrp_id = mrp_detail.mrp_supply_id)));


ALTER TABLE adempiere.rv_pp_mrp_detail_supply OWNER TO adempiere;

--
-- Name: rv_pp_mrp_supply; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_mrp_supply AS
 SELECT mrp.ad_client_id,
    mrp.ad_org_id,
    mrp.created,
    mrp.createdby,
    mrp.updated,
    mrp.updatedby,
    mrp.isactive,
    mrp.pp_mrp_id,
    mrp.documentno,
    mrp.ordertype,
    mrp.docstatus,
    mrp.c_bpartner_id,
    mrp.planner_id,
    mrp.s_resource_id,
    mrp.m_warehouse_id,
    mrp.dateordered,
    mrp.datepromised,
    mrp.priority,
    mrp.m_product_id,
    p.m_attributesetinstance_id,
    p.sku,
    p.c_uom_id,
    p.issold,
    mrp.m_product_category_id,
    mrp.isbom,
    mrp.ispurchased,
    mrp.qty,
    mrp.ismps,
    mrp.isrequiredmrp,
    mrp.isrequireddrp,
    mrp.c_project_id,
    mrp.c_projectphase_id,
    mrp.c_projecttask_id,
    mrp.datestartschedule,
    mrp.datefinishschedule
   FROM (adempiere.rv_pp_mrp mrp
     JOIN adempiere.m_product p ON ((p.m_product_id = mrp.m_product_id)))
  WHERE ((mrp.typemrp = 'S'::bpchar) AND (mrp.qty > (0)::numeric))
  ORDER BY mrp.datepromised;


ALTER TABLE adempiere.rv_pp_mrp_supply OWNER TO adempiere;

--
-- Name: rv_pp_operation_activity; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_operation_activity AS
 SELECT n.ad_client_id,
    n.ad_org_id,
    n.created,
    n.createdby,
    n.isactive,
    n.updated,
    n.updatedby,
    n.pp_order_id,
    n.docstatus,
    n.value,
    n.s_resource_id,
    n.durationrequired,
    n.durationreal,
    (n.durationrequired - n.durationreal) AS duration,
    n.qtydelivered,
    n.qtyreject,
    n.qtyscrap,
    n.datestartschedule,
    n.datefinishschedule
   FROM adempiere.pp_order_node n;


ALTER TABLE adempiere.rv_pp_operation_activity OWNER TO adempiere;

--
-- Name: rv_pp_order; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_order AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    o.pp_order_id,
    o.documentno,
    o.docstatus,
    o.m_warehouse_id,
    o.m_product_id,
    o.qtyentered,
    o.qtyreject,
    o.qtyscrap,
    o.qtybatchs,
    o.qtybatchsize,
    o.dateordered,
    o.datepromised,
    o.datestart,
    o.datestartschedule,
    o.datefinish,
    o.datefinishschedule,
    o.dateconfirm,
    o.datedelivered,
    o.lot,
    o.pp_product_bom_id,
    o.ad_workflow_id,
    ( SELECT p.weight
           FROM adempiere.m_product p
          WHERE (p.m_product_id = o.m_product_id)) AS weight,
    o.c_doctypetarget_id,
    o.m_attributesetinstance_id,
    o.planner_id,
    o.priorityrule,
    o.ad_orgtrx_id,
    o.user1_id,
    o.user2_id,
    o.c_doctype_id,
    o.line,
    o.description,
    o.s_resource_id,
    o.floatbefored,
    o.floatafter,
    o.c_uom_id,
    o.qtyordered,
    o.qtydelivered,
    o.yield,
    o.c_project_id,
    o.c_campaign_id,
    o.c_activity_id,
    o.isapproved,
    o.isprinted,
    o.isselected,
    o.processed,
    o.assay,
    o.isqtypercentage,
    o.ordertype,
    o.issotrx,
    o.scheduletype,
    o.serno
   FROM adempiere.pp_order o;


ALTER TABLE adempiere.rv_pp_order OWNER TO adempiere;

--
-- Name: rv_pp_order_bomline; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_order_bomline AS
 SELECT obl.ad_client_id,
    obl.ad_org_id,
    obl.createdby,
    obl.updatedby,
    obl.updated,
    obl.created,
    obl.isactive,
    obl.pp_order_bom_id,
    obl.pp_order_bomline_id,
    obl.pp_order_id,
    obl.iscritical,
    obl.componenttype,
    obl.m_product_id,
    obl.c_uom_id,
    round(obl.qtyrequired, 4) AS qtyrequired,
    round(adempiere.bomqtyreserved(obl.m_product_id, obl.m_warehouse_id, (0)::numeric), 4) AS qtyreserved,
    round(adempiere.bomqtyavailable(obl.m_product_id, obl.m_warehouse_id, (0)::numeric), 4) AS qtyavailable,
    round(adempiere.bomqtyonhand(obl.m_product_id, obl.m_warehouse_id, (0)::numeric), 4) AS qtyonhand,
    obl.m_warehouse_id,
    round(obl.qtybom, 4) AS qtybom,
    obl.isqtypercentage,
    round(obl.qtybatch, 4) AS qtybatch,
        CASE
            WHEN (o.qtybatchs = (0)::numeric) THEN (1)::numeric
            ELSE round((obl.qtyrequired / o.qtybatchs), 4)
        END AS qtybatchsize
   FROM (adempiere.pp_order_bomline obl
     JOIN adempiere.pp_order o ON ((o.pp_order_id = obl.pp_order_id)));


ALTER TABLE adempiere.rv_pp_order_bomline OWNER TO adempiere;

--
-- Name: rv_pp_order_costdetail; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_order_costdetail AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    obl.pp_order_id,
    obl.m_product_id,
    oc.m_costtype_id,
    oc.m_costelement_id,
    oc.c_acctschema_id,
        CASE
            WHEN (obl.isqtypercentage = 'Y'::bpchar) THEN obl.qtybatch
            ELSE obl.qtybom
        END AS qty,
    obl.qtyrequired,
    oc.currentcostprice,
    oc.currentcostpricell,
    (obl.qtyrequired * oc.currentcostprice) AS expectedcost,
    (obl.qtyrequired * oc.currentcostpricell) AS expectedcostll,
    abs(COALESCE(( SELECT sum(cd.qty) AS sum
           FROM (adempiere.m_costdetail cd
             JOIN adempiere.pp_cost_collector cc ON (((cd.pp_cost_collector_id = cc.pp_cost_collector_id) AND (cd.m_product_id = cc.m_product_id))))
          WHERE ((cc.pp_order_id = o.pp_order_id) AND (cd.m_product_id = obl.m_product_id) AND (cd.m_costtype_id = oc.m_costtype_id) AND (cd.m_costelement_id = oc.m_costelement_id) AND (cd.c_acctschema_id = oc.c_acctschema_id) AND ((cc.costcollectortype)::text = '110'::text))), (0)::numeric)) AS cumulatedqty,
    abs(COALESCE(( SELECT sum(cd.amt) AS sum
           FROM (adempiere.m_costdetail cd
             JOIN adempiere.pp_cost_collector cc ON (((cd.pp_cost_collector_id = cc.pp_cost_collector_id) AND (cd.m_product_id = cc.m_product_id))))
          WHERE ((cc.pp_order_id = o.pp_order_id) AND (cd.m_product_id = obl.m_product_id) AND (cd.m_costtype_id = oc.m_costtype_id) AND (cd.m_costelement_id = oc.m_costelement_id) AND (cd.c_acctschema_id = oc.c_acctschema_id) AND ((cc.costcollectortype)::text = '110'::text))), (0)::numeric)) AS cumulatedamt,
    abs(COALESCE(( SELECT sum(cd.amtll) AS sum
           FROM (adempiere.m_costdetail cd
             JOIN adempiere.pp_cost_collector cc ON (((cd.pp_cost_collector_id = cc.pp_cost_collector_id) AND (cd.m_product_id = cc.m_product_id))))
          WHERE ((cc.pp_order_id = o.pp_order_id) AND (cd.m_product_id = obl.m_product_id) AND (cd.m_costtype_id = oc.m_costtype_id) AND (cd.m_costelement_id = oc.m_costelement_id) AND (cd.c_acctschema_id = oc.c_acctschema_id) AND ((cc.costcollectortype)::text = '110'::text))), (0)::numeric)) AS cumulatedamtll,
    abs(COALESCE(( SELECT sum((cd.amt + cd.amtll)) AS sum
           FROM (adempiere.m_costdetail cd
             JOIN adempiere.pp_cost_collector cc ON (((cd.pp_cost_collector_id = cc.pp_cost_collector_id) AND (cd.m_product_id = cc.m_product_id))))
          WHERE ((cc.pp_order_id = o.pp_order_id) AND (cd.m_product_id = obl.m_product_id) AND (cd.m_costtype_id = oc.m_costtype_id) AND (cd.m_costelement_id = oc.m_costelement_id) AND (cd.c_acctschema_id = oc.c_acctschema_id) AND ((cc.costcollectortype)::text = '120'::text))), (0)::numeric)) AS usagevariance,
    abs(COALESCE(( SELECT sum(cd.amtll) AS sum
           FROM (adempiere.m_costdetail cd
             JOIN adempiere.pp_cost_collector cc ON (((cd.pp_cost_collector_id = cc.pp_cost_collector_id) AND (cd.m_product_id = cc.m_product_id))))
          WHERE ((cc.pp_order_id = o.pp_order_id) AND (cd.m_product_id = obl.m_product_id) AND (cd.m_costtype_id = oc.m_costtype_id) AND (cd.m_costelement_id = oc.m_costelement_id) AND (cd.c_acctschema_id = oc.c_acctschema_id) AND ((cc.costcollectortype)::text = '130'::text))), (0)::numeric)) AS methodchangevariance,
    abs(COALESCE(( SELECT sum((cd.amt + cd.amtll)) AS sum
           FROM (adempiere.m_costdetail cd
             JOIN adempiere.pp_cost_collector cc ON (((cd.pp_cost_collector_id = cc.pp_cost_collector_id) AND (cd.m_product_id = cc.m_product_id))))
          WHERE ((cc.pp_order_id = o.pp_order_id) AND (cd.m_product_id = obl.m_product_id) AND (cd.m_costtype_id = oc.m_costtype_id) AND (cd.m_costelement_id = oc.m_costelement_id) AND (cd.c_acctschema_id = oc.c_acctschema_id) AND ((cc.costcollectortype)::text = '140'::text))), (0)::numeric)) AS ratevariance,
    abs(COALESCE(( SELECT sum((cd.amt + cd.amtll)) AS sum
           FROM (adempiere.m_costdetail cd
             JOIN adempiere.pp_cost_collector cc ON (((cd.pp_cost_collector_id = cc.pp_cost_collector_id) AND (cd.m_product_id = cc.m_product_id))))
          WHERE ((cc.pp_order_id = o.pp_order_id) AND (cd.m_product_id = obl.m_product_id) AND (cd.m_costtype_id = oc.m_costtype_id) AND (cd.m_costelement_id = oc.m_costelement_id) AND (cd.c_acctschema_id = oc.c_acctschema_id) AND ((cc.costcollectortype)::text = '150'::text))), (0)::numeric)) AS mixvariance,
    abs(COALESCE(( SELECT sum(cd.amt) AS sum
           FROM (adempiere.m_costdetail cd
             JOIN adempiere.pp_cost_collector cc ON (((cd.pp_cost_collector_id = cc.pp_cost_collector_id) AND (cd.m_product_id = cc.m_product_id))))
          WHERE ((cc.pp_order_id = o.pp_order_id) AND (cd.m_product_id = obl.m_product_id) AND (cd.m_costtype_id = oc.m_costtype_id) AND (cd.m_costelement_id = oc.m_costelement_id) AND (cd.c_acctschema_id = oc.c_acctschema_id))), (0)::numeric)) AS amt,
    abs(COALESCE(( SELECT sum(cd.amtll) AS sum
           FROM (adempiere.m_costdetail cd
             JOIN adempiere.pp_cost_collector cc ON (((cd.pp_cost_collector_id = cc.pp_cost_collector_id) AND (cd.m_product_id = cc.m_product_id))))
          WHERE ((cc.pp_order_id = o.pp_order_id) AND (cd.m_product_id = obl.m_product_id) AND (cd.m_costtype_id = oc.m_costtype_id) AND (cd.m_costelement_id = oc.m_costelement_id) AND (cd.c_acctschema_id = oc.c_acctschema_id))), (0)::numeric)) AS amtll
   FROM ((adempiere.pp_order_bomline obl
     JOIN adempiere.pp_order o ON ((obl.pp_order_id = o.pp_order_id)))
     LEFT JOIN adempiere.pp_order_cost oc ON (((o.pp_order_id = oc.pp_order_id) AND (obl.m_product_id = oc.m_product_id))));


ALTER TABLE adempiere.rv_pp_order_costdetail OWNER TO adempiere;

--
-- Name: rv_pp_order_cost; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_order_cost AS
 SELECT o.ad_client_id,
    o.ad_org_id,
    o.pp_order_id,
    o.documentno,
    o.docstatus,
    o.created,
    o.createdby,
    o.updated,
    o.updatedby,
    o.isactive,
    o.m_warehouse_id,
    o.m_product_id AS parent_id,
    p.m_product_category_id,
    o.qtyentered,
    o.qtyreject,
    o.qtyscrap,
    o.qtybatchs,
    o.qtybatchsize,
    o.dateordered,
    o.datepromised,
    o.datestart,
    o.datestartschedule,
    o.datefinish,
    o.datefinishschedule,
    o.dateconfirm,
    o.datedelivered,
    o.lot,
    o.pp_product_bom_id,
    o.ad_workflow_id,
    o.weight,
    o.c_doctypetarget_id,
    o.m_attributesetinstance_id,
    o.planner_id,
    o.priorityrule,
    o.ad_orgtrx_id,
    o.user1_id,
    o.user2_id,
    o.c_doctype_id,
    o.line,
    o.description,
    o.s_resource_id,
    o.floatbefored,
    o.floatafter,
    o.c_uom_id,
    o.qtyordered,
    o.qtydelivered,
    o.yield,
    o.c_project_id,
    o.c_campaign_id,
    o.c_activity_id,
    o.isapproved,
    o.isprinted,
    o.isselected,
    o.processed,
    o.assay,
    o.isqtypercentage,
    o.ordertype,
    o.issotrx,
    o.scheduletype,
    o.serno,
    ocd.c_acctschema_id,
    ocd.m_costtype_id,
    ocd.m_costelement_id,
    ocd.m_product_id,
    ocd.qty,
    ocd.currentcostprice,
    ocd.currentcostpricell,
    ocd.qtyrequired,
    ocd.expectedcost,
    ocd.expectedcostll,
    (ocd.expectedcost + ocd.expectedcostll) AS expectedtotalcost,
    ocd.cumulatedqty,
    ocd.cumulatedamt,
    ocd.cumulatedamtll,
    ocd.usagevariance,
    ocd.methodchangevariance,
    ocd.ratevariance,
    ocd.mixvariance,
    ocd.amt,
    ocd.amtll,
    ((((ocd.cumulatedamt + ocd.usagevariance) + ocd.methodchangevariance) + ocd.ratevariance) + ocd.mixvariance) AS totalamt
   FROM ((adempiere.rv_pp_order o
     JOIN adempiere.rv_pp_order_costdetail ocd ON ((o.pp_order_id = ocd.pp_order_id)))
     JOIN adempiere.m_product p ON ((p.m_product_id = o.m_product_id)));


ALTER TABLE adempiere.rv_pp_order_cost OWNER TO adempiere;

--
-- Name: rv_pp_order_storage; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_order_storage AS
 SELECT obl.ad_client_id,
    obl.ad_org_id,
    obl.createdby,
    obl.updatedby,
    obl.updated,
    obl.created,
    obl.isactive,
    obl.pp_order_bom_id,
    obl.pp_order_bomline_id,
    obl.pp_order_id,
    obl.iscritical,
    obl.m_product_id,
    ( SELECT p.name
           FROM adempiere.m_product p
          WHERE (p.m_product_id = o.m_product_id)) AS name,
    obl.c_uom_id,
    s.qtyonhand,
    round(obl.qtyrequired, 4) AS qtyrequired,
        CASE
            WHEN (o.qtybatchs = (0)::numeric) THEN (1)::numeric
            ELSE round((obl.qtyrequired / o.qtybatchs), 4)
        END AS qtybatchsize,
    round(adempiere.bomqtyreserved(obl.m_product_id, obl.m_warehouse_id, (0)::numeric), 4) AS qtyreserved,
    round(adempiere.bomqtyavailable(obl.m_product_id, obl.m_warehouse_id, (0)::numeric), 4) AS qtyavailable,
    obl.m_warehouse_id,
    obl.qtybom,
    obl.isqtypercentage,
    round(obl.qtybatch, 4) AS qtybatch,
    obl.m_attributesetinstance_id,
    l.m_locator_id,
    l.x,
    l.y,
    l.z
   FROM (((adempiere.pp_order_bomline obl
     JOIN adempiere.pp_order o ON ((o.pp_order_id = obl.pp_order_id)))
     LEFT JOIN adempiere.m_storage s ON (((s.m_product_id = obl.m_product_id) AND (s.qtyonhand <> (0)::numeric) AND (obl.m_warehouse_id = ( SELECT ld.m_warehouse_id
           FROM adempiere.m_locator ld
          WHERE (s.m_locator_id = ld.m_locator_id))))))
     LEFT JOIN adempiere.m_locator l ON ((l.m_locator_id = s.m_locator_id)))
  ORDER BY obl.m_product_id;


ALTER TABLE adempiere.rv_pp_order_storage OWNER TO adempiere;

--
-- Name: rv_pp_order_receipt_issue; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_order_receipt_issue AS
 SELECT obl.pp_order_bomline_id,
    obl.iscritical,
    p.value,
    obl.m_product_id,
    mos.name AS productname,
    mos.m_attributesetinstance_id,
    asi.description AS instancename,
    mos.c_uom_id,
    u.name AS uomname,
    obl.qtyrequired,
    obl.qtyreserved AS qtyreserved_order,
    mos.qtyonhand,
    mos.qtyreserved AS qtyreserved_storage,
    mos.qtyavailable,
    mos.m_locator_id,
    mos.m_warehouse_id,
    w.name AS warehousename,
    mos.qtybom,
    mos.isqtypercentage,
    mos.qtybatch,
    obl.componenttype,
    (mos.qtyrequired - obl.qtydelivered) AS qtyopen,
    obl.pp_order_id
   FROM (((((adempiere.rv_pp_order_storage mos
     JOIN adempiere.pp_order_bomline obl ON ((mos.pp_order_bomline_id = obl.pp_order_bomline_id)))
     JOIN adempiere.m_attributesetinstance asi ON ((mos.m_attributesetinstance_id = asi.m_attributesetinstance_id)))
     JOIN adempiere.c_uom u ON ((mos.c_uom_id = u.c_uom_id)))
     JOIN adempiere.m_product p ON ((mos.m_product_id = p.m_product_id)))
     JOIN adempiere.m_warehouse w ON ((mos.m_warehouse_id = w.m_warehouse_id)));


ALTER TABLE adempiere.rv_pp_order_receipt_issue OWNER TO adempiere;

--
-- Name: rv_pp_order_transactions; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_order_transactions AS
 SELECT DISTINCT o.ad_client_id,
    o.ad_org_id,
    o.isactive,
    o.created,
    o.createdby,
    o.updatedby,
    o.updated,
    o.documentno,
    ol.m_product_id,
    mt.m_locator_id,
    mt.movementdate,
    o.pp_order_id,
    o.qtydelivered,
    o.qtyscrap,
    ol.qtydelivered AS qtydeliveredline,
    ((o.qtydelivered * ol.qtybatch) / (100)::numeric) AS qtyissueshouldbe,
    ol.qtyscrap AS qtyscrapline,
    ((o.qtyscrap * ol.qtybatch) / (100)::numeric) AS qtyissuescrapshouldbe,
    mt.createdby AS createdbyissue,
    mt.updatedby AS updatedbyissue,
    ( SELECT sum(t.movementqty) AS sum
           FROM adempiere.m_transaction t
          WHERE (t.pp_cost_collector_id = cc.pp_cost_collector_id)) AS qtytodeliver,
    ((((o.qtydelivered + o.qtyscrap) * ol.qtybatch) / (100)::numeric) + ( SELECT sum(t.movementqty) AS sum
           FROM adempiere.m_transaction t
          WHERE (t.pp_cost_collector_id = cc.pp_cost_collector_id))) AS differenceqty,
    o.issotrx,
    o.dateordered
   FROM (((adempiere.pp_order o
     JOIN adempiere.pp_order_bomline ol ON ((ol.pp_order_id = o.pp_order_id)))
     JOIN adempiere.pp_cost_collector cc ON ((cc.pp_order_bomline_id = ol.pp_order_bomline_id)))
     LEFT JOIN adempiere.m_transaction mt ON ((mt.pp_cost_collector_id = cc.pp_cost_collector_id)));


ALTER TABLE adempiere.rv_pp_order_transactions OWNER TO adempiere;

--
-- Name: rv_pp_order_workflow; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_order_workflow AS
 SELECT n.ad_client_id,
    n.ad_org_id,
    n.created,
    n.createdby,
    n.isactive,
    n.updated,
    n.updatedby,
    owf.pp_order_workflow_id,
    n.name,
    n.pp_order_id,
    n.docstatus,
    n.value,
    n.s_resource_id,
    n.durationrequired,
    n.durationreal,
    (n.durationrequired - n.durationreal) AS duration,
    n.movingtime,
    n.waitingtime,
    n.setuptime,
    n.queuingtime,
    n.qtydelivered,
    n.qtyreject,
    n.qtyscrap,
    n.datestartschedule,
    n.datefinishschedule,
    n.c_bpartner_id,
    n.description,
    n.ismilestone,
    n.issubcontracting
   FROM (adempiere.pp_order_workflow owf
     JOIN adempiere.pp_order_node n ON ((n.pp_order_workflow_id = owf.pp_order_workflow_id)));


ALTER TABLE adempiere.rv_pp_order_workflow OWNER TO adempiere;

--
-- Name: t_bomline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_bomline (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_pinstance_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1),
    levelno numeric(10,0),
    levels character varying(250),
    m_product_id numeric(10,0),
    pp_product_bomline_id numeric(10,0),
    pp_product_bom_id numeric(10,0),
    seqno numeric(10,0),
    t_bomline_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    sel_product_id numeric(10,0) NOT NULL,
    implosion character(1) DEFAULT 'N'::bpchar,
    m_costelement_id numeric(10,0),
    currentcostprice numeric,
    currentcostpricell numeric,
    qtybom numeric,
    cost character varying(22),
    c_acctschema_id numeric(10,0),
    costingmethod character(1),
    m_costtype_id numeric(10,0),
    futurecostprice numeric,
    futurecostpricell numeric,
    iscostfrozen character(1),
    coststandard numeric,
    qtyrequired numeric,
    m_warehouse_id numeric(10,0) DEFAULT NULL::numeric,
    datetrx timestamp without time zone,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT t_bomline_implosion_check CHECK ((implosion = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT t_bomline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT t_bomline_iscostfrozen_check CHECK ((iscostfrozen = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.t_bomline OWNER TO adempiere;

--
-- Name: rv_pp_product_bomline; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_product_bomline AS
 SELECT t.seqno,
    t.levelno,
    t.levels,
    t.ad_client_id,
    t.ad_org_id,
    t.createdby,
    t.updatedby,
    t.updated,
    t.created,
    t.ad_pinstance_id,
    t.implosion,
    t.sel_product_id AS m_product_id,
    bl.isactive,
    bl.pp_product_bom_id,
    bl.pp_product_bomline_id,
    bl.description,
    bl.iscritical,
    bl.componenttype,
    t.m_product_id AS tm_product_id,
    bl.c_uom_id,
    bl.issuemethod,
    bl.line,
    bl.m_attributesetinstance_id,
    bl.scrap,
    bl.validfrom,
    bl.validto,
    bl.qtybom,
    bl.qtybatch,
    bl.isqtypercentage
   FROM (adempiere.t_bomline t
     LEFT JOIN adempiere.pp_product_bomline bl ON ((t.pp_product_bomline_id = bl.pp_product_bomline_id)));


ALTER TABLE adempiere.rv_pp_product_bomline OWNER TO adempiere;

--
-- Name: rv_pp_product_bomline_storage; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_product_bomline_storage AS
 SELECT t.ad_client_id,
    t.ad_org_id,
    t.createdby,
    t.updatedby,
    t.updated,
    t.created,
    t.ad_pinstance_id,
    t.seqno,
    t.levelno,
    t.levels,
    t.m_product_id AS tm_product_id,
    t.sel_product_id AS m_product_id,
    t.qtybom,
    t.datetrx,
    bl.isactive,
    bl.pp_product_bom_id,
    bl.pp_product_bomline_id,
    bl.description,
    bl.iscritical,
    bl.componenttype,
    bl.c_uom_id,
    bl.issuemethod,
    bl.line,
    bl.m_attributesetinstance_id,
    bl.scrap,
    bl.validfrom,
    bl.validto,
    bl.isqtypercentage,
    bl.backflushgroup,
    bl.leadtimeoffset,
    s.qtyonhand,
    round(t.qtyrequired, 4) AS qtyrequired,
    round(adempiere.bomqtyreserved(t.m_product_id, t.m_warehouse_id, (0)::numeric), 4) AS qtyreserved,
    round(adempiere.bomqtyavailable(t.m_product_id, t.m_warehouse_id, (0)::numeric), 4) AS qtyavailable,
    t.m_warehouse_id,
    l.m_locator_id,
    l.x,
    l.y,
    l.z
   FROM (((adempiere.t_bomline t
     LEFT JOIN adempiere.pp_product_bomline bl ON ((t.pp_product_bomline_id = bl.pp_product_bomline_id)))
     LEFT JOIN adempiere.m_storage s ON (((s.m_product_id = t.m_product_id) AND (s.qtyonhand <> (0)::numeric) AND (EXISTS ( SELECT 1
           FROM adempiere.m_locator ld
          WHERE ((s.m_locator_id = ld.m_locator_id) AND (ld.m_warehouse_id = t.m_warehouse_id)))))))
     LEFT JOIN adempiere.m_locator l ON ((l.m_locator_id = s.m_locator_id)));


ALTER TABLE adempiere.rv_pp_product_bomline_storage OWNER TO adempiere;

--
-- Name: rv_pp_product_costing; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_pp_product_costing AS
 SELECT p.m_product_id,
    cost.c_acctschema_id,
    p.value,
    p.name,
    p.m_product_category_id,
    p.m_product_class_id,
    p.m_product_group_id,
    p.m_product_classification_id,
    p.isstocked,
    cost.ad_client_id,
    cost.ad_org_id,
    cost.m_warehouse_id,
    cost.m_costtype_id,
    cost.m_costelement_id,
    cost.m_attributesetinstance_id,
    cost.isactive,
    cost.created,
    cost.createdby,
    cost.updated,
    cost.updatedby,
    cost.currentqty,
    cost.currentcostprice,
    cost.currentcostpricell,
    cost.cumulatedamt,
    cost.cumulatedamtll,
    cost.futurecostprice,
    cost.futurecostpricell,
    cost.description,
    cost.percent,
    cost.iscostfrozen
   FROM (adempiere.m_product p
     LEFT JOIN adempiere.m_cost cost ON ((p.m_product_id = cost.m_product_id)));


ALTER TABLE adempiere.rv_pp_product_costing OWNER TO adempiere;

--
-- Name: rv_printformatdetail; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_printformatdetail AS
 SELECT f.ad_client_id,
    f.ad_org_id,
    i.isactive,
    i.created,
    i.createdby,
    i.updated,
    i.updatedby,
    f.ad_printformat_id,
    f.name,
    f.description,
    f.istablebased,
    f.isform,
    f.ad_table_id,
    f.ad_reportview_id,
    f.ad_printpaper_id,
    f.ad_printcolor_id AS default_ad_printcolor_id,
    f.ad_printfont_id AS default_ad_printfont_id,
    f.isstandardheaderfooter,
    f.ad_printtableformat_id,
    f.headermargin,
    f.footermargin,
    f.printername,
    f.isdefault,
    i.ad_printformatitem_id,
    i.name AS itemname,
    i.printname,
    i.printnamesuffix,
    i.isprinted,
    i.printareatype,
    i.seqno,
    i.printformattype,
    i.ad_column_id,
    i.ad_printformatchild_id,
    i.imageisattached,
    i.imageurl,
    i.isrelativeposition,
    i.isnextline,
    i.xspace,
    i.yspace,
    i.xposition,
    i.yposition,
    i.maxwidth,
    i.isheightoneline,
    i.maxheight,
    i.isfixedwidth,
    i.issetnlposition,
    i.issuppressnull,
    i.belowcolumn,
    i.fieldalignmenttype,
    i.linealignmenttype,
    i.ad_printcolor_id,
    i.ad_printfont_id,
    i.isorderby,
    i.sortno,
    i.isgroupby,
    i.ispagebreak,
    i.isnextpage,
    i.issummarized,
    i.isaveraged,
    i.iscounted,
    i.ismincalc,
    i.ismaxcalc,
    i.isvariancecalc,
    i.isdeviationcalc,
    i.isrunningtotal,
    i.runningtotallines,
    i.ad_printgraph_id
   FROM (adempiere.ad_printformat f
     JOIN adempiere.ad_printformatitem i ON ((f.ad_printformat_id = i.ad_printformat_id)));


ALTER TABLE adempiere.rv_printformatdetail OWNER TO adempiere;

--
-- Name: rv_product_costing; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_product_costing AS
 SELECT pc.m_product_id,
    pc.c_acctschema_id,
    p.value,
    p.name,
    p.m_product_category_id,
    pc.ad_client_id,
    pc.ad_org_id,
    pc.isactive,
    pc.created,
    pc.createdby,
    pc.updated,
    pc.updatedby,
    pc.currentcostprice,
    pc.futurecostprice,
    pc.coststandard,
    pc.coststandardpoqty,
    pc.coststandardpoamt,
        CASE
            WHEN (pc.coststandardpoqty = (0)::numeric) THEN (0)::numeric
            ELSE (pc.coststandardpoamt / pc.coststandardpoqty)
        END AS coststandardpodiff,
    pc.coststandardcumqty,
    pc.coststandardcumamt,
        CASE
            WHEN (pc.coststandardcumqty = (0)::numeric) THEN (0)::numeric
            ELSE (pc.coststandardcumamt / pc.coststandardcumqty)
        END AS coststandardinvdiff,
    pc.costaverage,
    pc.costaveragecumqty,
    pc.costaveragecumamt,
    pc.totalinvqty,
    pc.totalinvamt,
        CASE
            WHEN (pc.totalinvqty = (0)::numeric) THEN (0)::numeric
            ELSE (pc.totalinvamt / pc.totalinvqty)
        END AS totalinvcost,
    pc.pricelastpo,
    pc.pricelastinv
   FROM (adempiere.m_product_costing pc
     JOIN adempiere.m_product p ON ((pc.m_product_id = p.m_product_id)));


ALTER TABLE adempiere.rv_product_costing OWNER TO adempiere;

--
-- Name: rv_productionline; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_productionline AS
 SELECT pl.m_productionline_id,
    pl.ad_client_id,
    pl.ad_org_id,
    pl.isactive,
    pl.created,
    pl.createdby,
    pl.updated,
    pl.updatedby,
    pl.m_productionplan_id,
    pl.line,
    pl.m_product_id,
    pl.movementqty,
    pl.m_locator_id,
    pl.description,
    pl.m_attributesetinstance_id,
    pl.processed,
    pl.m_production_id,
    pl.plannedqty,
    pl.qtyused,
    pl.isendproduct,
    pl.qtyreserved,
    pl.pickedqty,
    p.m_product_category_id,
    p.producttype,
    p.value AS productvalue,
    p.name AS productname
   FROM (adempiere.m_productionline pl
     JOIN adempiere.m_product p ON ((pl.m_product_id = p.m_product_id)));


ALTER TABLE adempiere.rv_productionline OWNER TO adempiere;

--
-- Name: rv_projectcycle; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_projectcycle AS
 SELECT p.ad_client_id,
    p.ad_org_id,
    p.isactive,
    p.created,
    p.createdby,
    p.updated,
    p.updatedby,
    c.c_cycle_id,
    c.name AS cyclename,
    c.c_currency_id,
    cs.c_cyclestep_id,
    cs.name AS cyclestepname,
    cs.seqno,
    cs.relativeweight,
    pp.c_phase_id,
    pp.name AS projectphasename,
    pt.c_projecttype_id,
    pt.name AS projecttypename,
    p.value AS projectvalue,
    p.name AS projectname,
    p.description,
    p.note,
    p.c_bpartner_id,
    p.c_bpartner_location_id,
    p.ad_user_id,
    p.poreference,
    p.salesrep_id,
    p.m_warehouse_id,
    p.projectcategory,
    p.datecontract,
    p.datefinish,
    p.iscommitment,
    p.iscommitceiling,
    (p.committedqty * cs.relativeweight) AS committedqty,
    (adempiere.currencyconvert(p.committedamt, p.c_currency_id, c.c_currency_id, adempiere.getdate(), (0)::numeric, p.ad_client_id, p.ad_org_id) * cs.relativeweight) AS committedamt,
    (p.plannedqty * cs.relativeweight) AS plannedqty,
    (adempiere.currencyconvert(p.plannedamt, p.c_currency_id, c.c_currency_id, adempiere.getdate(), (0)::numeric, p.ad_client_id, p.ad_org_id) * cs.relativeweight) AS plannedamt,
    (adempiere.currencyconvert(p.plannedmarginamt, p.c_currency_id, c.c_currency_id, adempiere.getdate(), (0)::numeric, p.ad_client_id, p.ad_org_id) * cs.relativeweight) AS plannedmarginamt,
    (adempiere.currencyconvert(p.invoicedamt, p.c_currency_id, c.c_currency_id, adempiere.getdate(), (0)::numeric, p.ad_client_id, p.ad_org_id) * cs.relativeweight) AS invoicedamt,
    (p.invoicedqty * cs.relativeweight) AS invoicedqty,
    (adempiere.currencyconvert(p.projectbalanceamt, p.c_currency_id, c.c_currency_id, adempiere.getdate(), (0)::numeric, p.ad_client_id, p.ad_org_id) * cs.relativeweight) AS projectbalanceamt
   FROM (((((adempiere.c_cycle c
     JOIN adempiere.c_cyclestep cs ON ((c.c_cycle_id = cs.c_cycle_id)))
     JOIN adempiere.c_cyclephase cp ON ((cs.c_cyclestep_id = cp.c_cyclestep_id)))
     JOIN adempiere.c_phase pp ON ((cp.c_phase_id = pp.c_phase_id)))
     JOIN adempiere.c_project p ON ((cp.c_phase_id = p.c_phase_id)))
     JOIN adempiere.c_projecttype pt ON ((p.c_projecttype_id = pt.c_projecttype_id)));


ALTER TABLE adempiere.rv_projectcycle OWNER TO adempiere;

--
-- Name: rv_projectlineissue; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_projectlineissue AS
 SELECT COALESCE(l.ad_client_id, i.ad_client_id) AS ad_client_id,
    COALESCE(l.ad_org_id, i.ad_org_id) AS ad_org_id,
    COALESCE(l.isactive, i.isactive) AS isactive,
    COALESCE(l.created, i.created) AS created,
    COALESCE(l.createdby, i.createdby) AS createdby,
    COALESCE(l.updated, i.updated) AS updated,
    COALESCE(l.updatedby, i.updatedby) AS updatedby,
    COALESCE(l.c_project_id, i.c_project_id) AS c_project_id,
    COALESCE(l.m_product_id, i.m_product_id) AS m_product_id,
    l.c_projectline_id,
    l.line,
    l.description,
    l.plannedqty,
    l.plannedprice,
    l.plannedamt,
    l.plannedmarginamt,
    l.committedqty,
    i.c_projectissue_id,
    i.m_locator_id,
    i.movementqty,
    i.movementdate,
    i.line AS issueline,
    i.description AS issuedescription,
    i.m_inoutline_id,
    i.s_timeexpenseline_id,
    fa.c_acctschema_id,
    fa.account_id,
    fa.amtsourcedr,
    fa.amtsourcecr,
    fa.amtacctdr,
    fa.amtacctcr,
    ((l.plannedamt - fa.amtsourcedr) + fa.amtsourcecr) AS linemargin
   FROM ((adempiere.c_projectline l
     FULL JOIN adempiere.c_projectissue i ON (((i.c_project_id = l.c_project_id) AND (i.c_projectissue_id = l.c_projectissue_id))))
     LEFT JOIN adempiere.fact_acct fa ON (((fa.ad_table_id = (623)::numeric) AND (fa.record_id = i.c_projectissue_id) AND (fa.m_locator_id IS NULL))));


ALTER TABLE adempiere.rv_projectlineissue OWNER TO adempiere;

--
-- Name: t_reconciliation; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_reconciliation (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) DEFAULT NULL::numeric,
    ad_pinstance_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    fact_acct_id numeric(10,0) NOT NULL,
    isactive character(1) NOT NULL,
    matchcode character varying(60) DEFAULT NULL::character varying,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT t_reconciliation_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.t_reconciliation OWNER TO adempiere;

--
-- Name: rv_reconciliation; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_reconciliation AS
 SELECT f.ad_client_id,
    f.ad_org_id,
    f.isactive,
    f.created,
    f.createdby,
    f.updated,
    f.updatedby,
    f.fact_acct_id,
    f.c_acctschema_id,
    f.account_id,
    f.datetrx,
    f.dateacct,
    f.c_period_id,
    f.ad_table_id,
    f.record_id,
    f.line_id,
    f.gl_category_id,
    f.gl_budget_id,
    f.c_tax_id,
    f.m_locator_id,
    f.postingtype,
    f.c_currency_id,
    f.amtsourcedr,
    f.amtsourcecr,
    f.amtsource,
    f.amtacctdr,
    f.amtacctcr,
    f.amtacct,
    f.rate,
    f.c_uom_id,
    f.qty,
    f.m_product_id,
    f.c_bpartner_id,
    f.ad_orgtrx_id,
    f.c_locfrom_id,
    f.c_locto_id,
    f.c_salesregion_id,
    f.c_project_id,
    f.c_campaign_id,
    f.c_activity_id,
    f.user1_id,
    f.user2_id,
    f.user3_id,
    f.user4_id,
    f.userelement1_id,
    f.userelement2_id,
    f.a_asset_id,
    f.description,
    f.orgvalue,
    f.orgname,
    f.accountvalue,
    f.name,
    f.accounttype,
    f.bpartnervalue,
    f.bpname,
    f.c_bp_group_id,
    f.productvalue,
    f.productname,
    f.upc,
    f.m_product_category_id,
    t.ad_pinstance_id,
    t.matchcode
   FROM (adempiere.rv_fact_acct f
     JOIN adempiere.t_reconciliation t ON ((f.fact_acct_id = t.fact_acct_id)));


ALTER TABLE adempiere.rv_reconciliation OWNER TO adempiere;

--
-- Name: rv_requestupdates; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_requestupdates AS
 SELECT r_requestupdates.ad_client_id,
    r_requestupdates.ad_org_id,
    r_requestupdates.isactive,
    r_requestupdates.created,
    r_requestupdates.createdby,
    r_requestupdates.updated,
    r_requestupdates.updatedby,
    r_requestupdates.r_request_id,
    r_requestupdates.ad_user_id,
    r_requestupdates.isselfservice,
    NULL::numeric AS r_group_id,
    NULL::numeric AS r_requesttype_id,
    NULL::numeric AS r_category_id
   FROM adempiere.r_requestupdates
UNION
 SELECT u.ad_client_id,
    u.ad_org_id,
    u.isactive,
    u.created,
    u.createdby,
    u.updated,
    u.updatedby,
    r.r_request_id,
    u.ad_user_id,
    u.isselfservice,
    r.r_group_id,
    NULL::numeric AS r_requesttype_id,
    NULL::numeric AS r_category_id
   FROM (adempiere.r_groupupdates u
     JOIN adempiere.r_request r ON ((u.r_group_id = r.r_group_id)))
UNION
 SELECT u.ad_client_id,
    u.ad_org_id,
    u.isactive,
    u.created,
    u.createdby,
    u.updated,
    u.updatedby,
    r.r_request_id,
    u.ad_user_id,
    u.isselfservice,
    NULL::numeric AS r_group_id,
    r.r_requesttype_id,
    NULL::numeric AS r_category_id
   FROM (adempiere.r_requesttypeupdates u
     JOIN adempiere.r_request r ON ((u.r_requesttype_id = r.r_requesttype_id)))
UNION
 SELECT u.ad_client_id,
    u.ad_org_id,
    u.isactive,
    u.created,
    u.createdby,
    u.updated,
    u.updatedby,
    r.r_request_id,
    u.ad_user_id,
    u.isselfservice,
    NULL::numeric AS r_group_id,
    NULL::numeric AS r_requesttype_id,
    r.r_category_id
   FROM (adempiere.r_categoryupdates u
     JOIN adempiere.r_request r ON ((u.r_category_id = r.r_category_id)))
UNION
 SELECT r_request.ad_client_id,
    r_request.ad_org_id,
    r_request.isactive,
    r_request.created,
    r_request.createdby,
    r_request.updated,
    r_request.updatedby,
    r_request.r_request_id,
    r_request.ad_user_id,
    r_request.isselfservice,
    NULL::numeric AS r_group_id,
    NULL::numeric AS r_requesttype_id,
    NULL::numeric AS r_category_id
   FROM adempiere.r_request
  WHERE (r_request.ad_user_id IS NOT NULL)
UNION
 SELECT u.ad_client_id,
    u.ad_org_id,
    u.isactive,
    u.created,
    u.createdby,
    u.updated,
    u.updatedby,
    r.r_request_id,
    u.ad_user_id,
    NULL::bpchar AS isselfservice,
    NULL::numeric AS r_group_id,
    NULL::numeric AS r_requesttype_id,
    r.r_category_id
   FROM (adempiere.ad_user u
     JOIN adempiere.r_request r ON ((u.ad_user_id = r.salesrep_id)))
UNION
 SELECT r.ad_client_id,
    r.ad_org_id,
    u.isactive,
    r.created,
    r.createdby,
    r.updated,
    r.updatedby,
    r.r_request_id,
    u.ad_user_id,
    NULL::bpchar AS isselfservice,
    NULL::numeric AS r_group_id,
    NULL::numeric AS r_requesttype_id,
    NULL::numeric AS r_category_id
   FROM (adempiere.r_request r
     JOIN adempiere.ad_user_roles u ON ((u.ad_role_id = r.ad_role_id)));


ALTER TABLE adempiere.rv_requestupdates OWNER TO adempiere;

--
-- Name: rv_requestupdates_only; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_requestupdates_only AS
 SELECT min(rv_requestupdates.ad_client_id) AS ad_client_id,
    min(rv_requestupdates.ad_org_id) AS ad_org_id,
    'Y'::character(1) AS isactive,
    adempiere.getdate() AS created,
    0 AS createdby,
    adempiere.getdate() AS updated,
    0 AS updatedby,
    rv_requestupdates.r_request_id,
    rv_requestupdates.ad_user_id
   FROM adempiere.rv_requestupdates
  WHERE (rv_requestupdates.isactive = 'Y'::bpchar)
  GROUP BY rv_requestupdates.r_request_id, rv_requestupdates.ad_user_id;


ALTER TABLE adempiere.rv_requestupdates_only OWNER TO adempiere;

--
-- Name: rv_requestupdates_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_requestupdates_v AS
 SELECT min(rv_requestupdates.ad_client_id) AS ad_client_id,
    min(rv_requestupdates.ad_org_id) AS ad_org_id,
    'Y'::character(1) AS isactive,
    adempiere.getdate() AS created,
    0 AS createdby,
    adempiere.getdate() AS updated,
    0 AS updatedby,
    rv_requestupdates.r_request_id,
    rv_requestupdates.ad_user_id
   FROM adempiere.rv_requestupdates
  WHERE (rv_requestupdates.isactive = 'Y'::bpchar)
  GROUP BY rv_requestupdates.r_request_id, rv_requestupdates.ad_user_id;


ALTER TABLE adempiere.rv_requestupdates_v OWNER TO adempiere;

--
-- Name: rv_t_bomline_costs; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_t_bomline_costs AS
 SELECT t.seqno,
    t.levelno,
    t.levels,
    t.ad_client_id,
    t.c_acctschema_id,
    t.ad_org_id,
    t.createdby,
    t.updatedby,
    t.updated,
    t.created,
    t.ad_pinstance_id,
    t.implosion,
    t.sel_product_id AS m_product_id,
    t.m_costelement_id,
    t.currentcostprice,
    t.currentcostpricell,
    t.futurecostprice,
    t.futurecostpricell,
    t.iscostfrozen,
    t.qtybom,
    ((t.currentcostprice + t.currentcostpricell) * t.qtybom) AS cost,
    ((t.futurecostprice + t.futurecostpricell) * t.qtybom) AS coststandard,
    t.m_costtype_id,
    t.costingmethod,
    bl.isactive,
    bl.pp_product_bom_id,
    bl.pp_product_bomline_id,
    bl.description,
    bl.iscritical,
    bl.componenttype,
    t.m_product_id AS tm_product_id,
    bl.c_uom_id,
    bl.issuemethod,
    bl.line,
    bl.m_attributesetinstance_id,
    bl.scrap,
    bl.validfrom,
    bl.validto,
    bl.isqtypercentage
   FROM (adempiere.t_bomline t
     LEFT JOIN adempiere.pp_product_bomline bl ON ((t.pp_product_bomline_id = bl.pp_product_bomline_id)));


ALTER TABLE adempiere.rv_t_bomline_costs OWNER TO adempiere;

--
-- Name: rv_unposted; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_unposted AS
 SELECT gl_journal.ad_client_id,
    gl_journal.ad_org_id,
    gl_journal.created,
    gl_journal.createdby,
    gl_journal.updated,
    gl_journal.updatedby,
    gl_journal.isactive,
    gl_journal.documentno,
    gl_journal.datedoc,
    gl_journal.dateacct,
    224 AS ad_table_id,
    gl_journal.gl_journal_id AS record_id,
    'N'::text AS issotrx,
    gl_journal.posted,
    gl_journal.processing,
    gl_journal.processed,
    gl_journal.docstatus,
    gl_journal.processedon,
    gl_journal.controlamt AS amount,
    NULL::numeric AS c_bpartner_id,
    gl_journal.c_doctype_id
   FROM adempiere.gl_journal
  WHERE ((gl_journal.posted <> 'Y'::bpchar) AND (gl_journal.docstatus <> 'VO'::bpchar))
UNION
 SELECT pi.ad_client_id,
    pi.ad_org_id,
    pi.created,
    pi.createdby,
    pi.updated,
    pi.updatedby,
    pi.isactive,
    (((p.name)::text || '_'::text) || pi.line) AS documentno,
    pi.movementdate AS datedoc,
    pi.movementdate AS dateacct,
    623 AS ad_table_id,
    pi.c_projectissue_id AS record_id,
    'N'::text AS issotrx,
    pi.posted,
    pi.processing,
    pi.processed,
    'CO'::bpchar AS docstatus,
    pi.processedon,
    0.0 AS amount,
    p.c_bpartner_id,
    NULL::numeric AS c_doctype_id
   FROM (adempiere.c_projectissue pi
     JOIN adempiere.c_project p ON ((pi.c_project_id = p.c_project_id)))
  WHERE (pi.posted <> 'Y'::bpchar)
UNION
 SELECT c_invoice.ad_client_id,
    c_invoice.ad_org_id,
    c_invoice.created,
    c_invoice.createdby,
    c_invoice.updated,
    c_invoice.updatedby,
    c_invoice.isactive,
    c_invoice.documentno,
    c_invoice.dateinvoiced AS datedoc,
    c_invoice.dateacct,
    318 AS ad_table_id,
    c_invoice.c_invoice_id AS record_id,
    c_invoice.issotrx,
    c_invoice.posted,
    c_invoice.processing,
    c_invoice.processed,
    c_invoice.docstatus,
    c_invoice.processedon,
    c_invoice.grandtotal AS amount,
    c_invoice.c_bpartner_id,
    c_invoice.c_doctype_id
   FROM adempiere.c_invoice
  WHERE ((c_invoice.posted <> 'Y'::bpchar) AND (c_invoice.docstatus <> 'VO'::bpchar))
UNION
 SELECT m_inout.ad_client_id,
    m_inout.ad_org_id,
    m_inout.created,
    m_inout.createdby,
    m_inout.updated,
    m_inout.updatedby,
    m_inout.isactive,
    m_inout.documentno,
    m_inout.movementdate AS datedoc,
    m_inout.dateacct,
    319 AS ad_table_id,
    m_inout.m_inout_id AS record_id,
    m_inout.issotrx,
    m_inout.posted,
    m_inout.processing,
    m_inout.processed,
    m_inout.docstatus,
    m_inout.processedon,
    0.0 AS amount,
    m_inout.c_bpartner_id,
    m_inout.c_doctype_id
   FROM adempiere.m_inout
  WHERE ((m_inout.posted <> 'Y'::bpchar) AND (m_inout.docstatus <> 'VO'::bpchar))
UNION
 SELECT m_inventory.ad_client_id,
    m_inventory.ad_org_id,
    m_inventory.created,
    m_inventory.createdby,
    m_inventory.updated,
    m_inventory.updatedby,
    m_inventory.isactive,
    m_inventory.documentno,
    m_inventory.movementdate AS datedoc,
    m_inventory.movementdate AS dateacct,
    321 AS ad_table_id,
    m_inventory.m_inventory_id AS record_id,
    'N'::text AS issotrx,
    m_inventory.posted,
    m_inventory.processing,
    m_inventory.processed,
    m_inventory.docstatus,
    m_inventory.processedon,
    0.0 AS amount,
    NULL::numeric AS c_bpartner_id,
    m_inventory.c_doctype_id
   FROM adempiere.m_inventory
  WHERE ((m_inventory.posted <> 'Y'::bpchar) AND (m_inventory.docstatus <> 'VO'::bpchar))
UNION
 SELECT m_movement.ad_client_id,
    m_movement.ad_org_id,
    m_movement.created,
    m_movement.createdby,
    m_movement.updated,
    m_movement.updatedby,
    m_movement.isactive,
    m_movement.documentno,
    m_movement.movementdate AS datedoc,
    m_movement.movementdate AS dateacct,
    323 AS ad_table_id,
    m_movement.m_movement_id AS record_id,
    'N'::text AS issotrx,
    m_movement.posted,
    m_movement.processing,
    m_movement.processed,
    m_movement.docstatus,
    m_movement.processedon,
    0.0 AS amount,
    m_movement.c_bpartner_id,
    m_movement.c_doctype_id
   FROM adempiere.m_movement
  WHERE ((m_movement.posted <> 'Y'::bpchar) AND (m_movement.docstatus <> 'VO'::bpchar))
UNION
 SELECT m_production.ad_client_id,
    m_production.ad_org_id,
    m_production.created,
    m_production.createdby,
    m_production.updated,
    m_production.updatedby,
    m_production.isactive,
    m_production.name AS documentno,
    m_production.movementdate AS datedoc,
    m_production.movementdate AS dateacct,
    325 AS ad_table_id,
    m_production.m_production_id AS record_id,
    'N'::text AS issotrx,
    m_production.posted,
    m_production.processing,
    m_production.processed,
    'CO'::bpchar AS docstatus,
    m_production.processedon,
    0.0 AS amount,
    NULL::numeric AS c_bpartner_id,
    NULL::numeric AS c_doctype_id
   FROM adempiere.m_production
  WHERE (m_production.posted <> 'Y'::bpchar)
UNION
 SELECT c_cash.ad_client_id,
    c_cash.ad_org_id,
    c_cash.created,
    c_cash.createdby,
    c_cash.updated,
    c_cash.updatedby,
    c_cash.isactive,
    c_cash.name AS documentno,
    c_cash.statementdate AS datedoc,
    c_cash.dateacct,
    407 AS ad_table_id,
    c_cash.c_cash_id AS record_id,
    'N'::text AS issotrx,
    c_cash.posted,
    c_cash.processing,
    c_cash.processed,
    c_cash.docstatus,
    c_cash.processedon,
    (c_cash.beginningbalance - c_cash.endingbalance) AS amount,
    NULL::numeric AS c_bpartner_id,
    NULL::numeric AS c_doctype_id
   FROM adempiere.c_cash
  WHERE ((c_cash.posted <> 'Y'::bpchar) AND (c_cash.docstatus <> 'VO'::bpchar))
UNION
 SELECT c_payment.ad_client_id,
    c_payment.ad_org_id,
    c_payment.created,
    c_payment.createdby,
    c_payment.updated,
    c_payment.updatedby,
    c_payment.isactive,
    c_payment.documentno,
    c_payment.datetrx AS datedoc,
    c_payment.dateacct,
    335 AS ad_table_id,
    c_payment.c_payment_id AS record_id,
    'N'::text AS issotrx,
    c_payment.posted,
    c_payment.processing,
    c_payment.processed,
    c_payment.docstatus,
    c_payment.processedon,
    c_payment.payamt AS amount,
    c_payment.c_bpartner_id,
    c_payment.c_doctype_id
   FROM adempiere.c_payment
  WHERE ((c_payment.posted <> 'Y'::bpchar) AND (c_payment.docstatus <> 'VO'::bpchar))
UNION
 SELECT c_allocationhdr.ad_client_id,
    c_allocationhdr.ad_org_id,
    c_allocationhdr.created,
    c_allocationhdr.createdby,
    c_allocationhdr.updated,
    c_allocationhdr.updatedby,
    c_allocationhdr.isactive,
    c_allocationhdr.documentno,
    c_allocationhdr.datetrx AS datedoc,
    c_allocationhdr.dateacct,
    735 AS ad_table_id,
    c_allocationhdr.c_allocationhdr_id AS record_id,
    'N'::text AS issotrx,
    c_allocationhdr.posted,
    c_allocationhdr.processing,
    c_allocationhdr.processed,
    c_allocationhdr.docstatus,
    c_allocationhdr.processedon,
    c_allocationhdr.approvalamt AS amount,
    NULL::numeric AS c_bpartner_id,
    NULL::numeric AS c_doctype_id
   FROM adempiere.c_allocationhdr
  WHERE ((c_allocationhdr.posted <> 'Y'::bpchar) AND (c_allocationhdr.docstatus <> 'VO'::bpchar))
UNION
 SELECT c_bankstatement.ad_client_id,
    c_bankstatement.ad_org_id,
    c_bankstatement.created,
    c_bankstatement.createdby,
    c_bankstatement.updated,
    c_bankstatement.updatedby,
    c_bankstatement.isactive,
    c_bankstatement.name AS documentno,
    c_bankstatement.statementdate AS datedoc,
    c_bankstatement.statementdate AS dateacct,
    392 AS ad_table_id,
    c_bankstatement.c_bankstatement_id AS record_id,
    'N'::text AS issotrx,
    c_bankstatement.posted,
    c_bankstatement.processing,
    c_bankstatement.processed,
    c_bankstatement.docstatus,
    c_bankstatement.processedon,
    (c_bankstatement.beginningbalance - c_bankstatement.endingbalance) AS amount,
    NULL::numeric AS c_bpartner_id,
    NULL::numeric AS c_doctype_id
   FROM adempiere.c_bankstatement
  WHERE ((c_bankstatement.posted <> 'Y'::bpchar) AND (c_bankstatement.docstatus <> 'VO'::bpchar))
UNION
 SELECT mi.ad_client_id,
    mi.ad_org_id,
    mi.created,
    mi.createdby,
    mi.updated,
    mi.updatedby,
    mi.isactive,
    mi.documentno,
    mi.datetrx AS datedoc,
    mi.dateacct,
    472 AS ad_table_id,
    mi.m_matchinv_id AS record_id,
    'N'::text AS issotrx,
    mi.posted,
    mi.processing,
    mi.processed,
    'CO'::bpchar AS docstatus,
    mi.processedon,
    il.linetotalamt AS amount,
    i.c_bpartner_id,
    NULL::numeric AS c_doctype_id
   FROM ((adempiere.m_matchinv mi
     LEFT JOIN adempiere.c_invoiceline il ON ((mi.c_invoiceline_id = il.c_invoiceline_id)))
     LEFT JOIN adempiere.c_invoice i ON ((il.c_invoice_id = i.c_invoice_id)))
  WHERE (mi.posted <> 'Y'::bpchar)
UNION
 SELECT po.ad_client_id,
    po.ad_org_id,
    po.created,
    po.createdby,
    po.updated,
    po.updatedby,
    po.isactive,
    po.documentno,
    po.datetrx AS datedoc,
    po.dateacct,
    473 AS ad_table_id,
    po.m_matchpo_id AS record_id,
    'N'::text AS issotrx,
    po.posted,
    po.processing,
    po.processed,
    'CO'::bpchar AS docstatus,
    po.processedon,
    0.0 AS amount,
    NULL::numeric AS c_bpartner_id,
    NULL::numeric AS c_doctype_id
   FROM ((adempiere.m_matchpo po
     LEFT JOIN adempiere.c_orderline ol ON ((po.c_orderline_id = ol.c_orderline_id)))
     LEFT JOIN adempiere.c_order o ON ((ol.c_order_id = o.c_order_id)))
  WHERE (po.posted <> 'Y'::bpchar)
UNION
 SELECT c_order.ad_client_id,
    c_order.ad_org_id,
    c_order.created,
    c_order.createdby,
    c_order.updated,
    c_order.updatedby,
    c_order.isactive,
    c_order.documentno,
    c_order.dateordered AS datedoc,
    c_order.dateacct,
    259 AS ad_table_id,
    c_order.c_order_id AS record_id,
    c_order.issotrx,
    c_order.posted,
    c_order.processing,
    c_order.processed,
    c_order.docstatus,
    c_order.processedon,
    c_order.grandtotal AS amount,
    c_order.c_bpartner_id,
    c_order.c_doctype_id
   FROM adempiere.c_order
  WHERE ((c_order.posted <> 'Y'::bpchar) AND (c_order.docstatus <> 'VO'::bpchar))
UNION
 SELECT m_requisition.ad_client_id,
    m_requisition.ad_org_id,
    m_requisition.created,
    m_requisition.createdby,
    m_requisition.updated,
    m_requisition.updatedby,
    m_requisition.isactive,
    m_requisition.documentno,
    m_requisition.daterequired AS datedoc,
    m_requisition.daterequired AS dateacct,
    702 AS ad_table_id,
    m_requisition.m_requisition_id AS record_id,
    'N'::text AS issotrx,
    m_requisition.posted,
    m_requisition.processing,
    m_requisition.processed,
    m_requisition.docstatus,
    m_requisition.processedon,
    m_requisition.totallines AS amount,
    NULL::numeric AS c_bpartner_id,
    m_requisition.c_doctype_id
   FROM adempiere.m_requisition
  WHERE ((m_requisition.posted <> 'Y'::bpchar) AND (m_requisition.docstatus <> 'VO'::bpchar))
UNION
 SELECT hr_process.ad_client_id,
    hr_process.ad_org_id,
    hr_process.created,
    hr_process.createdby,
    hr_process.updated,
    hr_process.updatedby,
    hr_process.isactive,
    hr_process.documentno,
    hr_process.dateacct AS datedoc,
    hr_process.dateacct,
    53092 AS ad_table_id,
    hr_process.hr_process_id AS record_id,
    'N'::text AS issotrx,
    hr_process.posted,
    hr_process.processing,
    hr_process.processed,
    (hr_process.docstatus)::character(2) AS docstatus,
    hr_process.processedon,
    0.0 AS amount,
    hr_process.c_bpartner_id,
    hr_process.c_doctype_id
   FROM adempiere.hr_process
  WHERE ((hr_process.posted <> 'Y'::bpchar) AND ((hr_process.docstatus)::text <> 'VO'::text))
UNION
 SELECT a_asset_addition.ad_client_id,
    a_asset_addition.ad_org_id,
    a_asset_addition.created,
    a_asset_addition.createdby,
    a_asset_addition.updated,
    a_asset_addition.updatedby,
    a_asset_addition.isactive,
    a_asset_addition.documentno,
    a_asset_addition.dateacct AS datedoc,
    a_asset_addition.dateacct,
    53137 AS ad_table_id,
    a_asset_addition.a_asset_addition_id AS record_id,
    'N'::text AS issotrx,
    a_asset_addition.posted,
    a_asset_addition.processing,
    a_asset_addition.processed,
    (a_asset_addition.docstatus)::character(2) AS docstatus,
    a_asset_addition.processedon,
    a_asset_addition.assetvalueamt AS amount,
    ( SELECT i.c_bpartner_id
           FROM adempiere.c_invoice i
          WHERE (i.c_invoice_id = a_asset_addition.c_invoice_id)) AS c_bpartner_id,
    a_asset_addition.c_doctype_id
   FROM adempiere.a_asset_addition
  WHERE ((a_asset_addition.posted <> 'Y'::bpchar) AND ((a_asset_addition.docstatus)::text <> 'VO'::text))
UNION
 SELECT a_depreciation_entry.ad_client_id,
    a_depreciation_entry.ad_org_id,
    a_depreciation_entry.created,
    a_depreciation_entry.createdby,
    a_depreciation_entry.updated,
    a_depreciation_entry.updatedby,
    a_depreciation_entry.isactive,
    a_depreciation_entry.documentno,
    a_depreciation_entry.dateacct AS datedoc,
    a_depreciation_entry.dateacct,
    53121 AS ad_table_id,
    a_depreciation_entry.a_depreciation_entry_id AS record_id,
    'N'::text AS issotrx,
    a_depreciation_entry.posted,
    a_depreciation_entry.processing,
    a_depreciation_entry.processed,
    (a_depreciation_entry.docstatus)::character(2) AS docstatus,
    a_depreciation_entry.processedon,
    NULL::numeric AS amount,
    NULL::numeric AS c_bpartner_id,
    a_depreciation_entry.c_doctype_id
   FROM adempiere.a_depreciation_entry
  WHERE ((a_depreciation_entry.posted <> 'Y'::bpchar) AND ((a_depreciation_entry.docstatus)::text <> 'VO'::text))
UNION
 SELECT a_asset_disposed.ad_client_id,
    a_asset_disposed.ad_org_id,
    a_asset_disposed.created,
    a_asset_disposed.createdby,
    a_asset_disposed.updated,
    a_asset_disposed.updatedby,
    a_asset_disposed.isactive,
    a_asset_disposed.documentno,
    a_asset_disposed.dateacct AS datedoc,
    a_asset_disposed.dateacct,
    53127 AS ad_table_id,
    a_asset_disposed.a_asset_disposed_id AS record_id,
    'N'::text AS issotrx,
    a_asset_disposed.posted,
    a_asset_disposed.processing,
    a_asset_disposed.processed,
    (a_asset_disposed.docstatus)::character(2) AS docstatus,
    a_asset_disposed.processedon,
    a_asset_disposed.a_disposal_amt AS amount,
    ( SELECT i.c_bpartner_id
           FROM adempiere.c_invoice i
          WHERE (i.c_invoice_id = a_asset_disposed.c_invoice_id)) AS c_bpartner_id,
    a_asset_disposed.c_doctype_id
   FROM adempiere.a_asset_disposed
  WHERE ((a_asset_disposed.posted <> 'Y'::bpchar) AND ((a_asset_disposed.docstatus)::text <> 'VO'::text))
UNION
 SELECT pp_cost_collector.ad_client_id,
    pp_cost_collector.ad_org_id,
    pp_cost_collector.created,
    pp_cost_collector.createdby,
    pp_cost_collector.updated,
    pp_cost_collector.updatedby,
    pp_cost_collector.isactive,
    pp_cost_collector.documentno,
    pp_cost_collector.dateacct AS datedoc,
    pp_cost_collector.dateacct,
    53035 AS ad_table_id,
    pp_cost_collector.pp_cost_collector_id AS record_id,
    'N'::text AS issotrx,
    pp_cost_collector.posted,
    pp_cost_collector.processing,
    pp_cost_collector.processed,
    pp_cost_collector.docstatus,
    pp_cost_collector.processedon,
    NULL::numeric AS amount,
    NULL::numeric AS c_bpartner_id,
    pp_cost_collector.c_doctype_id
   FROM adempiere.pp_cost_collector
  WHERE ((pp_cost_collector.posted <> 'Y'::bpchar) AND (pp_cost_collector.docstatus <> 'VO'::bpchar) AND ((pp_cost_collector.costcollectortype)::text <> '160'::text));


ALTER TABLE adempiere.rv_unposted OWNER TO adempiere;

--
-- Name: rv_unprocessed; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_unprocessed AS
 SELECT gl_journal.ad_client_id,
    gl_journal.ad_org_id,
    gl_journal.created,
    gl_journal.createdby,
    gl_journal.updated,
    gl_journal.updatedby,
    gl_journal.isactive,
    gl_journal.documentno,
    gl_journal.datedoc,
    gl_journal.dateacct,
    224 AS ad_table_id,
    gl_journal.gl_journal_id AS record_id,
    'N'::bpchar AS issotrx,
    gl_journal.posted,
    gl_journal.processing,
    gl_journal.processed,
    gl_journal.docstatus
   FROM adempiere.gl_journal
  WHERE (gl_journal.docstatus <> ALL (ARRAY['CO'::bpchar, 'CL'::bpchar, 'VO'::bpchar, 'RE'::bpchar]))
UNION
 SELECT c_invoice.ad_client_id,
    c_invoice.ad_org_id,
    c_invoice.created,
    c_invoice.createdby,
    c_invoice.updated,
    c_invoice.updatedby,
    c_invoice.isactive,
    c_invoice.documentno,
    c_invoice.dateinvoiced AS datedoc,
    c_invoice.dateacct,
    318 AS ad_table_id,
    c_invoice.c_invoice_id AS record_id,
    c_invoice.issotrx,
    c_invoice.posted,
    c_invoice.processing,
    c_invoice.processed,
    c_invoice.docstatus
   FROM adempiere.c_invoice
  WHERE (c_invoice.docstatus <> ALL (ARRAY['CO'::bpchar, 'CL'::bpchar, 'VO'::bpchar, 'RE'::bpchar]))
UNION
 SELECT m_inout.ad_client_id,
    m_inout.ad_org_id,
    m_inout.created,
    m_inout.createdby,
    m_inout.updated,
    m_inout.updatedby,
    m_inout.isactive,
    m_inout.documentno,
    m_inout.movementdate AS datedoc,
    m_inout.dateacct,
    319 AS ad_table_id,
    m_inout.m_inout_id AS record_id,
    m_inout.issotrx,
    m_inout.posted,
    m_inout.processing,
    m_inout.processed,
    m_inout.docstatus
   FROM adempiere.m_inout
  WHERE (m_inout.docstatus <> ALL (ARRAY['CO'::bpchar, 'CL'::bpchar, 'VO'::bpchar, 'RE'::bpchar]))
UNION
 SELECT m_inventory.ad_client_id,
    m_inventory.ad_org_id,
    m_inventory.created,
    m_inventory.createdby,
    m_inventory.updated,
    m_inventory.updatedby,
    m_inventory.isactive,
    m_inventory.documentno,
    m_inventory.movementdate AS datedoc,
    m_inventory.movementdate AS dateacct,
    321 AS ad_table_id,
    m_inventory.m_inventory_id AS record_id,
    'N'::bpchar AS issotrx,
    m_inventory.posted,
    m_inventory.processing,
    m_inventory.processed,
    m_inventory.docstatus
   FROM adempiere.m_inventory
  WHERE (m_inventory.docstatus <> ALL (ARRAY['CO'::bpchar, 'CL'::bpchar, 'VO'::bpchar, 'RE'::bpchar]))
UNION
 SELECT m_movement.ad_client_id,
    m_movement.ad_org_id,
    m_movement.created,
    m_movement.createdby,
    m_movement.updated,
    m_movement.updatedby,
    m_movement.isactive,
    m_movement.documentno,
    m_movement.movementdate AS datedoc,
    m_movement.movementdate AS dateacct,
    323 AS ad_table_id,
    m_movement.m_movement_id AS record_id,
    'N'::bpchar AS issotrx,
    m_movement.posted,
    m_movement.processing,
    m_movement.processed,
    m_movement.docstatus
   FROM adempiere.m_movement
  WHERE (m_movement.docstatus <> ALL (ARRAY['CO'::bpchar, 'CL'::bpchar, 'VO'::bpchar, 'RE'::bpchar]))
UNION
 SELECT c_cash.ad_client_id,
    c_cash.ad_org_id,
    c_cash.created,
    c_cash.createdby,
    c_cash.updated,
    c_cash.updatedby,
    c_cash.isactive,
    c_cash.name AS documentno,
    c_cash.statementdate AS datedoc,
    c_cash.dateacct,
    407 AS ad_table_id,
    c_cash.c_cash_id AS record_id,
    'N'::bpchar AS issotrx,
    c_cash.posted,
    c_cash.processing,
    c_cash.processed,
    c_cash.docstatus
   FROM adempiere.c_cash
  WHERE (c_cash.docstatus <> ALL (ARRAY['CO'::bpchar, 'CL'::bpchar, 'VO'::bpchar, 'RE'::bpchar]))
UNION
 SELECT c_payment.ad_client_id,
    c_payment.ad_org_id,
    c_payment.created,
    c_payment.createdby,
    c_payment.updated,
    c_payment.updatedby,
    c_payment.isactive,
    c_payment.documentno,
    c_payment.datetrx AS datedoc,
    c_payment.datetrx AS dateacct,
    335 AS ad_table_id,
    c_payment.c_payment_id AS record_id,
    'N'::bpchar AS issotrx,
    c_payment.posted,
    c_payment.processing,
    c_payment.processed,
    c_payment.docstatus
   FROM adempiere.c_payment
  WHERE (c_payment.docstatus <> ALL (ARRAY['CO'::bpchar, 'CL'::bpchar, 'VO'::bpchar, 'RE'::bpchar]))
UNION
 SELECT c_allocationhdr.ad_client_id,
    c_allocationhdr.ad_org_id,
    c_allocationhdr.created,
    c_allocationhdr.createdby,
    c_allocationhdr.updated,
    c_allocationhdr.updatedby,
    c_allocationhdr.isactive,
    c_allocationhdr.documentno,
    c_allocationhdr.datetrx AS datedoc,
    c_allocationhdr.datetrx AS dateacct,
    735 AS ad_table_id,
    c_allocationhdr.c_allocationhdr_id AS record_id,
    'N'::bpchar AS issotrx,
    c_allocationhdr.posted,
    c_allocationhdr.processing,
    c_allocationhdr.processed,
    c_allocationhdr.docstatus
   FROM adempiere.c_allocationhdr
  WHERE (c_allocationhdr.docstatus <> ALL (ARRAY['CO'::bpchar, 'CL'::bpchar, 'VO'::bpchar, 'RE'::bpchar]))
UNION
 SELECT c_bankstatement.ad_client_id,
    c_bankstatement.ad_org_id,
    c_bankstatement.created,
    c_bankstatement.createdby,
    c_bankstatement.updated,
    c_bankstatement.updatedby,
    c_bankstatement.isactive,
    c_bankstatement.name AS documentno,
    c_bankstatement.statementdate AS datedoc,
    c_bankstatement.statementdate AS dateacct,
    392 AS ad_table_id,
    c_bankstatement.c_bankstatement_id AS record_id,
    'N'::bpchar AS issotrx,
    c_bankstatement.posted,
    c_bankstatement.processing,
    c_bankstatement.processed,
    c_bankstatement.docstatus
   FROM adempiere.c_bankstatement
  WHERE (c_bankstatement.docstatus <> ALL (ARRAY['CO'::bpchar, 'CL'::bpchar, 'VO'::bpchar, 'RE'::bpchar]))
UNION
 SELECT c_order.ad_client_id,
    c_order.ad_org_id,
    c_order.created,
    c_order.createdby,
    c_order.updated,
    c_order.updatedby,
    c_order.isactive,
    c_order.documentno,
    c_order.dateordered AS datedoc,
    c_order.dateacct,
    259 AS ad_table_id,
    c_order.c_order_id AS record_id,
    c_order.issotrx,
    c_order.posted,
    c_order.processing,
    c_order.processed,
    c_order.docstatus
   FROM adempiere.c_order
  WHERE (c_order.docstatus <> ALL (ARRAY['CO'::bpchar, 'CL'::bpchar, 'VO'::bpchar, 'RE'::bpchar]))
UNION
 SELECT m_requisition.ad_client_id,
    m_requisition.ad_org_id,
    m_requisition.created,
    m_requisition.createdby,
    m_requisition.updated,
    m_requisition.updatedby,
    m_requisition.isactive,
    m_requisition.documentno,
    m_requisition.daterequired AS datedoc,
    m_requisition.daterequired AS dateacct,
    702 AS ad_table_id,
    m_requisition.m_requisition_id AS record_id,
    'N'::bpchar AS issotrx,
    m_requisition.posted,
    m_requisition.processing,
    m_requisition.processed,
    m_requisition.docstatus
   FROM adempiere.m_requisition
  WHERE (m_requisition.docstatus <> ALL (ARRAY['CO'::bpchar, 'CL'::bpchar, 'VO'::bpchar, 'RE'::bpchar]));


ALTER TABLE adempiere.rv_unprocessed OWNER TO adempiere;

--
-- Name: rv_warehouseprice; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_warehouseprice AS
 SELECT w.ad_client_id,
    w.ad_org_id,
        CASE
            WHEN (p.discontinued = 'N'::bpchar) THEN 'Y'::text
            ELSE 'N'::text
        END AS isactive,
    pr.created,
    pr.createdby,
    pr.updated,
    pr.updatedby,
    p.m_product_id,
    pr.m_pricelist_version_id,
    w.m_warehouse_id,
    p.value,
    p.name,
    p.upc,
    p.sku,
    uom.c_uom_id,
    uom.uomsymbol,
    adempiere.bompricelist(p.m_product_id, pr.m_pricelist_version_id) AS pricelist,
    adempiere.bompricestd(p.m_product_id, pr.m_pricelist_version_id) AS pricestd,
    (adempiere.bompricestd(p.m_product_id, pr.m_pricelist_version_id) - adempiere.bompricelimit(p.m_product_id, pr.m_pricelist_version_id)) AS margin,
    adempiere.bompricelimit(p.m_product_id, pr.m_pricelist_version_id) AS pricelimit,
    w.name AS warehousename,
    adempiere.bomqtyavailable(p.m_product_id, w.m_warehouse_id, (0)::numeric) AS qtyavailable,
    adempiere.bomqtyonhand(p.m_product_id, w.m_warehouse_id, (0)::numeric) AS qtyonhand,
    adempiere.bomqtyreserved(p.m_product_id, w.m_warehouse_id, (0)::numeric) AS qtyreserved,
    adempiere.bomqtyordered(p.m_product_id, w.m_warehouse_id, (0)::numeric) AS qtyordered,
    COALESCE(pa.isinstanceattribute, 'N'::bpchar) AS isinstanceattribute
   FROM ((((adempiere.m_product p
     JOIN adempiere.m_productprice pr ON ((p.m_product_id = pr.m_product_id)))
     JOIN adempiere.c_uom uom ON ((p.c_uom_id = uom.c_uom_id)))
     LEFT JOIN adempiere.m_attributeset pa ON ((p.m_attributeset_id = pa.m_attributeset_id)))
     JOIN adempiere.m_warehouse w ON ((p.ad_client_id = w.ad_client_id)))
  WHERE ((p.issummary = 'N'::bpchar) AND (p.isactive = 'Y'::bpchar) AND (pr.isactive = 'Y'::bpchar) AND (w.isactive = 'Y'::bpchar));


ALTER TABLE adempiere.rv_warehouseprice OWNER TO adempiere;

--
-- Name: wm_inoutbound; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.wm_inoutbound (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    wm_inoutbound_id numeric(10,0) NOT NULL,
    ad_orgtrx_id numeric(10,0),
    c_activity_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_doctype_id numeric(10,0) NOT NULL,
    dateprinted timestamp without time zone,
    deliveryrule character(1) DEFAULT 'A'::bpchar NOT NULL,
    deliveryviarule character(1) DEFAULT 'P'::bpchar NOT NULL,
    description character varying(255),
    docaction character(2) DEFAULT 'CO'::bpchar NOT NULL,
    docstatus character varying(2) DEFAULT 'DR'::character varying NOT NULL,
    documentno character varying(30) NOT NULL,
    dropship_bpartner_id numeric(10,0),
    dropship_location_id numeric(10,0),
    dropship_user_id numeric(10,0),
    freightamt numeric,
    freightcostrule character(1) DEFAULT 'I'::bpchar NOT NULL,
    isapproved character(1) NOT NULL,
    isdropship character(1) DEFAULT 'N'::bpchar,
    isintransit character(1) NOT NULL,
    isprinted character(1) NOT NULL,
    issotrx character(1) NOT NULL,
    m_shipper_id numeric(10,0),
    m_warehouse_id numeric(10,0) NOT NULL,
    poreference character varying(20),
    pickdate timestamp without time zone,
    priorityrule character(1) DEFAULT '5'::bpchar NOT NULL,
    processed character(1) NOT NULL,
    processing character(1),
    salesrep_id numeric(10,0),
    sendemail character(1) NOT NULL,
    shipdate timestamp without time zone,
    trackingno character varying(60),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    volume numeric,
    weight numeric,
    m_freightcategory_id numeric(10,0) DEFAULT NULL::numeric,
    generateto character(1),
    createfrom character(1),
    datetrx timestamp without time zone,
    m_locator_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT wm_inoutbound_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT wm_inoutbound_isapproved_check CHECK ((isapproved = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT wm_inoutbound_isdropship_check CHECK ((isdropship = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT wm_inoutbound_isintransit_check CHECK ((isintransit = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT wm_inoutbound_isprinted_check CHECK ((isprinted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT wm_inoutbound_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT wm_inoutbound_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT wm_inoutbound_sendemail_check CHECK ((sendemail = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.wm_inoutbound OWNER TO adempiere;

--
-- Name: wm_inoutboundline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.wm_inoutboundline (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    wm_inoutboundline_id numeric(10,0) NOT NULL,
    ad_orgtrx_id numeric(10,0),
    c_activity_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_charge_id numeric(10,0),
    c_orderline_id numeric(10,0),
    c_projectphase_id numeric(10,0),
    c_projecttask_id numeric(10,0),
    c_project_id numeric(10,0),
    c_uom_id numeric(10,0) NOT NULL,
    description character varying(255),
    isdescription character(1) DEFAULT 'N'::bpchar NOT NULL,
    line numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0),
    wm_inoutbound_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0),
    movementqty numeric DEFAULT '0'::numeric NOT NULL,
    pickedqty numeric,
    processed character(1) NOT NULL,
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    pickdate timestamp without time zone,
    shipdate timestamp without time zone,
    pp_mrp_id numeric(10,0) DEFAULT NULL::numeric,
    dd_orderline_id numeric(10,0) DEFAULT NULL::numeric,
    pp_order_bomline_id numeric(10,0) DEFAULT NULL::numeric,
    dd_order_id numeric(10,0) DEFAULT NULL::numeric,
    pp_order_id numeric(10,0) DEFAULT NULL::numeric,
    c_order_id numeric(10,0) DEFAULT NULL::numeric,
    freightamt numeric,
    m_locator_id numeric(10,0),
    m_locatorto_id numeric(10,0),
    c_invoiceline_id numeric(10,0) DEFAULT NULL::numeric,
    c_invoice_id numeric(10,0) DEFAULT NULL::numeric,
    m_shipper_id numeric(10,0),
    m_freightcategory_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT wm_inoutboundline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT wm_inoutboundline_isdescription_check CHECK ((isdescription = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT wm_inoutboundline_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.wm_inoutboundline OWNER TO adempiere;

--
-- Name: rv_wm_inoutboundline; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.rv_wm_inoutboundline AS
 SELECT iob.ad_client_id,
    iob.ad_org_id,
    iob.created,
    iob.createdby,
    iob.isactive,
    iob.updated,
    iob.updatedby,
    iob.c_doctype_id,
    iob.dateprinted,
    iob.deliveryrule,
    iob.deliveryviarule,
    iob.docaction,
    iob.docstatus,
    iob.documentno,
    iob.dropship_bpartner_id,
    iob.dropship_location_id,
    iob.dropship_user_id,
    iob.freightamt,
    iob.freightcostrule,
    iob.m_freightcategory_id,
    iob.isapproved,
    iob.isdropship,
    iob.isintransit,
    iob.isprinted,
    iob.issotrx,
    iob.m_shipper_id,
    iob.m_warehouse_id,
    iob.poreference,
    iob.priorityrule,
    iob.salesrep_id,
    iob.trackingno,
    iob.volume,
    iob.weight,
    iobl.wm_inoutboundline_id,
    iobl.ad_orgtrx_id,
    iobl.c_activity_id,
    iobl.c_campaign_id,
    iobl.c_charge_id,
    iobl.c_orderline_id,
    iobl.c_projectphase_id,
    iobl.c_projecttask_id,
    iobl.c_project_id,
    iobl.c_uom_id,
    iobl.description,
    iobl.isdescription,
    iobl.line,
    iobl.m_attributesetinstance_id,
    iobl.wm_inoutbound_id,
    iobl.m_product_id,
    iobl.movementqty,
    iobl.pickedqty,
    iobl.processed,
    iobl.user1_id,
    iobl.user2_id,
    iobl.pickdate,
    iobl.shipdate,
    iobl.pp_mrp_id,
    iobl.dd_orderline_id,
    iobl.pp_order_bomline_id,
    iobl.dd_order_id,
    iobl.pp_order_id,
    iobl.c_order_id,
    ol.qtyordered,
    ol.qtydelivered,
    o.documentno AS referenceno,
    o.dateordered,
    o.datepromised,
    o.c_bpartner_id,
    adempiere.bomqtyonhand(iobl.m_product_id, iob.m_warehouse_id, (0)::numeric) AS qtyonhand,
    adempiere.bomqtyreserved(iobl.m_product_id, iob.m_warehouse_id, (0)::numeric) AS qtyreserved,
    adempiere.bomqtyavailable(iobl.m_product_id, iob.m_warehouse_id, (0)::numeric) AS qtyavailable
   FROM ((((adempiere.wm_inoutboundline iobl
     JOIN adempiere.wm_inoutbound iob ON ((iob.wm_inoutbound_id = iobl.wm_inoutbound_id)))
     JOIN adempiere.c_orderline ol ON ((ol.c_orderline_id = iobl.c_orderline_id)))
     JOIN adempiere.c_order o ON ((o.c_order_id = ol.c_order_id)))
     JOIN adempiere.c_bpartner bp ON ((bp.c_bpartner_id = ol.c_bpartner_id)))
  WHERE ((NOT (EXISTS ( SELECT 1
           FROM adempiere.m_inoutline
          WHERE ((m_inoutline.c_orderline_id = iobl.c_orderline_id) AND (iobl.pickedqty >= m_inoutline.movementqty))))) AND (iob.issotrx = 'Y'::bpchar) AND (iobl.processed = 'Y'::bpchar) AND (ol.qtyordered <> ol.qtydelivered))
UNION
 SELECT iob.ad_client_id,
    iob.ad_org_id,
    iob.created,
    iob.createdby,
    iob.isactive,
    iob.updated,
    iob.updatedby,
    iob.c_doctype_id,
    iob.dateprinted,
    iob.deliveryrule,
    iob.deliveryviarule,
    iob.docaction,
    iob.docstatus,
    iob.documentno,
    iob.dropship_bpartner_id,
    iob.dropship_location_id,
    iob.dropship_user_id,
    iob.freightamt,
    iob.freightcostrule,
    iob.m_freightcategory_id,
    iob.isapproved,
    iob.isdropship,
    iob.isintransit,
    iob.isprinted,
    iob.issotrx,
    iob.m_shipper_id,
    iob.m_warehouse_id,
    iob.poreference,
    iob.priorityrule,
    iob.salesrep_id,
    iob.trackingno,
    iob.volume,
    iob.weight,
    iobl.wm_inoutboundline_id,
    iobl.ad_orgtrx_id,
    iobl.c_activity_id,
    iobl.c_campaign_id,
    iobl.c_charge_id,
    iobl.c_orderline_id,
    iobl.c_projectphase_id,
    iobl.c_projecttask_id,
    iobl.c_project_id,
    iobl.c_uom_id,
    iobl.description,
    iobl.isdescription,
    iobl.line,
    iobl.m_attributesetinstance_id,
    iobl.wm_inoutbound_id,
    iobl.m_product_id,
    iobl.movementqty,
    iobl.pickedqty,
    iobl.processed,
    iobl.user1_id,
    iobl.user2_id,
    iobl.pickdate,
    iobl.shipdate,
    iobl.pp_mrp_id,
    iobl.dd_orderline_id,
    iobl.pp_order_bomline_id,
    iobl.dd_order_id,
    iobl.pp_order_id,
    iobl.c_order_id,
    ol.qtyordered,
    ol.qtydelivered,
    o.documentno AS referenceno,
    o.dateordered,
    o.datepromised,
    o.c_bpartner_id,
    adempiere.bomqtyonhand(iobl.m_product_id, iob.m_warehouse_id, (0)::numeric) AS qtyonhand,
    adempiere.bomqtyreserved(iobl.m_product_id, iob.m_warehouse_id, (0)::numeric) AS qtyreserved,
    adempiere.bomqtyavailable(iobl.m_product_id, iob.m_warehouse_id, (0)::numeric) AS qtyavailable
   FROM ((((adempiere.wm_inoutboundline iobl
     JOIN adempiere.wm_inoutbound iob ON ((iob.wm_inoutbound_id = iobl.wm_inoutbound_id)))
     JOIN adempiere.dd_orderline ol ON ((ol.dd_orderline_id = iobl.dd_orderline_id)))
     JOIN adempiere.dd_order o ON ((o.dd_order_id = ol.dd_order_id)))
     JOIN adempiere.c_bpartner bp ON ((bp.c_bpartner_id = o.c_bpartner_id)))
  WHERE ((NOT (EXISTS ( SELECT 1
           FROM adempiere.m_movementline
          WHERE ((m_movementline.dd_orderline_id = iobl.dd_orderline_id) AND (iobl.pickedqty >= m_movementline.movementqty))))) AND (iob.issotrx = 'Y'::bpchar) AND (iobl.processed = 'Y'::bpchar) AND (ol.qtyordered <> ol.qtydelivered))
UNION
 SELECT iob.ad_client_id,
    iob.ad_org_id,
    iob.created,
    iob.createdby,
    iob.isactive,
    iob.updated,
    iob.updatedby,
    iob.c_doctype_id,
    iob.dateprinted,
    iob.deliveryrule,
    iob.deliveryviarule,
    iob.docaction,
    iob.docstatus,
    iob.documentno,
    iob.dropship_bpartner_id,
    iob.dropship_location_id,
    iob.dropship_user_id,
    iob.freightamt,
    iob.freightcostrule,
    iob.m_freightcategory_id,
    iob.isapproved,
    iob.isdropship,
    iob.isintransit,
    iob.isprinted,
    iob.issotrx,
    iob.m_shipper_id,
    iob.m_warehouse_id,
    iob.poreference,
    iob.priorityrule,
    iob.salesrep_id,
    iob.trackingno,
    iob.volume,
    iob.weight,
    iobl.wm_inoutboundline_id,
    iobl.ad_orgtrx_id,
    iobl.c_activity_id,
    iobl.c_campaign_id,
    iobl.c_charge_id,
    iobl.c_orderline_id,
    iobl.c_projectphase_id,
    iobl.c_projecttask_id,
    iobl.c_project_id,
    iobl.c_uom_id,
    iobl.description,
    iobl.isdescription,
    iobl.line,
    iobl.m_attributesetinstance_id,
    iobl.wm_inoutbound_id,
    iobl.m_product_id,
    iobl.movementqty,
    iobl.pickedqty,
    iobl.processed,
    iobl.user1_id,
    iobl.user2_id,
    iobl.pickdate,
    iobl.shipdate,
    iobl.pp_mrp_id,
    iobl.dd_orderline_id,
    iobl.pp_order_bomline_id,
    iobl.dd_order_id,
    iobl.pp_order_id,
    iobl.c_order_id,
    ol.qtyrequired AS qtyordered,
    ol.qtydelivered,
    o.documentno AS referenceno,
    o.dateordered,
    o.datepromised,
    bp.c_bpartner_id,
    adempiere.bomqtyonhand(iobl.m_product_id, iob.m_warehouse_id, (0)::numeric) AS qtyonhand,
    adempiere.bomqtyreserved(iobl.m_product_id, iob.m_warehouse_id, (0)::numeric) AS qtyreserved,
    adempiere.bomqtyavailable(iobl.m_product_id, iob.m_warehouse_id, (0)::numeric) AS qtyavailable
   FROM ((((adempiere.wm_inoutboundline iobl
     JOIN adempiere.wm_inoutbound iob ON ((iob.wm_inoutbound_id = iobl.wm_inoutbound_id)))
     JOIN adempiere.pp_order_bomline ol ON ((ol.pp_order_bomline_id = iobl.pp_order_bomline_id)))
     JOIN adempiere.pp_order o ON ((o.pp_order_id = ol.pp_order_id)))
     LEFT JOIN adempiere.c_bpartner bp ON ((o.ad_org_id = bp.ad_orgbp_id)))
  WHERE ((NOT (EXISTS ( SELECT 1
           FROM adempiere.pp_cost_collector cc
          WHERE ((cc.pp_order_bomline_id = iobl.pp_order_bomline_id) AND (iobl.pickedqty >= cc.movementqty))))) AND (iob.issotrx = 'Y'::bpchar) AND (iobl.processed = 'Y'::bpchar) AND (ol.qtyrequired <> ol.qtydelivered));


ALTER TABLE adempiere.rv_wm_inoutboundline OWNER TO adempiere;

--
-- Name: s_expensetype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.s_expensetype (
    s_expensetype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    isinvoiced character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_uom_id numeric(10,0) NOT NULL,
    m_product_category_id numeric(10,0) NOT NULL,
    c_taxcategory_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT s_expensetype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_expensetype_isinvoiced_check CHECK ((isinvoiced = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.s_expensetype OWNER TO adempiere;

--
-- Name: s_resource; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.s_resource (
    s_resource_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    s_resourcetype_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    isavailable character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ad_user_id numeric(10,0),
    chargeableqty numeric DEFAULT 0,
    percentutilization numeric DEFAULT 100 NOT NULL,
    dailycapacity numeric,
    ismanufacturingresource character(1) DEFAULT 'N'::bpchar,
    waitingtime numeric,
    manufacturingresourcetype character(2),
    queuingtime numeric,
    planninghorizon numeric(10,0) DEFAULT 0,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT chk_col_53272 CHECK ((percentutilization >= (0)::numeric)),
    CONSTRAINT s_resource_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resource_isavailable_check CHECK ((isavailable = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resource_ismanufacturingresource_check CHECK ((ismanufacturingresource = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.s_resource OWNER TO adempiere;

--
-- Name: s_resourcetype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.s_resourcetype (
    s_resourcetype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    issingleassignment character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_uom_id numeric(10,0) NOT NULL,
    allowuomfractions character(1) DEFAULT 'N'::bpchar NOT NULL,
    timeslotstart timestamp without time zone,
    timeslotend timestamp without time zone,
    istimeslot character(1) DEFAULT 'N'::bpchar NOT NULL,
    isdateslot character(1) DEFAULT 'N'::bpchar NOT NULL,
    onsunday character(1) DEFAULT 'N'::bpchar NOT NULL,
    onmonday character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ontuesday character(1) DEFAULT 'Y'::bpchar NOT NULL,
    onwednesday character(1) DEFAULT 'Y'::bpchar NOT NULL,
    onthursday character(1) DEFAULT 'Y'::bpchar NOT NULL,
    onfriday character(1) DEFAULT 'Y'::bpchar NOT NULL,
    onsaturday character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_product_category_id numeric(10,0) NOT NULL,
    c_taxcategory_id numeric(10,0) NOT NULL,
    chargeableqty numeric DEFAULT 0,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT s_resourcetype_allowuomfractions_check CHECK ((allowuomfractions = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resourcetype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resourcetype_isdateslot_check CHECK ((isdateslot = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resourcetype_issingleassignment_check CHECK ((issingleassignment = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resourcetype_istimeslot_check CHECK ((istimeslot = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resourcetype_onfriday_check CHECK ((onfriday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resourcetype_onmonday_check CHECK ((onmonday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resourcetype_onsaturday_check CHECK ((onsaturday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resourcetype_onsunday_check CHECK ((onsunday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resourcetype_onthursday_check CHECK ((onthursday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resourcetype_ontuesday_check CHECK ((ontuesday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_resourcetype_onwednesday_check CHECK ((onwednesday = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.s_resourcetype OWNER TO adempiere;

--
-- Name: s_resourceunavailable; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.s_resourceunavailable (
    s_resourceunavailable_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    s_resource_id numeric(10,0) NOT NULL,
    datefrom timestamp without time zone NOT NULL,
    dateto timestamp without time zone,
    description character varying(255),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT s_resourceunavailable_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.s_resourceunavailable OWNER TO adempiere;

--
-- Name: s_timeexpense; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.s_timeexpense (
    s_timeexpense_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    documentno character varying(30) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    datereport timestamp without time zone NOT NULL,
    description character varying(255),
    processing character(1),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    m_pricelist_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    isapproved character(1) DEFAULT 'N'::bpchar NOT NULL,
    docstatus character(2) NOT NULL,
    docaction character(2) NOT NULL,
    approvalamt numeric,
    c_invoice_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT s_timeexpense_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_timeexpense_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.s_timeexpense OWNER TO adempiere;

--
-- Name: s_timeexpenseline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.s_timeexpenseline (
    s_timeexpenseline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    s_timeexpense_id numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    istimereport character(1) DEFAULT 'N'::bpchar NOT NULL,
    dateexpense timestamp without time zone,
    m_product_id numeric(10,0),
    qty numeric DEFAULT 0,
    expenseamt numeric DEFAULT 0,
    c_currency_id numeric(10,0),
    convertedamt numeric DEFAULT 0,
    s_resourceassignment_id numeric(10,0),
    description character varying(255),
    note character varying(255),
    isinvoiced character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_bpartner_id numeric(10,0),
    c_project_id numeric(10,0),
    c_activity_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_invoiceline_id numeric(10,0),
    invoiceprice numeric DEFAULT 0,
    c_uom_id numeric(10,0),
    c_orderline_id numeric(10,0),
    c_projectphase_id numeric(10,0),
    c_projecttask_id numeric(10,0),
    s_timetype_id numeric(10,0),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    qtyinvoiced numeric,
    qtyreimbursed numeric,
    priceinvoiced numeric,
    pricereimbursed numeric,
    c_tax_id numeric(10,0) DEFAULT NULL::numeric,
    linenetamt numeric,
    linetotalamt numeric,
    taxamt numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT s_timeexpenseline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_timeexpenseline_isinvoiced_check CHECK ((isinvoiced = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT s_timeexpenseline_istimereport_check CHECK ((istimereport = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.s_timeexpenseline OWNER TO adempiere;

--
-- Name: s_timetype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.s_timetype (
    s_timetype_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.s_timetype OWNER TO adempiere;

--
-- Name: s_training; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.s_training (
    s_training_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    documentnote character varying(2000),
    imageurl character varying(120),
    descriptionurl character varying(120),
    m_product_category_id numeric(10,0) NOT NULL,
    c_taxcategory_id numeric(10,0) NOT NULL,
    c_uom_id numeric(10,0) NOT NULL,
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT s_training_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.s_training OWNER TO adempiere;

--
-- Name: s_training_class; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.s_training_class (
    s_training_class_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    s_training_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    startdate timestamp without time zone NOT NULL,
    enddate timestamp without time zone NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT s_training_class_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.s_training_class OWNER TO adempiere;

--
-- Name: t_aging; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_aging (
    ad_pinstance_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_currency_id numeric(10,0) NOT NULL,
    c_invoice_id numeric(10,0) NOT NULL,
    c_invoicepayschedule_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    statementdate timestamp without time zone NOT NULL,
    duedate timestamp without time zone NOT NULL,
    daysdue numeric(10,0) DEFAULT 0,
    islistinvoices character(1) DEFAULT 'N'::bpchar NOT NULL,
    issotrx character(1) DEFAULT 'Y'::bpchar NOT NULL,
    c_bp_group_id numeric(10,0) NOT NULL,
    invoicedamt numeric DEFAULT 0 NOT NULL,
    openamt numeric DEFAULT 0 NOT NULL,
    pastdue91_plus numeric DEFAULT 0 NOT NULL,
    pastdue61_90 numeric DEFAULT 0 NOT NULL,
    pastdue61_plus numeric DEFAULT 0 NOT NULL,
    pastdue31_60 numeric DEFAULT 0 NOT NULL,
    pastdue31_plus numeric DEFAULT 0 NOT NULL,
    pastdue1_30 numeric DEFAULT 0 NOT NULL,
    pastdue8_30 numeric DEFAULT 0 NOT NULL,
    pastdue1_7 numeric DEFAULT 0 NOT NULL,
    pastdueamt numeric DEFAULT 0 NOT NULL,
    dueamt numeric DEFAULT 0 NOT NULL,
    due0 numeric DEFAULT 0 NOT NULL,
    due0_7 numeric DEFAULT 0 NOT NULL,
    due1_7 numeric DEFAULT 0 NOT NULL,
    due8_30 numeric DEFAULT 0 NOT NULL,
    due0_30 numeric DEFAULT 0 NOT NULL,
    due31_plus numeric DEFAULT 0 NOT NULL,
    due31_60 numeric DEFAULT 0 NOT NULL,
    due61_plus numeric DEFAULT 0 NOT NULL,
    due61_90 numeric DEFAULT 0 NOT NULL,
    due91_plus numeric DEFAULT 0 NOT NULL,
    c_project_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    dateacct character(1) DEFAULT 'N'::bpchar,
    c_order_id numeric(10,0) DEFAULT (1)::numeric NOT NULL,
    c_cashflow_id numeric(10,0) DEFAULT (0)::numeric NOT NULL,
    c_bankaccount_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT t_aging_dateacct_check CHECK ((dateacct = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT t_aging_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT t_aging_islistinvoices_check CHECK ((islistinvoices = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT t_aging_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.t_aging OWNER TO adempiere;

--
-- Name: t_alter_column; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_alter_column (
    tablename name,
    columnname name,
    datatype name,
    nullclause character varying(10),
    defaultclause character varying(200)
);


ALTER TABLE adempiere.t_alter_column OWNER TO adempiere;

--
-- Name: t_bom_indented; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_bom_indented (
    t_bom_indented_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_pinstance_id numeric(10,0) DEFAULT NULL::numeric,
    c_acctschema_id numeric(10,0) DEFAULT NULL::numeric,
    cost numeric,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    currentcostprice numeric,
    currentcostpricell numeric,
    futurecostprice numeric,
    futurecostpricell numeric,
    isactive character(1) DEFAULT NULL::bpchar,
    levelno numeric(10,0) DEFAULT NULL::numeric,
    levels character varying(250) DEFAULT NULL::character varying,
    m_costelement_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_id numeric(10,0) DEFAULT NULL::numeric,
    qtybom numeric,
    seqno numeric(10,0) DEFAULT NULL::numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    qty numeric,
    costfuture numeric,
    sel_product_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT t_bom_indented_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.t_bom_indented OWNER TO adempiere;

--
-- Name: t_combinedaging; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_combinedaging (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_pinstance_id numeric(10,0) NOT NULL,
    c_activity_id numeric(10,0) DEFAULT NULL::numeric,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bp_group_id numeric(10,0) NOT NULL,
    c_campaign_id numeric(10,0) DEFAULT NULL::numeric,
    c_currency_id numeric(10,0) NOT NULL,
    c_invoice_id numeric(10,0) DEFAULT 0 NOT NULL,
    c_invoicepayschedule_id numeric(10,0) DEFAULT 0 NOT NULL,
    c_payment_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    c_project_id numeric(10,0) DEFAULT NULL::numeric,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    daysdue numeric(10,0) DEFAULT NULL::numeric,
    due0 numeric NOT NULL,
    due0_30 numeric NOT NULL,
    due0_7 numeric NOT NULL,
    due1_7 numeric NOT NULL,
    due31_60 numeric NOT NULL,
    due31_plus numeric NOT NULL,
    due61_90 numeric NOT NULL,
    due61_plus numeric NOT NULL,
    due8_30 numeric NOT NULL,
    due91_plus numeric NOT NULL,
    dueamt numeric NOT NULL,
    duedate timestamp without time zone NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isincludepayments character(1) DEFAULT NULL::bpchar,
    issotrx character(1) NOT NULL,
    listsources character(1) NOT NULL,
    openamt numeric NOT NULL,
    pastdue1_30 numeric NOT NULL,
    pastdue1_7 numeric NOT NULL,
    pastdue31_60 numeric NOT NULL,
    pastdue31_plus numeric NOT NULL,
    pastdue61_90 numeric NOT NULL,
    pastdue61_plus numeric NOT NULL,
    pastdue8_30 numeric NOT NULL,
    pastdue91_plus numeric NOT NULL,
    pastdueamt numeric NOT NULL,
    statementdate timestamp without time zone NOT NULL,
    trxamt numeric NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT t_combinedaging_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT t_combinedaging_isincludepayments_check CHECK ((isincludepayments = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT t_combinedaging_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT t_combinedaging_listsources_check CHECK ((listsources = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.t_combinedaging OWNER TO adempiere;

--
-- Name: t_distributionrundetail; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_distributionrundetail (
    m_distributionrun_id numeric(10,0) NOT NULL,
    m_distributionrunline_id numeric(10,0) NOT NULL,
    m_distributionlist_id numeric(10,0) NOT NULL,
    m_distributionlistline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ratio numeric NOT NULL,
    minqty numeric DEFAULT 0 NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    c_bpartner_location_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT t_distributionrundetail_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.t_distributionrundetail OWNER TO adempiere;

--
-- Name: t_inventoryvalue; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_inventoryvalue (
    ad_pinstance_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0),
    ad_org_id numeric(10,0),
    m_pricelist_version_id numeric(10,0),
    datevalue timestamp without time zone,
    c_currency_id numeric(10,0),
    qtyonhand numeric DEFAULT 0,
    pricepo numeric DEFAULT 0,
    pricelist numeric DEFAULT 0,
    pricestd numeric DEFAULT 0,
    pricelimit numeric DEFAULT 0,
    coststandard numeric DEFAULT 0,
    cost numeric DEFAULT 0,
    pricepoamt numeric DEFAULT 0,
    pricelistamt numeric DEFAULT 0,
    pricestdamt numeric DEFAULT 0,
    pricelimitamt numeric DEFAULT 0,
    coststandardamt numeric DEFAULT 0,
    costamt numeric DEFAULT 0,
    m_costelement_id numeric(10,0) NOT NULL,
    m_costtype_id numeric(10,0) DEFAULT NULL::numeric NOT NULL,
    m_product_category_id numeric(10,0) DEFAULT NULL::numeric,
    classification character varying(12) DEFAULT NULL::character varying,
    group1 character varying(255) DEFAULT NULL::character varying,
    group2 character varying(255) DEFAULT NULL::character varying,
    costamtll numeric,
    cumulatedamt numeric,
    c_acctschema_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.t_inventoryvalue OWNER TO adempiere;

--
-- Name: t_invoicegl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_invoicegl (
    ad_pinstance_id numeric(10,0) NOT NULL,
    c_invoice_id numeric(10,0) NOT NULL,
    fact_acct_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    grandtotal numeric DEFAULT 0 NOT NULL,
    openamt numeric DEFAULT 0 NOT NULL,
    percent numeric,
    apar character(1),
    amtsourcebalance numeric DEFAULT 0 NOT NULL,
    amtacctbalance numeric DEFAULT 0 NOT NULL,
    c_conversiontypereval_id numeric(10,0) NOT NULL,
    amtrevaldr numeric DEFAULT 0 NOT NULL,
    amtrevalcr numeric DEFAULT 0 NOT NULL,
    datereval timestamp without time zone NOT NULL,
    amtrevaldrdiff numeric DEFAULT 0 NOT NULL,
    amtrevalcrdiff numeric DEFAULT 0 NOT NULL,
    c_doctypereval_id numeric(10,0),
    isallcurrencies character(1) DEFAULT 'N'::bpchar NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT t_invoicegl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.t_invoicegl OWNER TO adempiere;

--
-- Name: t_invoicegl_v; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.t_invoicegl_v AS
 SELECT i.ad_client_id,
    i.ad_org_id,
    i.isactive,
    i.created,
    i.createdby,
    i.updated,
    i.updatedby,
    i.c_invoice_id,
    i.issotrx,
    i.documentno,
    i.docstatus,
    i.c_doctype_id,
    i.c_order_id,
    i.description,
    i.salesrep_id,
    i.dateinvoiced,
    i.dateacct,
    i.c_paymentterm_id,
    i.c_bpartner_id,
    i.c_bpartner_location_id,
    i.ad_user_id,
    i.isselfservice,
    i.c_currency_id,
    i.c_conversiontype_id,
    i.grandtotal,
    i.istaxincluded,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id,
    i.ad_orgtrx_id,
    i.user1_id,
    i.user2_id,
    i.user3_id,
    i.user4_id,
    fa.c_locfrom_id,
    fa.c_locto_id,
    fa.c_salesregion_id,
    fa.fact_acct_id,
    fa.c_acctschema_id,
    fa.account_id,
    fa.c_period_id,
    fa.gl_category_id,
    fa.gl_budget_id,
    fa.c_tax_id,
    fa.m_locator_id,
    fa.postingtype,
    fa.amtsourcedr,
    fa.amtsourcecr,
    fa.amtacctdr,
    fa.amtacctcr,
    fa.c_uom_id,
    fa.qty,
    gl.ad_pinstance_id,
    gl.apar,
    gl.openamt,
    gl.percent,
    gl.amtrevaldr,
    gl.amtrevalcr,
    gl.datereval,
    gl.c_conversiontypereval_id,
    gl.amtsourcebalance,
    gl.amtacctbalance,
    gl.c_doctypereval_id,
    gl.amtrevaldrdiff,
    gl.amtrevalcrdiff,
    gl.isallcurrencies,
    ((fa.amtacctdr * gl.percent) / (100)::numeric) AS amtacctopendr,
    ((fa.amtacctcr * gl.percent) / (100)::numeric) AS amtacctopencr,
    (((fa.amtacctdr - fa.amtacctcr) * gl.percent) / (100)::numeric) AS amtacctopenbalance
   FROM ((adempiere.t_invoicegl gl
     JOIN adempiere.c_invoice i ON ((gl.c_invoice_id = i.c_invoice_id)))
     JOIN adempiere.fact_acct fa ON ((gl.fact_acct_id = fa.fact_acct_id)));


ALTER TABLE adempiere.t_invoicegl_v OWNER TO adempiere;

--
-- Name: t_invoicegl_vt; Type: VIEW; Schema: adempiere; Owner: adempiere
--

CREATE VIEW adempiere.t_invoicegl_vt AS
 SELECT i.ad_client_id,
    i.ad_org_id,
    i.isactive,
    i.created,
    i.createdby,
    i.updated,
    i.updatedby,
    i.c_invoice_id,
    i.issotrx,
    i.documentno,
    i.docstatus,
    i.c_doctype_id,
    i.c_order_id,
    i.description,
    i.salesrep_id,
    i.dateinvoiced,
    i.dateacct,
    i.c_paymentterm_id,
    i.c_bpartner_id,
    i.c_bpartner_location_id,
    i.ad_user_id,
    i.isselfservice,
    i.c_currency_id,
    i.c_conversiontype_id,
    i.grandtotal,
    i.istaxincluded,
    i.c_campaign_id,
    i.c_project_id,
    i.c_activity_id,
    i.ad_orgtrx_id,
    i.user1_id,
    i.user2_id,
    i.user3_id,
    i.user4_id,
    fa.c_locfrom_id,
    fa.c_locto_id,
    fa.c_salesregion_id,
    fa.fact_acct_id,
    fa.c_acctschema_id,
    fa.account_id,
    fa.c_period_id,
    fa.gl_category_id,
    fa.gl_budget_id,
    fa.c_tax_id,
    fa.m_locator_id,
    fa.postingtype,
    fa.amtsourcedr,
    fa.amtsourcecr,
    fa.amtacctdr,
    fa.amtacctcr,
    fa.c_uom_id,
    fa.qty,
    gl.ad_pinstance_id,
    gl.apar,
    gl.openamt,
    gl.percent,
    gl.amtrevaldr,
    gl.amtrevalcr,
    gl.datereval,
    gl.c_conversiontypereval_id,
    gl.amtsourcebalance,
    gl.amtacctbalance,
    gl.c_doctypereval_id,
    gl.amtrevaldrdiff,
    gl.amtrevalcrdiff,
    gl.isallcurrencies,
    ((fa.amtacctdr * gl.percent) / (100)::numeric) AS amtacctopendr,
    ((fa.amtacctcr * gl.percent) / (100)::numeric) AS amtacctopencr,
    (((fa.amtacctdr - fa.amtacctcr) * gl.percent) / (100)::numeric) AS amtacctopenbalance
   FROM ((adempiere.t_invoicegl gl
     JOIN adempiere.c_invoice i ON ((gl.c_invoice_id = i.c_invoice_id)))
     JOIN adempiere.fact_acct fa ON ((gl.fact_acct_id = fa.fact_acct_id)));


ALTER TABLE adempiere.t_invoicegl_vt OWNER TO adempiere;

--
-- Name: t_mrp_crp; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_mrp_crp (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_pinstance_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(50),
    isactive character(1),
    seqno numeric(10,0),
    t_mrp_crp_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT t_mrp_crp_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.t_mrp_crp OWNER TO adempiere;

--
-- Name: t_openitemtodate; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_openitemtodate (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_pinstance_id numeric(10,0),
    c_activity_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_conversiontype_id numeric(10,0),
    c_currency_id numeric(10,0),
    c_doctype_id numeric(10,0),
    c_invoicepayschedule_id numeric(10,0),
    c_invoice_id numeric(10,0),
    c_order_id numeric(10,0),
    c_paymentterm_id numeric(10,0),
    c_project_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    dateacct timestamp without time zone,
    dateinvoiced timestamp without time zone,
    dateto timestamp without time zone,
    daysdue numeric(10,0),
    discountamt numeric,
    discountdate timestamp without time zone,
    documentno character varying(30),
    duedate timestamp without time zone,
    grandtotal numeric,
    invoicecollectiontype character(1),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ispayschedulevalid character(1),
    issotrx character(1),
    netdays numeric(10,0),
    openamt numeric,
    paidamt numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT t_openitemtodate_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT t_openitemtodate_ispayschedulevalid_check CHECK ((ispayschedulevalid = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT t_openitemtodate_issotrx_check CHECK ((issotrx = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.t_openitemtodate OWNER TO adempiere;

--
-- Name: t_replenish; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_replenish (
    ad_pinstance_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    qtyonhand numeric DEFAULT 0 NOT NULL,
    qtyreserved numeric DEFAULT 0 NOT NULL,
    qtyordered numeric DEFAULT 0 NOT NULL,
    replenishtype character(1) NOT NULL,
    level_min numeric DEFAULT 0 NOT NULL,
    level_max numeric DEFAULT 0 NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    order_min numeric DEFAULT 0 NOT NULL,
    order_pack numeric DEFAULT 0 NOT NULL,
    qtytoorder numeric DEFAULT 0 NOT NULL,
    replenishmentcreate character(3),
    m_warehousesource_id numeric(10,0),
    c_doctype_id numeric(10,0),
    updated timestamp without time zone,
    updatedby numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.t_replenish OWNER TO adempiere;

--
-- Name: t_replenishplan; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_replenishplan (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_pinstance_id numeric(10,0),
    c_order_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    datefinish timestamp without time zone,
    datestart timestamp without time zone,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    line numeric(10,0),
    m_product_id numeric(10,0),
    productname character varying(255),
    t_replenishplan_id numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    recordtype character varying(50),
    week1 numeric(10,0),
    week10 numeric(10,0),
    week11 numeric(10,0),
    week12 numeric(10,0),
    week13 numeric(10,0),
    week14 numeric(10,0),
    week15 numeric(10,0),
    week16 numeric(10,0),
    week17 numeric(10,0),
    week18 numeric(10,0),
    week19 numeric(10,0),
    week2 numeric(10,0),
    week20 numeric(10,0),
    week21 numeric(10,0),
    week22 numeric(10,0),
    week23 numeric(10,0),
    week24 numeric(10,0),
    week3 numeric(10,0),
    week4 numeric(10,0),
    week5 numeric(10,0),
    week6 numeric(10,0),
    week7 numeric(10,0),
    week8 numeric(10,0),
    week9 numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT t_replenishplan_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.t_replenishplan OWNER TO adempiere;

--
-- Name: t_report; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_report (
    ad_pinstance_id numeric(10,0) DEFAULT NULL::numeric,
    accounttype character(1) DEFAULT NULL::bpchar,
    c_validcombination_id numeric(10,0) DEFAULT 0,
    col_0 character varying(50) DEFAULT NULL::character varying,
    col_1 character varying(50) DEFAULT NULL::character varying,
    col_10 character varying(50) DEFAULT NULL::character varying,
    col_11 character varying(50) DEFAULT NULL::character varying,
    col_12 character varying(50) DEFAULT NULL::character varying,
    col_13 character varying(50) DEFAULT NULL::character varying,
    col_14 character varying(50) DEFAULT NULL::character varying,
    col_15 character varying(50) DEFAULT NULL::character varying,
    col_16 character varying(50) DEFAULT NULL::character varying,
    col_17 character varying(50) DEFAULT NULL::character varying,
    col_18 character varying(50) DEFAULT NULL::character varying,
    col_19 character varying(50) DEFAULT NULL::character varying,
    col_2 character varying(50) DEFAULT NULL::character varying,
    col_20 character varying(50) DEFAULT NULL::character varying,
    col_3 character varying(50) DEFAULT NULL::character varying,
    col_4 character varying(50) DEFAULT NULL::character varying,
    col_5 character varying(50) DEFAULT NULL::character varying,
    col_6 character varying(50) DEFAULT NULL::character varying,
    col_7 character varying(50) DEFAULT NULL::character varying,
    col_8 character varying(50) DEFAULT NULL::character varying,
    col_9 character varying(50) DEFAULT NULL::character varying,
    description character varying(255) DEFAULT NULL::character varying,
    fact_acct_id numeric(10,0),
    levelno numeric(10,0) DEFAULT NULL::numeric,
    name character varying(60) DEFAULT NULL::character varying,
    pa_reportline_id numeric(10,0),
    record_id numeric(10,0),
    seqno numeric(10,0) DEFAULT NULL::numeric,
    tablevel numeric(10,0) DEFAULT NULL::numeric,
    ax_case character(1) DEFAULT NULL::bpchar,
    fixedpercentage numeric,
    reportlinestyle character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT t_report_accounttype_check CHECK ((accounttype = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT t_report_ax_case_check CHECK ((ax_case = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT t_report_reportlinestyle_check CHECK ((reportlinestyle = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.t_report OWNER TO adempiere;

--
-- Name: t_reportstatement; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_reportstatement (
    ad_pinstance_id numeric(10,0) NOT NULL,
    fact_acct_id numeric(10,0) NOT NULL,
    levelno numeric(10,0) NOT NULL,
    dateacct timestamp without time zone NOT NULL,
    name character varying(60),
    description character varying(255),
    amtacctdr numeric DEFAULT 0,
    amtacctcr numeric DEFAULT 0,
    balance numeric DEFAULT 0,
    qty numeric DEFAULT 0,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.t_reportstatement OWNER TO adempiere;

--
-- Name: t_selection; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_selection (
    ad_pinstance_id numeric(10,0) NOT NULL,
    t_selection_id numeric(10,0) NOT NULL
);


ALTER TABLE adempiere.t_selection OWNER TO adempiere;

--
-- Name: t_selection2; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_selection2 (
    ad_pinstance_id numeric(10,0) NOT NULL,
    query_id numeric NOT NULL,
    t_selection_id numeric(10,0) NOT NULL
);


ALTER TABLE adempiere.t_selection2 OWNER TO adempiere;

--
-- Name: t_selection_browse; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_selection_browse (
    ad_pinstance_id numeric NOT NULL,
    t_selection_id numeric NOT NULL,
    columnname character varying(255) NOT NULL,
    value_string character varying(255),
    value_date timestamp without time zone,
    value_number numeric,
    info character varying(60)
);


ALTER TABLE adempiere.t_selection_browse OWNER TO adempiere;

--
-- Name: t_spool; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_spool (
    ad_pinstance_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) NOT NULL,
    msgtext character varying(2000) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.t_spool OWNER TO adempiere;

--
-- Name: t_spool_seq; Type: SEQUENCE; Schema: adempiere; Owner: adempiere
--

CREATE SEQUENCE adempiere.t_spool_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE adempiere.t_spool_seq OWNER TO adempiere;

--
-- Name: t_transaction; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_transaction (
    ad_pinstance_id numeric(10,0) NOT NULL,
    m_transaction_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    movementtype character(2) NOT NULL,
    m_locator_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) NOT NULL,
    m_attributesetinstance_id numeric(10,0) NOT NULL,
    movementdate timestamp without time zone NOT NULL,
    movementqty numeric DEFAULT 0 NOT NULL,
    m_inoutline_id numeric(10,0),
    m_inout_id numeric(10,0),
    m_movementline_id numeric(10,0),
    m_movement_id numeric(10,0),
    m_inventoryline_id numeric(10,0),
    m_inventory_id numeric(10,0),
    m_productionline_id numeric(10,0),
    m_production_id numeric(10,0),
    c_projectissue_id numeric(10,0),
    c_project_id numeric(10,0),
    search_order_id numeric(10,0),
    search_invoice_id numeric(10,0),
    search_inout_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT t_transaction_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.t_transaction OWNER TO adempiere;

--
-- Name: t_trialbalance; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.t_trialbalance (
    ad_pinstance_id numeric(10,0) NOT NULL,
    fact_acct_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    c_acctschema_id numeric(10,0) NOT NULL,
    account_id numeric(10,0),
    datetrx timestamp without time zone,
    dateacct timestamp without time zone NOT NULL,
    c_period_id numeric(10,0),
    ad_table_id numeric(10,0),
    record_id numeric(10,0),
    line_id numeric(10,0),
    gl_category_id numeric(10,0),
    gl_budget_id numeric(10,0),
    c_tax_id numeric(10,0),
    m_locator_id numeric(10,0),
    postingtype character(1) NOT NULL,
    c_currency_id numeric(10,0),
    amtsourcedr numeric,
    amtsourcecr numeric,
    amtsourcebalance numeric,
    amtacctdr numeric NOT NULL,
    amtacctcr numeric NOT NULL,
    amtacctbalance numeric NOT NULL,
    c_uom_id numeric(10,0),
    qty numeric,
    m_product_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    ad_orgtrx_id numeric(10,0),
    c_locfrom_id numeric(10,0),
    c_locto_id numeric(10,0),
    c_salesregion_id numeric(10,0),
    c_project_id numeric(10,0),
    c_campaign_id numeric(10,0),
    c_activity_id numeric(10,0),
    user1_id numeric(10,0),
    user2_id numeric(10,0),
    a_asset_id numeric(10,0),
    description character varying(255),
    accountvalue character varying(40),
    user3_id numeric(10,0) DEFAULT NULL::numeric,
    user4_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.t_trialbalance OWNER TO adempiere;

--
-- Name: test; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.test (
    test_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    t_integer numeric(10,0),
    t_number numeric DEFAULT 0,
    t_date timestamp without time zone,
    t_datetime timestamp without time zone,
    c_uom_id numeric(10,0),
    t_qty numeric DEFAULT 0,
    c_currency_id numeric(10,0),
    t_amount numeric DEFAULT 0,
    c_location_id numeric(10,0),
    account_acct numeric(10,0),
    c_payment_id numeric(10,0),
    m_product_id numeric(10,0),
    c_bpartner_id numeric(10,0),
    m_locator_id numeric(10,0),
    processing character(1),
    binarydata bytea,
    processed character(1) DEFAULT 'N'::bpchar,
    characterdata text,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT test_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT test_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.test OWNER TO adempiere;

--
-- Name: u_blacklistcheque; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.u_blacklistcheque (
    u_blacklistcheque_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    bankname character varying(120) NOT NULL,
    chequeno character varying(120) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT u_blacklistcheque_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.u_blacklistcheque OWNER TO adempiere;

--
-- Name: u_posterminal; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.u_posterminal (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    autolock character(1) DEFAULT 'N'::bpchar NOT NULL,
    card_bankaccount_id numeric(10,0),
    cardtransferbankaccount_id numeric(10,0),
    cardtransfercashbook_id numeric(10,0),
    cardtransfertype character(1),
    cashbooktransfertype character(1) NOT NULL,
    cashtransferbankaccount_id numeric(10,0),
    cashtransfercashbook_id numeric(10,0),
    c_cashbook_id numeric(10,0) NOT NULL,
    c_cashbpartner_id numeric(10,0) NOT NULL,
    check_bankaccount_id numeric(10,0),
    checktransferbankaccount_id numeric(10,0),
    checktransfercashbook_id numeric(10,0),
    checktransfertype character(1),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    c_templatebpartner_id numeric(10,0),
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar,
    lastlocktime timestamp without time zone,
    locked character(1) DEFAULT 'N'::bpchar,
    locktime numeric(10,0),
    m_warehouse_id numeric(10,0),
    name character varying(60),
    po_pricelist_id numeric(10,0),
    printername character varying(60),
    salesrep_id numeric(10,0),
    so_pricelist_id numeric(10,0),
    unlockingtime timestamp without time zone,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0),
    u_posterminal_id numeric(10,0) NOT NULL,
    value character varying(40),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT u_posterminal_autolock_check CHECK ((autolock = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT u_posterminal_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT u_posterminal_locked_check CHECK ((locked = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.u_posterminal OWNER TO adempiere;

--
-- Name: u_rolemenu; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.u_rolemenu (
    u_rolemenu_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    u_webmenu_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT u_rolemenu_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.u_rolemenu OWNER TO adempiere;

--
-- Name: u_web_properties; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.u_web_properties (
    u_web_properties_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric NOT NULL,
    u_key character varying(240) NOT NULL,
    u_value character varying(240) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT u_web_properties_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.u_web_properties OWNER TO adempiere;

--
-- Name: u_webmenu; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.u_webmenu (
    u_webmenu_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(120) NOT NULL,
    menulink character varying(510) NOT NULL,
    module character varying(120) NOT NULL,
    parentmenu_id numeric(10,0),
    hassubmenu character(1) DEFAULT 'N'::bpchar NOT NULL,
    description character varying(200),
    imagelink character varying(510),
    "position" character varying(10),
    help character varying(2000),
    category character varying(120),
    sequence numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT u_webmenu_hassubmenu_check CHECK ((hassubmenu = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT u_webmenu_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.u_webmenu OWNER TO adempiere;

--
-- Name: w_advertisement; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.w_advertisement (
    w_advertisement_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isselfservice character(1) DEFAULT 'N'::bpchar NOT NULL,
    c_bpartner_id numeric(10,0) NOT NULL,
    ad_user_id numeric(10,0),
    w_clickcount_id numeric(10,0),
    w_countercount_id numeric(10,0),
    validfrom timestamp without time zone,
    validto timestamp without time zone,
    imageurl character varying(120),
    adtext character varying(2000),
    webparam1 character varying(2000),
    webparam2 character varying(2000),
    webparam3 character varying(2000),
    webparam4 character varying(2000),
    publishstatus character(1) NOT NULL,
    version numeric(10,0),
    processing character(1),
    uuid character varying(36) DEFAULT NULL::character varying
);


ALTER TABLE adempiere.w_advertisement OWNER TO adempiere;

--
-- Name: w_basket; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.w_basket (
    w_basket_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    session_id character varying(60) NOT NULL,
    email character varying(60),
    c_bpartner_id numeric(10,0),
    m_pricelist_id numeric(10,0),
    ad_user_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT w_basket_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.w_basket OWNER TO adempiere;

--
-- Name: w_basket_seq; Type: SEQUENCE; Schema: adempiere; Owner: adempiere
--

CREATE SEQUENCE adempiere.w_basket_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE adempiere.w_basket_seq OWNER TO adempiere;

--
-- Name: w_basketline; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.w_basketline (
    w_basketline_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    w_basket_id numeric(10,0) NOT NULL,
    line numeric(10,0) NOT NULL,
    qty numeric DEFAULT 0 NOT NULL,
    price numeric DEFAULT 0 NOT NULL,
    product character varying(40) NOT NULL,
    description character varying(255) NOT NULL,
    m_product_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT w_basketline_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.w_basketline OWNER TO adempiere;

--
-- Name: w_counter; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.w_counter (
    w_counter_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    pageurl character varying(120) NOT NULL,
    referrer character varying(120),
    remote_host character varying(120),
    remote_addr character varying(60),
    useragent character varying(255),
    acceptlanguage character varying(60),
    processed character(1) DEFAULT 'N'::bpchar NOT NULL,
    w_countercount_id numeric(10,0),
    ad_user_id numeric(10,0),
    email character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT w_counter_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT w_counter_processed_check CHECK ((processed = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.w_counter OWNER TO adempiere;

--
-- Name: w_countercount; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.w_countercount (
    w_countercount_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    pageurl character varying(120) NOT NULL,
    c_bpartner_id numeric(10,0),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT w_countercount_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.w_countercount OWNER TO adempiere;

--
-- Name: w_mailmsg; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.w_mailmsg (
    w_mailmsg_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    w_store_id numeric(10,0) NOT NULL,
    mailmsgtype character(2) NOT NULL,
    subject character varying(255) NOT NULL,
    message character varying(2000) NOT NULL,
    message2 character varying(2000),
    message3 character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT w_mailmsg_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.w_mailmsg OWNER TO adempiere;

--
-- Name: w_mailmsg_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.w_mailmsg_trl (
    w_mailmsg_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    subject character varying(255) NOT NULL,
    message character varying(2000) NOT NULL,
    message2 character varying(2000),
    message3 character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT w_mailmsg_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT w_mailmsg_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.w_mailmsg_trl OWNER TO adempiere;

--
-- Name: w_store; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.w_store (
    w_store_id numeric(10,0) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255),
    help character varying(2000),
    wstoreemail character varying(60),
    wstoreuser character varying(60),
    wstoreuserpw character varying(20),
    webinfo character varying(2000),
    webparam1 character varying(2000),
    webparam2 character varying(2000),
    webparam3 character varying(2000),
    webparam4 character varying(2000),
    webparam5 character varying(2000),
    webparam6 character varying(2000),
    ismenuassets character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismenuorders character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismenuinvoices character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismenushipments character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismenupayments character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismenurfqs character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismenurequests character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismenuinterests character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismenuregistrations character(1) DEFAULT 'Y'::bpchar NOT NULL,
    ismenucontact character(1) DEFAULT 'Y'::bpchar NOT NULL,
    emailheader character varying(2000),
    emailfooter character varying(2000),
    salesrep_id numeric(10,0) NOT NULL,
    m_warehouse_id numeric(10,0) NOT NULL,
    m_pricelist_id numeric(10,0) NOT NULL,
    webcontext character varying(20) NOT NULL,
    weborderemail character varying(60),
    c_paymentterm_id numeric(10,0),
    isdefault character(1) DEFAULT 'N'::bpchar NOT NULL,
    url character varying(120) DEFAULT 'http://localhost'::character varying NOT NULL,
    stylesheet character varying(60),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT w_store_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT w_store_ismenuassets_check CHECK ((ismenuassets = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT w_store_ismenucontact_check CHECK ((ismenucontact = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT w_store_ismenuinterests_check CHECK ((ismenuinterests = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT w_store_ismenuinvoices_check CHECK ((ismenuinvoices = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT w_store_ismenuorders_check CHECK ((ismenuorders = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT w_store_ismenupayments_check CHECK (((ismenupayments = 'Y'::bpchar) OR (ismenupayments = 'N'::bpchar))),
    CONSTRAINT w_store_ismenuregistrations_check CHECK ((ismenuregistrations = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT w_store_ismenurequests_check CHECK ((ismenurequests = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT w_store_ismenurfqs_check CHECK ((ismenurfqs = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT w_store_ismenushipments_check CHECK (((ismenushipments = 'Y'::bpchar) OR (ismenushipments = 'N'::bpchar)))
);


ALTER TABLE adempiere.w_store OWNER TO adempiere;

--
-- Name: w_store_trl; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.w_store_trl (
    w_store_id numeric(10,0) NOT NULL,
    ad_language character varying(6) NOT NULL,
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    created timestamp without time zone DEFAULT now() NOT NULL,
    createdby numeric(10,0) NOT NULL,
    updated timestamp without time zone DEFAULT now() NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    istranslated character(1) DEFAULT 'N'::bpchar NOT NULL,
    webinfo character varying(2000),
    webparam1 character varying(2000),
    webparam2 character varying(2000),
    webparam3 character varying(2000),
    webparam4 character varying(2000),
    webparam5 character varying(2000),
    webparam6 character varying(2000),
    emailheader character varying(2000),
    emailfooter character varying(2000),
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT w_store_trl_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT w_store_trl_istranslated_check CHECK ((istranslated = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.w_store_trl OWNER TO adempiere;

--
-- Name: wm_area; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.wm_area (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    wm_area_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    m_warehouse_id numeric(10,0) NOT NULL,
    wm_area_type_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT wm_area_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.wm_area OWNER TO adempiere;

--
-- Name: wm_area_type; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.wm_area_type (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    wm_area_type_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT wm_area_type_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.wm_area_type OWNER TO adempiere;

--
-- Name: wm_definition; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.wm_definition (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    wm_definition_id numeric(10,0) NOT NULL,
    m_product_id numeric(10,0) DEFAULT NULL::numeric,
    m_product_category_id numeric(10,0) DEFAULT NULL::numeric,
    m_locator_id numeric(10,0) DEFAULT NULL::numeric,
    c_bpartner_id numeric(10,0) DEFAULT NULL::numeric,
    c_bp_group_id numeric(10,0) DEFAULT NULL::numeric,
    wm_strategy_id numeric(10,0) NOT NULL,
    wm_area_type_id numeric(10,0) DEFAULT NULL::numeric,
    wm_section_type_id numeric(10,0) DEFAULT NULL::numeric,
    classification character varying(1) DEFAULT NULL::character varying,
    group1 character varying(255) DEFAULT NULL::character varying,
    group2 character varying(255) DEFAULT NULL::character varying,
    seqno numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    priorityrule character(1) DEFAULT NULL::bpchar,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT wm_definition_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.wm_definition OWNER TO adempiere;

--
-- Name: wm_inoutboundlinema; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.wm_inoutboundlinema (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    m_attributesetinstance_id numeric(10,0),
    m_inoutline_id numeric(10,0),
    movementqty numeric,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    wm_inoutboundlinema_id numeric(10,0) NOT NULL,
    wm_inoutboundline_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT wm_inoutboundlinema_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.wm_inoutboundlinema OWNER TO adempiere;

--
-- Name: wm_rule; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.wm_rule (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    wm_rule_id numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    name character varying(60) NOT NULL,
    ad_rule_id numeric(10,0) DEFAULT NULL::numeric,
    inoutboundtype character(1) NOT NULL,
    inoutboundrule character varying(3) NOT NULL,
    inoutboundclass character varying(60) DEFAULT NULL::character varying,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT wm_rule_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.wm_rule OWNER TO adempiere;

--
-- Name: wm_section; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.wm_section (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    wm_section_id numeric(10,0) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    name character varying(60) NOT NULL,
    wm_area_id numeric(10,0) NOT NULL,
    wm_section_type_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT wm_section_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.wm_section OWNER TO adempiere;

--
-- Name: wm_section_detail; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.wm_section_detail (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    wm_section_detail_id numeric(10,0) NOT NULL,
    wm_section_id numeric(10,0) NOT NULL,
    m_locator_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT wm_section_detail_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.wm_section_detail OWNER TO adempiere;

--
-- Name: wm_section_type; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.wm_section_type (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    wm_section_type_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    inoutboundtype character(1) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT wm_section_type_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.wm_section_type OWNER TO adempiere;

--
-- Name: wm_strategy; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.wm_strategy (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    wm_strategy_id numeric(10,0) NOT NULL,
    name character varying(60) NOT NULL,
    description character varying(255) DEFAULT NULL::character varying,
    m_warehouse_id numeric(10,0) NOT NULL,
    inoutboundtype character(1) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT wm_strategy_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.wm_strategy OWNER TO adempiere;

--
-- Name: wm_strategy_detail; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.wm_strategy_detail (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    wm_strategy_detail_id numeric(10,0) NOT NULL,
    seqno numeric(10,0) DEFAULT NULL::numeric,
    wm_rule_id numeric(10,0) DEFAULT NULL::numeric,
    wm_strategy_id numeric(10,0) DEFAULT NULL::numeric,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT wm_strategy_detail_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.wm_strategy_detail OWNER TO adempiere;

--
-- Name: ws_webservice; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ws_webservice (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    ws_webservice_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ws_webservice_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ws_webservice OWNER TO adempiere;

--
-- Name: ws_webservice_para; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ws_webservice_para (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    constantvalue character varying(60),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    parametername character varying(60),
    parametertype character(1) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0),
    ws_webservice_para_id numeric(10,0) NOT NULL,
    ws_webservicetype_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ws_webservice_para_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ws_webservice_para OWNER TO adempiere;

--
-- Name: ws_webservicefieldinput; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ws_webservicefieldinput (
    ad_client_id numeric(10,0) NOT NULL,
    ad_column_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0),
    ws_webservicefieldinput_id numeric(10,0) NOT NULL,
    ws_webservicetype_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ws_webservicefieldinput_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ws_webservicefieldinput OWNER TO adempiere;

--
-- Name: ws_webservicefieldoutput; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ws_webservicefieldoutput (
    ad_client_id numeric(10,0) NOT NULL,
    ad_column_id numeric(10,0),
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0),
    ws_webservicefieldoutput_id numeric(10,0) NOT NULL,
    ws_webservicetype_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ws_webservicefieldoutput_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ws_webservicefieldoutput OWNER TO adempiere;

--
-- Name: ws_webservicemethod; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ws_webservicemethod (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    ws_webservice_id numeric(10,0),
    ws_webservicemethod_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ws_webservicemethod_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ws_webservicemethod OWNER TO adempiere;

--
-- Name: ws_webservicetype; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ws_webservicetype (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_table_id numeric(10,0),
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    description character varying(255),
    help character varying(2000),
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    name character varying(60) NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    value character varying(40) NOT NULL,
    ws_webservice_id numeric(10,0) NOT NULL,
    ws_webservicemethod_id numeric(10,0) NOT NULL,
    ws_webservicetype_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ws_webservicetype_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ws_webservicetype OWNER TO adempiere;

--
-- Name: ws_webservicetypeaccess; Type: TABLE; Schema: adempiere; Owner: adempiere
--

CREATE TABLE adempiere.ws_webservicetypeaccess (
    ad_client_id numeric(10,0) NOT NULL,
    ad_org_id numeric(10,0) NOT NULL,
    ad_role_id numeric(10,0) NOT NULL,
    created timestamp without time zone NOT NULL,
    createdby numeric(10,0) NOT NULL,
    isactive character(1) DEFAULT 'Y'::bpchar NOT NULL,
    isreadwrite character(1) DEFAULT 'Y'::bpchar NOT NULL,
    updated timestamp without time zone NOT NULL,
    updatedby numeric(10,0) NOT NULL,
    ws_webservicetype_id numeric(10,0) NOT NULL,
    uuid character varying(36) DEFAULT NULL::character varying,
    CONSTRAINT ws_webservicetypeaccess_isactive_check CHECK ((isactive = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT ws_webservicetypeaccess_isreadwrite_check CHECK ((isreadwrite = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE adempiere.ws_webservicetypeaccess OWNER TO adempiere;

--
-- Name: a_asset_acct a_asset_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_acct
    ADD CONSTRAINT a_asset_acct_pkey PRIMARY KEY (a_asset_acct_id);


--
-- Name: a_asset_addition a_asset_addition_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT a_asset_addition_pkey PRIMARY KEY (a_asset_addition_id);


--
-- Name: a_asset_change_amt a_asset_change_amt_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change_amt
    ADD CONSTRAINT a_asset_change_amt_pkey PRIMARY KEY (a_asset_change_id, c_acctschema_id);


--
-- Name: a_asset_change a_asset_change_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change
    ADD CONSTRAINT a_asset_change_pkey PRIMARY KEY (a_asset_change_id);


--
-- Name: a_asset_class a_asset_class_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_class
    ADD CONSTRAINT a_asset_class_key PRIMARY KEY (a_asset_class_id);


--
-- Name: a_asset_delivery a_asset_delivery_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_delivery
    ADD CONSTRAINT a_asset_delivery_pkey PRIMARY KEY (a_asset_delivery_id);


--
-- Name: a_asset_disposed a_asset_disposed_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_disposed
    ADD CONSTRAINT a_asset_disposed_pkey PRIMARY KEY (a_asset_disposed_id);


--
-- Name: a_asset_group_acct a_asset_group_acct_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_group_acct
    ADD CONSTRAINT a_asset_group_acct_key PRIMARY KEY (a_asset_group_acct_id);


--
-- Name: a_asset_group a_asset_group_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_group
    ADD CONSTRAINT a_asset_group_pkey PRIMARY KEY (a_asset_group_id);


--
-- Name: a_asset_info_fin a_asset_info_fin_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_info_fin
    ADD CONSTRAINT a_asset_info_fin_pkey PRIMARY KEY (a_asset_info_fin_id);


--
-- Name: a_asset_info_ins a_asset_info_ins_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_info_ins
    ADD CONSTRAINT a_asset_info_ins_pkey PRIMARY KEY (a_asset_info_ins_id);


--
-- Name: a_asset_info_lic a_asset_info_lic_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_info_lic
    ADD CONSTRAINT a_asset_info_lic_pkey PRIMARY KEY (a_asset_info_lic_id);


--
-- Name: a_asset_info_oth a_asset_info_oth_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_info_oth
    ADD CONSTRAINT a_asset_info_oth_pkey PRIMARY KEY (ad_client_id);


--
-- Name: a_asset_info_tax a_asset_info_tax_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_info_tax
    ADD CONSTRAINT a_asset_info_tax_pkey PRIMARY KEY (a_asset_info_tax_id);


--
-- Name: a_asset a_asset_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT a_asset_pkey PRIMARY KEY (a_asset_id);


--
-- Name: a_asset_product a_asset_product_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_product
    ADD CONSTRAINT a_asset_product_key PRIMARY KEY (a_asset_product_id);


--
-- Name: a_asset_retirement a_asset_retirement_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_retirement
    ADD CONSTRAINT a_asset_retirement_pkey PRIMARY KEY (a_asset_retirement_id);


--
-- Name: a_asset_reval_entry a_asset_reval_entry_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_reval_entry
    ADD CONSTRAINT a_asset_reval_entry_pkey PRIMARY KEY (a_asset_reval_entry_id);


--
-- Name: a_asset_reval_index a_asset_reval_index_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_reval_index
    ADD CONSTRAINT a_asset_reval_index_pkey PRIMARY KEY (a_asset_reval_index_id);


--
-- Name: a_asset_reval a_asset_reval_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_reval
    ADD CONSTRAINT a_asset_reval_key PRIMARY KEY (a_asset_reval_id);


--
-- Name: a_asset_split a_asset_split_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_split
    ADD CONSTRAINT a_asset_split_pkey PRIMARY KEY (a_asset_split_id);


--
-- Name: a_asset_spread a_asset_spread_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_spread
    ADD CONSTRAINT a_asset_spread_pkey PRIMARY KEY (a_asset_spread_id);


--
-- Name: a_asset_transfer a_asset_transfer_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_transfer
    ADD CONSTRAINT a_asset_transfer_pkey PRIMARY KEY (a_asset_transfer_id);


--
-- Name: a_asset_type a_asset_type_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_type
    ADD CONSTRAINT a_asset_type_key PRIMARY KEY (a_asset_type_id);


--
-- Name: a_asset_use a_asset_use_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_use
    ADD CONSTRAINT a_asset_use_pkey PRIMARY KEY (a_asset_use_id);


--
-- Name: a_depreciation_build a_depreciation_build_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_build
    ADD CONSTRAINT a_depreciation_build_pkey PRIMARY KEY (a_depreciation_build_id);


--
-- Name: a_depreciation_convention a_depreciation_convention_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_convention
    ADD CONSTRAINT a_depreciation_convention_pkey PRIMARY KEY (a_depreciation_convention_id);


--
-- Name: a_depreciation_entry a_depreciation_entry_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_entry
    ADD CONSTRAINT a_depreciation_entry_pkey PRIMARY KEY (a_depreciation_entry_id);


--
-- Name: a_depreciation_exp a_depreciation_exp_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_exp
    ADD CONSTRAINT a_depreciation_exp_pkey PRIMARY KEY (a_depreciation_exp_id);


--
-- Name: a_depreciation_forecast a_depreciation_forecast_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_forecast
    ADD CONSTRAINT a_depreciation_forecast_pkey PRIMARY KEY (a_depreciation_forecast_id);


--
-- Name: a_depreciation_method a_depreciation_method_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_method
    ADD CONSTRAINT a_depreciation_method_pkey PRIMARY KEY (a_depreciation_method_id);


--
-- Name: a_depreciation a_depreciation_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation
    ADD CONSTRAINT a_depreciation_pkey PRIMARY KEY (a_depreciation_id);


--
-- Name: a_depreciation_table_detail a_depreciation_table_detail_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_table_detail
    ADD CONSTRAINT a_depreciation_table_detail_pkey PRIMARY KEY (a_depreciation_table_detail_id);


--
-- Name: a_depreciation_table_header a_depreciation_table_header_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_table_header
    ADD CONSTRAINT a_depreciation_table_header_pkey PRIMARY KEY (a_depreciation_table_header_id);


--
-- Name: a_depreciation_workfile a_depreciation_workfile_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_workfile
    ADD CONSTRAINT a_depreciation_workfile_pkey PRIMARY KEY (a_depreciation_workfile_id);


--
-- Name: a_fundingmode a_fundingmode_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_fundingmode
    ADD CONSTRAINT a_fundingmode_key PRIMARY KEY (a_fundingmode_id);


--
-- Name: a_registration a_registration_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registration
    ADD CONSTRAINT a_registration_pkey PRIMARY KEY (a_registration_id);


--
-- Name: a_registrationattribute a_registrationattribute_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registrationattribute
    ADD CONSTRAINT a_registrationattribute_pkey PRIMARY KEY (a_registrationattribute_id);


--
-- Name: a_registrationproduct a_registrationproduct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registrationproduct
    ADD CONSTRAINT a_registrationproduct_pkey PRIMARY KEY (a_registrationattribute_id, m_product_id);


--
-- Name: a_registrationvalue a_registrationvalue_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registrationvalue
    ADD CONSTRAINT a_registrationvalue_pkey PRIMARY KEY (a_registration_id, a_registrationattribute_id);


--
-- Name: ad_accesslog ad_accesslog_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_accesslog
    ADD CONSTRAINT ad_accesslog_pkey PRIMARY KEY (ad_accesslog_id);


--
-- Name: ad_alert ad_alert_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_alert
    ADD CONSTRAINT ad_alert_pkey PRIMARY KEY (ad_alert_id);


--
-- Name: ad_alertprocessor ad_alertprocessor_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_alertprocessor
    ADD CONSTRAINT ad_alertprocessor_pkey PRIMARY KEY (ad_alertprocessor_id);


--
-- Name: ad_alertprocessorlog ad_alertprocessorlog_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_alertprocessorlog
    ADD CONSTRAINT ad_alertprocessorlog_pkey PRIMARY KEY (ad_alertprocessor_id, ad_alertprocessorlog_id);


--
-- Name: ad_alertrecipient ad_alertrecipient_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_alertrecipient
    ADD CONSTRAINT ad_alertrecipient_pkey PRIMARY KEY (ad_alertrecipient_id);


--
-- Name: ad_alertrule ad_alertrule_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_alertrule
    ADD CONSTRAINT ad_alertrule_pkey PRIMARY KEY (ad_alertrule_id);


--
-- Name: ad_archive ad_archive_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_archive
    ADD CONSTRAINT ad_archive_pkey PRIMARY KEY (ad_archive_id);


--
-- Name: ad_attachment ad_attachment_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_attachment
    ADD CONSTRAINT ad_attachment_pkey PRIMARY KEY (ad_attachment_id);


--
-- Name: ad_attachmentnote ad_attachmentnote_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_attachmentnote
    ADD CONSTRAINT ad_attachmentnote_pkey PRIMARY KEY (ad_attachmentnote_id);


--
-- Name: ad_attribute ad_attribute_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_attribute
    ADD CONSTRAINT ad_attribute_pkey PRIMARY KEY (ad_attribute_id);


--
-- Name: ad_attribute_value ad_attribute_value_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_attribute_value
    ADD CONSTRAINT ad_attribute_value_pkey PRIMARY KEY (ad_attribute_id, record_id);


--
-- Name: ad_browse_access ad_browse_access_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_access
    ADD CONSTRAINT ad_browse_access_key PRIMARY KEY (ad_browse_id, ad_role_id);


--
-- Name: ad_browse_field ad_browse_field_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_field
    ADD CONSTRAINT ad_browse_field_key PRIMARY KEY (ad_browse_field_id);


--
-- Name: ad_browse_field_trl ad_browse_field_trl_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_field_trl
    ADD CONSTRAINT ad_browse_field_trl_key PRIMARY KEY (ad_browse_field_id, ad_language);


--
-- Name: ad_browse ad_browse_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse
    ADD CONSTRAINT ad_browse_key PRIMARY KEY (ad_browse_id);


--
-- Name: ad_browse_trl ad_browse_trl_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_trl
    ADD CONSTRAINT ad_browse_trl_key PRIMARY KEY (ad_browse_id, ad_language);


--
-- Name: ad_changelog ad_changelog_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_changelog
    ADD CONSTRAINT ad_changelog_pkey PRIMARY KEY (ad_changelog_id, ad_session_id, ad_table_id, ad_column_id);


--
-- Name: ad_chart ad_chart_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_chart
    ADD CONSTRAINT ad_chart_key PRIMARY KEY (ad_chart_id);


--
-- Name: ad_chartdatasource ad_chartdatasource_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_chartdatasource
    ADD CONSTRAINT ad_chartdatasource_key PRIMARY KEY (ad_chartdatasource_id);


--
-- Name: ad_client ad_client_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_client
    ADD CONSTRAINT ad_client_pkey PRIMARY KEY (ad_client_id);


--
-- Name: ad_clientinfo ad_clientinfo_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT ad_clientinfo_pkey PRIMARY KEY (ad_client_id);


--
-- Name: ad_clientshare ad_clientshare_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientshare
    ADD CONSTRAINT ad_clientshare_pkey PRIMARY KEY (ad_clientshare_id);


--
-- Name: ad_color ad_color_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_color
    ADD CONSTRAINT ad_color_pkey PRIMARY KEY (ad_color_id);


--
-- Name: ad_column_access ad_column_access_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column_access
    ADD CONSTRAINT ad_column_access_pkey PRIMARY KEY (ad_role_id, ad_column_id);


--
-- Name: ad_column ad_column_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column
    ADD CONSTRAINT ad_column_pkey PRIMARY KEY (ad_column_id);


--
-- Name: ad_column_trl ad_column_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column_trl
    ADD CONSTRAINT ad_column_trl_pkey PRIMARY KEY (ad_column_id, ad_language);


--
-- Name: ad_columnprocess ad_columnprocess_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_columnprocess
    ADD CONSTRAINT ad_columnprocess_key PRIMARY KEY (ad_columnprocess_id);


--
-- Name: ad_columnprocesspara ad_columnprocesspara_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_columnprocesspara
    ADD CONSTRAINT ad_columnprocesspara_key PRIMARY KEY (ad_columnprocesspara_id);


--
-- Name: ad_desktop ad_desktop_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_desktop
    ADD CONSTRAINT ad_desktop_pkey PRIMARY KEY (ad_desktop_id);


--
-- Name: ad_desktop_trl ad_desktop_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_desktop_trl
    ADD CONSTRAINT ad_desktop_trl_pkey PRIMARY KEY (ad_desktop_id, ad_language);


--
-- Name: ad_desktopworkbench ad_desktopworkbench_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_desktopworkbench
    ADD CONSTRAINT ad_desktopworkbench_pkey PRIMARY KEY (ad_desktopworkbench_id);


--
-- Name: ad_document_action_access ad_document_action_access_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_document_action_access
    ADD CONSTRAINT ad_document_action_access_pkey PRIMARY KEY (c_doctype_id, ad_role_id, ad_ref_list_id);


--
-- Name: ad_element ad_element_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_element
    ADD CONSTRAINT ad_element_pkey PRIMARY KEY (ad_element_id);


--
-- Name: ad_element_trl ad_element_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_element_trl
    ADD CONSTRAINT ad_element_trl_pkey PRIMARY KEY (ad_element_id, ad_language);


--
-- Name: ad_emailconfig ad_emailconfig_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_emailconfig
    ADD CONSTRAINT ad_emailconfig_key PRIMARY KEY (ad_emailconfig_id);


--
-- Name: ad_entitytype ad_entitytype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_entitytype
    ADD CONSTRAINT ad_entitytype_pkey PRIMARY KEY (entitytype);


--
-- Name: ad_error ad_error_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_error
    ADD CONSTRAINT ad_error_pkey PRIMARY KEY (ad_error_id);


--
-- Name: ad_field ad_field_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field
    ADD CONSTRAINT ad_field_pkey PRIMARY KEY (ad_field_id);


--
-- Name: ad_field_trl ad_field_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field_trl
    ADD CONSTRAINT ad_field_trl_pkey PRIMARY KEY (ad_field_id, ad_language);


--
-- Name: ad_fieldgroup ad_fieldgroup_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_fieldgroup
    ADD CONSTRAINT ad_fieldgroup_pkey PRIMARY KEY (ad_fieldgroup_id);


--
-- Name: ad_fieldgroup_trl ad_fieldgroup_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_fieldgroup_trl
    ADD CONSTRAINT ad_fieldgroup_trl_pkey PRIMARY KEY (ad_fieldgroup_id, ad_language);


--
-- Name: ad_find ad_find_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_find
    ADD CONSTRAINT ad_find_pkey PRIMARY KEY (ad_find_id);


--
-- Name: ad_form_access ad_form_access_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_form_access
    ADD CONSTRAINT ad_form_access_pkey PRIMARY KEY (ad_form_id, ad_role_id);


--
-- Name: ad_form ad_form_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_form
    ADD CONSTRAINT ad_form_pkey PRIMARY KEY (ad_form_id);


--
-- Name: ad_form_trl ad_form_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_form_trl
    ADD CONSTRAINT ad_form_trl_pkey PRIMARY KEY (ad_form_id, ad_language);


--
-- Name: ad_housekeeping ad_housekeeping_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_housekeeping
    ADD CONSTRAINT ad_housekeeping_pkey PRIMARY KEY (ad_housekeeping_id);


--
-- Name: ad_image ad_image_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_image
    ADD CONSTRAINT ad_image_pkey PRIMARY KEY (ad_image_id);


--
-- Name: ad_impformat ad_impformat_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_impformat
    ADD CONSTRAINT ad_impformat_pkey PRIMARY KEY (ad_impformat_id);


--
-- Name: ad_impformat_row ad_impformat_row_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_impformat_row
    ADD CONSTRAINT ad_impformat_row_pkey PRIMARY KEY (ad_impformat_row_id);


--
-- Name: ad_infocolumn ad_infocolumn_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infocolumn
    ADD CONSTRAINT ad_infocolumn_pkey PRIMARY KEY (ad_infocolumn_id);


--
-- Name: ad_infocolumn_trl ad_infocolumn_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infocolumn_trl
    ADD CONSTRAINT ad_infocolumn_trl_pkey PRIMARY KEY (ad_infocolumn_id, ad_language);


--
-- Name: ad_infowindow ad_infowindow_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infowindow
    ADD CONSTRAINT ad_infowindow_pkey PRIMARY KEY (ad_infowindow_id);


--
-- Name: ad_infowindow_trl ad_infowindow_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infowindow_trl
    ADD CONSTRAINT ad_infowindow_trl_pkey PRIMARY KEY (ad_infowindow_id, ad_language);


--
-- Name: ad_issue ad_issue_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_issue
    ADD CONSTRAINT ad_issue_pkey PRIMARY KEY (ad_issue_id);


--
-- Name: ad_labelprinter ad_labelprinter_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_labelprinter
    ADD CONSTRAINT ad_labelprinter_pkey PRIMARY KEY (ad_labelprinter_id);


--
-- Name: ad_labelprinterfunction ad_labelprinterfunction_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_labelprinterfunction
    ADD CONSTRAINT ad_labelprinterfunction_pkey PRIMARY KEY (ad_labelprinterfunction_id);


--
-- Name: ad_language ad_language_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_language
    ADD CONSTRAINT ad_language_pkey PRIMARY KEY (ad_language);


--
-- Name: ad_ldapaccess ad_ldapaccess_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ldapaccess
    ADD CONSTRAINT ad_ldapaccess_pkey PRIMARY KEY (ad_ldapaccess_id);


--
-- Name: ad_ldapprocessor ad_ldapprocessor_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ldapprocessor
    ADD CONSTRAINT ad_ldapprocessor_pkey PRIMARY KEY (ad_ldapprocessor_id);


--
-- Name: ad_ldapprocessorlog ad_ldapprocessorlog_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ldapprocessorlog
    ADD CONSTRAINT ad_ldapprocessorlog_pkey PRIMARY KEY (ad_ldapprocessor_id, ad_ldapprocessorlog_id);


--
-- Name: ad_memo ad_memo_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_memo
    ADD CONSTRAINT ad_memo_key PRIMARY KEY (ad_memo_id);


--
-- Name: ad_menu ad_menu_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu
    ADD CONSTRAINT ad_menu_pkey PRIMARY KEY (ad_menu_id);


--
-- Name: ad_menu_trl ad_menu_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu_trl
    ADD CONSTRAINT ad_menu_trl_pkey PRIMARY KEY (ad_menu_id, ad_language);


--
-- Name: ad_message ad_message_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_message
    ADD CONSTRAINT ad_message_pkey PRIMARY KEY (ad_message_id);


--
-- Name: ad_message_trl ad_message_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_message_trl
    ADD CONSTRAINT ad_message_trl_pkey PRIMARY KEY (ad_message_id, ad_language);


--
-- Name: ad_migration ad_migration_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_migration
    ADD CONSTRAINT ad_migration_key PRIMARY KEY (ad_migration_id);


--
-- Name: ad_migrationdata ad_migrationdata_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_migrationdata
    ADD CONSTRAINT ad_migrationdata_key PRIMARY KEY (ad_migrationdata_id);


--
-- Name: ad_migrationscript ad_migrationscript_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_migrationscript
    ADD CONSTRAINT ad_migrationscript_pkey PRIMARY KEY (ad_migrationscript_id);


--
-- Name: ad_migrationstep ad_migrationstep_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_migrationstep
    ADD CONSTRAINT ad_migrationstep_key PRIMARY KEY (ad_migrationstep_id);


--
-- Name: ad_modelvalidator ad_modelvalidator_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_modelvalidator
    ADD CONSTRAINT ad_modelvalidator_pkey PRIMARY KEY (ad_modelvalidator_id);


--
-- Name: ad_modification ad_modification_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_modification
    ADD CONSTRAINT ad_modification_pkey PRIMARY KEY (ad_modification_id);


--
-- Name: ad_note ad_note_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_note
    ADD CONSTRAINT ad_note_pkey PRIMARY KEY (ad_note_id);


--
-- Name: ad_org ad_org_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_org
    ADD CONSTRAINT ad_org_pkey PRIMARY KEY (ad_org_id);


--
-- Name: ad_orginfo ad_orginfo_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orginfo
    ADD CONSTRAINT ad_orginfo_pkey PRIMARY KEY (ad_org_id);


--
-- Name: ad_orgtype ad_orgtype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orgtype
    ADD CONSTRAINT ad_orgtype_pkey PRIMARY KEY (ad_orgtype_id);


--
-- Name: ad_package_exp_common ad_package_exp_common_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_common
    ADD CONSTRAINT ad_package_exp_common_pkey PRIMARY KEY (ad_package_exp_common_id);


--
-- Name: ad_package_exp_detail ad_package_exp_detail_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT ad_package_exp_detail_pkey PRIMARY KEY (ad_package_exp_detail_id);


--
-- Name: ad_package_exp ad_package_exp_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp
    ADD CONSTRAINT ad_package_exp_pkey PRIMARY KEY (ad_package_exp_id);


--
-- Name: ad_package_imp_backup ad_package_imp_backup_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_imp_backup
    ADD CONSTRAINT ad_package_imp_backup_pkey PRIMARY KEY (ad_package_imp_backup_id);


--
-- Name: ad_package_imp_detail ad_package_imp_detail_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_imp_detail
    ADD CONSTRAINT ad_package_imp_detail_pkey PRIMARY KEY (ad_package_imp_detail_id);


--
-- Name: ad_package_imp_inst ad_package_imp_inst_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_imp_inst
    ADD CONSTRAINT ad_package_imp_inst_pkey PRIMARY KEY (ad_package_imp_inst_id);


--
-- Name: ad_package_imp ad_package_imp_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_imp
    ADD CONSTRAINT ad_package_imp_pkey PRIMARY KEY (ad_package_imp_id);


--
-- Name: ad_package_imp_proc ad_package_imp_proc_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_imp_proc
    ADD CONSTRAINT ad_package_imp_proc_pkey PRIMARY KEY (ad_package_imp_proc_id);


--
-- Name: ad_pinstance_log ad_pinstance_log_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_pinstance_log
    ADD CONSTRAINT ad_pinstance_log_pkey PRIMARY KEY (ad_pinstance_id, ad_pinstance_log_id);


--
-- Name: ad_pinstance_para ad_pinstance_para_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_pinstance_para
    ADD CONSTRAINT ad_pinstance_para_pkey PRIMARY KEY (ad_pinstance_id, seqno);


--
-- Name: ad_pinstance ad_pinstance_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_pinstance
    ADD CONSTRAINT ad_pinstance_pkey PRIMARY KEY (ad_pinstance_id);


--
-- Name: ad_preference ad_preference_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_preference
    ADD CONSTRAINT ad_preference_pkey PRIMARY KEY (ad_preference_id);


--
-- Name: ad_printcolor ad_printcolor_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printcolor
    ADD CONSTRAINT ad_printcolor_pkey PRIMARY KEY (ad_printcolor_id);


--
-- Name: ad_printfont ad_printfont_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printfont
    ADD CONSTRAINT ad_printfont_pkey PRIMARY KEY (ad_printfont_id);


--
-- Name: ad_printform ad_printform_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT ad_printform_pkey PRIMARY KEY (ad_printform_id);


--
-- Name: ad_printformat ad_printformat_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformat
    ADD CONSTRAINT ad_printformat_pkey PRIMARY KEY (ad_printformat_id);


--
-- Name: ad_printformatitem ad_printformatitem_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformatitem
    ADD CONSTRAINT ad_printformatitem_pkey PRIMARY KEY (ad_printformatitem_id);


--
-- Name: ad_printformatitem_trl ad_printformatitem_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformatitem_trl
    ADD CONSTRAINT ad_printformatitem_trl_pkey PRIMARY KEY (ad_printformatitem_id, ad_language);


--
-- Name: ad_printgraph ad_printgraph_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printgraph
    ADD CONSTRAINT ad_printgraph_pkey PRIMARY KEY (ad_printgraph_id);


--
-- Name: ad_printlabel ad_printlabel_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printlabel
    ADD CONSTRAINT ad_printlabel_pkey PRIMARY KEY (ad_printlabel_id);


--
-- Name: ad_printlabelline ad_printlabelline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printlabelline
    ADD CONSTRAINT ad_printlabelline_pkey PRIMARY KEY (ad_printlabelline_id);


--
-- Name: ad_printlabelline_trl ad_printlabelline_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printlabelline_trl
    ADD CONSTRAINT ad_printlabelline_trl_pkey PRIMARY KEY (ad_printlabelline_id, ad_language);


--
-- Name: ad_printpaper ad_printpaper_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printpaper
    ADD CONSTRAINT ad_printpaper_pkey PRIMARY KEY (ad_printpaper_id);


--
-- Name: ad_printtableformat ad_printtableformat_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printtableformat
    ADD CONSTRAINT ad_printtableformat_pkey PRIMARY KEY (ad_printtableformat_id);


--
-- Name: ad_private_access ad_private_access_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_private_access
    ADD CONSTRAINT ad_private_access_pkey PRIMARY KEY (ad_user_id, ad_table_id, record_id);


--
-- Name: ad_process_access ad_process_access_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_access
    ADD CONSTRAINT ad_process_access_pkey PRIMARY KEY (ad_process_id, ad_role_id);


--
-- Name: ad_process_para ad_process_para_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_para
    ADD CONSTRAINT ad_process_para_pkey PRIMARY KEY (ad_process_para_id);


--
-- Name: ad_process_para_trl ad_process_para_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_para_trl
    ADD CONSTRAINT ad_process_para_trl_pkey PRIMARY KEY (ad_process_para_id, ad_language);


--
-- Name: ad_process ad_process_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process
    ADD CONSTRAINT ad_process_pkey PRIMARY KEY (ad_process_id);


--
-- Name: ad_process_trl ad_process_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_trl
    ADD CONSTRAINT ad_process_trl_pkey PRIMARY KEY (ad_process_id, ad_language);


--
-- Name: ad_recentitem ad_recentitem_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_recentitem
    ADD CONSTRAINT ad_recentitem_key PRIMARY KEY (ad_recentitem_id);


--
-- Name: ad_record_access ad_record_access_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_record_access
    ADD CONSTRAINT ad_record_access_pkey PRIMARY KEY (ad_role_id, ad_table_id, record_id);


--
-- Name: ad_ref_list ad_ref_list_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_list
    ADD CONSTRAINT ad_ref_list_pkey PRIMARY KEY (ad_ref_list_id);


--
-- Name: ad_ref_list_trl ad_ref_list_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_list_trl
    ADD CONSTRAINT ad_ref_list_trl_pkey PRIMARY KEY (ad_ref_list_id, ad_language);


--
-- Name: ad_ref_table ad_ref_table_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_table
    ADD CONSTRAINT ad_ref_table_pkey PRIMARY KEY (ad_reference_id);


--
-- Name: ad_reference ad_reference_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reference
    ADD CONSTRAINT ad_reference_pkey PRIMARY KEY (ad_reference_id);


--
-- Name: ad_reference_trl ad_reference_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reference_trl
    ADD CONSTRAINT ad_reference_trl_pkey PRIMARY KEY (ad_reference_id, ad_language);


--
-- Name: ad_registration ad_registration_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_registration
    ADD CONSTRAINT ad_registration_pkey PRIMARY KEY (ad_registration_id, ad_client_id, ad_system_id);


--
-- Name: ad_relationtype ad_relationtype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_relationtype
    ADD CONSTRAINT ad_relationtype_pkey PRIMARY KEY (ad_relationtype_id);


--
-- Name: ad_replication_log ad_replication_log_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replication_log
    ADD CONSTRAINT ad_replication_log_pkey PRIMARY KEY (ad_replication_log_id);


--
-- Name: ad_replication ad_replication_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replication
    ADD CONSTRAINT ad_replication_pkey PRIMARY KEY (ad_replication_id);


--
-- Name: ad_replication_run ad_replication_run_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replication_run
    ADD CONSTRAINT ad_replication_run_pkey PRIMARY KEY (ad_replication_run_id);


--
-- Name: ad_replicationdocument ad_replicationdocument_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationdocument
    ADD CONSTRAINT ad_replicationdocument_pkey PRIMARY KEY (ad_replicationdocument_id);


--
-- Name: ad_replicationorgaccess ad_replicationorgaccess_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationorgaccess
    ADD CONSTRAINT ad_replicationorgaccess_key PRIMARY KEY (ad_replicationorgaccess_id);


--
-- Name: ad_replicationroleaccess ad_replicationroleaccess_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationroleaccess
    ADD CONSTRAINT ad_replicationroleaccess_key PRIMARY KEY (ad_replicationroleaccess_id);


--
-- Name: ad_replicationstrategy ad_replicationstrategy_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationstrategy
    ADD CONSTRAINT ad_replicationstrategy_pkey PRIMARY KEY (ad_replicationstrategy_id);


--
-- Name: ad_replicationtable ad_replicationtable_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationtable
    ADD CONSTRAINT ad_replicationtable_pkey PRIMARY KEY (ad_replicationtable_id);


--
-- Name: ad_reportview_col ad_reportview_col_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reportview_col
    ADD CONSTRAINT ad_reportview_col_pkey PRIMARY KEY (ad_reportview_col_id);


--
-- Name: ad_reportview ad_reportview_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reportview
    ADD CONSTRAINT ad_reportview_pkey PRIMARY KEY (ad_reportview_id);


--
-- Name: ad_reportview_trl ad_reportview_trl_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reportview_trl
    ADD CONSTRAINT ad_reportview_trl_key PRIMARY KEY (ad_language, ad_reportview_id);


--
-- Name: ad_role_included ad_role_included_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_role_included
    ADD CONSTRAINT ad_role_included_pkey PRIMARY KEY (ad_role_id, included_role_id);


--
-- Name: ad_role_orgaccess ad_role_orgaccess_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_role_orgaccess
    ADD CONSTRAINT ad_role_orgaccess_pkey PRIMARY KEY (ad_role_id, ad_org_id);


--
-- Name: ad_role ad_role_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_role
    ADD CONSTRAINT ad_role_pkey PRIMARY KEY (ad_role_id);


--
-- Name: ad_rule ad_rule_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_rule
    ADD CONSTRAINT ad_rule_pkey PRIMARY KEY (ad_rule_id);


--
-- Name: ad_scheduler_para ad_scheduler_para_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_scheduler_para
    ADD CONSTRAINT ad_scheduler_para_pkey PRIMARY KEY (ad_scheduler_id, ad_process_para_id);


--
-- Name: ad_scheduler ad_scheduler_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_scheduler
    ADD CONSTRAINT ad_scheduler_pkey PRIMARY KEY (ad_scheduler_id);


--
-- Name: ad_schedulerlog ad_schedulerlog_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_schedulerlog
    ADD CONSTRAINT ad_schedulerlog_pkey PRIMARY KEY (ad_scheduler_id, ad_schedulerlog_id);


--
-- Name: ad_schedulerrecipient ad_schedulerrecipient_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_schedulerrecipient
    ADD CONSTRAINT ad_schedulerrecipient_pkey PRIMARY KEY (ad_schedulerrecipient_id);


--
-- Name: ad_searchdefinition ad_searchdefinition_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_searchdefinition
    ADD CONSTRAINT ad_searchdefinition_pkey PRIMARY KEY (ad_searchdefinition_id);


--
-- Name: ad_sequence_audit ad_sequence_audit_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sequence_audit
    ADD CONSTRAINT ad_sequence_audit_pkey PRIMARY KEY (ad_sequence_id, documentno);


--
-- Name: ad_sequence_no ad_sequence_no_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sequence_no
    ADD CONSTRAINT ad_sequence_no_pkey PRIMARY KEY (ad_sequence_id, calendaryear);


--
-- Name: ad_sequence ad_sequence_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sequence
    ADD CONSTRAINT ad_sequence_pkey PRIMARY KEY (ad_sequence_id);


--
-- Name: ad_session ad_session_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_session
    ADD CONSTRAINT ad_session_pkey PRIMARY KEY (ad_session_id);


--
-- Name: ad_sysconfig ad_sysconfig_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sysconfig
    ADD CONSTRAINT ad_sysconfig_pkey PRIMARY KEY (ad_sysconfig_id);


--
-- Name: ad_system ad_system_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_system
    ADD CONSTRAINT ad_system_pkey PRIMARY KEY (ad_system_id, ad_client_id);


--
-- Name: ad_tab ad_tab_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab
    ADD CONSTRAINT ad_tab_pkey PRIMARY KEY (ad_tab_id);


--
-- Name: ad_tab_trl ad_tab_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab_trl
    ADD CONSTRAINT ad_tab_trl_pkey PRIMARY KEY (ad_tab_id, ad_language);


--
-- Name: ad_table_access ad_table_access_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_access
    ADD CONSTRAINT ad_table_access_pkey PRIMARY KEY (ad_role_id, ad_table_id, accesstyperule);


--
-- Name: ad_table ad_table_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table
    ADD CONSTRAINT ad_table_pkey PRIMARY KEY (ad_table_id);


--
-- Name: ad_table_process ad_table_process_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_process
    ADD CONSTRAINT ad_table_process_key PRIMARY KEY (ad_process_id, ad_table_id);


--
-- Name: ad_table_scriptvalidator ad_table_scriptvalidator_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_scriptvalidator
    ADD CONSTRAINT ad_table_scriptvalidator_pkey PRIMARY KEY (ad_table_scriptvalidator_id);


--
-- Name: ad_table_trl ad_table_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_trl
    ADD CONSTRAINT ad_table_trl_pkey PRIMARY KEY (ad_table_id, ad_language);


--
-- Name: ad_task_access ad_task_access_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_task_access
    ADD CONSTRAINT ad_task_access_pkey PRIMARY KEY (ad_task_id, ad_role_id);


--
-- Name: ad_task ad_task_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_task
    ADD CONSTRAINT ad_task_pkey PRIMARY KEY (ad_task_id);


--
-- Name: ad_task_trl ad_task_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_task_trl
    ADD CONSTRAINT ad_task_trl_pkey PRIMARY KEY (ad_task_id, ad_language);


--
-- Name: ad_taskinstance ad_taskinstance_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_taskinstance
    ADD CONSTRAINT ad_taskinstance_pkey PRIMARY KEY (ad_taskinstance_id);


--
-- Name: ad_tree_favorite ad_tree_favorite_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tree_favorite
    ADD CONSTRAINT ad_tree_favorite_key PRIMARY KEY (ad_tree_favorite_id);


--
-- Name: ad_tree_favorite_node ad_tree_favorite_node_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tree_favorite_node
    ADD CONSTRAINT ad_tree_favorite_node_key PRIMARY KEY (ad_tree_favorite_node_id);


--
-- Name: ad_tree ad_tree_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tree
    ADD CONSTRAINT ad_tree_pkey PRIMARY KEY (ad_tree_id);


--
-- Name: ad_treebar ad_treebar_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treebar
    ADD CONSTRAINT ad_treebar_pkey PRIMARY KEY (ad_tree_id, ad_user_id, node_id);


--
-- Name: ad_treenode ad_treenode_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenode
    ADD CONSTRAINT ad_treenode_pkey PRIMARY KEY (ad_tree_id, node_id);


--
-- Name: ad_treenodebp ad_treenodebp_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodebp
    ADD CONSTRAINT ad_treenodebp_pkey PRIMARY KEY (ad_tree_id, node_id);


--
-- Name: ad_treenodecmc ad_treenodecmc_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodecmc
    ADD CONSTRAINT ad_treenodecmc_pkey PRIMARY KEY (ad_tree_id, node_id);


--
-- Name: ad_treenodecmm ad_treenodecmm_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodecmm
    ADD CONSTRAINT ad_treenodecmm_pkey PRIMARY KEY (ad_tree_id, node_id);


--
-- Name: ad_treenodecms ad_treenodecms_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodecms
    ADD CONSTRAINT ad_treenodecms_pkey PRIMARY KEY (ad_tree_id, node_id);


--
-- Name: ad_treenodecmt ad_treenodecmt_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodecmt
    ADD CONSTRAINT ad_treenodecmt_pkey PRIMARY KEY (ad_tree_id, node_id);


--
-- Name: ad_treenodemm ad_treenodemm_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodemm
    ADD CONSTRAINT ad_treenodemm_pkey PRIMARY KEY (ad_tree_id, node_id);


--
-- Name: ad_treenodepr ad_treenodepr_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodepr
    ADD CONSTRAINT ad_treenodepr_pkey PRIMARY KEY (ad_tree_id, node_id);


--
-- Name: ad_treenodeu1 ad_treenodeu1_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodeu1
    ADD CONSTRAINT ad_treenodeu1_pkey PRIMARY KEY (ad_tree_id, node_id);


--
-- Name: ad_treenodeu2 ad_treenodeu2_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodeu2
    ADD CONSTRAINT ad_treenodeu2_pkey PRIMARY KEY (ad_tree_id, node_id);


--
-- Name: ad_treenodeu3 ad_treenodeu3_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodeu3
    ADD CONSTRAINT ad_treenodeu3_pkey PRIMARY KEY (ad_tree_id, node_id);


--
-- Name: ad_treenodeu4 ad_treenodeu4_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodeu4
    ADD CONSTRAINT ad_treenodeu4_pkey PRIMARY KEY (ad_tree_id, node_id);


--
-- Name: ad_user_orgaccess ad_user_orgaccess_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user_orgaccess
    ADD CONSTRAINT ad_user_orgaccess_pkey PRIMARY KEY (ad_user_id, ad_org_id);


--
-- Name: ad_user ad_user_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user
    ADD CONSTRAINT ad_user_pkey PRIMARY KEY (ad_user_id);


--
-- Name: ad_user_roles ad_user_roles_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user_roles
    ADD CONSTRAINT ad_user_roles_pkey PRIMARY KEY (ad_user_id, ad_role_id);


--
-- Name: ad_user_substitute ad_user_substitute_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user_substitute
    ADD CONSTRAINT ad_user_substitute_pkey PRIMARY KEY (ad_user_substitute_id);


--
-- Name: ad_userbpaccess ad_userbpaccess_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userbpaccess
    ADD CONSTRAINT ad_userbpaccess_pkey PRIMARY KEY (ad_userbpaccess_id);


--
-- Name: ad_userdef_field ad_userdef_field_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userdef_field
    ADD CONSTRAINT ad_userdef_field_pkey PRIMARY KEY (ad_userdef_field_id);


--
-- Name: ad_userdef_tab ad_userdef_tab_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userdef_tab
    ADD CONSTRAINT ad_userdef_tab_pkey PRIMARY KEY (ad_userdef_tab_id);


--
-- Name: ad_userdef_win ad_userdef_win_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userdef_win
    ADD CONSTRAINT ad_userdef_win_pkey PRIMARY KEY (ad_userdef_win_id);


--
-- Name: ad_usermail ad_usermail_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_usermail
    ADD CONSTRAINT ad_usermail_pkey PRIMARY KEY (ad_usermail_id);


--
-- Name: ad_userquery ad_userquery_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userquery
    ADD CONSTRAINT ad_userquery_pkey PRIMARY KEY (ad_userquery_id);


--
-- Name: ad_val_rule ad_val_rule_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_val_rule
    ADD CONSTRAINT ad_val_rule_pkey PRIMARY KEY (ad_val_rule_id);


--
-- Name: ad_view_column ad_view_column_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_column
    ADD CONSTRAINT ad_view_column_key PRIMARY KEY (ad_view_column_id);


--
-- Name: ad_view_column_trl ad_view_column_trl_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_column_trl
    ADD CONSTRAINT ad_view_column_trl_key PRIMARY KEY (ad_view_column_id, ad_language);


--
-- Name: ad_view_definition ad_view_definition_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_definition
    ADD CONSTRAINT ad_view_definition_key PRIMARY KEY (ad_view_definition_id);


--
-- Name: ad_view ad_view_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view
    ADD CONSTRAINT ad_view_key PRIMARY KEY (ad_view_id);


--
-- Name: ad_view_trl ad_view_trl_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_trl
    ADD CONSTRAINT ad_view_trl_key PRIMARY KEY (ad_view_id, ad_language);


--
-- Name: ad_wf_activity ad_wf_activity_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_activity
    ADD CONSTRAINT ad_wf_activity_pkey PRIMARY KEY (ad_wf_activity_id);


--
-- Name: ad_wf_activityresult ad_wf_activityresult_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_activityresult
    ADD CONSTRAINT ad_wf_activityresult_pkey PRIMARY KEY (ad_wf_activityresult_id);


--
-- Name: ad_wf_block ad_wf_block_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_block
    ADD CONSTRAINT ad_wf_block_pkey PRIMARY KEY (ad_wf_block_id);


--
-- Name: ad_wf_eventaudit ad_wf_eventaudit_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_eventaudit
    ADD CONSTRAINT ad_wf_eventaudit_pkey PRIMARY KEY (ad_wf_eventaudit_id);


--
-- Name: ad_wf_nextcondition ad_wf_nextcondition_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_nextcondition
    ADD CONSTRAINT ad_wf_nextcondition_pkey PRIMARY KEY (ad_wf_nextcondition_id);


--
-- Name: ad_wf_node_para ad_wf_node_para_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node_para
    ADD CONSTRAINT ad_wf_node_para_pkey PRIMARY KEY (ad_wf_node_para_id);


--
-- Name: ad_wf_node ad_wf_node_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT ad_wf_node_pkey PRIMARY KEY (ad_wf_node_id);


--
-- Name: ad_wf_node_trl ad_wf_node_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node_trl
    ADD CONSTRAINT ad_wf_node_trl_pkey PRIMARY KEY (ad_language, ad_wf_node_id);


--
-- Name: ad_wf_nodenext ad_wf_nodenext_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_nodenext
    ADD CONSTRAINT ad_wf_nodenext_pkey PRIMARY KEY (ad_wf_nodenext_id);


--
-- Name: ad_wf_process ad_wf_process_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_process
    ADD CONSTRAINT ad_wf_process_pkey PRIMARY KEY (ad_wf_process_id);


--
-- Name: ad_wf_processdata ad_wf_processdata_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_processdata
    ADD CONSTRAINT ad_wf_processdata_pkey PRIMARY KEY (ad_wf_processdata_id);


--
-- Name: ad_wf_responsible ad_wf_responsible_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_responsible
    ADD CONSTRAINT ad_wf_responsible_pkey PRIMARY KEY (ad_wf_responsible_id);


--
-- Name: ad_window_access ad_window_access_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window_access
    ADD CONSTRAINT ad_window_access_pkey PRIMARY KEY (ad_window_id, ad_role_id);


--
-- Name: ad_window ad_window_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window
    ADD CONSTRAINT ad_window_pkey PRIMARY KEY (ad_window_id);


--
-- Name: ad_window_trl ad_window_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window_trl
    ADD CONSTRAINT ad_window_trl_pkey PRIMARY KEY (ad_window_id, ad_language);


--
-- Name: ad_workbench ad_workbench_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbench
    ADD CONSTRAINT ad_workbench_pkey PRIMARY KEY (ad_workbench_id);


--
-- Name: ad_workbench_trl ad_workbench_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbench_trl
    ADD CONSTRAINT ad_workbench_trl_pkey PRIMARY KEY (ad_workbench_id, ad_language);


--
-- Name: ad_workbenchwindow ad_workbenchwindow_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbenchwindow
    ADD CONSTRAINT ad_workbenchwindow_pkey PRIMARY KEY (ad_workbenchwindow_id);


--
-- Name: ad_workflow_access ad_workflow_access_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow_access
    ADD CONSTRAINT ad_workflow_access_pkey PRIMARY KEY (ad_workflow_id, ad_role_id);


--
-- Name: ad_workflow ad_workflow_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow
    ADD CONSTRAINT ad_workflow_pkey PRIMARY KEY (ad_workflow_id);


--
-- Name: ad_workflow_trl ad_workflow_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow_trl
    ADD CONSTRAINT ad_workflow_trl_pkey PRIMARY KEY (ad_workflow_id, ad_language);


--
-- Name: ad_workflowprocessor ad_workflowprocessor_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflowprocessor
    ADD CONSTRAINT ad_workflowprocessor_pkey PRIMARY KEY (ad_workflowprocessor_id);


--
-- Name: ad_workflowprocessorlog ad_workflowprocessorlog_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflowprocessorlog
    ADD CONSTRAINT ad_workflowprocessorlog_pkey PRIMARY KEY (ad_workflowprocessor_id, ad_workflowprocessorlog_id);


--
-- Name: ad_zoomcondition ad_zoomcondition_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_zoomcondition
    ADD CONSTRAINT ad_zoomcondition_key PRIMARY KEY (ad_zoomcondition_id);


--
-- Name: asp_browse asp_browse_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_browse
    ADD CONSTRAINT asp_browse_key PRIMARY KEY (asp_browse_id);


--
-- Name: asp_clientexception asp_clientexception_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientexception
    ADD CONSTRAINT asp_clientexception_pkey PRIMARY KEY (asp_clientexception_id);


--
-- Name: asp_clientlevel asp_clientlevel_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientlevel
    ADD CONSTRAINT asp_clientlevel_pkey PRIMARY KEY (asp_clientlevel_id);


--
-- Name: asp_field asp_field_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_field
    ADD CONSTRAINT asp_field_pkey PRIMARY KEY (asp_field_id);


--
-- Name: asp_form asp_form_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_form
    ADD CONSTRAINT asp_form_pkey PRIMARY KEY (asp_form_id);


--
-- Name: asp_level asp_level_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_level
    ADD CONSTRAINT asp_level_pkey PRIMARY KEY (asp_level_id);


--
-- Name: asp_module asp_module_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_module
    ADD CONSTRAINT asp_module_pkey PRIMARY KEY (asp_module_id);


--
-- Name: asp_process_para asp_process_para_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_process_para
    ADD CONSTRAINT asp_process_para_pkey PRIMARY KEY (asp_process_para_id);


--
-- Name: asp_process asp_process_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_process
    ADD CONSTRAINT asp_process_pkey PRIMARY KEY (asp_process_id);


--
-- Name: asp_tab asp_tab_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_tab
    ADD CONSTRAINT asp_tab_pkey PRIMARY KEY (asp_tab_id);


--
-- Name: asp_task asp_task_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_task
    ADD CONSTRAINT asp_task_pkey PRIMARY KEY (asp_task_id);


--
-- Name: asp_window asp_window_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_window
    ADD CONSTRAINT asp_window_pkey PRIMARY KEY (asp_window_id);


--
-- Name: asp_workflow asp_workflow_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_workflow
    ADD CONSTRAINT asp_workflow_pkey PRIMARY KEY (asp_workflow_id);


--
-- Name: b_bid b_bid_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_bid
    ADD CONSTRAINT b_bid_pkey PRIMARY KEY (b_bid_id);


--
-- Name: b_bidcomment b_bidcomment_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_bidcomment
    ADD CONSTRAINT b_bidcomment_pkey PRIMARY KEY (b_topic_id, b_bidcomment_id);


--
-- Name: b_buyer b_buyer_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_buyer
    ADD CONSTRAINT b_buyer_pkey PRIMARY KEY (ad_user_id);


--
-- Name: b_buyerfunds b_buyerfunds_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_buyerfunds
    ADD CONSTRAINT b_buyerfunds_pkey PRIMARY KEY (b_buyerfunds_id);


--
-- Name: b_offer b_offer_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_offer
    ADD CONSTRAINT b_offer_pkey PRIMARY KEY (b_offer_id);


--
-- Name: b_seller b_seller_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_seller
    ADD CONSTRAINT b_seller_pkey PRIMARY KEY (ad_user_id);


--
-- Name: b_sellerfunds b_sellerfunds_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_sellerfunds
    ADD CONSTRAINT b_sellerfunds_pkey PRIMARY KEY (b_sellerfunds_id);


--
-- Name: b_topic b_topic_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_topic
    ADD CONSTRAINT b_topic_pkey PRIMARY KEY (b_topic_id);


--
-- Name: b_topiccategory b_topiccategory_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_topiccategory
    ADD CONSTRAINT b_topiccategory_pkey PRIMARY KEY (b_topiccategory_id);


--
-- Name: b_topictype b_topictype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_topictype
    ADD CONSTRAINT b_topictype_pkey PRIMARY KEY (b_topictype_id);


--
-- Name: c_acctprocessor c_acctprocessor_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctprocessor
    ADD CONSTRAINT c_acctprocessor_pkey PRIMARY KEY (c_acctprocessor_id);


--
-- Name: c_acctprocessorlog c_acctprocessorlog_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctprocessorlog
    ADD CONSTRAINT c_acctprocessorlog_pkey PRIMARY KEY (c_acctprocessor_id, c_acctprocessorlog_id);


--
-- Name: c_acctschema_default c_acctschema_default_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT c_acctschema_default_pkey PRIMARY KEY (c_acctschema_id);


--
-- Name: c_acctschema_element c_acctschema_element_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT c_acctschema_element_pkey PRIMARY KEY (c_acctschema_element_id);


--
-- Name: c_acctschema_gl c_acctschema_gl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_gl
    ADD CONSTRAINT c_acctschema_gl_pkey PRIMARY KEY (c_acctschema_id);


--
-- Name: c_acctschema c_acctschema_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema
    ADD CONSTRAINT c_acctschema_pkey PRIMARY KEY (c_acctschema_id);


--
-- Name: c_activity c_activity_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_activity
    ADD CONSTRAINT c_activity_pkey PRIMARY KEY (c_activity_id);


--
-- Name: c_allocationhdr c_allocationhdr_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_allocationhdr
    ADD CONSTRAINT c_allocationhdr_pkey PRIMARY KEY (c_allocationhdr_id);


--
-- Name: c_allocationline c_allocationline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_allocationline
    ADD CONSTRAINT c_allocationline_pkey PRIMARY KEY (c_allocationline_id);


--
-- Name: c_bank c_bank_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bank
    ADD CONSTRAINT c_bank_pkey PRIMARY KEY (c_bank_id);


--
-- Name: c_bankaccount_acct c_bankaccount_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT c_bankaccount_acct_pkey PRIMARY KEY (c_bankaccount_id, c_acctschema_id);


--
-- Name: c_bankaccount c_bankaccount_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount
    ADD CONSTRAINT c_bankaccount_pkey PRIMARY KEY (c_bankaccount_id);


--
-- Name: c_bankaccountdoc c_bankaccountdoc_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccountdoc
    ADD CONSTRAINT c_bankaccountdoc_pkey PRIMARY KEY (c_bankaccountdoc_id);


--
-- Name: c_bankstatement c_bankstatement_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankstatement
    ADD CONSTRAINT c_bankstatement_pkey PRIMARY KEY (c_bankstatement_id);


--
-- Name: c_bankstatementline c_bankstatementline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankstatementline
    ADD CONSTRAINT c_bankstatementline_pkey PRIMARY KEY (c_bankstatementline_id);


--
-- Name: c_bankstatementloader c_bankstatementloader_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankstatementloader
    ADD CONSTRAINT c_bankstatementloader_pkey PRIMARY KEY (c_bankstatementloader_id);


--
-- Name: c_bankstatementmatcher c_bankstatementmatcher_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankstatementmatcher
    ADD CONSTRAINT c_bankstatementmatcher_pkey PRIMARY KEY (c_bankstatementmatcher_id);


--
-- Name: c_bp_bankaccount c_bp_bankaccount_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_bankaccount
    ADD CONSTRAINT c_bp_bankaccount_pkey PRIMARY KEY (c_bp_bankaccount_id);


--
-- Name: c_bp_customer_acct c_bp_customer_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_customer_acct
    ADD CONSTRAINT c_bp_customer_acct_pkey PRIMARY KEY (c_bpartner_id, c_acctschema_id);


--
-- Name: c_bp_edi c_bp_edi_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_edi
    ADD CONSTRAINT c_bp_edi_pkey PRIMARY KEY (c_bp_edi_id);


--
-- Name: c_bp_employee_acct c_bp_employee_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_employee_acct
    ADD CONSTRAINT c_bp_employee_acct_pkey PRIMARY KEY (c_bpartner_id, c_acctschema_id);


--
-- Name: c_bp_group_acct c_bp_group_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT c_bp_group_acct_pkey PRIMARY KEY (c_acctschema_id, c_bp_group_id);


--
-- Name: c_bp_group c_bp_group_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group
    ADD CONSTRAINT c_bp_group_pkey PRIMARY KEY (c_bp_group_id);


--
-- Name: c_bp_relation c_bp_relation_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_relation
    ADD CONSTRAINT c_bp_relation_pkey PRIMARY KEY (c_bp_relation_id);


--
-- Name: c_bp_vendor_acct c_bp_vendor_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_vendor_acct
    ADD CONSTRAINT c_bp_vendor_acct_pkey PRIMARY KEY (c_acctschema_id, c_bpartner_id);


--
-- Name: c_bp_withholding c_bp_withholding_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_withholding
    ADD CONSTRAINT c_bp_withholding_pkey PRIMARY KEY (c_bpartner_id, c_withholding_id);


--
-- Name: c_bpartner_location c_bpartner_location_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner_location
    ADD CONSTRAINT c_bpartner_location_pkey PRIMARY KEY (c_bpartner_location_id);


--
-- Name: c_bpartner c_bpartner_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT c_bpartner_pkey PRIMARY KEY (c_bpartner_id);


--
-- Name: c_bpartner_product c_bpartner_product_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner_product
    ADD CONSTRAINT c_bpartner_product_pkey PRIMARY KEY (c_bpartner_id, m_product_id);


--
-- Name: c_calendar c_calendar_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_calendar
    ADD CONSTRAINT c_calendar_pkey PRIMARY KEY (c_calendar_id);


--
-- Name: c_campaign c_campaign_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_campaign
    ADD CONSTRAINT c_campaign_pkey PRIMARY KEY (c_campaign_id);


--
-- Name: c_cash c_cash_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cash
    ADD CONSTRAINT c_cash_pkey PRIMARY KEY (c_cash_id);


--
-- Name: c_cashbook_acct c_cashbook_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashbook_acct
    ADD CONSTRAINT c_cashbook_acct_pkey PRIMARY KEY (c_cashbook_id, c_acctschema_id);


--
-- Name: c_cashbook c_cashbook_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashbook
    ADD CONSTRAINT c_cashbook_pkey PRIMARY KEY (c_cashbook_id);


--
-- Name: c_cashflow c_cashflow_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashflow
    ADD CONSTRAINT c_cashflow_key PRIMARY KEY (c_cashflow_id);


--
-- Name: c_cashline c_cashline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashline
    ADD CONSTRAINT c_cashline_pkey PRIMARY KEY (c_cashline_id);


--
-- Name: c_channel c_channel_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_channel
    ADD CONSTRAINT c_channel_pkey PRIMARY KEY (c_channel_id);


--
-- Name: c_charge_acct c_charge_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_charge_acct
    ADD CONSTRAINT c_charge_acct_pkey PRIMARY KEY (c_charge_id, c_acctschema_id);


--
-- Name: c_charge c_charge_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_charge
    ADD CONSTRAINT c_charge_pkey PRIMARY KEY (c_charge_id);


--
-- Name: c_charge_trl c_charge_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_charge_trl
    ADD CONSTRAINT c_charge_trl_pkey PRIMARY KEY (ad_language, c_charge_id);


--
-- Name: c_chargetype_doctype c_chargetype_doctype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_chargetype_doctype
    ADD CONSTRAINT c_chargetype_doctype_pkey PRIMARY KEY (c_chargetype_id, c_doctype_id);


--
-- Name: c_chargetype c_chargetype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_chargetype
    ADD CONSTRAINT c_chargetype_pkey PRIMARY KEY (c_chargetype_id);


--
-- Name: c_city c_city_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_city
    ADD CONSTRAINT c_city_pkey PRIMARY KEY (c_city_id);


--
-- Name: c_commission c_commission_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commission
    ADD CONSTRAINT c_commission_pkey PRIMARY KEY (c_commission_id);


--
-- Name: c_commissionamt c_commissionamt_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionamt
    ADD CONSTRAINT c_commissionamt_pkey PRIMARY KEY (c_commissionamt_id);


--
-- Name: c_commissiondetail c_commissiondetail_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissiondetail
    ADD CONSTRAINT c_commissiondetail_pkey PRIMARY KEY (c_commissiondetail_id);


--
-- Name: c_commissiongroup c_commissiongroup_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissiongroup
    ADD CONSTRAINT c_commissiongroup_key PRIMARY KEY (c_commissiongroup_id);


--
-- Name: c_commissionline c_commissionline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT c_commissionline_pkey PRIMARY KEY (c_commissionline_id);


--
-- Name: c_commissionrun c_commissionrun_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionrun
    ADD CONSTRAINT c_commissionrun_pkey PRIMARY KEY (c_commissionrun_id);


--
-- Name: c_commissionsalesrep c_commissionsalesrep_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionsalesrep
    ADD CONSTRAINT c_commissionsalesrep_key PRIMARY KEY (c_commissionsalesrep_id);


--
-- Name: c_contactactivity c_contactactivity_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_contactactivity
    ADD CONSTRAINT c_contactactivity_key PRIMARY KEY (c_contactactivity_id);


--
-- Name: c_conversion_rate c_conversion_rate_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_conversion_rate
    ADD CONSTRAINT c_conversion_rate_pkey PRIMARY KEY (c_conversion_rate_id);


--
-- Name: c_conversiontype c_conversiontype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_conversiontype
    ADD CONSTRAINT c_conversiontype_pkey PRIMARY KEY (c_conversiontype_id);


--
-- Name: c_country c_country_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_country
    ADD CONSTRAINT c_country_pkey PRIMARY KEY (c_country_id);


--
-- Name: c_country_trl c_country_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_country_trl
    ADD CONSTRAINT c_country_trl_pkey PRIMARY KEY (c_country_id, ad_language);


--
-- Name: c_currency_acct c_currency_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_currency_acct
    ADD CONSTRAINT c_currency_acct_pkey PRIMARY KEY (c_acctschema_id, c_currency_id);


--
-- Name: c_currency c_currency_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_currency
    ADD CONSTRAINT c_currency_pkey PRIMARY KEY (c_currency_id);


--
-- Name: c_currency_trl c_currency_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_currency_trl
    ADD CONSTRAINT c_currency_trl_pkey PRIMARY KEY (c_currency_id, ad_language);


--
-- Name: c_cycle c_cycle_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cycle
    ADD CONSTRAINT c_cycle_pkey PRIMARY KEY (c_cycle_id);


--
-- Name: c_cyclephase c_cyclephase_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cyclephase
    ADD CONSTRAINT c_cyclephase_pkey PRIMARY KEY (c_cyclestep_id, c_phase_id);


--
-- Name: c_cyclestep c_cyclestep_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cyclestep
    ADD CONSTRAINT c_cyclestep_pkey PRIMARY KEY (c_cyclestep_id);


--
-- Name: c_doctype c_doctype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctype
    ADD CONSTRAINT c_doctype_pkey PRIMARY KEY (c_doctype_id);


--
-- Name: c_doctype_trl c_doctype_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctype_trl
    ADD CONSTRAINT c_doctype_trl_pkey PRIMARY KEY (c_doctype_id, ad_language);


--
-- Name: c_doctypecounter c_doctypecounter_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctypecounter
    ADD CONSTRAINT c_doctypecounter_pkey PRIMARY KEY (c_doctypecounter_id);


--
-- Name: c_dunning c_dunning_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunning
    ADD CONSTRAINT c_dunning_pkey PRIMARY KEY (c_dunning_id);


--
-- Name: c_dunninglevel c_dunninglevel_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunninglevel
    ADD CONSTRAINT c_dunninglevel_pkey PRIMARY KEY (c_dunninglevel_id);


--
-- Name: c_dunninglevel_trl c_dunninglevel_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunninglevel_trl
    ADD CONSTRAINT c_dunninglevel_trl_pkey PRIMARY KEY (ad_language, c_dunninglevel_id);


--
-- Name: c_dunningrun c_dunningrun_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrun
    ADD CONSTRAINT c_dunningrun_pkey PRIMARY KEY (c_dunningrun_id);


--
-- Name: c_dunningrunentry c_dunningrunentry_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrunentry
    ADD CONSTRAINT c_dunningrunentry_pkey PRIMARY KEY (c_dunningrunentry_id);


--
-- Name: c_dunningrunline c_dunningrunline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrunline
    ADD CONSTRAINT c_dunningrunline_pkey PRIMARY KEY (c_dunningrunline_id);


--
-- Name: c_element c_element_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_element
    ADD CONSTRAINT c_element_pkey PRIMARY KEY (c_element_id);


--
-- Name: c_elementvalue c_elementvalue_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_elementvalue
    ADD CONSTRAINT c_elementvalue_pkey PRIMARY KEY (c_elementvalue_id);


--
-- Name: c_elementvalue_trl c_elementvalue_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_elementvalue_trl
    ADD CONSTRAINT c_elementvalue_trl_pkey PRIMARY KEY (c_elementvalue_id, ad_language);


--
-- Name: c_greeting c_greeting_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_greeting
    ADD CONSTRAINT c_greeting_pkey PRIMARY KEY (c_greeting_id);


--
-- Name: c_greeting_trl c_greeting_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_greeting_trl
    ADD CONSTRAINT c_greeting_trl_pkey PRIMARY KEY (ad_language, c_greeting_id);


--
-- Name: c_interorg_acct c_interorg_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_interorg_acct
    ADD CONSTRAINT c_interorg_acct_pkey PRIMARY KEY (c_acctschema_id, ad_org_id, ad_orgto_id);


--
-- Name: c_invoice c_invoice_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT c_invoice_pkey PRIMARY KEY (c_invoice_id);


--
-- Name: c_invoicebatch c_invoicebatch_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatch
    ADD CONSTRAINT c_invoicebatch_pkey PRIMARY KEY (c_invoicebatch_id);


--
-- Name: c_invoicebatchline c_invoicebatchline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT c_invoicebatchline_pkey PRIMARY KEY (c_invoicebatchline_id);


--
-- Name: c_invoiceline c_invoiceline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT c_invoiceline_pkey PRIMARY KEY (c_invoiceline_id);


--
-- Name: c_invoicepayschedule c_invoicepayschedule_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicepayschedule
    ADD CONSTRAINT c_invoicepayschedule_pkey PRIMARY KEY (c_invoicepayschedule_id);


--
-- Name: c_invoiceschedule c_invoiceschedule_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceschedule
    ADD CONSTRAINT c_invoiceschedule_pkey PRIMARY KEY (c_invoiceschedule_id);


--
-- Name: c_invoicetax c_invoicetax_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicetax
    ADD CONSTRAINT c_invoicetax_pkey PRIMARY KEY (c_tax_id, c_invoice_id);


--
-- Name: c_job c_job_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_job
    ADD CONSTRAINT c_job_pkey PRIMARY KEY (c_job_id);


--
-- Name: c_jobassignment c_jobassignment_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_jobassignment
    ADD CONSTRAINT c_jobassignment_pkey PRIMARY KEY (c_jobassignment_id);


--
-- Name: c_jobcategory c_jobcategory_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_jobcategory
    ADD CONSTRAINT c_jobcategory_pkey PRIMARY KEY (c_jobcategory_id);


--
-- Name: c_jobremuneration c_jobremuneration_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_jobremuneration
    ADD CONSTRAINT c_jobremuneration_pkey PRIMARY KEY (c_jobremuneration_id);


--
-- Name: c_landedcost c_landedcost_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_landedcost
    ADD CONSTRAINT c_landedcost_pkey PRIMARY KEY (c_landedcost_id);


--
-- Name: c_landedcostallocation c_landedcostallocation_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_landedcostallocation
    ADD CONSTRAINT c_landedcostallocation_pkey PRIMARY KEY (c_landedcostallocation_id);


--
-- Name: c_location c_location_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_location
    ADD CONSTRAINT c_location_pkey PRIMARY KEY (c_location_id);


--
-- Name: c_nonbusinessday c_nonbusinessday_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_nonbusinessday
    ADD CONSTRAINT c_nonbusinessday_pkey PRIMARY KEY (c_nonbusinessday_id);


--
-- Name: c_opportunity c_opportunity_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_opportunity
    ADD CONSTRAINT c_opportunity_key PRIMARY KEY (c_opportunity_id);


--
-- Name: c_order c_order_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT c_order_pkey PRIMARY KEY (c_order_id);


--
-- Name: c_orderline c_orderline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT c_orderline_pkey PRIMARY KEY (c_orderline_id);


--
-- Name: c_ordersource c_ordersource_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_ordersource
    ADD CONSTRAINT c_ordersource_pkey PRIMARY KEY (c_ordersource_id);


--
-- Name: c_ordertax c_ordertax_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_ordertax
    ADD CONSTRAINT c_ordertax_pkey PRIMARY KEY (c_order_id, c_tax_id);


--
-- Name: c_orgassignment c_orgassignment_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orgassignment
    ADD CONSTRAINT c_orgassignment_pkey PRIMARY KEY (c_orgassignment_id);


--
-- Name: c_payment c_payment_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT c_payment_pkey PRIMARY KEY (c_payment_id);


--
-- Name: c_paymentallocate c_paymentallocate_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentallocate
    ADD CONSTRAINT c_paymentallocate_pkey PRIMARY KEY (c_paymentallocate_id);


--
-- Name: c_paymentbatch c_paymentbatch_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentbatch
    ADD CONSTRAINT c_paymentbatch_pkey PRIMARY KEY (c_paymentbatch_id);


--
-- Name: c_paymentprocessor c_paymentprocessor_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentprocessor
    ADD CONSTRAINT c_paymentprocessor_pkey PRIMARY KEY (c_paymentprocessor_id);


--
-- Name: c_paymentterm c_paymentterm_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentterm
    ADD CONSTRAINT c_paymentterm_pkey PRIMARY KEY (c_paymentterm_id);


--
-- Name: c_paymentterm_trl c_paymentterm_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentterm_trl
    ADD CONSTRAINT c_paymentterm_trl_pkey PRIMARY KEY (c_paymentterm_id, ad_language);


--
-- Name: c_payschedule c_payschedule_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payschedule
    ADD CONSTRAINT c_payschedule_pkey PRIMARY KEY (c_payschedule_id);


--
-- Name: c_payselection c_payselection_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselection
    ADD CONSTRAINT c_payselection_pkey PRIMARY KEY (c_payselection_id);


--
-- Name: c_payselectioncheck c_payselectioncheck_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectioncheck
    ADD CONSTRAINT c_payselectioncheck_pkey PRIMARY KEY (c_payselectioncheck_id);


--
-- Name: c_payselectionline c_payselectionline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectionline
    ADD CONSTRAINT c_payselectionline_pkey PRIMARY KEY (c_payselectionline_id);


--
-- Name: c_period c_period_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_period
    ADD CONSTRAINT c_period_pkey PRIMARY KEY (c_period_id);


--
-- Name: c_periodcontrol c_periodcontrol_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_periodcontrol
    ADD CONSTRAINT c_periodcontrol_pkey PRIMARY KEY (c_periodcontrol_id);


--
-- Name: c_phase c_phase_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_phase
    ADD CONSTRAINT c_phase_pkey PRIMARY KEY (c_phase_id);


--
-- Name: c_pos c_pos_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_pos
    ADD CONSTRAINT c_pos_pkey PRIMARY KEY (c_pos_id);


--
-- Name: c_poskey c_poskey_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_poskey
    ADD CONSTRAINT c_poskey_pkey PRIMARY KEY (c_poskey_id);


--
-- Name: c_poskeylayout c_poskeylayout_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_poskeylayout
    ADD CONSTRAINT c_poskeylayout_pkey PRIMARY KEY (c_poskeylayout_id);


--
-- Name: c_project_acct c_project_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project_acct
    ADD CONSTRAINT c_project_acct_pkey PRIMARY KEY (c_project_id, c_acctschema_id);


--
-- Name: c_project c_project_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT c_project_pkey PRIMARY KEY (c_project_id);


--
-- Name: c_projectissue c_projectissue_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectissue
    ADD CONSTRAINT c_projectissue_pkey PRIMARY KEY (c_projectissue_id);


--
-- Name: c_projectissuema c_projectissuema_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectissuema
    ADD CONSTRAINT c_projectissuema_pkey PRIMARY KEY (c_projectissue_id, m_attributesetinstance_id);


--
-- Name: c_projectline c_projectline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectline
    ADD CONSTRAINT c_projectline_pkey PRIMARY KEY (c_projectline_id);


--
-- Name: c_projectphase c_projectphase_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectphase
    ADD CONSTRAINT c_projectphase_pkey PRIMARY KEY (c_projectphase_id);


--
-- Name: c_projecttask c_projecttask_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projecttask
    ADD CONSTRAINT c_projecttask_pkey PRIMARY KEY (c_projecttask_id);


--
-- Name: c_projecttype c_projecttype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projecttype
    ADD CONSTRAINT c_projecttype_pkey PRIMARY KEY (c_projecttype_id);


--
-- Name: c_recurring c_recurring_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_recurring
    ADD CONSTRAINT c_recurring_pkey PRIMARY KEY (c_recurring_id);


--
-- Name: c_recurring_run c_recurring_run_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_recurring_run
    ADD CONSTRAINT c_recurring_run_pkey PRIMARY KEY (c_recurring_run_id);


--
-- Name: c_region c_region_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_region
    ADD CONSTRAINT c_region_pkey PRIMARY KEY (c_region_id);


--
-- Name: c_remuneration c_remuneration_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_remuneration
    ADD CONSTRAINT c_remuneration_pkey PRIMARY KEY (c_remuneration_id);


--
-- Name: c_revenuerecognition c_revenuerecognition_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_revenuerecognition
    ADD CONSTRAINT c_revenuerecognition_pkey PRIMARY KEY (c_revenuerecognition_id);


--
-- Name: c_revenuerecognition_plan c_revenuerecognition_plan_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_revenuerecognition_plan
    ADD CONSTRAINT c_revenuerecognition_plan_pkey PRIMARY KEY (c_revenuerecognition_plan_id);


--
-- Name: c_revenuerecognition_run c_revenuerecognition_run_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_revenuerecognition_run
    ADD CONSTRAINT c_revenuerecognition_run_pkey PRIMARY KEY (c_revenuerecognition_run_id);


--
-- Name: c_rfq c_rfq_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq
    ADD CONSTRAINT c_rfq_pkey PRIMARY KEY (c_rfq_id);


--
-- Name: c_rfq_topic c_rfq_topic_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq_topic
    ADD CONSTRAINT c_rfq_topic_pkey PRIMARY KEY (c_rfq_topic_id);


--
-- Name: c_rfq_topicsubscriber c_rfq_topicsubscriber_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq_topicsubscriber
    ADD CONSTRAINT c_rfq_topicsubscriber_pkey PRIMARY KEY (c_rfq_topicsubscriber_id);


--
-- Name: c_rfq_topicsubscriberonly c_rfq_topicsubscriberonly_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq_topicsubscriberonly
    ADD CONSTRAINT c_rfq_topicsubscriberonly_pkey PRIMARY KEY (c_rfq_topicsubscriberonly_id);


--
-- Name: c_rfqline c_rfqline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqline
    ADD CONSTRAINT c_rfqline_pkey PRIMARY KEY (c_rfqline_id);


--
-- Name: c_rfqlineqty c_rfqlineqty_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqlineqty
    ADD CONSTRAINT c_rfqlineqty_pkey PRIMARY KEY (c_rfqlineqty_id);


--
-- Name: c_rfqresponse c_rfqresponse_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqresponse
    ADD CONSTRAINT c_rfqresponse_pkey PRIMARY KEY (c_rfqresponse_id);


--
-- Name: c_rfqresponseline c_rfqresponseline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqresponseline
    ADD CONSTRAINT c_rfqresponseline_pkey PRIMARY KEY (c_rfqresponseline_id);


--
-- Name: c_rfqresponselineqty c_rfqresponselineqty_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqresponselineqty
    ADD CONSTRAINT c_rfqresponselineqty_pkey PRIMARY KEY (c_rfqresponselineqty_id);


--
-- Name: c_saleshistory c_saleshistory_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT c_saleshistory_key PRIMARY KEY (c_saleshistory_id);


--
-- Name: c_salesregion c_salesregion_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_salesregion
    ADD CONSTRAINT c_salesregion_pkey PRIMARY KEY (c_salesregion_id);


--
-- Name: c_salesstage c_salesstage_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_salesstage
    ADD CONSTRAINT c_salesstage_key PRIMARY KEY (c_salesstage_id);


--
-- Name: c_servicelevel c_servicelevel_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_servicelevel
    ADD CONSTRAINT c_servicelevel_pkey PRIMARY KEY (c_servicelevel_id);


--
-- Name: c_servicelevelline c_servicelevelline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_servicelevelline
    ADD CONSTRAINT c_servicelevelline_pkey PRIMARY KEY (c_servicelevelline_id);


--
-- Name: c_subacct c_subacct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_subacct
    ADD CONSTRAINT c_subacct_pkey PRIMARY KEY (c_subacct_id);


--
-- Name: c_subscription_delivery c_subscription_delivery_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_subscription_delivery
    ADD CONSTRAINT c_subscription_delivery_pkey PRIMARY KEY (c_subscription_delivery_id);


--
-- Name: c_subscription c_subscription_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_subscription
    ADD CONSTRAINT c_subscription_pkey PRIMARY KEY (c_subscription_id);


--
-- Name: c_subscriptiontype c_subscriptiontype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_subscriptiontype
    ADD CONSTRAINT c_subscriptiontype_pkey PRIMARY KEY (c_subscriptiontype_id);


--
-- Name: c_task c_task_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_task
    ADD CONSTRAINT c_task_pkey PRIMARY KEY (c_task_id);


--
-- Name: c_tax_acct c_tax_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax_acct
    ADD CONSTRAINT c_tax_acct_pkey PRIMARY KEY (c_tax_id, c_acctschema_id);


--
-- Name: c_tax c_tax_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax
    ADD CONSTRAINT c_tax_pkey PRIMARY KEY (c_tax_id);


--
-- Name: c_tax_trl c_tax_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax_trl
    ADD CONSTRAINT c_tax_trl_pkey PRIMARY KEY (c_tax_id, ad_language);


--
-- Name: c_taxbase c_taxbase_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxbase
    ADD CONSTRAINT c_taxbase_pkey PRIMARY KEY (c_taxbase_id);


--
-- Name: c_taxcategory c_taxcategory_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxcategory
    ADD CONSTRAINT c_taxcategory_pkey PRIMARY KEY (c_taxcategory_id);


--
-- Name: c_taxcategory_trl c_taxcategory_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxcategory_trl
    ADD CONSTRAINT c_taxcategory_trl_pkey PRIMARY KEY (c_taxcategory_id, ad_language);


--
-- Name: c_taxdeclaration c_taxdeclaration_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdeclaration
    ADD CONSTRAINT c_taxdeclaration_pkey PRIMARY KEY (c_taxdeclaration_id);


--
-- Name: c_taxdeclarationacct c_taxdeclarationacct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdeclarationacct
    ADD CONSTRAINT c_taxdeclarationacct_pkey PRIMARY KEY (c_taxdeclarationacct_id);


--
-- Name: c_taxdeclarationline c_taxdeclarationline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdeclarationline
    ADD CONSTRAINT c_taxdeclarationline_pkey PRIMARY KEY (c_taxdeclarationline_id);


--
-- Name: c_taxdefinition c_taxdefinition_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdefinition
    ADD CONSTRAINT c_taxdefinition_pkey PRIMARY KEY (c_taxdefinition_id);


--
-- Name: c_taxgroup c_taxgroup_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxgroup
    ADD CONSTRAINT c_taxgroup_pkey PRIMARY KEY (c_taxgroup_id);


--
-- Name: c_taxpostal c_taxpostal_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxpostal
    ADD CONSTRAINT c_taxpostal_pkey PRIMARY KEY (c_taxpostal_id);


--
-- Name: c_taxtype c_taxtype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxtype
    ADD CONSTRAINT c_taxtype_pkey PRIMARY KEY (c_taxtype_id);


--
-- Name: c_uom_conversion c_uom_conversion_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_uom_conversion
    ADD CONSTRAINT c_uom_conversion_pkey PRIMARY KEY (c_uom_conversion_id);


--
-- Name: c_uom c_uom_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_uom
    ADD CONSTRAINT c_uom_pkey PRIMARY KEY (c_uom_id);


--
-- Name: c_uom_trl c_uom_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_uom_trl
    ADD CONSTRAINT c_uom_trl_pkey PRIMARY KEY (c_uom_id, ad_language);


--
-- Name: c_userremuneration c_userremuneration_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_userremuneration
    ADD CONSTRAINT c_userremuneration_pkey PRIMARY KEY (c_userremuneration_id);


--
-- Name: c_validcombination c_validcombination_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT c_validcombination_pkey PRIMARY KEY (c_validcombination_id);


--
-- Name: c_withholding_acct c_withholding_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_withholding_acct
    ADD CONSTRAINT c_withholding_acct_pkey PRIMARY KEY (c_withholding_id, c_acctschema_id);


--
-- Name: c_withholding c_withholding_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_withholding
    ADD CONSTRAINT c_withholding_pkey PRIMARY KEY (c_withholding_id);


--
-- Name: c_year c_year_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_year
    ADD CONSTRAINT c_year_pkey PRIMARY KEY (c_year_id);


--
-- Name: cm_accesscontainer cm_accesscontainer_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accesscontainer
    ADD CONSTRAINT cm_accesscontainer_pkey PRIMARY KEY (cm_accessprofile_id, cm_container_id);


--
-- Name: cm_accesslistbpgroup cm_accesslistbpgroup_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accesslistbpgroup
    ADD CONSTRAINT cm_accesslistbpgroup_pkey PRIMARY KEY (cm_accessprofile_id, c_bp_group_id);


--
-- Name: cm_accesslistrole cm_accesslistrole_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accesslistrole
    ADD CONSTRAINT cm_accesslistrole_pkey PRIMARY KEY (cm_accessprofile_id, ad_role_id);


--
-- Name: cm_accessmedia cm_accessmedia_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accessmedia
    ADD CONSTRAINT cm_accessmedia_pkey PRIMARY KEY (cm_media_id, cm_accessprofile_id);


--
-- Name: cm_accessnewschannel cm_accessnewschannel_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accessnewschannel
    ADD CONSTRAINT cm_accessnewschannel_pkey PRIMARY KEY (cm_accessprofile_id, cm_newschannel_id);


--
-- Name: cm_accessprofile cm_accessprofile_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accessprofile
    ADD CONSTRAINT cm_accessprofile_pkey PRIMARY KEY (cm_accessprofile_id);


--
-- Name: cm_accessstage cm_accessstage_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accessstage
    ADD CONSTRAINT cm_accessstage_pkey PRIMARY KEY (cm_accessprofile_id, cm_cstage_id);


--
-- Name: cm_ad_cat cm_ad_cat_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_ad_cat
    ADD CONSTRAINT cm_ad_cat_pkey PRIMARY KEY (cm_ad_cat_id);


--
-- Name: cm_ad cm_ad_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_ad
    ADD CONSTRAINT cm_ad_pkey PRIMARY KEY (cm_ad_id);


--
-- Name: cm_broadcastserver cm_broadcastserver_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_broadcastserver
    ADD CONSTRAINT cm_broadcastserver_pkey PRIMARY KEY (cm_broadcastserver_id);


--
-- Name: cm_chat cm_chat_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chat
    ADD CONSTRAINT cm_chat_pkey PRIMARY KEY (cm_chat_id);


--
-- Name: cm_chatentry cm_chatentry_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chatentry
    ADD CONSTRAINT cm_chatentry_pkey PRIMARY KEY (cm_chatentry_id);


--
-- Name: cm_chattype cm_chattype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chattype
    ADD CONSTRAINT cm_chattype_pkey PRIMARY KEY (cm_chattype_id);


--
-- Name: cm_chattypeupdate cm_chattypeupdate_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chattypeupdate
    ADD CONSTRAINT cm_chattypeupdate_pkey PRIMARY KEY (cm_chattype_id, ad_user_id);


--
-- Name: cm_chatupdate cm_chatupdate_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chatupdate
    ADD CONSTRAINT cm_chatupdate_pkey PRIMARY KEY (cm_chat_id, ad_user_id);


--
-- Name: cm_container_element cm_container_element_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container_element
    ADD CONSTRAINT cm_container_element_pkey PRIMARY KEY (cm_container_element_id);


--
-- Name: cm_container_element_trl cm_container_element_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container_element_trl
    ADD CONSTRAINT cm_container_element_trl_pkey PRIMARY KEY (cm_container_element_id, ad_language);


--
-- Name: cm_container cm_container_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container
    ADD CONSTRAINT cm_container_pkey PRIMARY KEY (cm_container_id);


--
-- Name: cm_container_trl cm_container_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container_trl
    ADD CONSTRAINT cm_container_trl_pkey PRIMARY KEY (cm_container_id, ad_language);


--
-- Name: cm_container_url cm_container_url_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container_url
    ADD CONSTRAINT cm_container_url_pkey PRIMARY KEY (cm_container_url_id);


--
-- Name: cm_containerttable cm_containerttable_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_containerttable
    ADD CONSTRAINT cm_containerttable_pkey PRIMARY KEY (cm_containerttable_id);


--
-- Name: cm_cstage_element cm_cstage_element_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstage_element
    ADD CONSTRAINT cm_cstage_element_pkey PRIMARY KEY (cm_cstage_element_id);


--
-- Name: cm_cstage_element_trl cm_cstage_element_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstage_element_trl
    ADD CONSTRAINT cm_cstage_element_trl_pkey PRIMARY KEY (cm_cstage_element_id, ad_language);


--
-- Name: cm_cstage cm_cstage_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstage
    ADD CONSTRAINT cm_cstage_pkey PRIMARY KEY (cm_cstage_id);


--
-- Name: cm_cstage_trl cm_cstage_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstage_trl
    ADD CONSTRAINT cm_cstage_trl_pkey PRIMARY KEY (cm_cstage_id, ad_language);


--
-- Name: cm_cstagettable cm_cstagettable_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstagettable
    ADD CONSTRAINT cm_cstagettable_pkey PRIMARY KEY (cm_cstagettable_id);


--
-- Name: cm_media cm_media_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_media
    ADD CONSTRAINT cm_media_pkey PRIMARY KEY (cm_media_id);


--
-- Name: cm_media_server cm_media_server_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_media_server
    ADD CONSTRAINT cm_media_server_pkey PRIMARY KEY (cm_media_server_id);


--
-- Name: cm_mediadeploy cm_mediadeploy_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_mediadeploy
    ADD CONSTRAINT cm_mediadeploy_pkey PRIMARY KEY (cm_mediadeploy_id);


--
-- Name: cm_newschannel cm_newschannel_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_newschannel
    ADD CONSTRAINT cm_newschannel_pkey PRIMARY KEY (cm_newschannel_id);


--
-- Name: cm_newsitem cm_newsitem_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_newsitem
    ADD CONSTRAINT cm_newsitem_pkey PRIMARY KEY (cm_newsitem_id);


--
-- Name: cm_template_ad_cat cm_template_ad_cat_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_template_ad_cat
    ADD CONSTRAINT cm_template_ad_cat_pkey PRIMARY KEY (cm_ad_cat_id, cm_template_id);


--
-- Name: cm_template cm_template_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_template
    ADD CONSTRAINT cm_template_pkey PRIMARY KEY (cm_template_id);


--
-- Name: cm_templatetable cm_templatetable_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_templatetable
    ADD CONSTRAINT cm_templatetable_pkey PRIMARY KEY (cm_templatetable_id);


--
-- Name: cm_webaccesslog cm_webaccesslog_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_webaccesslog
    ADD CONSTRAINT cm_webaccesslog_pkey PRIMARY KEY (cm_webaccesslog_id);


--
-- Name: cm_webproject_domain cm_webproject_domain_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_webproject_domain
    ADD CONSTRAINT cm_webproject_domain_pkey PRIMARY KEY (cm_webproject_domain_id);


--
-- Name: cm_webproject cm_webproject_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_webproject
    ADD CONSTRAINT cm_webproject_pkey PRIMARY KEY (cm_webproject_id);


--
-- Name: cm_wikitoken cm_wikitoken_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_wikitoken
    ADD CONSTRAINT cm_wikitoken_pkey PRIMARY KEY (cm_wikitoken_id);


--
-- Name: dd_compartment dd_compartment_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_compartment
    ADD CONSTRAINT dd_compartment_key PRIMARY KEY (dd_compartment_id);


--
-- Name: dd_compartmentassignment dd_compartmentassignment_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_compartmentassignment
    ADD CONSTRAINT dd_compartmentassignment_key PRIMARY KEY (dd_compartmentassignment_id);


--
-- Name: dd_compatibilitygroup dd_compatibilitygroup_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_compatibilitygroup
    ADD CONSTRAINT dd_compatibilitygroup_key PRIMARY KEY (dd_compatibilitygroup_id);


--
-- Name: dd_driver dd_driver_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_driver
    ADD CONSTRAINT dd_driver_key PRIMARY KEY (dd_driver_id);


--
-- Name: dd_driverassignment dd_driverassignment_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_driverassignment
    ADD CONSTRAINT dd_driverassignment_key PRIMARY KEY (dd_driverassignment_id);


--
-- Name: dd_freight dd_freight_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freight
    ADD CONSTRAINT dd_freight_key PRIMARY KEY (dd_freight_id);


--
-- Name: dd_freightline dd_freightline_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freightline
    ADD CONSTRAINT dd_freightline_key PRIMARY KEY (dd_freightline_id);


--
-- Name: dd_license dd_license_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_license
    ADD CONSTRAINT dd_license_key PRIMARY KEY (dd_license_id);


--
-- Name: dd_licenseassignment dd_licenseassignment_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_licenseassignment
    ADD CONSTRAINT dd_licenseassignment_key PRIMARY KEY (dd_licenseassignment_id);


--
-- Name: dd_licensetype dd_licensetype_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_licensetype
    ADD CONSTRAINT dd_licensetype_key PRIMARY KEY (dd_licensetype_id);


--
-- Name: dd_networkdistribution dd_networkdistribution_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_networkdistribution
    ADD CONSTRAINT dd_networkdistribution_pkey PRIMARY KEY (dd_networkdistribution_id);


--
-- Name: dd_networkdistributionline dd_networkdistributionline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_networkdistributionline
    ADD CONSTRAINT dd_networkdistributionline_pkey PRIMARY KEY (dd_networkdistributionline_id);


--
-- Name: dd_order dd_order_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT dd_order_pkey PRIMARY KEY (dd_order_id);


--
-- Name: dd_orderline dd_orderline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT dd_orderline_pkey PRIMARY KEY (dd_orderline_id);


--
-- Name: dd_requirement dd_requirement_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_requirement
    ADD CONSTRAINT dd_requirement_key PRIMARY KEY (dd_requirement_id);


--
-- Name: dd_requirementassignment dd_requirementassignment_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_requirementassignment
    ADD CONSTRAINT dd_requirementassignment_key PRIMARY KEY (dd_requirementassignment_id);


--
-- Name: dd_requirementtype dd_requirementtype_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_requirementtype
    ADD CONSTRAINT dd_requirementtype_key PRIMARY KEY (dd_requirementtype_id);


--
-- Name: dd_transportassignment dd_transportassignment_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportassignment
    ADD CONSTRAINT dd_transportassignment_key PRIMARY KEY (dd_transportassignment_id);


--
-- Name: dd_transportunit dd_transportunit_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportunit
    ADD CONSTRAINT dd_transportunit_key PRIMARY KEY (dd_transportunit_id);


--
-- Name: dd_transportunittype dd_transportunittype_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportunittype
    ADD CONSTRAINT dd_transportunittype_key PRIMARY KEY (dd_transportunittype_id);


--
-- Name: dd_vehicle dd_vehicle_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_vehicle
    ADD CONSTRAINT dd_vehicle_key PRIMARY KEY (dd_vehicle_id);


--
-- Name: dd_vehicleassignment dd_vehicleassignment_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_vehicleassignment
    ADD CONSTRAINT dd_vehicleassignment_key PRIMARY KEY (dd_vehicleassignment_id);


--
-- Name: dd_vehicletype dd_vehicletype_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_vehicletype
    ADD CONSTRAINT dd_vehicletype_key PRIMARY KEY (dd_vehicletype_id);


--
-- Name: exp_format exp_format_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.exp_format
    ADD CONSTRAINT exp_format_pkey PRIMARY KEY (exp_format_id);


--
-- Name: exp_formatline exp_formatline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.exp_formatline
    ADD CONSTRAINT exp_formatline_pkey PRIMARY KEY (exp_formatline_id);


--
-- Name: exp_processor exp_processor_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.exp_processor
    ADD CONSTRAINT exp_processor_pkey PRIMARY KEY (exp_processor_id);


--
-- Name: exp_processor_type exp_processor_type_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.exp_processor_type
    ADD CONSTRAINT exp_processor_type_pkey PRIMARY KEY (exp_processor_type_id);


--
-- Name: exp_processorparameter exp_processorparameter_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.exp_processorparameter
    ADD CONSTRAINT exp_processorparameter_pkey PRIMARY KEY (exp_processorparameter_id);


--
-- Name: fact_acct fact_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT fact_acct_pkey PRIMARY KEY (fact_acct_id);


--
-- Name: fact_reconciliation fact_reconciliation_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_reconciliation
    ADD CONSTRAINT fact_reconciliation_key PRIMARY KEY (fact_reconciliation_id);


--
-- Name: gl_budget gl_budget_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_budget
    ADD CONSTRAINT gl_budget_pkey PRIMARY KEY (gl_budget_id);


--
-- Name: gl_budgetcontrol gl_budgetcontrol_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_budgetcontrol
    ADD CONSTRAINT gl_budgetcontrol_pkey PRIMARY KEY (gl_budgetcontrol_id);


--
-- Name: gl_category gl_category_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_category
    ADD CONSTRAINT gl_category_pkey PRIMARY KEY (gl_category_id);


--
-- Name: gl_distribution gl_distribution_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT gl_distribution_pkey PRIMARY KEY (gl_distribution_id);


--
-- Name: gl_distributionline gl_distributionline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT gl_distributionline_pkey PRIMARY KEY (gl_distributionline_id);


--
-- Name: gl_fund gl_fund_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_fund
    ADD CONSTRAINT gl_fund_pkey PRIMARY KEY (gl_fund_id);


--
-- Name: gl_fundrestriction gl_fundrestriction_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_fundrestriction
    ADD CONSTRAINT gl_fundrestriction_pkey PRIMARY KEY (gl_fundrestriction_id);


--
-- Name: gl_journal gl_journal_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journal
    ADD CONSTRAINT gl_journal_pkey PRIMARY KEY (gl_journal_id);


--
-- Name: gl_journalbatch gl_journalbatch_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalbatch
    ADD CONSTRAINT gl_journalbatch_pkey PRIMARY KEY (gl_journalbatch_id);


--
-- Name: gl_journalline gl_journalline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT gl_journalline_pkey PRIMARY KEY (gl_journalline_id);


--
-- Name: hr_attribute hr_attribute_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hr_attribute_pkey PRIMARY KEY (hr_attribute_id);


--
-- Name: hr_careerlevel hr_careerlevel_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_careerlevel
    ADD CONSTRAINT hr_careerlevel_key PRIMARY KEY (hr_careerlevel_id);


--
-- Name: hr_careerlevel hr_careerlevel_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_careerlevel
    ADD CONSTRAINT hr_careerlevel_value UNIQUE (ad_client_id, value);


--
-- Name: hr_concept_acct hr_concept_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_acct
    ADD CONSTRAINT hr_concept_acct_pkey PRIMARY KEY (hr_concept_acct_id);


--
-- Name: hr_concept_category hr_concept_category_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_category
    ADD CONSTRAINT hr_concept_category_pkey PRIMARY KEY (hr_concept_category_id);


--
-- Name: hr_concept hr_concept_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept
    ADD CONSTRAINT hr_concept_pkey PRIMARY KEY (hr_concept_id);


--
-- Name: hr_concept_type hr_concept_type_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_type
    ADD CONSTRAINT hr_concept_type_key PRIMARY KEY (hr_concept_type_id);


--
-- Name: hr_concept_type hr_concept_type_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_type
    ADD CONSTRAINT hr_concept_type_value UNIQUE (ad_client_id, value);


--
-- Name: hr_contract hr_contract_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_contract
    ADD CONSTRAINT hr_contract_pkey PRIMARY KEY (hr_contract_id);


--
-- Name: hr_degree hr_degree_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_degree
    ADD CONSTRAINT hr_degree_key PRIMARY KEY (hr_degree_id);


--
-- Name: hr_degree hr_degree_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_degree
    ADD CONSTRAINT hr_degree_value UNIQUE (ad_client_id, value);


--
-- Name: hr_department hr_department_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_department
    ADD CONSTRAINT hr_department_pkey PRIMARY KEY (hr_department_id);


--
-- Name: hr_department hr_department_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_department
    ADD CONSTRAINT hr_department_value UNIQUE (ad_client_id, value);


--
-- Name: hr_departmentproduct hr_departmentproduct_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_departmentproduct
    ADD CONSTRAINT hr_departmentproduct_key PRIMARY KEY (hr_departmentproduct_id);


--
-- Name: hr_designation hr_designation_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_designation
    ADD CONSTRAINT hr_designation_key PRIMARY KEY (hr_designation_id);


--
-- Name: hr_designation hr_designation_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_designation
    ADD CONSTRAINT hr_designation_value UNIQUE (ad_client_id, value);


--
-- Name: hr_education hr_education_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_education
    ADD CONSTRAINT hr_education_key PRIMARY KEY (hr_education_id);


--
-- Name: hr_employee hr_employee_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hr_employee_pkey PRIMARY KEY (hr_employee_id);


--
-- Name: hr_employeedependent hr_employeedependent_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeedependent
    ADD CONSTRAINT hr_employeedependent_key PRIMARY KEY (hr_employeedependent_id);


--
-- Name: hr_employeeexperience hr_employeeexperience_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeeexperience
    ADD CONSTRAINT hr_employeeexperience_key PRIMARY KEY (hr_employeeexperience_id);


--
-- Name: hr_employeeinsurance hr_employeeinsurance_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeeinsurance
    ADD CONSTRAINT hr_employeeinsurance_key PRIMARY KEY (hr_employeeinsurance_id);


--
-- Name: hr_employeetype hr_employeetype_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeetype
    ADD CONSTRAINT hr_employeetype_key PRIMARY KEY (hr_employeetype_id);


--
-- Name: hr_employeetype hr_employeetype_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeetype
    ADD CONSTRAINT hr_employeetype_value UNIQUE (ad_client_id, value);


--
-- Name: hr_employeeweeklyoff hr_employeeweeklyoff_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeeweeklyoff
    ADD CONSTRAINT hr_employeeweeklyoff_key PRIMARY KEY (hr_employeeweeklyoff_id);


--
-- Name: hr_grade hr_grade_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_grade
    ADD CONSTRAINT hr_grade_key PRIMARY KEY (hr_grade_id);


--
-- Name: hr_grade hr_grade_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_grade
    ADD CONSTRAINT hr_grade_value UNIQUE (ad_client_id, value);


--
-- Name: hr_insurancetype hr_insurancetype_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_insurancetype
    ADD CONSTRAINT hr_insurancetype_key PRIMARY KEY (hr_insurancetype_id);


--
-- Name: hr_insurancetype hr_insurancetype_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_insurancetype
    ADD CONSTRAINT hr_insurancetype_value UNIQUE (ad_client_id, value);


--
-- Name: hr_interview hr_interview_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_interview
    ADD CONSTRAINT hr_interview_key PRIMARY KEY (hr_interview_id);


--
-- Name: hr_job hr_job_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_job
    ADD CONSTRAINT hr_job_pkey PRIMARY KEY (hr_job_id);


--
-- Name: hr_job hr_job_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_job
    ADD CONSTRAINT hr_job_value UNIQUE (ad_client_id, value);


--
-- Name: hr_jobapplication hr_jobapplication_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobapplication
    ADD CONSTRAINT hr_jobapplication_key PRIMARY KEY (hr_jobapplication_id);


--
-- Name: hr_jobapplicationhistory hr_jobapplicationhistory_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobapplicationhistory
    ADD CONSTRAINT hr_jobapplicationhistory_key PRIMARY KEY (hr_jobapplicationhistory_id);


--
-- Name: hr_jobeducation hr_jobeducation_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobeducation
    ADD CONSTRAINT hr_jobeducation_key PRIMARY KEY (hr_jobeducation_id);


--
-- Name: hr_jobeducation hr_jobeducation_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobeducation
    ADD CONSTRAINT hr_jobeducation_value UNIQUE (ad_client_id, value);


--
-- Name: hr_jobopening hr_jobopening_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopening
    ADD CONSTRAINT hr_jobopening_key PRIMARY KEY (hr_jobopening_id);


--
-- Name: hr_jobopeninghistory hr_jobopeninghistory_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopeninghistory
    ADD CONSTRAINT hr_jobopeninghistory_key PRIMARY KEY (hr_jobopeninghistory_id);


--
-- Name: hr_jobtype hr_jobtype_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobtype
    ADD CONSTRAINT hr_jobtype_key PRIMARY KEY (hr_jobtype_id);


--
-- Name: hr_jobtype hr_jobtype_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobtype
    ADD CONSTRAINT hr_jobtype_value UNIQUE (ad_client_id, value);


--
-- Name: hr_leaveassign hr_leaveassign_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leaveassign
    ADD CONSTRAINT hr_leaveassign_key PRIMARY KEY (hr_leaveassign_id);


--
-- Name: hr_leavecredithistory hr_leavecredithistory_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavecredithistory
    ADD CONSTRAINT hr_leavecredithistory_key PRIMARY KEY (hr_leavecredithistory_id);


--
-- Name: hr_leavereason hr_leavereason_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavereason
    ADD CONSTRAINT hr_leavereason_key PRIMARY KEY (hr_leavereason_id);


--
-- Name: hr_leavereason hr_leavereason_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavereason
    ADD CONSTRAINT hr_leavereason_value UNIQUE (ad_client_id, value);


--
-- Name: hr_leavetype hr_leavetype_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavetype
    ADD CONSTRAINT hr_leavetype_key PRIMARY KEY (hr_leavetype_id);


--
-- Name: hr_leavetype hr_leavetype_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavetype
    ADD CONSTRAINT hr_leavetype_value UNIQUE (ad_client_id, value);


--
-- Name: hr_leavetypecombination hr_leavetypecombination_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavetypecombination
    ADD CONSTRAINT hr_leavetypecombination_key PRIMARY KEY (hr_leavetypecombination_id);


--
-- Name: hr_leavetypeemployeetype hr_leavetypeemployeetype_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavetypeemployeetype
    ADD CONSTRAINT hr_leavetypeemployeetype_key PRIMARY KEY (hr_leavetypeemployeetype_id);


--
-- Name: hr_list hr_list_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_list
    ADD CONSTRAINT hr_list_pkey PRIMARY KEY (hr_list_id);


--
-- Name: hr_list hr_list_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_list
    ADD CONSTRAINT hr_list_value UNIQUE (ad_client_id, value);


--
-- Name: hr_listline hr_listline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_listline
    ADD CONSTRAINT hr_listline_pkey PRIMARY KEY (hr_listline_id);


--
-- Name: hr_listtype hr_listtype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_listtype
    ADD CONSTRAINT hr_listtype_pkey PRIMARY KEY (hr_listtype_id);


--
-- Name: hr_listtype hr_listtype_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_listtype
    ADD CONSTRAINT hr_listtype_value UNIQUE (ad_client_id, value);


--
-- Name: hr_listversion hr_listversion_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_listversion
    ADD CONSTRAINT hr_listversion_pkey PRIMARY KEY (hr_listversion_id);


--
-- Name: hr_movement hr_movement_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hr_movement_pkey PRIMARY KEY (hr_movement_id);


--
-- Name: hr_payroll hr_payroll_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payroll
    ADD CONSTRAINT hr_payroll_pkey PRIMARY KEY (hr_payroll_id);


--
-- Name: hr_payroll hr_payroll_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payroll
    ADD CONSTRAINT hr_payroll_value UNIQUE (ad_client_id, value);


--
-- Name: hr_payrollconcept hr_payrollconcept_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payrollconcept
    ADD CONSTRAINT hr_payrollconcept_pkey PRIMARY KEY (hr_payrollconcept_id);


--
-- Name: hr_payselection hr_payselection_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payselection
    ADD CONSTRAINT hr_payselection_key PRIMARY KEY (hr_payselection_id);


--
-- Name: hr_payselectioncheck hr_payselectioncheck_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payselectioncheck
    ADD CONSTRAINT hr_payselectioncheck_key PRIMARY KEY (hr_payselectioncheck_id);


--
-- Name: hr_payselectionline hr_payselectionline_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payselectionline
    ADD CONSTRAINT hr_payselectionline_key PRIMARY KEY (hr_payselectionline_id);


--
-- Name: hr_period hr_period_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_period
    ADD CONSTRAINT hr_period_pkey PRIMARY KEY (hr_period_id);


--
-- Name: hr_process hr_process_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT hr_process_pkey PRIMARY KEY (hr_process_id);


--
-- Name: hr_race hr_race_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_race
    ADD CONSTRAINT hr_race_key PRIMARY KEY (hr_race_id);


--
-- Name: hr_race hr_race_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_race
    ADD CONSTRAINT hr_race_value UNIQUE (ad_client_id, value);


--
-- Name: hr_relationship hr_relationship_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_relationship
    ADD CONSTRAINT hr_relationship_key PRIMARY KEY (hr_relationship_id);


--
-- Name: hr_relationship hr_relationship_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_relationship
    ADD CONSTRAINT hr_relationship_value UNIQUE (ad_client_id, value);


--
-- Name: hr_salaryrange hr_salaryrange_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_salaryrange
    ADD CONSTRAINT hr_salaryrange_key PRIMARY KEY (hr_salaryrange_id);


--
-- Name: hr_salaryrange hr_salaryrange_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_salaryrange
    ADD CONSTRAINT hr_salaryrange_value UNIQUE (ad_client_id, value);


--
-- Name: hr_salarystructure hr_salarystructure_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_salarystructure
    ADD CONSTRAINT hr_salarystructure_key PRIMARY KEY (hr_salarystructure_id);


--
-- Name: hr_salarystructure hr_salarystructure_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_salarystructure
    ADD CONSTRAINT hr_salarystructure_value UNIQUE (ad_client_id, value);


--
-- Name: hr_salarystructureline hr_salarystructureline_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_salarystructureline
    ADD CONSTRAINT hr_salarystructureline_key PRIMARY KEY (hr_salarystructureline_id);


--
-- Name: hr_shiftgroup hr_shiftgroup_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_shiftgroup
    ADD CONSTRAINT hr_shiftgroup_key PRIMARY KEY (hr_shiftgroup_id);


--
-- Name: hr_shiftgroup hr_shiftgroup_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_shiftgroup
    ADD CONSTRAINT hr_shiftgroup_value UNIQUE (ad_client_id, value);


--
-- Name: hr_skilltype hr_skilltype_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_skilltype
    ADD CONSTRAINT hr_skilltype_key PRIMARY KEY (hr_skilltype_id);


--
-- Name: hr_skilltype hr_skilltype_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_skilltype
    ADD CONSTRAINT hr_skilltype_value UNIQUE (ad_client_id, value);


--
-- Name: hr_workgroup hr_workgroup_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_workgroup
    ADD CONSTRAINT hr_workgroup_key PRIMARY KEY (hr_workgroup_id);


--
-- Name: hr_workgroup hr_workgroup_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_workgroup
    ADD CONSTRAINT hr_workgroup_value UNIQUE (ad_client_id, value);


--
-- Name: hr_workshift hr_workshift_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_workshift
    ADD CONSTRAINT hr_workshift_key PRIMARY KEY (hr_workshift_id);


--
-- Name: hr_workshift hr_workshift_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_workshift
    ADD CONSTRAINT hr_workshift_value UNIQUE (ad_client_id, value);


--
-- Name: hr_year hr_year_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_year
    ADD CONSTRAINT hr_year_pkey PRIMARY KEY (hr_year_id);


--
-- Name: i_asset i_asset_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_asset
    ADD CONSTRAINT i_asset_pkey PRIMARY KEY (i_asset_id);


--
-- Name: i_bankstatement i_bankstatement_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bankstatement
    ADD CONSTRAINT i_bankstatement_pkey PRIMARY KEY (i_bankstatement_id);


--
-- Name: i_bpartner i_bpartner_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bpartner
    ADD CONSTRAINT i_bpartner_pkey PRIMARY KEY (i_bpartner_id);


--
-- Name: i_budget i_budget_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT i_budget_key PRIMARY KEY (i_budget_id);


--
-- Name: i_conversion_rate i_conversion_rate_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_conversion_rate
    ADD CONSTRAINT i_conversion_rate_pkey PRIMARY KEY (i_conversion_rate_id);


--
-- Name: i_elementvalue i_elementvalue_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_elementvalue
    ADD CONSTRAINT i_elementvalue_pkey PRIMARY KEY (i_elementvalue_id);


--
-- Name: i_fajournal i_fajournal_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT i_fajournal_pkey PRIMARY KEY (i_fajournal_id);


--
-- Name: i_fixedasset i_fixedasset_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fixedasset
    ADD CONSTRAINT i_fixedasset_key PRIMARY KEY (i_fixedasset_id);


--
-- Name: i_forecast i_forecast_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_forecast
    ADD CONSTRAINT i_forecast_key PRIMARY KEY (i_forecast_id);


--
-- Name: i_gljournal i_gljournal_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT i_gljournal_pkey PRIMARY KEY (i_gljournal_id);


--
-- Name: i_hr_attribute i_hr_attribute_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_hr_attribute
    ADD CONSTRAINT i_hr_attribute_key PRIMARY KEY (i_hr_attribute_id);


--
-- Name: i_hr_employee i_hr_employee_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_hr_employee
    ADD CONSTRAINT i_hr_employee_key PRIMARY KEY (i_hr_employee_id);


--
-- Name: i_hr_movement i_hr_movement_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_hr_movement
    ADD CONSTRAINT i_hr_movement_pkey PRIMARY KEY (i_hr_movement_id);


--
-- Name: i_inoutlineconfirm i_inoutlineconfirm_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_inoutlineconfirm
    ADD CONSTRAINT i_inoutlineconfirm_pkey PRIMARY KEY (i_inoutlineconfirm_id);


--
-- Name: i_inventory i_inventory_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_inventory
    ADD CONSTRAINT i_inventory_pkey PRIMARY KEY (i_inventory_id);


--
-- Name: i_invoice i_invoice_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT i_invoice_pkey PRIMARY KEY (i_invoice_id);


--
-- Name: i_movement i_movement_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_movement
    ADD CONSTRAINT i_movement_pkey PRIMARY KEY (i_movement_id);


--
-- Name: i_order i_order_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT i_order_pkey PRIMARY KEY (i_order_id);


--
-- Name: i_payment i_payment_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_payment
    ADD CONSTRAINT i_payment_pkey PRIMARY KEY (i_payment_id);


--
-- Name: i_pricelist i_pricelist_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_pricelist
    ADD CONSTRAINT i_pricelist_pkey PRIMARY KEY (i_pricelist_id);


--
-- Name: i_product_asi i_product_asi_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product_asi
    ADD CONSTRAINT i_product_asi_key PRIMARY KEY (i_product_asi_id);


--
-- Name: i_product_bom i_product_bom_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product_bom
    ADD CONSTRAINT i_product_bom_pkey PRIMARY KEY (i_product_bom_id);


--
-- Name: i_product i_product_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product
    ADD CONSTRAINT i_product_pkey PRIMARY KEY (i_product_id);


--
-- Name: i_productplanning i_productplanning_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_productplanning
    ADD CONSTRAINT i_productplanning_pkey PRIMARY KEY (i_productplanning_id);


--
-- Name: i_reportline i_reportline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_reportline
    ADD CONSTRAINT i_reportline_pkey PRIMARY KEY (i_reportline_id);


--
-- Name: i_saleshistory i_saleshistory_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT i_saleshistory_key PRIMARY KEY (i_saleshistory_id);


--
-- Name: i_workflow i_workflow_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT i_workflow_key PRIMARY KEY (i_workflow_id);


--
-- Name: imp_processor imp_processor_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.imp_processor
    ADD CONSTRAINT imp_processor_pkey PRIMARY KEY (imp_processor_id);


--
-- Name: imp_processor_type imp_processor_type_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.imp_processor_type
    ADD CONSTRAINT imp_processor_type_pkey PRIMARY KEY (imp_processor_type_id);


--
-- Name: imp_processorlog imp_processorlog_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.imp_processorlog
    ADD CONSTRAINT imp_processorlog_pkey PRIMARY KEY (imp_processorlog_id);


--
-- Name: imp_processorparameter imp_processorparameter_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.imp_processorparameter
    ADD CONSTRAINT imp_processorparameter_pkey PRIMARY KEY (imp_processorparameter_id);


--
-- Name: k_category k_category_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_category
    ADD CONSTRAINT k_category_pkey PRIMARY KEY (k_category_id);


--
-- Name: k_categoryvalue k_categoryvalue_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_categoryvalue
    ADD CONSTRAINT k_categoryvalue_pkey PRIMARY KEY (k_categoryvalue_id);


--
-- Name: k_comment k_comment_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_comment
    ADD CONSTRAINT k_comment_pkey PRIMARY KEY (k_comment_id);


--
-- Name: k_entry k_entry_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_entry
    ADD CONSTRAINT k_entry_pkey PRIMARY KEY (k_entry_id);


--
-- Name: k_entrycategory k_entrycategory_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_entrycategory
    ADD CONSTRAINT k_entrycategory_pkey PRIMARY KEY (k_category_id, k_entry_id);


--
-- Name: k_entryrelated k_entryrelated_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_entryrelated
    ADD CONSTRAINT k_entryrelated_pkey PRIMARY KEY (k_entry_id, k_entryrelated_id);


--
-- Name: k_index k_index_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_index
    ADD CONSTRAINT k_index_pkey PRIMARY KEY (k_index_id);


--
-- Name: k_indexlog k_indexlog_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_indexlog
    ADD CONSTRAINT k_indexlog_pkey PRIMARY KEY (k_indexlog_id);


--
-- Name: k_indexstop k_indexstop_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_indexstop
    ADD CONSTRAINT k_indexstop_pkey PRIMARY KEY (k_indexstop_id);


--
-- Name: k_source k_source_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_source
    ADD CONSTRAINT k_source_pkey PRIMARY KEY (k_source_id);


--
-- Name: k_synonym k_synonym_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_synonym
    ADD CONSTRAINT k_synonym_pkey PRIMARY KEY (k_synonym_id);


--
-- Name: k_topic k_topic_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_topic
    ADD CONSTRAINT k_topic_pkey PRIMARY KEY (k_topic_id);


--
-- Name: k_type k_type_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_type
    ADD CONSTRAINT k_type_pkey PRIMARY KEY (k_type_id);


--
-- Name: m_attribute m_attribute_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attribute
    ADD CONSTRAINT m_attribute_pkey PRIMARY KEY (m_attribute_id);


--
-- Name: m_attributeinstance m_attributeinstance_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributeinstance
    ADD CONSTRAINT m_attributeinstance_pkey PRIMARY KEY (m_attributesetinstance_id, m_attribute_id);


--
-- Name: m_attributesearch m_attributesearch_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributesearch
    ADD CONSTRAINT m_attributesearch_pkey PRIMARY KEY (m_attributesearch_id);


--
-- Name: m_attributeset m_attributeset_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributeset
    ADD CONSTRAINT m_attributeset_pkey PRIMARY KEY (m_attributeset_id);


--
-- Name: m_attributesetexclude m_attributesetexclude_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributesetexclude
    ADD CONSTRAINT m_attributesetexclude_pkey PRIMARY KEY (m_attributesetexclude_id);


--
-- Name: m_attributesetinstance m_attributesetinstance_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributesetinstance
    ADD CONSTRAINT m_attributesetinstance_pkey PRIMARY KEY (m_attributesetinstance_id);


--
-- Name: m_attributeuse m_attributeuse_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributeuse
    ADD CONSTRAINT m_attributeuse_pkey PRIMARY KEY (m_attribute_id, m_attributeset_id);


--
-- Name: m_attributevalue m_attributevalue_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributevalue
    ADD CONSTRAINT m_attributevalue_pkey PRIMARY KEY (m_attributevalue_id);


--
-- Name: m_bom m_bom_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bom
    ADD CONSTRAINT m_bom_pkey PRIMARY KEY (m_bom_id);


--
-- Name: m_bomalternative m_bomalternative_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bomalternative
    ADD CONSTRAINT m_bomalternative_pkey PRIMARY KEY (m_bomalternative_id);


--
-- Name: m_bomproduct m_bomproduct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bomproduct
    ADD CONSTRAINT m_bomproduct_pkey PRIMARY KEY (m_bomproduct_id);


--
-- Name: m_bp_price m_bp_price_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bp_price
    ADD CONSTRAINT m_bp_price_key PRIMARY KEY (m_bp_price_id);


--
-- Name: m_changenotice m_changenotice_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_changenotice
    ADD CONSTRAINT m_changenotice_pkey PRIMARY KEY (m_changenotice_id);


--
-- Name: m_changerequest m_changerequest_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_changerequest
    ADD CONSTRAINT m_changerequest_pkey PRIMARY KEY (m_changerequest_id);


--
-- Name: m_cost m_cost_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_cost
    ADD CONSTRAINT m_cost_pkey PRIMARY KEY (ad_client_id, ad_org_id, m_product_id, m_costtype_id, c_acctschema_id, m_costelement_id, m_warehouse_id, m_attributesetinstance_id);


--
-- Name: m_costdetail m_costdetail_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT m_costdetail_pkey PRIMARY KEY (m_costdetail_id);


--
-- Name: m_costelement m_costelement_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costelement
    ADD CONSTRAINT m_costelement_pkey PRIMARY KEY (m_costelement_id);


--
-- Name: m_costqueue m_costqueue_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costqueue
    ADD CONSTRAINT m_costqueue_pkey PRIMARY KEY (m_costqueue_id);


--
-- Name: m_costtype m_costtype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costtype
    ADD CONSTRAINT m_costtype_pkey PRIMARY KEY (m_costtype_id);


--
-- Name: m_demand m_demand_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_demand
    ADD CONSTRAINT m_demand_pkey PRIMARY KEY (m_demand_id);


--
-- Name: m_demanddetail m_demanddetail_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_demanddetail
    ADD CONSTRAINT m_demanddetail_pkey PRIMARY KEY (m_demanddetail_id);


--
-- Name: m_demandline m_demandline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_demandline
    ADD CONSTRAINT m_demandline_pkey PRIMARY KEY (m_demandline_id);


--
-- Name: m_discountschema m_discountschema_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_discountschema
    ADD CONSTRAINT m_discountschema_pkey PRIMARY KEY (m_discountschema_id);


--
-- Name: m_discountschemabreak m_discountschemabreak_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_discountschemabreak
    ADD CONSTRAINT m_discountschemabreak_pkey PRIMARY KEY (m_discountschemabreak_id);


--
-- Name: m_discountschemaline m_discountschemaline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_discountschemaline
    ADD CONSTRAINT m_discountschemaline_pkey PRIMARY KEY (m_discountschemaline_id);


--
-- Name: m_distributionlist m_distributionlist_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_distributionlist
    ADD CONSTRAINT m_distributionlist_pkey PRIMARY KEY (m_distributionlist_id);


--
-- Name: m_distributionlistline m_distributionlistline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_distributionlistline
    ADD CONSTRAINT m_distributionlistline_pkey PRIMARY KEY (m_distributionlistline_id);


--
-- Name: m_distributionrun m_distributionrun_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_distributionrun
    ADD CONSTRAINT m_distributionrun_pkey PRIMARY KEY (m_distributionrun_id);


--
-- Name: m_distributionrunline m_distributionrunline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_distributionrunline
    ADD CONSTRAINT m_distributionrunline_pkey PRIMARY KEY (m_distributionrunline_id);


--
-- Name: m_edi_info m_edi_info_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_edi_info
    ADD CONSTRAINT m_edi_info_pkey PRIMARY KEY (m_edi_info_id);


--
-- Name: m_edi m_edi_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_edi
    ADD CONSTRAINT m_edi_pkey PRIMARY KEY (m_edi_id);


--
-- Name: m_forecast m_forecast_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecast
    ADD CONSTRAINT m_forecast_pkey PRIMARY KEY (m_forecast_id);


--
-- Name: m_forecastline m_forecastline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecastline
    ADD CONSTRAINT m_forecastline_pkey PRIMARY KEY (m_forecastline_id);


--
-- Name: m_freight m_freight_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_freight
    ADD CONSTRAINT m_freight_pkey PRIMARY KEY (m_freight_id);


--
-- Name: m_freightcategory m_freightcategory_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_freightcategory
    ADD CONSTRAINT m_freightcategory_pkey PRIMARY KEY (m_freightcategory_id);


--
-- Name: m_inout m_inout_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT m_inout_pkey PRIMARY KEY (m_inout_id);


--
-- Name: m_inoutconfirm m_inoutconfirm_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutconfirm
    ADD CONSTRAINT m_inoutconfirm_pkey PRIMARY KEY (m_inoutconfirm_id);


--
-- Name: m_inoutline m_inoutline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT m_inoutline_pkey PRIMARY KEY (m_inoutline_id);


--
-- Name: m_inoutlineconfirm m_inoutlineconfirm_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutlineconfirm
    ADD CONSTRAINT m_inoutlineconfirm_pkey PRIMARY KEY (m_inoutlineconfirm_id);


--
-- Name: m_inoutlinema m_inoutlinema_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutlinema
    ADD CONSTRAINT m_inoutlinema_pkey PRIMARY KEY (m_inoutline_id, m_attributesetinstance_id);


--
-- Name: m_inventory m_inventory_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT m_inventory_pkey PRIMARY KEY (m_inventory_id);


--
-- Name: m_inventoryline m_inventoryline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT m_inventoryline_pkey PRIMARY KEY (m_inventoryline_id);


--
-- Name: m_inventorylinema m_inventorylinema_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventorylinema
    ADD CONSTRAINT m_inventorylinema_pkey PRIMARY KEY (m_inventoryline_id, m_attributesetinstance_id);


--
-- Name: m_locator m_locator_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_locator
    ADD CONSTRAINT m_locator_pkey PRIMARY KEY (m_locator_id);


--
-- Name: m_lot m_lot_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_lot
    ADD CONSTRAINT m_lot_pkey PRIMARY KEY (m_lot_id);


--
-- Name: m_lotctl m_lotctl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_lotctl
    ADD CONSTRAINT m_lotctl_pkey PRIMARY KEY (m_lotctl_id);


--
-- Name: m_lotctlexclude m_lotctlexclude_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_lotctlexclude
    ADD CONSTRAINT m_lotctlexclude_pkey PRIMARY KEY (m_lotctlexclude_id);


--
-- Name: m_matchinv m_matchinv_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_matchinv
    ADD CONSTRAINT m_matchinv_pkey PRIMARY KEY (m_matchinv_id);


--
-- Name: m_matchpo m_matchpo_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_matchpo
    ADD CONSTRAINT m_matchpo_pkey PRIMARY KEY (m_matchpo_id);


--
-- Name: m_movement m_movement_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT m_movement_pkey PRIMARY KEY (m_movement_id);


--
-- Name: m_movementconfirm m_movementconfirm_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementconfirm
    ADD CONSTRAINT m_movementconfirm_pkey PRIMARY KEY (m_movementconfirm_id);


--
-- Name: m_movementline m_movementline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT m_movementline_pkey PRIMARY KEY (m_movementline_id);


--
-- Name: m_movementlineconfirm m_movementlineconfirm_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementlineconfirm
    ADD CONSTRAINT m_movementlineconfirm_pkey PRIMARY KEY (m_movementlineconfirm_id);


--
-- Name: m_movementlinema m_movementlinema_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementlinema
    ADD CONSTRAINT m_movementlinema_pkey PRIMARY KEY (m_movementline_id, m_attributesetinstance_id);


--
-- Name: m_operationresource m_operationresource_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_operationresource
    ADD CONSTRAINT m_operationresource_pkey PRIMARY KEY (m_operationresource_id);


--
-- Name: m_package m_package_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_package
    ADD CONSTRAINT m_package_pkey PRIMARY KEY (m_package_id);


--
-- Name: m_packageline m_packageline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_packageline
    ADD CONSTRAINT m_packageline_pkey PRIMARY KEY (m_packageline_id);


--
-- Name: m_parttype m_parttype_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_parttype
    ADD CONSTRAINT m_parttype_key PRIMARY KEY (m_parttype_id);


--
-- Name: m_perpetualinv m_perpetualinv_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_perpetualinv
    ADD CONSTRAINT m_perpetualinv_pkey PRIMARY KEY (m_perpetualinv_id);


--
-- Name: m_pricelist m_pricelist_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_pricelist
    ADD CONSTRAINT m_pricelist_pkey PRIMARY KEY (m_pricelist_id);


--
-- Name: m_pricelist_version m_pricelist_version_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_pricelist_version
    ADD CONSTRAINT m_pricelist_version_pkey PRIMARY KEY (m_pricelist_version_id);


--
-- Name: m_product_acct m_product_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT m_product_acct_pkey PRIMARY KEY (m_product_id, c_acctschema_id);


--
-- Name: m_product_bom m_product_bom_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_bom
    ADD CONSTRAINT m_product_bom_pkey PRIMARY KEY (m_product_bom_id);


--
-- Name: m_product_category_acct m_product_category_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT m_product_category_acct_pkey PRIMARY KEY (m_product_category_id, c_acctschema_id);


--
-- Name: m_product_category m_product_category_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category
    ADD CONSTRAINT m_product_category_pkey PRIMARY KEY (m_product_category_id);


--
-- Name: m_product_class m_product_class_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_class
    ADD CONSTRAINT m_product_class_key PRIMARY KEY (m_product_class_id);


--
-- Name: m_product_class m_product_class_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_class
    ADD CONSTRAINT m_product_class_value UNIQUE (ad_client_id, value);


--
-- Name: m_product_classification m_product_classification_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_classification
    ADD CONSTRAINT m_product_classification_key PRIMARY KEY (m_product_classification_id);


--
-- Name: m_product_classification m_product_classification_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_classification
    ADD CONSTRAINT m_product_classification_value UNIQUE (ad_client_id, value);


--
-- Name: m_product_costing m_product_costing_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_costing
    ADD CONSTRAINT m_product_costing_pkey PRIMARY KEY (m_product_id, c_acctschema_id);


--
-- Name: m_product_group m_product_group_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_group
    ADD CONSTRAINT m_product_group_key PRIMARY KEY (m_product_group_id);


--
-- Name: m_product_group m_product_group_value; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_group
    ADD CONSTRAINT m_product_group_value UNIQUE (ad_client_id, value);


--
-- Name: m_product m_product_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT m_product_pkey PRIMARY KEY (m_product_id);


--
-- Name: m_product_po m_product_po_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_po
    ADD CONSTRAINT m_product_po_pkey PRIMARY KEY (m_product_id, c_bpartner_id);


--
-- Name: m_product_qualitytest m_product_qualitytest_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_qualitytest
    ADD CONSTRAINT m_product_qualitytest_key PRIMARY KEY (m_product_qualitytest_id);


--
-- Name: m_product_trl m_product_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_trl
    ADD CONSTRAINT m_product_trl_pkey PRIMARY KEY (m_product_id, ad_language);


--
-- Name: m_productdownload m_productdownload_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productdownload
    ADD CONSTRAINT m_productdownload_pkey PRIMARY KEY (m_productdownload_id);


--
-- Name: m_production m_production_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT m_production_pkey PRIMARY KEY (m_production_id);


--
-- Name: m_productionbatch m_productionbatch_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionbatch
    ADD CONSTRAINT m_productionbatch_key PRIMARY KEY (m_productionbatch_id);


--
-- Name: m_productionbatchline m_productionbatchline_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionbatchline
    ADD CONSTRAINT m_productionbatchline_key PRIMARY KEY (m_productionbatchline_id);


--
-- Name: m_productionline m_productionline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT m_productionline_pkey PRIMARY KEY (m_productionline_id);


--
-- Name: m_productionlinema m_productionlinema_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionlinema
    ADD CONSTRAINT m_productionlinema_pkey PRIMARY KEY (m_productionline_id, m_attributesetinstance_id);


--
-- Name: m_productionplan m_productionplan_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionplan
    ADD CONSTRAINT m_productionplan_pkey PRIMARY KEY (m_productionplan_id);


--
-- Name: m_productoperation m_productoperation_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productoperation
    ADD CONSTRAINT m_productoperation_pkey PRIMARY KEY (m_productoperation_id);


--
-- Name: m_productprice m_productprice_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productprice
    ADD CONSTRAINT m_productprice_pkey PRIMARY KEY (m_pricelist_version_id, m_product_id);


--
-- Name: m_productpricevendorbreak m_productpricevendorbreak_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productpricevendorbreak
    ADD CONSTRAINT m_productpricevendorbreak_pkey PRIMARY KEY (m_productpricevendorbreak_id);


--
-- Name: m_promotion m_promotion_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotion
    ADD CONSTRAINT m_promotion_pkey PRIMARY KEY (m_promotion_id);


--
-- Name: m_promotiondistribution m_promotiondistribution_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotiondistribution
    ADD CONSTRAINT m_promotiondistribution_pkey PRIMARY KEY (m_promotiondistribution_id);


--
-- Name: m_promotiongroup m_promotiongroup_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotiongroup
    ADD CONSTRAINT m_promotiongroup_pkey PRIMARY KEY (m_promotiongroup_id);


--
-- Name: m_promotiongroupline m_promotiongroupline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotiongroupline
    ADD CONSTRAINT m_promotiongroupline_pkey PRIMARY KEY (m_promotiongroupline_id);


--
-- Name: m_promotionline m_promotionline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionline
    ADD CONSTRAINT m_promotionline_pkey PRIMARY KEY (m_promotionline_id);


--
-- Name: m_promotionprecondition m_promotionprecondition_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionprecondition
    ADD CONSTRAINT m_promotionprecondition_pkey PRIMARY KEY (m_promotionprecondition_id);


--
-- Name: m_promotionreward m_promotionreward_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionreward
    ADD CONSTRAINT m_promotionreward_pkey PRIMARY KEY (m_promotionreward_id);


--
-- Name: m_qualitytest m_qualitytest_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_qualitytest
    ADD CONSTRAINT m_qualitytest_key PRIMARY KEY (m_qualitytest_id);


--
-- Name: m_qualitytestresult m_qualitytestresult_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_qualitytestresult
    ADD CONSTRAINT m_qualitytestresult_key PRIMARY KEY (m_qualitytestresult_id);


--
-- Name: m_relatedproduct m_relatedproduct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_relatedproduct
    ADD CONSTRAINT m_relatedproduct_pkey PRIMARY KEY (m_product_id, relatedproduct_id, relatedproducttype);


--
-- Name: m_replenish m_replenish_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenish
    ADD CONSTRAINT m_replenish_pkey PRIMARY KEY (m_product_id, m_warehouse_id);


--
-- Name: m_replenishplan m_replenishplan_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenishplan
    ADD CONSTRAINT m_replenishplan_key PRIMARY KEY (m_replenishplan_id);


--
-- Name: m_replenishplanline m_replenishplanline_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenishplanline
    ADD CONSTRAINT m_replenishplanline_key PRIMARY KEY (m_replenishplanline_id);


--
-- Name: m_requisition m_requisition_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisition
    ADD CONSTRAINT m_requisition_pkey PRIMARY KEY (m_requisition_id);


--
-- Name: m_requisitionline m_requisitionline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT m_requisitionline_pkey PRIMARY KEY (m_requisitionline_id);


--
-- Name: m_rma m_rma_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rma
    ADD CONSTRAINT m_rma_pkey PRIMARY KEY (m_rma_id);


--
-- Name: m_rmaline m_rmaline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rmaline
    ADD CONSTRAINT m_rmaline_pkey PRIMARY KEY (m_rmaline_id);


--
-- Name: m_rmatype m_rmatype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rmatype
    ADD CONSTRAINT m_rmatype_pkey PRIMARY KEY (m_rmatype_id);


--
-- Name: m_sernoctl m_sernoctl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_sernoctl
    ADD CONSTRAINT m_sernoctl_pkey PRIMARY KEY (m_sernoctl_id);


--
-- Name: m_sernoctlexclude m_sernoctlexclude_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_sernoctlexclude
    ADD CONSTRAINT m_sernoctlexclude_pkey PRIMARY KEY (m_sernoctlexclude_id);


--
-- Name: m_shipper m_shipper_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_shipper
    ADD CONSTRAINT m_shipper_pkey PRIMARY KEY (m_shipper_id);


--
-- Name: m_storage m_storage_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_storage
    ADD CONSTRAINT m_storage_pkey PRIMARY KEY (m_product_id, m_locator_id, m_attributesetinstance_id);


--
-- Name: m_substitute m_substitute_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_substitute
    ADD CONSTRAINT m_substitute_pkey PRIMARY KEY (m_product_id, substitute_id);


--
-- Name: m_transaction m_transaction_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transaction
    ADD CONSTRAINT m_transaction_pkey PRIMARY KEY (m_transaction_id);


--
-- Name: m_transactionallocation m_transactionallocation_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transactionallocation
    ADD CONSTRAINT m_transactionallocation_pkey PRIMARY KEY (m_transaction_id, allocationstrategytype);


--
-- Name: m_warehouse_acct m_warehouse_acct_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_warehouse_acct
    ADD CONSTRAINT m_warehouse_acct_pkey PRIMARY KEY (m_warehouse_id, c_acctschema_id);


--
-- Name: m_warehouse m_warehouse_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_warehouse
    ADD CONSTRAINT m_warehouse_pkey PRIMARY KEY (m_warehouse_id);


--
-- Name: pa_achievement pa_achievement_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_achievement
    ADD CONSTRAINT pa_achievement_pkey PRIMARY KEY (pa_achievement_id);


--
-- Name: pa_benchmark pa_benchmark_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_benchmark
    ADD CONSTRAINT pa_benchmark_pkey PRIMARY KEY (pa_benchmark_id);


--
-- Name: pa_benchmarkdata pa_benchmarkdata_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_benchmarkdata
    ADD CONSTRAINT pa_benchmarkdata_pkey PRIMARY KEY (pa_benchmarkdata_id);


--
-- Name: pa_colorschema pa_colorschema_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_colorschema
    ADD CONSTRAINT pa_colorschema_pkey PRIMARY KEY (pa_colorschema_id);


--
-- Name: pa_dashboardcontent pa_dashboardcontent_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_dashboardcontent
    ADD CONSTRAINT pa_dashboardcontent_pkey PRIMARY KEY (pa_dashboardcontent_id);


--
-- Name: pa_dashboardcontent_trl pa_dashboardcontent_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_dashboardcontent_trl
    ADD CONSTRAINT pa_dashboardcontent_trl_pkey PRIMARY KEY (ad_language, pa_dashboardcontent_id);


--
-- Name: pa_documentstatus pa_documentstatus_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_documentstatus
    ADD CONSTRAINT pa_documentstatus_key PRIMARY KEY (pa_documentstatus_id);


--
-- Name: pa_goal pa_goal_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goal
    ADD CONSTRAINT pa_goal_pkey PRIMARY KEY (pa_goal_id);


--
-- Name: pa_goalrestriction pa_goalrestriction_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goalrestriction
    ADD CONSTRAINT pa_goalrestriction_pkey PRIMARY KEY (pa_goalrestriction_id);


--
-- Name: pa_hierarchy pa_hierarchy_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_hierarchy
    ADD CONSTRAINT pa_hierarchy_pkey PRIMARY KEY (pa_hierarchy_id);


--
-- Name: pa_measure pa_measure_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_measure
    ADD CONSTRAINT pa_measure_pkey PRIMARY KEY (pa_measure_id);


--
-- Name: pa_measurecalc pa_measurecalc_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_measurecalc
    ADD CONSTRAINT pa_measurecalc_pkey PRIMARY KEY (pa_measurecalc_id);


--
-- Name: pa_ratio pa_ratio_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_ratio
    ADD CONSTRAINT pa_ratio_pkey PRIMARY KEY (pa_ratio_id);


--
-- Name: pa_ratioelement pa_ratioelement_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_ratioelement
    ADD CONSTRAINT pa_ratioelement_pkey PRIMARY KEY (pa_ratioelement_id);


--
-- Name: pa_report pa_report_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_report
    ADD CONSTRAINT pa_report_pkey PRIMARY KEY (pa_report_id);


--
-- Name: pa_reportcolumn pa_reportcolumn_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT pa_reportcolumn_pkey PRIMARY KEY (pa_reportcolumn_id);


--
-- Name: pa_reportcolumnset pa_reportcolumnset_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumnset
    ADD CONSTRAINT pa_reportcolumnset_pkey PRIMARY KEY (pa_reportcolumnset_id);


--
-- Name: pa_reportcube pa_reportcube_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcube
    ADD CONSTRAINT pa_reportcube_pkey PRIMARY KEY (pa_reportcube_id);


--
-- Name: pa_reportline pa_reportline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportline
    ADD CONSTRAINT pa_reportline_pkey PRIMARY KEY (pa_reportline_id);


--
-- Name: pa_reportlineset pa_reportlineset_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportlineset
    ADD CONSTRAINT pa_reportlineset_pkey PRIMARY KEY (pa_reportlineset_id);


--
-- Name: pa_reportsource pa_reportsource_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT pa_reportsource_pkey PRIMARY KEY (pa_reportsource_id);


--
-- Name: pa_sla_criteria pa_sla_criteria_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_sla_criteria
    ADD CONSTRAINT pa_sla_criteria_pkey PRIMARY KEY (pa_sla_criteria_id);


--
-- Name: pa_sla_goal pa_sla_goal_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_sla_goal
    ADD CONSTRAINT pa_sla_goal_pkey PRIMARY KEY (pa_sla_goal_id);


--
-- Name: pa_sla_measure pa_sla_measure_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_sla_measure
    ADD CONSTRAINT pa_sla_measure_pkey PRIMARY KEY (pa_sla_measure_id);


--
-- Name: pp_calendar pp_calendar_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_calendar
    ADD CONSTRAINT pp_calendar_key PRIMARY KEY (pp_calendar_id);


--
-- Name: pp_cost_collector pp_cost_collector_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT pp_cost_collector_pkey PRIMARY KEY (pp_cost_collector_id);


--
-- Name: pp_cost_collectorma pp_cost_collectorma_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collectorma
    ADD CONSTRAINT pp_cost_collectorma_pkey PRIMARY KEY (pp_cost_collectorma_id);


--
-- Name: pp_forecastdefinition pp_forecastdefinition_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastdefinition
    ADD CONSTRAINT pp_forecastdefinition_key PRIMARY KEY (pp_forecastdefinition_id);


--
-- Name: pp_forecastdefinitionline pp_forecastdefinitionline_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastdefinitionline
    ADD CONSTRAINT pp_forecastdefinitionline_key PRIMARY KEY (pp_forecastdefinitionline_id);


--
-- Name: pp_forecastrule pp_forecastrule_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrule
    ADD CONSTRAINT pp_forecastrule_key PRIMARY KEY (pp_forecastrule_id);


--
-- Name: pp_forecastrun pp_forecastrun_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrun
    ADD CONSTRAINT pp_forecastrun_key PRIMARY KEY (pp_forecastrun_id);


--
-- Name: pp_forecastrundetail pp_forecastrundetail_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrundetail
    ADD CONSTRAINT pp_forecastrundetail_key PRIMARY KEY (pp_forecastrundetail_id);


--
-- Name: pp_forecastrunline pp_forecastrunline_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunline
    ADD CONSTRAINT pp_forecastrunline_key PRIMARY KEY (pp_forecastrunline_id);


--
-- Name: pp_forecastrunmaster pp_forecastrunmaster_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunmaster
    ADD CONSTRAINT pp_forecastrunmaster_key PRIMARY KEY (pp_forecastrunmaster_id);


--
-- Name: pp_forecastrunresult pp_forecastrunresult_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunresult
    ADD CONSTRAINT pp_forecastrunresult_key PRIMARY KEY (pp_forecastrunresult_id);


--
-- Name: pp_mrp_detail pp_mrp_detail_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp_detail
    ADD CONSTRAINT pp_mrp_detail_key PRIMARY KEY (pp_mrp_detail_id);


--
-- Name: pp_mrp pp_mrp_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT pp_mrp_pkey PRIMARY KEY (pp_mrp_id);


--
-- Name: pp_order_bom pp_order_bom_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bom
    ADD CONSTRAINT pp_order_bom_pkey PRIMARY KEY (pp_order_bom_id);


--
-- Name: pp_order_bom_trl pp_order_bom_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bom_trl
    ADD CONSTRAINT pp_order_bom_trl_pkey PRIMARY KEY (ad_language, pp_order_bom_id);


--
-- Name: pp_order_bomline pp_order_bomline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bomline
    ADD CONSTRAINT pp_order_bomline_pkey PRIMARY KEY (pp_order_bomline_id);


--
-- Name: pp_order_bomline_trl pp_order_bomline_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bomline_trl
    ADD CONSTRAINT pp_order_bomline_trl_pkey PRIMARY KEY (ad_language, pp_order_bomline_id);


--
-- Name: pp_order_cost pp_order_cost_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_cost
    ADD CONSTRAINT pp_order_cost_pkey PRIMARY KEY (pp_order_cost_id);


--
-- Name: pp_order_node_asset pp_order_node_asset_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node_asset
    ADD CONSTRAINT pp_order_node_asset_pkey PRIMARY KEY (pp_order_node_asset_id);


--
-- Name: pp_order_node pp_order_node_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT pp_order_node_pkey PRIMARY KEY (pp_order_node_id);


--
-- Name: pp_order_node_product pp_order_node_product_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node_product
    ADD CONSTRAINT pp_order_node_product_pkey PRIMARY KEY (pp_order_node_product_id);


--
-- Name: pp_order_node_trl pp_order_node_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node_trl
    ADD CONSTRAINT pp_order_node_trl_pkey PRIMARY KEY (ad_language, pp_order_node_id);


--
-- Name: pp_order_nodenext pp_order_nodenext_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_nodenext
    ADD CONSTRAINT pp_order_nodenext_pkey PRIMARY KEY (pp_order_nodenext_id);


--
-- Name: pp_order pp_order_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT pp_order_pkey PRIMARY KEY (pp_order_id);


--
-- Name: pp_order_workflow pp_order_workflow_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_workflow
    ADD CONSTRAINT pp_order_workflow_pkey PRIMARY KEY (pp_order_workflow_id);


--
-- Name: pp_order_workflow_trl pp_order_workflow_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_workflow_trl
    ADD CONSTRAINT pp_order_workflow_trl_pkey PRIMARY KEY (ad_language, pp_order_workflow_id);


--
-- Name: pp_period pp_period_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_period
    ADD CONSTRAINT pp_period_key PRIMARY KEY (pp_period_id);


--
-- Name: pp_perioddefinition pp_perioddefinition_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_perioddefinition
    ADD CONSTRAINT pp_perioddefinition_key PRIMARY KEY (pp_perioddefinition_id);


--
-- Name: pp_product_bom pp_product_bom_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bom
    ADD CONSTRAINT pp_product_bom_pkey PRIMARY KEY (pp_product_bom_id);


--
-- Name: pp_product_bom_trl pp_product_bom_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bom_trl
    ADD CONSTRAINT pp_product_bom_trl_pkey PRIMARY KEY (ad_language, pp_product_bom_id);


--
-- Name: pp_product_bomline pp_product_bomline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bomline
    ADD CONSTRAINT pp_product_bomline_pkey PRIMARY KEY (pp_product_bomline_id);


--
-- Name: pp_product_bomline_trl pp_product_bomline_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bomline_trl
    ADD CONSTRAINT pp_product_bomline_trl_pkey PRIMARY KEY (ad_language, pp_product_bomline_id);


--
-- Name: pp_product_planning pp_product_planning_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_planning
    ADD CONSTRAINT pp_product_planning_pkey PRIMARY KEY (pp_product_planning_id);


--
-- Name: pp_product_planning pp_product_planning_unique; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_planning
    ADD CONSTRAINT pp_product_planning_unique UNIQUE (ad_client_id, ad_org_id, s_resource_id, m_warehouse_id, m_product_id);


--
-- Name: pp_wf_node_asset pp_wf_node_asset_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_wf_node_asset
    ADD CONSTRAINT pp_wf_node_asset_pkey PRIMARY KEY (pp_wf_node_asset_id);


--
-- Name: pp_wf_node_product pp_wf_node_product_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_wf_node_product
    ADD CONSTRAINT pp_wf_node_product_pkey PRIMARY KEY (pp_wf_node_product_id);


--
-- Name: qm_specification qm_specification_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.qm_specification
    ADD CONSTRAINT qm_specification_pkey PRIMARY KEY (qm_specification_id);


--
-- Name: qm_specificationline qm_specificationline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.qm_specificationline
    ADD CONSTRAINT qm_specificationline_pkey PRIMARY KEY (qm_specificationline_id);


--
-- Name: r_category r_category_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_category
    ADD CONSTRAINT r_category_pkey PRIMARY KEY (r_category_id);


--
-- Name: r_categoryupdates r_categoryupdates_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_categoryupdates
    ADD CONSTRAINT r_categoryupdates_pkey PRIMARY KEY (ad_user_id, r_category_id);


--
-- Name: r_contactinterest r_contactinterest_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_contactinterest
    ADD CONSTRAINT r_contactinterest_pkey PRIMARY KEY (r_interestarea_id, ad_user_id);


--
-- Name: r_group r_group_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_group
    ADD CONSTRAINT r_group_pkey PRIMARY KEY (r_group_id);


--
-- Name: r_groupupdates r_groupupdates_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_groupupdates
    ADD CONSTRAINT r_groupupdates_pkey PRIMARY KEY (ad_user_id, r_group_id);


--
-- Name: r_interestarea r_interestarea_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_interestarea
    ADD CONSTRAINT r_interestarea_pkey PRIMARY KEY (r_interestarea_id);


--
-- Name: r_issueknown r_issueknown_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issueknown
    ADD CONSTRAINT r_issueknown_pkey PRIMARY KEY (r_issueknown_id);


--
-- Name: r_issueproject r_issueproject_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issueproject
    ADD CONSTRAINT r_issueproject_pkey PRIMARY KEY (r_issueproject_id);


--
-- Name: r_issuerecommendation r_issuerecommendation_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issuerecommendation
    ADD CONSTRAINT r_issuerecommendation_pkey PRIMARY KEY (r_issuerecommendation_id);


--
-- Name: r_issuesource r_issuesource_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issuesource
    ADD CONSTRAINT r_issuesource_pkey PRIMARY KEY (r_issuesource_id);


--
-- Name: r_issuestatus r_issuestatus_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issuestatus
    ADD CONSTRAINT r_issuestatus_pkey PRIMARY KEY (r_issuestatus_id);


--
-- Name: r_issuesystem r_issuesystem_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issuesystem
    ADD CONSTRAINT r_issuesystem_pkey PRIMARY KEY (r_issuesystem_id);


--
-- Name: r_issueuser r_issueuser_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issueuser
    ADD CONSTRAINT r_issueuser_pkey PRIMARY KEY (r_issueuser_id);


--
-- Name: r_mailtext r_mailtext_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_mailtext
    ADD CONSTRAINT r_mailtext_pkey PRIMARY KEY (r_mailtext_id);


--
-- Name: r_mailtext_trl r_mailtext_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_mailtext_trl
    ADD CONSTRAINT r_mailtext_trl_pkey PRIMARY KEY (r_mailtext_id, ad_language);


--
-- Name: r_request r_request_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT r_request_pkey PRIMARY KEY (r_request_id);


--
-- Name: r_requestaction r_requestaction_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT r_requestaction_pkey PRIMARY KEY (r_requestaction_id);


--
-- Name: r_requestprocessor r_requestprocessor_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestprocessor
    ADD CONSTRAINT r_requestprocessor_pkey PRIMARY KEY (r_requestprocessor_id);


--
-- Name: r_requestprocessor_route r_requestprocessor_route_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestprocessor_route
    ADD CONSTRAINT r_requestprocessor_route_pkey PRIMARY KEY (r_requestprocessor_route_id);


--
-- Name: r_requestprocessorlog r_requestprocessorlog_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestprocessorlog
    ADD CONSTRAINT r_requestprocessorlog_pkey PRIMARY KEY (r_requestprocessor_id, r_requestprocessorlog_id);


--
-- Name: r_requesttype r_requesttype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requesttype
    ADD CONSTRAINT r_requesttype_pkey PRIMARY KEY (r_requesttype_id);


--
-- Name: r_requesttypeupdates r_requesttypeupdates_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requesttypeupdates
    ADD CONSTRAINT r_requesttypeupdates_pkey PRIMARY KEY (ad_user_id, r_requesttype_id);


--
-- Name: r_requestupdate r_requestupdate_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestupdate
    ADD CONSTRAINT r_requestupdate_pkey PRIMARY KEY (r_requestupdate_id);


--
-- Name: r_requestupdates r_requestupdates_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestupdates
    ADD CONSTRAINT r_requestupdates_pkey PRIMARY KEY (ad_user_id, r_request_id);


--
-- Name: r_resolution r_resolution_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_resolution
    ADD CONSTRAINT r_resolution_pkey PRIMARY KEY (r_resolution_id);


--
-- Name: r_standardresponse r_standardresponse_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_standardresponse
    ADD CONSTRAINT r_standardresponse_pkey PRIMARY KEY (r_standardresponse_id);


--
-- Name: r_status r_status_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_status
    ADD CONSTRAINT r_status_pkey PRIMARY KEY (r_status_id);


--
-- Name: r_statuscategory r_statuscategory_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_statuscategory
    ADD CONSTRAINT r_statuscategory_pkey PRIMARY KEY (r_statuscategory_id);


--
-- Name: s_expensetype s_expensetype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_expensetype
    ADD CONSTRAINT s_expensetype_pkey PRIMARY KEY (s_expensetype_id);


--
-- Name: s_resource s_resource_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_resource
    ADD CONSTRAINT s_resource_pkey PRIMARY KEY (s_resource_id);


--
-- Name: s_resourceassignment s_resourceassignment_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_resourceassignment
    ADD CONSTRAINT s_resourceassignment_pkey PRIMARY KEY (s_resourceassignment_id);


--
-- Name: s_resourcetype s_resourcetype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_resourcetype
    ADD CONSTRAINT s_resourcetype_pkey PRIMARY KEY (s_resourcetype_id);


--
-- Name: s_resourceunavailable s_resourceunavailable_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_resourceunavailable
    ADD CONSTRAINT s_resourceunavailable_pkey PRIMARY KEY (s_resourceunavailable_id);


--
-- Name: s_timeexpense s_timeexpense_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpense
    ADD CONSTRAINT s_timeexpense_pkey PRIMARY KEY (s_timeexpense_id);


--
-- Name: s_timeexpenseline s_timeexpenseline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT s_timeexpenseline_pkey PRIMARY KEY (s_timeexpenseline_id);


--
-- Name: s_timetype s_timetype_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timetype
    ADD CONSTRAINT s_timetype_pkey PRIMARY KEY (s_timetype_id);


--
-- Name: s_training_class s_training_class_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_training_class
    ADD CONSTRAINT s_training_class_pkey PRIMARY KEY (s_training_class_id);


--
-- Name: s_training s_training_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_training
    ADD CONSTRAINT s_training_pkey PRIMARY KEY (s_training_id);


--
-- Name: t_aging t_aging_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_aging
    ADD CONSTRAINT t_aging_key PRIMARY KEY (ad_pinstance_id, c_bankaccount_id, c_bpartner_id, c_currency_id, c_invoice_id, c_invoicepayschedule_id, c_order_id, c_cashflow_id);


--
-- Name: t_bom_indented t_bom_indented_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_bom_indented
    ADD CONSTRAINT t_bom_indented_key PRIMARY KEY (t_bom_indented_id);


--
-- Name: t_bomline t_bomline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_bomline
    ADD CONSTRAINT t_bomline_pkey PRIMARY KEY (t_bomline_id);


--
-- Name: t_combinedaging t_combinedaging_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_combinedaging
    ADD CONSTRAINT t_combinedaging_key PRIMARY KEY (ad_pinstance_id, c_bpartner_id, c_currency_id, c_invoice_id, c_payment_id, c_invoicepayschedule_id);


--
-- Name: t_distributionrundetail t_distributionrundetail_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_distributionrundetail
    ADD CONSTRAINT t_distributionrundetail_pkey PRIMARY KEY (m_distributionrun_id, m_distributionrunline_id, m_distributionlist_id, m_distributionlistline_id);


--
-- Name: t_inventoryvalue t_inventoryvalue_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_inventoryvalue
    ADD CONSTRAINT t_inventoryvalue_pkey PRIMARY KEY (ad_pinstance_id, m_warehouse_id, m_product_id, m_attributesetinstance_id, m_costtype_id, m_costelement_id);


--
-- Name: t_invoicegl t_invoicegl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_invoicegl
    ADD CONSTRAINT t_invoicegl_pkey PRIMARY KEY (ad_pinstance_id, c_invoice_id, fact_acct_id);


--
-- Name: t_mrp_crp t_mrp_crp_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_mrp_crp
    ADD CONSTRAINT t_mrp_crp_pkey PRIMARY KEY (t_mrp_crp_id);


--
-- Name: t_replenish t_replenish_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_replenish
    ADD CONSTRAINT t_replenish_pkey PRIMARY KEY (ad_pinstance_id, m_warehouse_id, m_product_id);


--
-- Name: t_replenishplan t_replenishplan_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_replenishplan
    ADD CONSTRAINT t_replenishplan_key PRIMARY KEY (t_replenishplan_id);


--
-- Name: t_reportstatement t_reportstatement_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_reportstatement
    ADD CONSTRAINT t_reportstatement_pkey PRIMARY KEY (ad_pinstance_id, fact_acct_id);


--
-- Name: t_selection2 t_selection2_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_selection2
    ADD CONSTRAINT t_selection2_pkey PRIMARY KEY (ad_pinstance_id, query_id, t_selection_id);


--
-- Name: t_selection_browse t_selection_browse_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_selection_browse
    ADD CONSTRAINT t_selection_browse_key PRIMARY KEY (ad_pinstance_id, t_selection_id, columnname);


--
-- Name: t_selection t_selection_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_selection
    ADD CONSTRAINT t_selection_pkey PRIMARY KEY (ad_pinstance_id, t_selection_id);


--
-- Name: t_spool t_spool_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_spool
    ADD CONSTRAINT t_spool_pkey PRIMARY KEY (ad_pinstance_id, seqno);


--
-- Name: t_transaction t_transaction_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_transaction
    ADD CONSTRAINT t_transaction_pkey PRIMARY KEY (ad_pinstance_id, m_transaction_id);


--
-- Name: t_trialbalance t_trialbalance_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_trialbalance
    ADD CONSTRAINT t_trialbalance_pkey PRIMARY KEY (ad_pinstance_id, fact_acct_id);


--
-- Name: test test_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.test
    ADD CONSTRAINT test_pkey PRIMARY KEY (test_id);


--
-- Name: u_blacklistcheque u_blacklistcheque_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_blacklistcheque
    ADD CONSTRAINT u_blacklistcheque_pkey PRIMARY KEY (u_blacklistcheque_id);


--
-- Name: u_posterminal u_posterminal_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT u_posterminal_pkey PRIMARY KEY (u_posterminal_id);


--
-- Name: u_rolemenu u_rolemenu_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_rolemenu
    ADD CONSTRAINT u_rolemenu_pkey PRIMARY KEY (u_rolemenu_id);


--
-- Name: u_web_properties u_web_properties_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_web_properties
    ADD CONSTRAINT u_web_properties_pkey PRIMARY KEY (u_web_properties_id);


--
-- Name: u_webmenu u_webmenu_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_webmenu
    ADD CONSTRAINT u_webmenu_pkey PRIMARY KEY (u_webmenu_id);


--
-- Name: w_advertisement w_advertisement_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_advertisement
    ADD CONSTRAINT w_advertisement_pkey PRIMARY KEY (w_advertisement_id);


--
-- Name: w_basket w_basket_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_basket
    ADD CONSTRAINT w_basket_pkey PRIMARY KEY (w_basket_id);


--
-- Name: w_basketline w_basketline_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_basketline
    ADD CONSTRAINT w_basketline_pkey PRIMARY KEY (w_basketline_id);


--
-- Name: w_click w_click_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_click
    ADD CONSTRAINT w_click_pkey PRIMARY KEY (w_click_id);


--
-- Name: w_clickcount w_clickcount_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_clickcount
    ADD CONSTRAINT w_clickcount_pkey PRIMARY KEY (w_clickcount_id);


--
-- Name: w_counter w_counter_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_counter
    ADD CONSTRAINT w_counter_pkey PRIMARY KEY (w_counter_id);


--
-- Name: w_countercount w_countercount_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_countercount
    ADD CONSTRAINT w_countercount_pkey PRIMARY KEY (w_countercount_id);


--
-- Name: w_mailmsg w_mailmsg_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_mailmsg
    ADD CONSTRAINT w_mailmsg_pkey PRIMARY KEY (w_mailmsg_id);


--
-- Name: w_mailmsg_trl w_mailmsg_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_mailmsg_trl
    ADD CONSTRAINT w_mailmsg_trl_pkey PRIMARY KEY (w_mailmsg_id, ad_language);


--
-- Name: w_store w_store_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_store
    ADD CONSTRAINT w_store_pkey PRIMARY KEY (w_store_id);


--
-- Name: w_store_trl w_store_trl_pkey; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_store_trl
    ADD CONSTRAINT w_store_trl_pkey PRIMARY KEY (w_store_id, ad_language);


--
-- Name: wm_area wm_area_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_area
    ADD CONSTRAINT wm_area_key PRIMARY KEY (wm_area_id);


--
-- Name: wm_area_type wm_area_type_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_area_type
    ADD CONSTRAINT wm_area_type_key PRIMARY KEY (wm_area_type_id);


--
-- Name: wm_definition wm_definition_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_definition
    ADD CONSTRAINT wm_definition_key PRIMARY KEY (wm_definition_id);


--
-- Name: wm_inoutbound wm_inoutbound_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT wm_inoutbound_key PRIMARY KEY (wm_inoutbound_id);


--
-- Name: wm_inoutboundline wm_inoutboundline_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT wm_inoutboundline_key PRIMARY KEY (wm_inoutboundline_id);


--
-- Name: wm_inoutboundlinema wm_inoutboundlinema_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundlinema
    ADD CONSTRAINT wm_inoutboundlinema_key PRIMARY KEY (wm_inoutboundlinema_id);


--
-- Name: wm_rule wm_rule_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_rule
    ADD CONSTRAINT wm_rule_key PRIMARY KEY (wm_rule_id);


--
-- Name: wm_section_detail wm_section_detail_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_section_detail
    ADD CONSTRAINT wm_section_detail_key PRIMARY KEY (wm_section_detail_id);


--
-- Name: wm_section wm_section_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_section
    ADD CONSTRAINT wm_section_key PRIMARY KEY (wm_section_id);


--
-- Name: wm_section_type wm_section_type_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_section_type
    ADD CONSTRAINT wm_section_type_key PRIMARY KEY (wm_section_type_id);


--
-- Name: wm_strategy_detail wm_strategy_detail_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_strategy_detail
    ADD CONSTRAINT wm_strategy_detail_key PRIMARY KEY (wm_strategy_detail_id);


--
-- Name: wm_strategy wm_strategy_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_strategy
    ADD CONSTRAINT wm_strategy_key PRIMARY KEY (wm_strategy_id);


--
-- Name: ws_webservice ws_webservice_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservice
    ADD CONSTRAINT ws_webservice_key PRIMARY KEY (ws_webservice_id);


--
-- Name: ws_webservice_para ws_webservice_para_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservice_para
    ADD CONSTRAINT ws_webservice_para_key PRIMARY KEY (ws_webservice_para_id);


--
-- Name: ws_webservicefieldinput ws_webservicefieldinput_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicefieldinput
    ADD CONSTRAINT ws_webservicefieldinput_key PRIMARY KEY (ws_webservicefieldinput_id);


--
-- Name: ws_webservicefieldoutput ws_webservicefieldoutput_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicefieldoutput
    ADD CONSTRAINT ws_webservicefieldoutput_key PRIMARY KEY (ws_webservicefieldoutput_id);


--
-- Name: ws_webservicemethod ws_webservicemethod_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicemethod
    ADD CONSTRAINT ws_webservicemethod_key PRIMARY KEY (ws_webservicemethod_id);


--
-- Name: ws_webservicetype ws_webservicetype_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicetype
    ADD CONSTRAINT ws_webservicetype_key PRIMARY KEY (ws_webservicetype_id);


--
-- Name: ws_webservicetypeaccess ws_webservicetypeaccess_key; Type: CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicetypeaccess
    ADD CONSTRAINT ws_webservicetypeaccess_key PRIMARY KEY (ad_role_id, ws_webservicetype_id);


--
-- Name: a_asset_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX a_asset_value ON adempiere.a_asset USING btree (ad_client_id, value);


--
-- Name: ad_attachment_record; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_attachment_record ON adempiere.ad_attachment USING btree (ad_table_id, record_id);


--
-- Name: ad_changelog_speed; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_changelog_speed ON adempiere.ad_changelog USING btree (ad_table_id, record_id);


--
-- Name: ad_client_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_client_name ON adempiere.ad_client USING btree (name);


--
-- Name: ad_clientshare_table; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_clientshare_table ON adempiere.ad_clientshare USING btree (ad_client_id, ad_table_id);


--
-- Name: ad_column_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_column_name ON adempiere.ad_column USING btree (ad_table_id, columnname);


--
-- Name: ad_element_clientorg; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_element_clientorg ON adempiere.ad_element USING btree (ad_client_id, ad_org_id);


--
-- Name: ad_element_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_element_name ON adempiere.ad_element USING btree (name);


--
-- Name: ad_element_uppercolumnname; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_element_uppercolumnname ON adempiere.ad_element USING btree (upper((columnname)::text));


--
-- Name: ad_field_column; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_field_column ON adempiere.ad_field USING btree (ad_tab_id, ad_column_id);


--
-- Name: ad_fieldgroup_key; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_fieldgroup_key ON adempiere.ad_fieldgroup USING btree (ad_fieldgroup_id);


--
-- Name: ad_impformat_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_impformat_name ON adempiere.ad_impformat USING btree (name);


--
-- Name: ad_ldapprocessorport; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_ldapprocessorport ON adempiere.ad_ldapprocessor USING btree (ldapport);


--
-- Name: ad_message_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_message_value ON adempiere.ad_message USING btree (value);


--
-- Name: ad_note_key; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_note_key ON adempiere.ad_note USING btree (ad_note_id);


--
-- Name: ad_org_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_org_value ON adempiere.ad_org USING btree (ad_client_id, value);


--
-- Name: ad_pinstance_record; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_pinstance_record ON adempiere.ad_pinstance USING btree (ad_process_id, record_id);


--
-- Name: ad_preference_attribute; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_preference_attribute ON adempiere.ad_preference USING btree (ad_client_id, ad_org_id, ad_window_id, ad_user_id, attribute);


--
-- Name: ad_printcolor_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_printcolor_name ON adempiere.ad_printcolor USING btree (ad_client_id, name);


--
-- Name: ad_printfont_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_printfont_name ON adempiere.ad_printfont USING btree (ad_client_id, name);


--
-- Name: ad_printform_client; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_printform_client ON adempiere.ad_printform USING btree (ad_client_id, ad_org_id);


--
-- Name: ad_printformat_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_printformat_name ON adempiere.ad_printformat USING btree (ad_client_id, ad_table_id, name);


--
-- Name: ad_printformat_table; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_printformat_table ON adempiere.ad_printformat USING btree (ad_table_id);


--
-- Name: ad_printformatitem_format; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_printformatitem_format ON adempiere.ad_printformatitem USING btree (ad_printformat_id);


--
-- Name: ad_printpaper_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_printpaper_name ON adempiere.ad_printpaper USING btree (ad_client_id, name);


--
-- Name: ad_process_para_process; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_process_para_process ON adempiere.ad_process_para USING btree (ad_process_id);


--
-- Name: ad_procpara_proccolumnname; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_procpara_proccolumnname ON adempiere.ad_process_para USING btree (ad_process_id, columnname);


--
-- Name: ad_ref_list_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_ref_list_value ON adempiere.ad_ref_list USING btree (ad_reference_id, value);


--
-- Name: ad_reference_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_reference_name ON adempiere.ad_reference USING btree (name);


--
-- Name: ad_replicationstrategy_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_replicationstrategy_value ON adempiere.ad_replicationstrategy USING btree (ad_client_id, value);


--
-- Name: ad_sequence_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_sequence_name ON adempiere.ad_sequence USING btree (ad_client_id, name);


--
-- Name: ad_tab_table; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_tab_table ON adempiere.ad_tab USING btree (ad_table_id);


--
-- Name: ad_tab_window; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_tab_window ON adempiere.ad_tab USING btree (ad_window_id);


--
-- Name: ad_table_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_table_name ON adempiere.ad_table USING btree (tablename);


--
-- Name: ad_task_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_task_name ON adempiere.ad_task USING btree (ad_client_id, name);


--
-- Name: ad_taskinstance_task; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_taskinstance_task ON adempiere.ad_taskinstance USING btree (ad_task_id);


--
-- Name: ad_tree_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_tree_name ON adempiere.ad_tree USING btree (ad_client_id, name);


--
-- Name: ad_treenode_parentid; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_treenode_parentid ON adempiere.ad_treenode USING btree (parent_id);


--
-- Name: ad_treenodebp_parent; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_treenodebp_parent ON adempiere.ad_treenodebp USING btree (parent_id);


--
-- Name: ad_treenodemm_parent; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_treenodemm_parent ON adempiere.ad_treenodemm USING btree (parent_id);


--
-- Name: ad_treenodepr_parent; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_treenodepr_parent ON adempiere.ad_treenodepr USING btree (parent_id);


--
-- Name: ad_user_email; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_user_email ON adempiere.ad_user USING btree (email);


--
-- Name: ad_user_role_key; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_user_role_key ON adempiere.ad_user_roles USING btree (ad_role_id, ad_user_id);


--
-- Name: ad_user_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_user_value ON adempiere.ad_user USING btree (ad_client_id, value);


--
-- Name: ad_wf_activity_item; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_wf_activity_item ON adempiere.ad_wf_activity USING btree (ad_wf_process_id, ad_wf_node_id);


--
-- Name: ad_wf_activity_status; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_wf_activity_status ON adempiere.ad_wf_activity USING btree (wfstate, processed);


--
-- Name: ad_wf_activity_who; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_wf_activity_who ON adempiere.ad_wf_activity USING btree (ad_wf_responsible_id, ad_user_id);


--
-- Name: ad_wf_eventaudit_parent; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_wf_eventaudit_parent ON adempiere.ad_wf_eventaudit USING btree (ad_wf_process_id, ad_wf_node_id);


--
-- Name: ad_wf_node_workflow; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_wf_node_workflow ON adempiere.ad_wf_node USING btree (ad_workflow_id);


--
-- Name: ad_wf_process_workflow; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_wf_process_workflow ON adempiere.ad_wf_process USING btree (ad_workflow_id);


--
-- Name: ad_wf_processdata_process; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX ad_wf_processdata_process ON adempiere.ad_wf_processdata USING btree (ad_wf_process_id);


--
-- Name: ad_window_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_window_name ON adempiere.ad_window USING btree (ad_client_id, name);


--
-- Name: ad_workflow_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ad_workflow_name ON adempiere.ad_workflow USING btree (ad_client_id, name);


--
-- Name: c_acctschema_element_schema; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_acctschema_element_schema ON adempiere.c_acctschema_element USING btree (c_acctschema_id);


--
-- Name: c_acctschema_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_acctschema_name ON adempiere.c_acctschema USING btree (ad_client_id, name);


--
-- Name: c_activity_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_activity_value ON adempiere.c_activity USING btree (ad_client_id, value);


--
-- Name: c_allocationline_invoice; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_allocationline_invoice ON adempiere.c_allocationline USING btree (c_invoice_id);


--
-- Name: c_allocationline_payment; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_allocationline_payment ON adempiere.c_allocationline USING btree (c_payment_id);


--
-- Name: c_bankacct_bank; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_bankacct_bank ON adempiere.c_bankaccount USING btree (c_bank_id);


--
-- Name: c_bankstmtline_bankstmt; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_bankstmtline_bankstmt ON adempiere.c_bankstatementline USING btree (c_bankstatement_id);


--
-- Name: c_bp_group_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_bp_group_value ON adempiere.c_bp_group USING btree (ad_client_id, value);


--
-- Name: c_bpartner_bporg; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_bpartner_bporg ON adempiere.c_bpartner USING btree (ad_orgbp_id);


--
-- Name: c_bpartner_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_bpartner_name ON adempiere.c_bpartner USING btree (name);


--
-- Name: c_bpartner_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_bpartner_value ON adempiere.c_bpartner USING btree (ad_client_id, value);


--
-- Name: c_bpbankacct_bpartner; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_bpbankacct_bpartner ON adempiere.c_bp_bankaccount USING btree (c_bpartner_id);


--
-- Name: c_bplocation_bpartner; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_bplocation_bpartner ON adempiere.c_bpartner_location USING btree (c_bpartner_id);


--
-- Name: c_bplocation_updated; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_bplocation_updated ON adempiere.c_bpartner_location USING btree (updated);


--
-- Name: c_calendar_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_calendar_name ON adempiere.c_calendar USING btree (ad_client_id, name);


--
-- Name: c_campaign_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_campaign_value ON adempiere.c_campaign USING btree (ad_client_id, value);


--
-- Name: c_cashline_cash; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_cashline_cash ON adempiere.c_cashline USING btree (c_cash_id);


--
-- Name: c_channel_key; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_channel_key ON adempiere.c_channel USING btree (c_channel_id);


--
-- Name: c_channel_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_channel_name ON adempiere.c_channel USING btree (ad_client_id, name);


--
-- Name: c_charge_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_charge_name ON adempiere.c_charge USING btree (ad_client_id, name);


--
-- Name: c_commissionamt_comline; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_commissionamt_comline ON adempiere.c_commissionamt USING btree (c_commissionline_id);


--
-- Name: c_commissionamt_run; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_commissionamt_run ON adempiere.c_commissionamt USING btree (c_commissionrun_id);


--
-- Name: c_commissionline_commission; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_commissionline_commission ON adempiere.c_commissionline USING btree (c_commission_id);


--
-- Name: c_conversionrate_once; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_conversionrate_once ON adempiere.c_conversion_rate USING btree (ad_client_id, ad_org_id, c_currency_id, c_currency_id_to, c_conversiontype_id, validfrom);


--
-- Name: c_countrycode; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_countrycode ON adempiere.c_country USING btree (countrycode);


--
-- Name: c_currencyisocode; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_currencyisocode ON adempiere.c_currency USING btree (iso_code);


--
-- Name: c_cycle_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_cycle_name ON adempiere.c_cycle USING btree (ad_client_id, name);


--
-- Name: c_doctype_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_doctype_name ON adempiere.c_doctype USING btree (ad_client_id, name);


--
-- Name: c_element_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_element_name ON adempiere.c_element USING btree (ad_client_id, name);


--
-- Name: c_elementvalue_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_elementvalue_name ON adempiere.c_elementvalue USING btree (name);


--
-- Name: c_elementvalue_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_elementvalue_value ON adempiere.c_elementvalue USING btree (c_element_id, value);


--
-- Name: c_invoice_documentno; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_invoice_documentno ON adempiere.c_invoice USING btree (documentno, c_doctype_id, c_bpartner_id);


--
-- Name: c_invoice_documentno_target; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_invoice_documentno_target ON adempiere.c_invoice USING btree (c_bpartner_id, documentno, c_doctypetarget_id);


--
-- Name: c_invoice_key; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_invoice_key ON adempiere.c_invoice USING btree (c_invoice_id);


--
-- Name: c_invoice_order; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_invoice_order ON adempiere.c_invoice USING btree (c_order_id);


--
-- Name: c_invoice_paid; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_invoice_paid ON adempiere.c_invoice USING btree (ad_client_id, ispaid);


--
-- Name: c_invoiceline_invoice; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_invoiceline_invoice ON adempiere.c_invoiceline USING btree (c_invoice_id);


--
-- Name: c_invoiceline_orderline; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_invoiceline_orderline ON adempiere.c_invoiceline USING btree (c_orderline_id);


--
-- Name: c_invoiceline_product; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_invoiceline_product ON adempiere.c_invoiceline USING btree (m_product_id);


--
-- Name: c_invoicepayschedule_invoice; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_invoicepayschedule_invoice ON adempiere.c_invoicepayschedule USING btree (c_invoice_id);


--
-- Name: c_order_bpartner; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_order_bpartner ON adempiere.c_order USING btree (c_bpartner_id);


--
-- Name: c_order_documentno; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_order_documentno ON adempiere.c_order USING btree (documentno, c_doctype_id, c_bpartner_id);


--
-- Name: c_order_processed; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_order_processed ON adempiere.c_order USING btree (ad_client_id, processed);


--
-- Name: c_orderline_order; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_orderline_order ON adempiere.c_orderline USING btree (c_order_id);


--
-- Name: c_orderline_product; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_orderline_product ON adempiere.c_orderline USING btree (m_product_id);


--
-- Name: c_payment_bankaccount; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_payment_bankaccount ON adempiere.c_payment USING btree (c_bankaccount_id);


--
-- Name: c_payment_bpartner; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_payment_bpartner ON adempiere.c_payment USING btree (c_bpartner_id);


--
-- Name: c_paymentprocessor_key; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_paymentprocessor_key ON adempiere.c_paymentprocessor USING btree (c_paymentprocessor_id);


--
-- Name: c_paymentterm_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_paymentterm_name ON adempiere.c_paymentterm USING btree (ad_client_id, name);


--
-- Name: c_payselline_paysel; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_payselline_paysel ON adempiere.c_payselectionline USING btree (c_payselection_id);


--
-- Name: c_period_nounique; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_period_nounique ON adempiere.c_period USING btree (c_year_id, periodno);


--
-- Name: c_project_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_project_value ON adempiere.c_project USING btree (ad_client_id, value);


--
-- Name: c_region_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_region_name ON adempiere.c_region USING btree (c_country_id, name);


--
-- Name: c_revenuerecognition_key; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_revenuerecognition_key ON adempiere.c_revenuerecognition USING btree (c_revenuerecognition_id);


--
-- Name: c_salesregion_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_salesregion_value ON adempiere.c_salesregion USING btree (ad_client_id, value);


--
-- Name: c_tax_key; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_tax_key ON adempiere.c_tax USING btree (c_tax_id);


--
-- Name: c_tax_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_tax_name ON adempiere.c_tax USING btree (ad_client_id, name);


--
-- Name: c_taxcategory_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_taxcategory_name ON adempiere.c_taxcategory USING btree (ad_client_id, name);


--
-- Name: c_uom_conversion_product; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_uom_conversion_product ON adempiere.c_uom_conversion USING btree (c_uom_id, c_uom_to_id, m_product_id);


--
-- Name: c_uom_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_uom_name ON adempiere.c_uom USING btree (ad_client_id, name);


--
-- Name: c_uom_x12; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_uom_x12 ON adempiere.c_uom USING btree (x12de355);


--
-- Name: c_validcombination_alias; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX c_validcombination_alias ON adempiere.c_validcombination USING btree (ad_client_id, alias);


--
-- Name: c_validcombination_alt; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_validcombination_alt ON adempiere.c_validcombination USING btree (c_acctschema_id, ad_org_id, account_id, c_subacct_id, m_product_id, c_bpartner_id, ad_orgtrx_id, c_locfrom_id, c_locto_id, c_salesregion_id, c_project_id, c_campaign_id, c_activity_id, user1_id, user2_id, userelement1_id, userelement2_id);


--
-- Name: c_year_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX c_year_name ON adempiere.c_year USING btree (c_calendar_id, fiscalyear);


--
-- Name: cm_chattype_table; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX cm_chattype_table ON adempiere.cm_chattype USING btree (ad_client_id, ad_table_id);


--
-- Name: cm_cstage_element_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX cm_cstage_element_name ON adempiere.cm_cstage_element USING btree (cm_cstage_id, name);


--
-- Name: cordersource_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX cordersource_value ON adempiere.c_ordersource USING btree (ad_client_id, value);


--
-- Name: fact_acct_account; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX fact_acct_account ON adempiere.fact_acct USING btree (ad_client_id, ad_org_id, c_acctschema_id, account_id);


--
-- Name: fact_acct_dateacct; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX fact_acct_dateacct ON adempiere.fact_acct USING btree (dateacct);


--
-- Name: fact_acct_trunc_dateacct; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX fact_acct_trunc_dateacct ON adempiere.fact_acct USING btree (((dateacct)::date));


--
-- Name: fact_matchcode; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX fact_matchcode ON adempiere.fact_reconciliation USING btree (matchcode);


--
-- Name: fas_account; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX fas_account ON adempiere.fact_acct_summary USING btree (ad_client_id, ad_org_id, c_acctschema_id, account_id);


--
-- Name: fas_dateacct; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX fas_dateacct ON adempiere.fact_acct_summary USING btree (dateacct);


--
-- Name: fas_period; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX fas_period ON adempiere.fact_acct_summary USING btree (c_period_id);


--
-- Name: fas_reportcube; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX fas_reportcube ON adempiere.fact_acct_summary USING btree (pa_reportcube_id);


--
-- Name: fki_pa_reportcolumn_pareportsource; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX fki_pa_reportcolumn_pareportsource ON adempiere.pa_reportsource USING btree (pa_reportcolumn_id);


--
-- Name: gl_budget_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX gl_budget_name ON adempiere.gl_budget USING btree (ad_client_id, name);


--
-- Name: gl_category_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX gl_category_name ON adempiere.gl_category USING btree (ad_client_id, name);


--
-- Name: gl_journal_docno; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX gl_journal_docno ON adempiere.gl_journal USING btree (ad_org_id, c_period_id, documentno);


--
-- Name: gl_journalbatch_docno; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX gl_journalbatch_docno ON adempiere.gl_journalbatch USING btree (ad_org_id, c_period_id, documentno);


--
-- Name: gl_journalline_key; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX gl_journalline_key ON adempiere.gl_journalline USING btree (gl_journalline_id);


--
-- Name: hr_contract_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX hr_contract_value ON adempiere.hr_contract USING btree (ad_client_id, value);


--
-- Name: idx_hr_movement_c_bpartner_id; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX idx_hr_movement_c_bpartner_id ON adempiere.hr_movement USING btree (c_bpartner_id);


--
-- Name: idx_hr_movement_hr_concept_id; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX idx_hr_movement_hr_concept_id ON adempiere.hr_movement USING btree (hr_concept_id);


--
-- Name: idx_hr_movement_servicedate; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX idx_hr_movement_servicedate ON adempiere.hr_movement USING btree (servicedate);


--
-- Name: idx_hr_movement_validfrom; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX idx_hr_movement_validfrom ON adempiere.hr_movement USING btree (validfrom);


--
-- Name: k_index_keyword; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX k_index_keyword ON adempiere.k_index USING btree (ad_client_id, keyword);


--
-- Name: k_indexstop_keyword; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX k_indexstop_keyword ON adempiere.k_indexstop USING btree (ad_client_id, keyword);


--
-- Name: m_bom_productversiontype; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_bom_productversiontype ON adempiere.m_bom USING btree (m_product_id, m_changenotice_id);


--
-- Name: m_costdetail_asi; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_costdetail_asi ON adempiere.m_costdetail USING btree (m_attributesetinstance_id);


--
-- Name: m_costdetail_product; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_costdetail_product ON adempiere.m_costdetail USING btree (m_product_id, processed);


--
-- Name: m_costqueue_product; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_costqueue_product ON adempiere.m_costqueue USING btree (c_acctschema_id, m_product_id, m_costelement_id);


--
-- Name: m_edi_trx; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_edi_trx ON adempiere.m_edi USING btree (c_bp_edi_id, documentno, line);


--
-- Name: m_freightcat_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_freightcat_value ON adempiere.m_freightcategory USING btree (ad_client_id, value);


--
-- Name: m_inout_bpartner; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_inout_bpartner ON adempiere.m_inout USING btree (c_bpartner_id);


--
-- Name: m_inout_documentno; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_inout_documentno ON adempiere.m_inout USING btree (documentno);


--
-- Name: m_inout_order; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_inout_order ON adempiere.m_inout USING btree (c_order_id);


--
-- Name: m_inoutline_inout; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_inoutline_inout ON adempiere.m_inoutline USING btree (m_inout_id);


--
-- Name: m_inoutline_product; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_inoutline_product ON adempiere.m_inoutline USING btree (m_product_id);


--
-- Name: m_inventoryline_productlocattr; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_inventoryline_productlocattr ON adempiere.m_inventoryline USING btree (m_inventory_id, m_locator_id, m_product_id, m_attributesetinstance_id);


--
-- Name: m_location_where; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_location_where ON adempiere.m_locator USING btree (m_warehouse_id, x, y, z);


--
-- Name: m_matchinv_ship; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_matchinv_ship ON adempiere.m_matchinv USING btree (c_invoiceline_id, m_inoutline_id);


--
-- Name: m_matchpo_ship; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_matchpo_ship ON adempiere.m_matchpo USING btree (c_orderline_id, m_inoutline_id);


--
-- Name: m_movementline_movement; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_movementline_movement ON adempiere.m_movementline USING btree (m_movement_id);


--
-- Name: m_pricelist_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_pricelist_name ON adempiere.m_pricelist USING btree (ad_client_id, name);


--
-- Name: m_product_category_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_product_category_value ON adempiere.m_product_category USING btree (ad_client_id, value);


--
-- Name: m_product_expensetype; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_product_expensetype ON adempiere.m_product USING btree (s_expensetype_id);


--
-- Name: m_product_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_product_name ON adempiere.m_product USING btree (name);


--
-- Name: m_product_po_vendorprodno; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_product_po_vendorprodno ON adempiere.m_product_po USING btree (c_bpartner_id, vendorproductno);


--
-- Name: m_product_productcategory; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_product_productcategory ON adempiere.m_product USING btree (m_product_category_id);


--
-- Name: m_product_resource; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_product_resource ON adempiere.m_product USING btree (s_resource_id);


--
-- Name: m_product_upc; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_product_upc ON adempiere.m_product USING btree (upc);


--
-- Name: m_product_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_product_value ON adempiere.m_product USING btree (ad_client_id, value);


--
-- Name: m_productionline_key; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_productionline_key ON adempiere.m_productionline USING btree (m_productionline_id);


--
-- Name: m_productionline_prodplan; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_productionline_prodplan ON adempiere.m_productionline USING btree (m_productionplan_id);


--
-- Name: m_productionplan_production; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_productionplan_production ON adempiere.m_productionplan USING btree (m_production_id);


--
-- Name: m_shipper_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_shipper_name ON adempiere.m_shipper USING btree (ad_client_id, name);


--
-- Name: m_transactionallocation_prd; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_transactionallocation_prd ON adempiere.m_transactionallocation USING btree (m_product_id, m_attributesetinstance_id, isallocated);


--
-- Name: m_transsaction_product; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX m_transsaction_product ON adempiere.m_transaction USING btree (m_product_id);


--
-- Name: m_warehouse_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX m_warehouse_name ON adempiere.m_warehouse USING btree (ad_client_id, name);


--
-- Name: pp_order_bomlinema_key; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX pp_order_bomlinema_key ON adempiere.pp_cost_collectorma USING btree (pp_cost_collectorma_id);


--
-- Name: ppproductbomunique; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX ppproductbomunique ON adempiere.pp_product_bom USING btree (ad_client_id, value);


--
-- Name: r_issueproject_name; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX r_issueproject_name ON adempiere.r_issueproject USING btree (name);


--
-- Name: r_issuesource_spo; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX r_issuesource_spo ON adempiere.r_issuesource USING btree (r_issuesystem_id, r_issueproject_id, r_issueuser_id);


--
-- Name: r_issuesystem_address; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX r_issuesystem_address ON adempiere.r_issuesystem USING btree (dbaddress);


--
-- Name: r_issueuser_email; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX r_issueuser_email ON adempiere.r_issueuser USING btree (username, ad_client_id);


--
-- Name: r_knownissue_alt; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX r_knownissue_alt ON adempiere.r_issueknown USING btree (issuesummary, releaseno, sourceclassname, sourcemethodname, loggername, lineno);


--
-- Name: r_request_bpartner; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX r_request_bpartner ON adempiere.r_request USING btree (c_bpartner_id);


--
-- Name: r_request_user; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX r_request_user ON adempiere.r_request USING btree (ad_user_id);


--
-- Name: trec_matchcode; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX trec_matchcode ON adempiere.t_reconciliation USING btree (matchcode);


--
-- Name: u_posterminal_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX u_posterminal_value ON adempiere.u_posterminal USING btree (ad_client_id, value);


--
-- Name: uk_hr_concept_value; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX uk_hr_concept_value ON adempiere.hr_concept USING btree (ad_client_id, value);


--
-- Name: w_basket_cbpartner; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE INDEX w_basket_cbpartner ON adempiere.w_basket USING btree (c_bpartner_id);


--
-- Name: w_basket_session; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX w_basket_session ON adempiere.w_basket USING btree (session_id);


--
-- Name: w_clickcount_targeturl; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX w_clickcount_targeturl ON adempiere.w_clickcount USING btree (ad_client_id, targeturl);


--
-- Name: w_countercount_pageurl; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX w_countercount_pageurl ON adempiere.w_countercount USING btree (ad_client_id, pageurl);


--
-- Name: w_mailmsg_wstore; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX w_mailmsg_wstore ON adempiere.w_mailmsg USING btree (w_store_id, mailmsgtype);


--
-- Name: w_store_webcontext; Type: INDEX; Schema: adempiere; Owner: adempiere
--

CREATE UNIQUE INDEX w_store_webcontext ON adempiere.w_store USING btree (webcontext);


--
-- Name: t_alter_column alter_column_rule; Type: RULE; Schema: adempiere; Owner: adempiere
--

CREATE RULE alter_column_rule AS
    ON INSERT TO adempiere.t_alter_column DO INSTEAD  SELECT adempiere.altercolumn(new.tablename, new.columnname, new.datatype, new.nullclause, new.defaultclause) AS altercolumn;


--
-- Name: a_asset_change aaaddition_aachange; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change
    ADD CONSTRAINT aaaddition_aachange FOREIGN KEY (a_asset_addition_id) REFERENCES adempiere.a_asset_addition(a_asset_addition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_change aaretirement_aachange; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change
    ADD CONSTRAINT aaretirement_aachange FOREIGN KEY (a_asset_retirement_id) REFERENCES adempiere.a_asset_retirement(a_asset_retirement_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_acct aasset_aassetacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_acct
    ADD CONSTRAINT aasset_aassetacct FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_addition aasset_aassetaddition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT aasset_aassetaddition FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_change aasset_aassetchange; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change
    ADD CONSTRAINT aasset_aassetchange FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_delivery aasset_aassetdelivery; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_delivery
    ADD CONSTRAINT aasset_aassetdelivery FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_disposed aasset_aassetdisposed; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_disposed
    ADD CONSTRAINT aasset_aassetdisposed FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_info_fin aasset_aassetinfofin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_info_fin
    ADD CONSTRAINT aasset_aassetinfofin FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_info_lic aasset_aassetinfolic; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_info_lic
    ADD CONSTRAINT aasset_aassetinfolic FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_product aasset_aassetproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_product
    ADD CONSTRAINT aasset_aassetproduct FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_retirement aasset_aassetretirement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_retirement
    ADD CONSTRAINT aasset_aassetretirement FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_reval aasset_aassetreval; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_reval
    ADD CONSTRAINT aasset_aassetreval FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_transfer aasset_aassettransfer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_transfer
    ADD CONSTRAINT aasset_aassettransfer FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_use aasset_aassetuse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_use
    ADD CONSTRAINT aasset_aassetuse FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_exp aasset_adepreciationexp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_exp
    ADD CONSTRAINT aasset_adepreciationexp FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_workfile aasset_adepreciationworkfile; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_workfile
    ADD CONSTRAINT aasset_adepreciationworkfile FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_issue aasset_adissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_issue
    ADD CONSTRAINT aasset_adissue FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_registration aasset_aregistration; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registration
    ADD CONSTRAINT aasset_aregistration FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline aasset_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT aasset_cinvoiceline FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_compartment aasset_ddcompartment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_compartment
    ADD CONSTRAINT aasset_ddcompartment FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_transportunit aasset_ddtransportunit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportunit
    ADD CONSTRAINT aasset_ddtransportunit FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_vehicle aasset_ddvehicle; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_vehicle
    ADD CONSTRAINT aasset_ddvehicle FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct aasset_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT aasset_factacct FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline aasset_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT aasset_gljournalline FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget aasset_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT aasset_ibudget FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fixedasset aasset_ifixedasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fixedasset
    ADD CONSTRAINT aasset_ifixedasset FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_operationresource aasset_moperationresource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_operationresource
    ADD CONSTRAINT aasset_moperationresource FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node_asset aasset_ppordernodeasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node_asset
    ADD CONSTRAINT aasset_ppordernodeasset FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_wf_node_asset aasset_ppwfnodeasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_wf_node_asset
    ADD CONSTRAINT aasset_ppwfnodeasset FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_issueproject aasset_rissueproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issueproject
    ADD CONSTRAINT aasset_rissueproject FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_issuesystem aasset_rissuesystem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issuesystem
    ADD CONSTRAINT aasset_rissuesystem FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request aasset_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT aasset_rrequest FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction aasset_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT aasset_rrequestaction FOREIGN KEY (a_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_exp aassetaddition_adepreciationex; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_exp
    ADD CONSTRAINT aassetaddition_adepreciationex FOREIGN KEY (a_asset_addition_id) REFERENCES adempiere.a_asset_addition(a_asset_addition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_change_amt aassetchange_aassetchangeamt; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change_amt
    ADD CONSTRAINT aassetchange_aassetchangeamt FOREIGN KEY (a_asset_change_id) REFERENCES adempiere.a_asset_change(a_asset_change_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset aassetclass_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT aassetclass_aasset FOREIGN KEY (a_asset_class_id) REFERENCES adempiere.a_asset_class(a_asset_class_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_group aassetclass_aassetgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_group
    ADD CONSTRAINT aassetclass_aassetgroup FOREIGN KEY (a_asset_class_id) REFERENCES adempiere.a_asset_class(a_asset_class_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fixedasset aassetclass_ifixedasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fixedasset
    ADD CONSTRAINT aassetclass_ifixedasset FOREIGN KEY (a_asset_class_id) REFERENCES adempiere.a_asset_class(a_asset_class_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_exp aassetdisposed_adepreciationex; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_exp
    ADD CONSTRAINT aassetdisposed_adepreciationex FOREIGN KEY (a_asset_disposed_id) REFERENCES adempiere.a_asset_disposed(a_asset_disposed_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset aassetgroup_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT aassetgroup_aasset FOREIGN KEY (a_asset_group_id) REFERENCES adempiere.a_asset_group(a_asset_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_group_acct aassetgroup_aassetgroupacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_group_acct
    ADD CONSTRAINT aassetgroup_aassetgroupacct FOREIGN KEY (a_asset_group_id) REFERENCES adempiere.a_asset_group(a_asset_group_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline aassetgroup_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT aassetgroup_cinvoiceline FOREIGN KEY (a_asset_group_id) REFERENCES adempiere.a_asset_group(a_asset_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline aassetgroup_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT aassetgroup_gljournalline FOREIGN KEY (a_asset_group_id) REFERENCES adempiere.a_asset_group(a_asset_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_asset aassetgroup_iasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_asset
    ADD CONSTRAINT aassetgroup_iasset FOREIGN KEY (a_asset_group_id) REFERENCES adempiere.a_asset_group(a_asset_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fixedasset aassetgroup_ifixedasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fixedasset
    ADD CONSTRAINT aassetgroup_ifixedasset FOREIGN KEY (a_asset_group_id) REFERENCES adempiere.a_asset_group(a_asset_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category aassetgroup_mproductcategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category
    ADD CONSTRAINT aassetgroup_mproductcategory FOREIGN KEY (a_asset_group_id) REFERENCES adempiere.a_asset_group(a_asset_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_acct aassetspread_aassetacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_acct
    ADD CONSTRAINT aassetspread_aassetacct FOREIGN KEY (a_asset_spread_id) REFERENCES adempiere.a_asset_spread(a_asset_spread_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_disposed aassettrade_aassetdisposed; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_disposed
    ADD CONSTRAINT aassettrade_aassetdisposed FOREIGN KEY (a_asset_trade_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset aassettype_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT aassettype_aasset FOREIGN KEY (a_asset_type_id) REFERENCES adempiere.a_asset_type(a_asset_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_group aassettype_aassetgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_group
    ADD CONSTRAINT aassettype_aassetgroup FOREIGN KEY (a_asset_type_id) REFERENCES adempiere.a_asset_type(a_asset_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fixedasset aassettype_ifixedasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fixedasset
    ADD CONSTRAINT aassettype_ifixedasset FOREIGN KEY (a_asset_type_id) REFERENCES adempiere.a_asset_type(a_asset_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct ac_client_fact_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT ac_client_fact_acct FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary account_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT account_factacctsummary FOREIGN KEY (account_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline account_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT account_gljournalline FOREIGN KEY (account_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal account_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT account_ifajournal FOREIGN KEY (account_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema ad_client_c_acctschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema
    ADD CONSTRAINT ad_client_c_acctschema FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab ad_column_ad_tab; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab
    ADD CONSTRAINT ad_column_ad_tab FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_field ad_column_field; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field
    ADD CONSTRAINT ad_column_field FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_table ad_column_reftable_display; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_table
    ADD CONSTRAINT ad_column_reftable_display FOREIGN KEY (ad_display) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_table ad_column_reftable_id; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_table
    ADD CONSTRAINT ad_column_reftable_id FOREIGN KEY (ad_key) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table_access ad_dataaccessclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_access
    ADD CONSTRAINT ad_dataaccessclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table_access ad_dataaccessorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_access
    ADD CONSTRAINT ad_dataaccessorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column ad_element_ad_column; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column
    ADD CONSTRAINT ad_element_ad_column FOREIGN KEY (ad_element_id) REFERENCES adempiere.ad_element(ad_element_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_field_trl ad_fieldtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field_trl
    ADD CONSTRAINT ad_fieldtrl FOREIGN KEY (ad_field_id) REFERENCES adempiere.ad_field(ad_field_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_window_access ad_functaccess_client; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window_access
    ADD CONSTRAINT ad_functaccess_client FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_window_access ad_functaccessorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window_access
    ADD CONSTRAINT ad_functaccessorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_element_trl ad_language_ad_element_trl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_element_trl
    ADD CONSTRAINT ad_language_ad_element_trl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_trl ad_language_ad_process_trl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_trl
    ADD CONSTRAINT ad_language_ad_process_trl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner ad_language_c_buspartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT ad_language_c_buspartner FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_field_trl ad_language_fieldtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field_trl
    ADD CONSTRAINT ad_language_fieldtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_menu_trl ad_language_menutrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu_trl
    ADD CONSTRAINT ad_language_menutrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_message_trl ad_language_messagetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_message_trl
    ADD CONSTRAINT ad_language_messagetrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_reference_trl ad_language_referencetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reference_trl
    ADD CONSTRAINT ad_language_referencetrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_list_trl ad_language_reflisttrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_list_trl
    ADD CONSTRAINT ad_language_reflisttrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab_trl ad_language_tabtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab_trl
    ADD CONSTRAINT ad_language_tabtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_task_trl ad_language_tasktrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_task_trl
    ADD CONSTRAINT ad_language_tasktrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node_trl ad_language_wfnodetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node_trl
    ADD CONSTRAINT ad_language_wfnodetrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_window_trl ad_language_windowtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window_trl
    ADD CONSTRAINT ad_language_windowtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow_trl ad_language_workflowtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow_trl
    ADD CONSTRAINT ad_language_workflowtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_menu ad_menu_org; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu
    ADD CONSTRAINT ad_menu_org FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_menu_trl ad_menutrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu_trl
    ADD CONSTRAINT ad_menutrl FOREIGN KEY (ad_menu_id) REFERENCES adempiere.ad_menu(ad_menu_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_message_trl ad_messagetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_message_trl
    ADD CONSTRAINT ad_messagetrl FOREIGN KEY (ad_message_id) REFERENCES adempiere.ad_message(ad_message_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_org ad_org__ad_repli_ad_replica; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_org
    ADD CONSTRAINT ad_org__ad_repli_ad_replica FOREIGN KEY (ad_replicationstrategy_id) REFERENCES adempiere.ad_replicationstrategy(ad_replicationstrategy_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema ad_org_c_acctschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema
    ADD CONSTRAINT ad_org_c_acctschema FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct ad_org_fact_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT ad_org_fact_acct FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product ad_org_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT ad_org_mproduct FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct ad_orgtrx_fact_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT ad_orgtrx_fact_acct FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_trialbalance ad_pinstance_t_trialbalance; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_trialbalance
    ADD CONSTRAINT ad_pinstance_t_trialbalance FOREIGN KEY (ad_pinstance_id) REFERENCES adempiere.ad_pinstance(ad_pinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_preference ad_preference_client; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_preference
    ADD CONSTRAINT ad_preference_client FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_preference ad_preference_org; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_preference
    ADD CONSTRAINT ad_preference_org FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformat ad_printfont_adprintformat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformat
    ADD CONSTRAINT ad_printfont_adprintformat FOREIGN KEY (ad_printfont_id) REFERENCES adempiere.ad_printfont(ad_printfont_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_trl ad_process_ad_process_trl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_trl
    ADD CONSTRAINT ad_process_ad_process_trl FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_access ad_processaccess_client; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_access
    ADD CONSTRAINT ad_processaccess_client FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_access ad_processtaccess_org; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_access
    ADD CONSTRAINT ad_processtaccess_org FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column ad_reference_columndatatype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column
    ADD CONSTRAINT ad_reference_columndatatype FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column ad_reference_columnvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column
    ADD CONSTRAINT ad_reference_columnvalue FOREIGN KEY (ad_reference_value_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_list ad_reference_reflist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_list
    ADD CONSTRAINT ad_reference_reflist FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_table ad_reference_reftable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_table
    ADD CONSTRAINT ad_reference_reftable FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_reference_trl ad_referencetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reference_trl
    ADD CONSTRAINT ad_referencetrl FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_list ad_reflist_client; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_list
    ADD CONSTRAINT ad_reflist_client FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_list ad_reflist_org; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_list
    ADD CONSTRAINT ad_reflist_org FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_list_trl ad_reflisttrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_list_trl
    ADD CONSTRAINT ad_reflisttrl FOREIGN KEY (ad_ref_list_id) REFERENCES adempiere.ad_ref_list(ad_ref_list_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_role_included ad_role_included_parent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_role_included
    ADD CONSTRAINT ad_role_included_parent FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_role_included ad_role_included_role; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_role_included
    ADD CONSTRAINT ad_role_included_role FOREIGN KEY (included_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_role ad_roleclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_role
    ADD CONSTRAINT ad_roleclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_role ad_roleorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_role
    ADD CONSTRAINT ad_roleorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_doctype ad_sequence_doctypedoc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctype
    ADD CONSTRAINT ad_sequence_doctypedoc FOREIGN KEY (docnosequence_id) REFERENCES adempiere.ad_sequence(ad_sequence_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_sequence_audit ad_sequence_sequenceaudit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sequence_audit
    ADD CONSTRAINT ad_sequence_sequenceaudit FOREIGN KEY (ad_sequence_id) REFERENCES adempiere.ad_sequence(ad_sequence_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_sequence_no ad_sequence_sequenceno; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sequence_no
    ADD CONSTRAINT ad_sequence_sequenceno FOREIGN KEY (ad_sequence_id) REFERENCES adempiere.ad_sequence(ad_sequence_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_field ad_tab_field; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field
    ADD CONSTRAINT ad_tab_field FOREIGN KEY (ad_tab_id) REFERENCES adempiere.ad_tab(ad_tab_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column ad_table_column; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column
    ADD CONSTRAINT ad_table_column FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab ad_table_tab; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab
    ADD CONSTRAINT ad_table_tab FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab_trl ad_tabtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab_trl
    ADD CONSTRAINT ad_tabtrl FOREIGN KEY (ad_tab_id) REFERENCES adempiere.ad_tab(ad_tab_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_taskinstance ad_task_taskinstance; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_taskinstance
    ADD CONSTRAINT ad_task_taskinstance FOREIGN KEY (ad_task_id) REFERENCES adempiere.ad_task(ad_task_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_task_access ad_taskaccess_client; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_task_access
    ADD CONSTRAINT ad_taskaccess_client FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_task_access ad_taskaccess_org; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_task_access
    ADD CONSTRAINT ad_taskaccess_org FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_task_trl ad_tasktrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_task_trl
    ADD CONSTRAINT ad_tasktrl FOREIGN KEY (ad_task_id) REFERENCES adempiere.ad_task(ad_task_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user ad_user_client; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user
    ADD CONSTRAINT ad_user_client FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user ad_user_org; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user
    ADD CONSTRAINT ad_user_org FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_preference ad_user_preference; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_preference
    ADD CONSTRAINT ad_user_preference FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user_roles ad_userrolesclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user_roles
    ADD CONSTRAINT ad_userrolesclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user_roles ad_userrolesorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user_roles
    ADD CONSTRAINT ad_userrolesorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column ad_valrule_column; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column
    ADD CONSTRAINT ad_valrule_column FOREIGN KEY (ad_val_rule_id) REFERENCES adempiere.ad_val_rule(ad_val_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table ad_valrule_table; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table
    ADD CONSTRAINT ad_valrule_table FOREIGN KEY (ad_val_rule_id) REFERENCES adempiere.ad_val_rule(ad_val_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node_trl ad_wfnodetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node_trl
    ADD CONSTRAINT ad_wfnodetrl FOREIGN KEY (ad_wf_node_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_preference ad_window_preference; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_preference
    ADD CONSTRAINT ad_window_preference FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab ad_window_tab; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab
    ADD CONSTRAINT ad_window_tab FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table ad_window_table; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table
    ADD CONSTRAINT ad_window_table FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_window_trl ad_windowtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window_trl
    ADD CONSTRAINT ad_windowtrl FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow_access ad_workflowaccess_client; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow_access
    ADD CONSTRAINT ad_workflowaccess_client FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow_access ad_workflowaccess_org; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow_access
    ADD CONSTRAINT ad_workflowaccess_org FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow_trl ad_workflowtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow_trl
    ADD CONSTRAINT ad_workflowtrl FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_alertrecipient adalert_adalertrecipient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_alertrecipient
    ADD CONSTRAINT adalert_adalertrecipient FOREIGN KEY (ad_alert_id) REFERENCES adempiere.ad_alert(ad_alert_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_alertrule adaltert_aralertrule; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_alertrule
    ADD CONSTRAINT adaltert_aralertrule FOREIGN KEY (ad_alert_id) REFERENCES adempiere.ad_alert(ad_alert_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_attachmentnote adattachment_note; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_attachmentnote
    ADD CONSTRAINT adattachment_note FOREIGN KEY (ad_attachment_id) REFERENCES adempiere.ad_attachment(ad_attachment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_attribute_value adattribute_adattributevalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_attribute_value
    ADD CONSTRAINT adattribute_adattributevalue FOREIGN KEY (ad_attribute_id) REFERENCES adempiere.ad_attribute(ad_attribute_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_access adbrowse_adbrowseaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_access
    ADD CONSTRAINT adbrowse_adbrowseaccess FOREIGN KEY (ad_browse_id) REFERENCES adempiere.ad_browse(ad_browse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_field adbrowse_adbrowsefield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_field
    ADD CONSTRAINT adbrowse_adbrowsefield FOREIGN KEY (ad_browse_id) REFERENCES adempiere.ad_browse(ad_browse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_trl adbrowse_adbrowsetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_trl
    ADD CONSTRAINT adbrowse_adbrowsetrl FOREIGN KEY (ad_browse_id) REFERENCES adempiere.ad_browse(ad_browse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_menu adbrowse_admenu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu
    ADD CONSTRAINT adbrowse_admenu FOREIGN KEY (ad_browse_id) REFERENCES adempiere.ad_browse(ad_browse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adbrowse_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adbrowse_adpackageexpdetail FOREIGN KEY (ad_browse_id) REFERENCES adempiere.ad_browse(ad_browse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node adbrowse_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT adbrowse_adwfnode FOREIGN KEY (ad_browse_id) REFERENCES adempiere.ad_browse(ad_browse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_browse adbrowse_aspbrowse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_browse
    ADD CONSTRAINT adbrowse_aspbrowse FOREIGN KEY (ad_browse_id) REFERENCES adempiere.ad_browse(ad_browse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_clientexception adbrowse_aspclientexception; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientexception
    ADD CONSTRAINT adbrowse_aspclientexception FOREIGN KEY (ad_browse_id) REFERENCES adempiere.ad_browse(ad_browse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_dashboardcontent adbrowse_padashboardcontent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_dashboardcontent
    ADD CONSTRAINT adbrowse_padashboardcontent FOREIGN KEY (ad_browse_id) REFERENCES adempiere.ad_browse(ad_browse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_field_trl adbrowsefield_adbrowsefieldtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_field_trl
    ADD CONSTRAINT adbrowsefield_adbrowsefieldtrl FOREIGN KEY (ad_browse_field_id) REFERENCES adempiere.ad_browse_field(ad_browse_field_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_chartdatasource adchart_adchartdatasource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_chartdatasource
    ADD CONSTRAINT adchart_adchartdatasource FOREIGN KEY (ad_chart_id) REFERENCES adempiere.ad_chart(ad_chart_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column adchart_adcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column
    ADD CONSTRAINT adchart_adcolumn FOREIGN KEY (ad_chart_id) REFERENCES adempiere.ad_chart(ad_chart_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo adclient_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT adclient_adclientinfo FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientshare adclient_adclientshare; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientshare
    ADD CONSTRAINT adclient_adclientshare FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_menu adclient_admenu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu
    ADD CONSTRAINT adclient_admenu FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_org adclient_adorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_org
    ADD CONSTRAINT adclient_adorg FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform adclient_adprintform; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT adclient_adprintform FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element adclient_caschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT adclient_caschemaelement FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner adclient_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT adclient_cbpartner FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_element adclient_celement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_element
    ADD CONSTRAINT adclient_celement FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_elementvalue adclient_celementvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_elementvalue
    ADD CONSTRAINT adclient_celementvalue FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_location adclient_clocation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_location
    ADD CONSTRAINT adclient_clocation FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_ordersource adclient_cordersource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_ordersource
    ADD CONSTRAINT adclient_cordersource FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project adclient_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT adclient_cproject FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline adclient_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT adclient_gljournalline FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_cost adclient_mcost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_cost
    ADD CONSTRAINT adclient_mcost FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail adclient_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT adclient_mcostdetail FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product adclient_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT adclient_mproduct FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination adclient_vc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT adclient_vc FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_store adclient_wstore; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_store
    ADD CONSTRAINT adclient_wstore FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_desktop adcolor_addesktop; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_desktop
    ADD CONSTRAINT adcolor_addesktop FOREIGN KEY (ad_color_id) REFERENCES adempiere.ad_color(ad_color_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_window adcolor_adwindow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window
    ADD CONSTRAINT adcolor_adwindow FOREIGN KEY (ad_color_id) REFERENCES adempiere.ad_color(ad_color_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workbench adcolor_adworkbench; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbench
    ADD CONSTRAINT adcolor_adworkbench FOREIGN KEY (ad_color_id) REFERENCES adempiere.ad_color(ad_color_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_accesslog adcolumn_adaccesslog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_accesslog
    ADD CONSTRAINT adcolumn_adaccesslog FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_changelog adcolumn_adchangelog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_changelog
    ADD CONSTRAINT adcolumn_adchangelog FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column_access adcolumn_adcolumnaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column_access
    ADD CONSTRAINT adcolumn_adcolumnaccess FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_columnprocess adcolumn_adcolumnprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_columnprocess
    ADD CONSTRAINT adcolumn_adcolumnprocess FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column_trl adcolumn_adcolumntrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column_trl
    ADD CONSTRAINT adcolumn_adcolumntrl FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_find adcolumn_adfind; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_find
    ADD CONSTRAINT adcolumn_adfind FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_impformat_row adcolumn_adimpformatrow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_impformat_row
    ADD CONSTRAINT adcolumn_adimpformatrow FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_imp_backup adcolumn_adpackageimpbackup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_imp_backup
    ADD CONSTRAINT adcolumn_adpackageimpbackup FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformatitem adcolumn_adprintformatitem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformatitem
    ADD CONSTRAINT adcolumn_adprintformatitem FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printlabelline adcolumn_adprintlabelline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printlabelline
    ADD CONSTRAINT adcolumn_adprintlabelline FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_reportview_col adcolumn_adreportviewcol; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reportview_col
    ADD CONSTRAINT adcolumn_adreportviewcol FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_searchdefinition adcolumn_adsearchdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_searchdefinition
    ADD CONSTRAINT adcolumn_adsearchdefinition FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab adcolumn_adtabsortorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab
    ADD CONSTRAINT adcolumn_adtabsortorder FOREIGN KEY (ad_columnsortorder_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab adcolumn_adtabsortyesno; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab
    ADD CONSTRAINT adcolumn_adtabsortyesno FOREIGN KEY (ad_columnsortyesno_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_view_column adcolumn_adviewcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_column
    ADD CONSTRAINT adcolumn_adviewcolumn FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_nextcondition adcolumn_adwfnextcondition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_nextcondition
    ADD CONSTRAINT adcolumn_adwfnextcondition FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node adcolumn_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT adcolumn_adwfnode FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workbench adcolumn_adworkbench; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbench
    ADD CONSTRAINT adcolumn_adworkbench FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element adcolumn_cacctschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT adcolumn_cacctschemaelement FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: exp_formatline adcolumn_expformatline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.exp_formatline
    ADD CONSTRAINT adcolumn_expformatline FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_elementvalue adcolumn_ielementvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_elementvalue
    ADD CONSTRAINT adcolumn_ielementvalue FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow adcolumn_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT adcolumn_iworkflow FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node adcolumn_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT adcolumn_ppordernode FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ws_webservicefieldinput adcolumn_wswebservicefieldinpu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicefieldinput
    ADD CONSTRAINT adcolumn_wswebservicefieldinpu FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id);


--
-- Name: ws_webservicefieldoutput adcolumn_wswebservicefieldoutp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicefieldoutput
    ADD CONSTRAINT adcolumn_wswebservicefieldoutp FOREIGN KEY (ad_column_id) REFERENCES adempiere.ad_column(ad_column_id);


--
-- Name: ad_columnprocesspara adcolumnprocess_adcolumnproces; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_columnprocesspara
    ADD CONSTRAINT adcolumnprocess_adcolumnproces FOREIGN KEY (ad_columnprocess_id) REFERENCES adempiere.ad_columnprocess(ad_columnprocess_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_table add_table_reftable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_table
    ADD CONSTRAINT add_table_reftable FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_desktop_trl addesktop_addesktoptrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_desktop_trl
    ADD CONSTRAINT addesktop_addesktoptrl FOREIGN KEY (ad_desktop_id) REFERENCES adempiere.ad_desktop(ad_desktop_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_desktopworkbench addesktop_addesktopwb; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_desktopworkbench
    ADD CONSTRAINT addesktop_addesktopwb FOREIGN KEY (ad_desktop_id) REFERENCES adempiere.ad_desktop(ad_desktop_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_field adelement_adbrowsefield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_field
    ADD CONSTRAINT adelement_adbrowsefield FOREIGN KEY (ad_element_id) REFERENCES adempiere.ad_element(ad_element_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_element_trl adelement_adelementtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_element_trl
    ADD CONSTRAINT adelement_adelementtrl FOREIGN KEY (ad_element_id) REFERENCES adempiere.ad_element(ad_element_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_infocolumn adelement_adinfocolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infocolumn
    ADD CONSTRAINT adelement_adinfocolumn FOREIGN KEY (ad_element_id) REFERENCES adempiere.ad_element(ad_element_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_para adelement_adprocesspara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_para
    ADD CONSTRAINT adelement_adprocesspara FOREIGN KEY (ad_element_id) REFERENCES adempiere.ad_element(ad_element_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_client ademailconfig_adclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_client
    ADD CONSTRAINT ademailconfig_adclient FOREIGN KEY (ad_emailconfig_id) REFERENCES adempiere.ad_emailconfig(ad_emailconfig_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user ademailconfig_aduser; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user
    ADD CONSTRAINT ademailconfig_aduser FOREIGN KEY (ad_emailconfig_id) REFERENCES adempiere.ad_emailconfig(ad_emailconfig_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_modification adenritytype_admodification; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_modification
    ADD CONSTRAINT adenritytype_admodification FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_acct adepreciation_aassetacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_acct
    ADD CONSTRAINT adepreciation_aassetacct FOREIGN KEY (a_depreciation_id) REFERENCES adempiere.a_depreciation(a_depreciation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_group_acct adepreciation_aassetgroupacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_group_acct
    ADD CONSTRAINT adepreciation_aassetgroupacct FOREIGN KEY (a_depreciation_id) REFERENCES adempiere.a_depreciation(a_depreciation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_acct adepreciationconv_aassetacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_acct
    ADD CONSTRAINT adepreciationconv_aassetacct FOREIGN KEY (a_depreciation_conv_id) REFERENCES adempiere.a_depreciation_convention(a_depreciation_convention_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_group_acct adepreciationconv_aassetgroupa; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_group_acct
    ADD CONSTRAINT adepreciationconv_aassetgroupa FOREIGN KEY (a_depreciation_conv_id) REFERENCES adempiere.a_depreciation_convention(a_depreciation_convention_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_acct adepreciationconvf_aassetacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_acct
    ADD CONSTRAINT adepreciationconvf_aassetacct FOREIGN KEY (a_depreciation_conv_f_id) REFERENCES adempiere.a_depreciation_convention(a_depreciation_convention_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_group_acct adepreciationconvf_aassetgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_group_acct
    ADD CONSTRAINT adepreciationconvf_aassetgroup FOREIGN KEY (a_depreciation_conv_f_id) REFERENCES adempiere.a_depreciation_convention(a_depreciation_convention_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_exp adepreciationentry_adepreciati; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_exp
    ADD CONSTRAINT adepreciationentry_adepreciati FOREIGN KEY (a_depreciation_entry_id) REFERENCES adempiere.a_depreciation_entry(a_depreciation_entry_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_acct adepreciationf_aassetacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_acct
    ADD CONSTRAINT adepreciationf_aassetacct FOREIGN KEY (a_depreciation_f_id) REFERENCES adempiere.a_depreciation(a_depreciation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_group_acct adepreciationf_aassetgroupacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_group_acct
    ADD CONSTRAINT adepreciationf_aassetgroupacct FOREIGN KEY (a_depreciation_f_id) REFERENCES adempiere.a_depreciation(a_depreciation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_acct adepreciationmethod_aassetacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_acct
    ADD CONSTRAINT adepreciationmethod_aassetacct FOREIGN KEY (a_depreciation_method_id) REFERENCES adempiere.a_depreciation_method(a_depreciation_method_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_group_acct adepreciationmethod_aassetgrou; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_group_acct
    ADD CONSTRAINT adepreciationmethod_aassetgrou FOREIGN KEY (a_depreciation_method_id) REFERENCES adempiere.a_depreciation_method(a_depreciation_method_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_acct adepreciationmethodf_aassetacc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_acct
    ADD CONSTRAINT adepreciationmethodf_aassetacc FOREIGN KEY (a_depreciation_method_f_id) REFERENCES adempiere.a_depreciation_method(a_depreciation_method_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_group_acct adepreciationmethodf_aassetgro; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_group_acct
    ADD CONSTRAINT adepreciationmethodf_aassetgro FOREIGN KEY (a_depreciation_method_f_id) REFERENCES adempiere.a_depreciation_method(a_depreciation_method_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_change adepreciationtableheader_aass2; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change
    ADD CONSTRAINT adepreciationtableheader_aass2 FOREIGN KEY (a_depreciation_table_header_id) REFERENCES adempiere.a_depreciation_table_header(a_depreciation_table_header_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_group_acct adepreciationtableheader_aass3; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_group_acct
    ADD CONSTRAINT adepreciationtableheader_aass3 FOREIGN KEY (a_depreciation_table_header_id) REFERENCES adempiere.a_depreciation_table_header(a_depreciation_table_header_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_acct adepreciationtableheader_aasse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_acct
    ADD CONSTRAINT adepreciationtableheader_aasse FOREIGN KEY (a_depreciation_table_header_id) REFERENCES adempiere.a_depreciation_table_header(a_depreciation_table_header_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_asset adepreciationtableheader_iasse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_asset
    ADD CONSTRAINT adepreciationtableheader_iasse FOREIGN KEY (a_depreciation_table_header_id) REFERENCES adempiere.a_depreciation_table_header(a_depreciation_table_header_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_userdef_field adfield_aduserdeffield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userdef_field
    ADD CONSTRAINT adfield_aduserdeffield FOREIGN KEY (ad_field_id) REFERENCES adempiere.ad_field(ad_field_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_clientexception adfield_aspclientexception; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientexception
    ADD CONSTRAINT adfield_aspclientexception FOREIGN KEY (ad_field_id) REFERENCES adempiere.ad_field(ad_field_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_field adfield_aspfield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_field
    ADD CONSTRAINT adfield_aspfield FOREIGN KEY (ad_field_id) REFERENCES adempiere.ad_field(ad_field_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_field adfieldgroup_adfield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field
    ADD CONSTRAINT adfieldgroup_adfield FOREIGN KEY (ad_fieldgroup_id) REFERENCES adempiere.ad_fieldgroup(ad_fieldgroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_fieldgroup_trl adfieldgroup_trl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_fieldgroup_trl
    ADD CONSTRAINT adfieldgroup_trl FOREIGN KEY (ad_fieldgroup_id) REFERENCES adempiere.ad_fieldgroup(ad_fieldgroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_form_access adform_adformaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_form_access
    ADD CONSTRAINT adform_adformaccess FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_form_trl adform_adformtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_form_trl
    ADD CONSTRAINT adform_adformtrl FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_issue adform_adissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_issue
    ADD CONSTRAINT adform_adissue FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_menu adform_admenu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu
    ADD CONSTRAINT adform_admenu FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_common adform_adpackageexpcommon; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_common
    ADD CONSTRAINT adform_adpackageexpcommon FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adform_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adform_adpackageexpdetail FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process adform_adprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process
    ADD CONSTRAINT adform_adprocess FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node adform_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT adform_adwfnode FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workbenchwindow adform_adworkbenchwindow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbenchwindow
    ADD CONSTRAINT adform_adworkbenchwindow FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_clientexception adform_aspclientexception; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientexception
    ADD CONSTRAINT adform_aspclientexception FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_form adform_aspform; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_form
    ADD CONSTRAINT adform_aspform FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow adform_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT adform_iworkflow FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_documentstatus adform_padocumentstatus; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_documentstatus
    ADD CONSTRAINT adform_padocumentstatus FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node adform_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT adform_ppordernode FOREIGN KEY (ad_form_id) REFERENCES adempiere.ad_form(ad_form_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_color adimage_adcolor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_color
    ADD CONSTRAINT adimage_adcolor FOREIGN KEY (ad_image_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_desktop adimage_addesktop; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_desktop
    ADD CONSTRAINT adimage_addesktop FOREIGN KEY (ad_image_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printtableformat adimage_adprinttableformat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printtableformat
    ADD CONSTRAINT adimage_adprinttableformat FOREIGN KEY (ad_image_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab adimage_adtab; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab
    ADD CONSTRAINT adimage_adtab FOREIGN KEY (ad_image_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node adimage_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT adimage_adwfnode FOREIGN KEY (ad_image_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_window adimage_adwindow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window
    ADD CONSTRAINT adimage_adwindow FOREIGN KEY (ad_image_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workbench adimage_adworkbench; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbench
    ADD CONSTRAINT adimage_adworkbench FOREIGN KEY (ad_image_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_media adimage_cmmedia; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_media
    ADD CONSTRAINT adimage_cmmedia FOREIGN KEY (ad_image_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_poskey adimage_cposkey; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_poskey
    ADD CONSTRAINT adimage_cposkey FOREIGN KEY (ad_image_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow adimage_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT adimage_iworkflow FOREIGN KEY (ad_image_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node adimage_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT adimage_ppordernode FOREIGN KEY (ad_image_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_impformat_row adimpformat_adimpformatrow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_impformat_row
    ADD CONSTRAINT adimpformat_adimpformatrow FOREIGN KEY (ad_impformat_id) REFERENCES adempiere.ad_impformat(ad_impformat_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_common adimpformat_adpackageexpcommon; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_common
    ADD CONSTRAINT adimpformat_adpackageexpcommon FOREIGN KEY (ad_impformat_id) REFERENCES adempiere.ad_impformat(ad_impformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adimpformat_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adimpformat_adpackageexpdetail FOREIGN KEY (ad_impformat_id) REFERENCES adempiere.ad_impformat(ad_impformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_infocolumn_trl adinfocolumn_adinfocolumntrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infocolumn_trl
    ADD CONSTRAINT adinfocolumn_adinfocolumntrl FOREIGN KEY (ad_infocolumn_id) REFERENCES adempiere.ad_infocolumn(ad_infocolumn_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_infocolumn adinfowindow_adinfocolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infocolumn
    ADD CONSTRAINT adinfowindow_adinfocolumn FOREIGN KEY (ad_infowindow_id) REFERENCES adempiere.ad_infowindow(ad_infowindow_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_infowindow_trl adinfowindow_adinfowindowtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infowindow_trl
    ADD CONSTRAINT adinfowindow_adinfowindowtrl FOREIGN KEY (ad_infowindow_id) REFERENCES adempiere.ad_infowindow(ad_infowindow_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_labelprinterfunction adlabelprinter_function; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_labelprinterfunction
    ADD CONSTRAINT adlabelprinter_function FOREIGN KEY (ad_labelprinter_id) REFERENCES adempiere.ad_labelprinter(ad_labelprinter_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printlabel adlabelprinter_printlabel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printlabel
    ADD CONSTRAINT adlabelprinter_printlabel FOREIGN KEY (ad_labelprinter_id) REFERENCES adempiere.ad_labelprinter(ad_labelprinter_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printlabelline adlabelprintfunc_labelline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printlabelline
    ADD CONSTRAINT adlabelprintfunc_labelline FOREIGN KEY (ad_labelprinterfunction_id) REFERENCES adempiere.ad_labelprinterfunction(ad_labelprinterfunction_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_field_trl adlangu_adbrowsefieldtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_field_trl
    ADD CONSTRAINT adlangu_adbrowsefieldtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_trl adlangu_adbrowsetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_trl
    ADD CONSTRAINT adlangu_adbrowsetrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_client adlangu_adclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_client
    ADD CONSTRAINT adlangu_adclient FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_error adlangu_aderror; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_error
    ADD CONSTRAINT adlangu_aderror FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_reportview_trl adlangu_adreportviewtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reportview_trl
    ADD CONSTRAINT adlangu_adreportviewtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_userdef_win adlangu_aduserdefwin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userdef_win
    ADD CONSTRAINT adlangu_aduserdefwin FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_view_column_trl adlangu_adviewcolumntrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_column_trl
    ADD CONSTRAINT adlangu_adviewcolumntrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_view_trl adlangu_adviewtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_trl
    ADD CONSTRAINT adlangu_adviewtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_charge_trl adlangu_cchargetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_charge_trl
    ADD CONSTRAINT adlangu_cchargetrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_newschannel adlangu_cmnewschannel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_newschannel
    ADD CONSTRAINT adlangu_cmnewschannel FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_synonym adlangu_ksynonym; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_synonym
    ADD CONSTRAINT adlangu_ksynonym FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_dashboardcontent_trl adlangu_padashboardcontenttrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_dashboardcontent_trl
    ADD CONSTRAINT adlangu_padashboardcontenttrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bomline_trl adlangu_pporderbomlinetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bomline_trl
    ADD CONSTRAINT adlangu_pporderbomlinetrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bom_trl adlangu_pporderbomtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bom_trl
    ADD CONSTRAINT adlangu_pporderbomtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node_trl adlangu_ppordernodetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node_trl
    ADD CONSTRAINT adlangu_ppordernodetrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_workflow_trl adlangu_pporderworkflowtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_workflow_trl
    ADD CONSTRAINT adlangu_pporderworkflowtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_bomline_trl adlangu_ppproductbomlinetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bomline_trl
    ADD CONSTRAINT adlangu_ppproductbomlinetrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_bom_trl adlangu_ppproductbomtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bom_trl
    ADD CONSTRAINT adlangu_ppproductbomtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column_trl adlanguage_adcolumntrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column_trl
    ADD CONSTRAINT adlanguage_adcolumntrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_desktop_trl adlanguage_addesktoptrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_desktop_trl
    ADD CONSTRAINT adlanguage_addesktoptrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_fieldgroup_trl adlanguage_adfieldgrouptrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_fieldgroup_trl
    ADD CONSTRAINT adlanguage_adfieldgrouptrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_form_trl adlanguage_adformtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_form_trl
    ADD CONSTRAINT adlanguage_adformtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_infocolumn_trl adlanguage_adinfocolumntrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infocolumn_trl
    ADD CONSTRAINT adlanguage_adinfocolumntrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_infowindow_trl adlanguage_adinfowindowtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infowindow_trl
    ADD CONSTRAINT adlanguage_adinfowindowtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printlabelline_trl adlanguage_adplabellinetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printlabelline_trl
    ADD CONSTRAINT adlanguage_adplabellinetrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformatitem_trl adlanguage_adprintformitemtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformatitem_trl
    ADD CONSTRAINT adlanguage_adprintformitemtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_para_trl adlanguage_adprocessparatrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_para_trl
    ADD CONSTRAINT adlanguage_adprocessparatrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table_trl adlanguage_adtabletrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_trl
    ADD CONSTRAINT adlanguage_adtabletrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workbench_trl adlanguage_adworkbenchtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbench_trl
    ADD CONSTRAINT adlanguage_adworkbenchtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_country adlanguage_ccountry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_country
    ADD CONSTRAINT adlanguage_ccountry FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_country_trl adlanguage_ccountrytrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_country_trl
    ADD CONSTRAINT adlanguage_ccountrytrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_currency_trl adlanguage_ccurrencytrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_currency_trl
    ADD CONSTRAINT adlanguage_ccurrencytrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_doctype_trl adlanguage_cdoctypetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctype_trl
    ADD CONSTRAINT adlanguage_cdoctypetrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunninglevel_trl adlanguage_cdunninglevel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunninglevel_trl
    ADD CONSTRAINT adlanguage_cdunninglevel FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_elementvalue_trl adlanguage_celementvaluetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_elementvalue_trl
    ADD CONSTRAINT adlanguage_celementvaluetrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_greeting_trl adlanguage_cgreetingtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_greeting_trl
    ADD CONSTRAINT adlanguage_cgreetingtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_container_element_trl adlanguage_cmcontainereletrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container_element_trl
    ADD CONSTRAINT adlanguage_cmcontainereletrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_container_trl adlanguage_cmcontainertrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container_trl
    ADD CONSTRAINT adlanguage_cmcontainertrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_cstage_element_trl adlanguage_cmcstageeletrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstage_element_trl
    ADD CONSTRAINT adlanguage_cmcstageeletrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_cstage_trl adlanguage_cmcstagetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstage_trl
    ADD CONSTRAINT adlanguage_cmcstagetrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_paymentterm_trl adlanguage_cpaymenttermtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentterm_trl
    ADD CONSTRAINT adlanguage_cpaymenttermtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxcategory_trl adlanguage_ctaxcategorytrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxcategory_trl
    ADD CONSTRAINT adlanguage_ctaxcategorytrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax_trl adlanguage_ctaxtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax_trl
    ADD CONSTRAINT adlanguage_ctaxtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_uom_trl adlanguage_cuomtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_uom_trl
    ADD CONSTRAINT adlanguage_cuomtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_trl adlanguage_mproducttrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_trl
    ADD CONSTRAINT adlanguage_mproducttrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_mailtext_trl adlanguage_rmailtexttrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_mailtext_trl
    ADD CONSTRAINT adlanguage_rmailtexttrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_mailmsg_trl adlanguage_wmailmsgtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_mailmsg_trl
    ADD CONSTRAINT adlanguage_wmailmsgtrl FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ldapaccess adldapprocessor_adldapaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ldapaccess
    ADD CONSTRAINT adldapprocessor_adldapaccess FOREIGN KEY (ad_ldapprocessor_id) REFERENCES adempiere.ad_ldapprocessor(ad_ldapprocessor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ldapprocessorlog adldapprocessor_adldapproclog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ldapprocessorlog
    ADD CONSTRAINT adldapprocessor_adldapproclog FOREIGN KEY (ad_ldapprocessor_id) REFERENCES adempiere.ad_ldapprocessor(ad_ldapprocessor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_common admenu_adpackageexpcommon; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_common
    ADD CONSTRAINT admenu_adpackageexpcommon FOREIGN KEY (ad_menu_id) REFERENCES adempiere.ad_menu(ad_menu_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail admenu_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT admenu_adpackageexpdetail FOREIGN KEY (ad_menu_id) REFERENCES adempiere.ad_menu(ad_menu_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_recentitem admenu_adrecentitem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_recentitem
    ADD CONSTRAINT admenu_adrecentitem FOREIGN KEY (ad_menu_id) REFERENCES adempiere.ad_menu(ad_menu_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tree_favorite_node admenu_adtreefavoritenode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tree_favorite_node
    ADD CONSTRAINT admenu_adtreefavoritenode FOREIGN KEY (ad_menu_id) REFERENCES adempiere.ad_menu(ad_menu_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_menu admenu_adworkbench; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu
    ADD CONSTRAINT admenu_adworkbench FOREIGN KEY (ad_workbench_id) REFERENCES adempiere.ad_workbench(ad_workbench_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_note admessage_adnote; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_note
    ADD CONSTRAINT admessage_adnote FOREIGN KEY (ad_message_id) REFERENCES adempiere.ad_message(ad_message_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail admessage_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT admessage_adpackageexpdetail FOREIGN KEY (ad_message_id) REFERENCES adempiere.ad_message(ad_message_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_activity admessage_adwfactivity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_activity
    ADD CONSTRAINT admessage_adwfactivity FOREIGN KEY (ad_message_id) REFERENCES adempiere.ad_message(ad_message_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_process admessage_adwfprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_process
    ADD CONSTRAINT admessage_adwfprocess FOREIGN KEY (ad_message_id) REFERENCES adempiere.ad_message(ad_message_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_migrationstep admigration_admigrationstep; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_migrationstep
    ADD CONSTRAINT admigration_admigrationstep FOREIGN KEY (ad_migration_id) REFERENCES adempiere.ad_migration(ad_migration_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_migrationdata admigrationstep_admigrationdat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_migrationdata
    ADD CONSTRAINT admigrationstep_admigrationdat FOREIGN KEY (ad_migrationstep_id) REFERENCES adempiere.ad_migrationstep(ad_migrationstep_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail admodval_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT admodval_adpackageexpdetail FOREIGN KEY (ad_modelvalidator_id) REFERENCES adempiere.ad_modelvalidator(ad_modelvalidator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_goalrestriction adorg2_pagoalrestriction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goalrestriction
    ADD CONSTRAINT adorg2_pagoalrestriction FOREIGN KEY (org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientshare adorg_adclientshare; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientshare
    ADD CONSTRAINT adorg_adclientshare FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_orginfo adorg_adorginfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orginfo
    ADD CONSTRAINT adorg_adorginfo FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_role_orgaccess adorg_adroleorgaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_role_orgaccess
    ADD CONSTRAINT adorg_adroleorgaccess FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user_orgaccess adorg_aduserorgaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user_orgaccess
    ADD CONSTRAINT adorg_aduserorgaccess FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_responsible adorg_adwfresponsible; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_responsible
    ADD CONSTRAINT adorg_adwfresponsible FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element adorg_caschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT adorg_caschemaelement FOREIGN KEY (org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner adorg_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT adorg_cbpartner FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner adorg_cbpartnerorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT adorg_cbpartnerorg FOREIGN KEY (ad_orgbp_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cash adorg_ccash; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cash
    ADD CONSTRAINT adorg_ccash FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_elementvalue adorg_celementvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_elementvalue
    ADD CONSTRAINT adorg_celementvalue FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_interorg_acct adorg_cinterorgacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_interorg_acct
    ADD CONSTRAINT adorg_cinterorgacct FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice adorg_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT adorg_cinvoice FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline adorg_cinvoicebatchline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT adorg_cinvoicebatchline FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline adorg_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT adorg_cinvoiceline FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_location adorg_clocation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_location
    ADD CONSTRAINT adorg_clocation FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order adorg_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT adorg_corder FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline adorg_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT adorg_corderline FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_ordersource adorg_cordersource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_ordersource
    ADD CONSTRAINT adorg_cordersource FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orgassignment adorg_corgassignment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orgassignment
    ADD CONSTRAINT adorg_corgassignment FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment adorg_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT adorg_cpayment FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project adorg_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT adorg_cproject FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution adorg_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT adorg_gldist FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline adorg_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT adorg_gldistline FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline adorg_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT adorg_gljournalline FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal adorg_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT adorg_igljournal FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice adorg_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT adorg_iinvoice FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order adorg_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT adorg_iorder FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_cost adorg_m_cost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_cost
    ADD CONSTRAINT adorg_m_cost FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail adorg_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT adorg_mcostdetail FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout adorg_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT adorg_minout FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline adorg_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT adorg_minoutline FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventory adorg_minventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT adorg_minventory FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement adorg_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT adorg_mmovement FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production adorg_mproduction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT adorg_mproduction FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_goalrestriction adorg_pagoalrestriction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goalrestriction
    ADD CONSTRAINT adorg_pagoalrestriction FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_report adorg_pareport; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_report
    ADD CONSTRAINT adorg_pareport FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn adorg_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT adorg_pareportcolumn FOREIGN KEY (org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource adorg_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT adorg_pareportsource FOREIGN KEY (org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination adorg_vc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT adorg_vc FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal adorgdoc_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT adorgdoc_ifajournal FOREIGN KEY (ad_orgdoc_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal adorgdoc_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT adorgdoc_igljournal FOREIGN KEY (ad_orgdoc_id) REFERENCES adempiere.ad_org(ad_org_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element adorgid_c_aschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT adorgid_c_aschemaelement FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema adorgonly_cacctschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema
    ADD CONSTRAINT adorgonly_cacctschema FOREIGN KEY (ad_orgonly_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution adorgorg_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT adorgorg_gldist FOREIGN KEY (org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline adorgorg_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT adorgorg_gldistline FOREIGN KEY (org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_orginfo adorgparent_adorginfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orginfo
    ADD CONSTRAINT adorgparent_adorginfo FOREIGN KEY (parent_org_id) REFERENCES adempiere.ad_org(ad_org_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_interorg_acct adorgto_cinterorgacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_interorg_acct
    ADD CONSTRAINT adorgto_cinterorgacct FOREIGN KEY (ad_orgto_id) REFERENCES adempiere.ad_org(ad_org_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user adorgtrx_aduser; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user
    ADD CONSTRAINT adorgtrx_aduser FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cash adorgtrx_ccash; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cash
    ADD CONSTRAINT adorgtrx_ccash FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashflow adorgtrx_ccashflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashflow
    ADD CONSTRAINT adorgtrx_ccashflow FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline adorgtrx_ccommissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT adorgtrx_ccommissionline FOREIGN KEY (org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice adorgtrx_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT adorgtrx_cinvoice FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline adorgtrx_cinvoicebatchline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT adorgtrx_cinvoicebatchline FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline adorgtrx_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT adorgtrx_cinvoiceline FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order adorgtrx_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT adorgtrx_corder FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline adorgtrx_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT adorgtrx_corderline FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment adorgtrx_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT adorgtrx_cpayment FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order adorgtrx_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT adorgtrx_ddorder FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline adorgtrx_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT adorgtrx_ddorderline FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary adorgtrx_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT adorgtrx_factacctsummary FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution adorgtrx_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT adorgtrx_gldist FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline adorgtrx_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT adorgtrx_gldistline FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline adorgtrx_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT adorgtrx_gljournalline FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute adorgtrx_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT adorgtrx_hrattribute FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee adorgtrx_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT adorgtrx_hremployee FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement adorgtrx_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT adorgtrx_hrmovement FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget adorgtrx_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT adorgtrx_ibudget FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal adorgtrx_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT adorgtrx_ifajournal FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal adorgtrx_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT adorgtrx_igljournal FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice adorgtrx_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT adorgtrx_iinvoice FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_movement adorgtrx_imovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_movement
    ADD CONSTRAINT adorgtrx_imovement FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order adorgtrx_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT adorgtrx_iorder FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout adorgtrx_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT adorgtrx_minout FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline adorgtrx_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT adorgtrx_minoutline FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventory adorgtrx_minventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT adorgtrx_minventory FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline adorgtrx_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT adorgtrx_minventoryline FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement adorgtrx_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT adorgtrx_mmovement FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline adorgtrx_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT adorgtrx_mmovementline FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production adorgtrx_mproduction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT adorgtrx_mproduction FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline adorgtrx_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT adorgtrx_mproductionline FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisition adorgtrx_mrequisition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisition
    ADD CONSTRAINT adorgtrx_mrequisition FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline adorgtrx_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT adorgtrx_mrequisitionline FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn adorgtrx_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT adorgtrx_pareportcolumn FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource adorgtrx_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT adorgtrx_pareportsource FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector adorgtrx_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT adorgtrx_ppcostcollector FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order adorgtrx_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT adorgtrx_pporder FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request adorgtrx_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT adorgtrx_rrequest FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination adorgtrx_vc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT adorgtrx_vc FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound adorgtrx_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT adorgtrx_wminoutbound FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline adorgtrx_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT adorgtrx_wminoutboundline FOREIGN KEY (ad_orgtrx_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_orginfo adorgtype_adorginfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orginfo
    ADD CONSTRAINT adorgtype_adorginfo FOREIGN KEY (ad_orgtype_id) REFERENCES adempiere.ad_orgtype(ad_orgtype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdefinition adorgtype_ctaxdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdefinition
    ADD CONSTRAINT adorgtype_ctaxdefinition FOREIGN KEY (ad_orgtype_id) REFERENCES adempiere.ad_orgtype(ad_orgtype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adpackageexp_adpackageexpdetai; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adpackageexp_adpackageexpdetai FOREIGN KEY (ad_package_exp_id) REFERENCES adempiere.ad_package_exp(ad_package_exp_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_pinstance_para adpinstance_adpinstancepara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_pinstance_para
    ADD CONSTRAINT adpinstance_adpinstancepara FOREIGN KEY (ad_pinstance_id) REFERENCES adempiere.ad_pinstance(ad_pinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_pinstance_log adpinstance_pilog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_pinstance_log
    ADD CONSTRAINT adpinstance_pilog FOREIGN KEY (ad_pinstance_id) REFERENCES adempiere.ad_pinstance(ad_pinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_aging adpinstance_taging; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_aging
    ADD CONSTRAINT adpinstance_taging FOREIGN KEY (ad_pinstance_id) REFERENCES adempiere.ad_pinstance(ad_pinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_inventoryvalue adpinstance_tinventoryvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_inventoryvalue
    ADD CONSTRAINT adpinstance_tinventoryvalue FOREIGN KEY (ad_pinstance_id) REFERENCES adempiere.ad_pinstance(ad_pinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_invoicegl adpinstance_tinvoicegl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_invoicegl
    ADD CONSTRAINT adpinstance_tinvoicegl FOREIGN KEY (ad_pinstance_id) REFERENCES adempiere.ad_pinstance(ad_pinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_replenish adpinstance_treplenish; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_replenish
    ADD CONSTRAINT adpinstance_treplenish FOREIGN KEY (ad_pinstance_id) REFERENCES adempiere.ad_pinstance(ad_pinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_reportstatement adpinstance_treportstatement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_reportstatement
    ADD CONSTRAINT adpinstance_treportstatement FOREIGN KEY (ad_pinstance_id) REFERENCES adempiere.ad_pinstance(ad_pinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_spool adpinstance_tspool; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_spool
    ADD CONSTRAINT adpinstance_tspool FOREIGN KEY (ad_pinstance_id) REFERENCES adempiere.ad_pinstance(ad_pinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_transaction adpinstance_ttransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_transaction
    ADD CONSTRAINT adpinstance_ttransaction FOREIGN KEY (ad_pinstance_id) REFERENCES adempiere.ad_pinstance(ad_pinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_colorschema adprintcolor1_pacolorschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_colorschema
    ADD CONSTRAINT adprintcolor1_pacolorschema FOREIGN KEY (ad_printcolor1_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_colorschema adprintcolor2_pacolorschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_colorschema
    ADD CONSTRAINT adprintcolor2_pacolorschema FOREIGN KEY (ad_printcolor2_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_colorschema adprintcolor3_pacolorschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_colorschema
    ADD CONSTRAINT adprintcolor3_pacolorschema FOREIGN KEY (ad_printcolor3_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_colorschema adprintcolor4_pacolorschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_colorschema
    ADD CONSTRAINT adprintcolor4_pacolorschema FOREIGN KEY (ad_printcolor4_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_orgtype adprintcolor_adorgtype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orgtype
    ADD CONSTRAINT adprintcolor_adorgtype FOREIGN KEY (ad_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformat adprintcolor_adprintformat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformat
    ADD CONSTRAINT adprintcolor_adprintformat FOREIGN KEY (ad_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformatitem adprintcolor_adprintformatitem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformatitem
    ADD CONSTRAINT adprintcolor_adprintformatitem FOREIGN KEY (ad_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group adprintcolor_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group
    ADD CONSTRAINT adprintcolor_cbpgroup FOREIGN KEY (ad_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_channel adprintcolor_cchannel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_channel
    ADD CONSTRAINT adprintcolor_cchannel FOREIGN KEY (ad_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_poskey adprintcolor_cposkey; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_poskey
    ADD CONSTRAINT adprintcolor_cposkey FOREIGN KEY (ad_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_poskeylayout adprintcolor_cposkeylayout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_poskeylayout
    ADD CONSTRAINT adprintcolor_cposkeylayout FOREIGN KEY (ad_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category adprintcolor_mproductcategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category
    ADD CONSTRAINT adprintcolor_mproductcategory FOREIGN KEY (ad_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printtableformat adprintcolor_tablefunctbg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printtableformat
    ADD CONSTRAINT adprintcolor_tablefunctbg FOREIGN KEY (functbg_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printtableformat adprintcolor_tablefunctfg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printtableformat
    ADD CONSTRAINT adprintcolor_tablefunctfg FOREIGN KEY (functfg_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printtableformat adprintcolor_tablehdrline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printtableformat
    ADD CONSTRAINT adprintcolor_tablehdrline FOREIGN KEY (hdrline_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printtableformat adprintcolor_tablehdrtextbg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printtableformat
    ADD CONSTRAINT adprintcolor_tablehdrtextbg FOREIGN KEY (hdrtextbg_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printtableformat adprintcolor_tablehdrtextfg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printtableformat
    ADD CONSTRAINT adprintcolor_tablehdrtextfg FOREIGN KEY (hdrtextfg_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printtableformat adprintcolor_tableline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printtableformat
    ADD CONSTRAINT adprintcolor_tableline FOREIGN KEY (line_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformatitem adprintfont_adprintformatitem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformatitem
    ADD CONSTRAINT adprintfont_adprintformatitem FOREIGN KEY (ad_printfont_id) REFERENCES adempiere.ad_printfont(ad_printfont_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_poskey adprintfont_cposkey; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_poskey
    ADD CONSTRAINT adprintfont_cposkey FOREIGN KEY (ad_printfont_id) REFERENCES adempiere.ad_printfont(ad_printfont_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_poskeylayout adprintfont_cposkeylayout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_poskeylayout
    ADD CONSTRAINT adprintfont_cposkeylayout FOREIGN KEY (ad_printfont_id) REFERENCES adempiere.ad_printfont(ad_printfont_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printtableformat adprintfont_tableformatfunc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printtableformat
    ADD CONSTRAINT adprintfont_tableformatfunc FOREIGN KEY (funct_printfont_id) REFERENCES adempiere.ad_printfont(ad_printfont_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printtableformat adprintfont_tablehdr; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printtableformat
    ADD CONSTRAINT adprintfont_tablehdr FOREIGN KEY (hdr_printfont_id) REFERENCES adempiere.ad_printfont(ad_printfont_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adprintformat_adpackageexpdeta; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adprintformat_adpackageexpdeta FOREIGN KEY (ad_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_pinstance adprintformat_adpinstance; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_pinstance
    ADD CONSTRAINT adprintformat_adpinstance FOREIGN KEY (ad_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printgraph adprintformat_adprintgraph; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printgraph
    ADD CONSTRAINT adprintformat_adprintgraph FOREIGN KEY (ad_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process adprintformat_adprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process
    ADD CONSTRAINT adprintformat_adprocess FOREIGN KEY (ad_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq_topic adprintformat_arfqtopic; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq_topic
    ADD CONSTRAINT adprintformat_arfqtopic FOREIGN KEY (ad_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccountdoc adprintformat_cbankaccountdoc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccountdoc
    ADD CONSTRAINT adprintformat_cbankaccountdoc FOREIGN KEY (check_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_doctype adprintformat_cdoctype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctype
    ADD CONSTRAINT adprintformat_cdoctype FOREIGN KEY (ad_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunninglevel adprintformat_cdunninglevel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunninglevel
    ADD CONSTRAINT adprintformat_cdunninglevel FOREIGN KEY (dunning_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform adprintformat_forminvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT adprintformat_forminvoice FOREIGN KEY (invoice_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform adprintformat_formorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT adprintformat_formorder FOREIGN KEY (order_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform adprintformat_formproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT adprintformat_formproject FOREIGN KEY (project_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform adprintformat_formremittance; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT adprintformat_formremittance FOREIGN KEY (remittance_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform adprintformat_formshipment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT adprintformat_formshipment FOREIGN KEY (shipment_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payroll adprintformat_hrpayroll; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payroll
    ADD CONSTRAINT adprintformat_hrpayroll FOREIGN KEY (ad_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_process adprintformat_hrprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT adprintformat_hrprocess FOREIGN KEY (ad_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_report adprintformat_pareport; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_report
    ADD CONSTRAINT adprintformat_pareport FOREIGN KEY (ad_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformatitem adprintformat_printformatchild; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformatitem
    ADD CONSTRAINT adprintformat_printformatchild FOREIGN KEY (ad_printformatchild_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformatitem adprintformat_printformatitem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformatitem
    ADD CONSTRAINT adprintformat_printformatitem FOREIGN KEY (ad_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_report adprintformatheader_pareport; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_report
    ADD CONSTRAINT adprintformatheader_pareport FOREIGN KEY (ad_printformatheader_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner adprintformatinv_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT adprintformatinv_cbpartner FOREIGN KEY (invoice_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printgraph adprintformatitem_graphdata; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printgraph
    ADD CONSTRAINT adprintformatitem_graphdata FOREIGN KEY (data_printformatitem_id) REFERENCES adempiere.ad_printformatitem(ad_printformatitem_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printgraph adprintformatitem_graphdata1; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printgraph
    ADD CONSTRAINT adprintformatitem_graphdata1 FOREIGN KEY (data1_printformatitem_id) REFERENCES adempiere.ad_printformatitem(ad_printformatitem_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printgraph adprintformatitem_graphdata2; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printgraph
    ADD CONSTRAINT adprintformatitem_graphdata2 FOREIGN KEY (data2_printformatitem_id) REFERENCES adempiere.ad_printformatitem(ad_printformatitem_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printgraph adprintformatitem_graphdata3; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printgraph
    ADD CONSTRAINT adprintformatitem_graphdata3 FOREIGN KEY (data3_printformatitem_id) REFERENCES adempiere.ad_printformatitem(ad_printformatitem_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printgraph adprintformatitem_graphdata4; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printgraph
    ADD CONSTRAINT adprintformatitem_graphdata4 FOREIGN KEY (data4_printformatitem_id) REFERENCES adempiere.ad_printformatitem(ad_printformatitem_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printgraph adprintformatitem_graphdescr; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printgraph
    ADD CONSTRAINT adprintformatitem_graphdescr FOREIGN KEY (description_printformatitem_id) REFERENCES adempiere.ad_printformatitem(ad_printformatitem_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformatitem_trl adprintformatitem_trl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformatitem_trl
    ADD CONSTRAINT adprintformatitem_trl FOREIGN KEY (ad_printformatitem_id) REFERENCES adempiere.ad_printformatitem(ad_printformatitem_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformat adprintformattable_format; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformat
    ADD CONSTRAINT adprintformattable_format FOREIGN KEY (ad_printtableformat_id) REFERENCES adempiere.ad_printtableformat(ad_printtableformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformatitem adprintgraph_printformatitem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformatitem
    ADD CONSTRAINT adprintgraph_printformatitem FOREIGN KEY (ad_printgraph_id) REFERENCES adempiere.ad_printgraph(ad_printgraph_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printlabelline adprintlabel_adprintlabelline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printlabelline
    ADD CONSTRAINT adprintlabel_adprintlabelline FOREIGN KEY (ad_printlabel_id) REFERENCES adempiere.ad_printlabel(ad_printlabel_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printlabelline_trl adprintlabelline_trl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printlabelline_trl
    ADD CONSTRAINT adprintlabelline_trl FOREIGN KEY (ad_printlabelline_id) REFERENCES adempiere.ad_printlabelline(ad_printlabelline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformat adprintpaper_adprintformat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformat
    ADD CONSTRAINT adprintpaper_adprintformat FOREIGN KEY (ad_printpaper_id) REFERENCES adempiere.ad_printpaper(ad_printpaper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformat adprintview_adprintformat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformat
    ADD CONSTRAINT adprintview_adprintformat FOREIGN KEY (ad_reportview_id) REFERENCES adempiere.ad_reportview(ad_reportview_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_archive adprocess_adarchive; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_archive
    ADD CONSTRAINT adprocess_adarchive FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse adprocess_adbrowse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse
    ADD CONSTRAINT adprocess_adbrowse FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column adprocess_adcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column
    ADD CONSTRAINT adprocess_adcolumn FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_columnprocess adprocess_adcolumnprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_columnprocess
    ADD CONSTRAINT adprocess_adcolumnprocess FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_issue adprocess_adissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_issue
    ADD CONSTRAINT adprocess_adissue FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_menu adprocess_admenu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu
    ADD CONSTRAINT adprocess_admenu FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_common adprocess_adpackageexpcommon; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_common
    ADD CONSTRAINT adprocess_adpackageexpcommon FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adprocess_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adprocess_adpackageexpdetail FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_pinstance adprocess_adpinstance; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_pinstance
    ADD CONSTRAINT adprocess_adpinstance FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_access adprocess_adprocessaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_access
    ADD CONSTRAINT adprocess_adprocessaccess FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_para adprocess_adprocesspara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_para
    ADD CONSTRAINT adprocess_adprocesspara FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_scheduler adprocess_adscheduler; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_scheduler
    ADD CONSTRAINT adprocess_adscheduler FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab adprocess_adtab; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab
    ADD CONSTRAINT adprocess_adtab FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table_process adprocess_adtableprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_process
    ADD CONSTRAINT adprocess_adtableprocess FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node adprocess_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT adprocess_adwfnode FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workbenchwindow adprocess_adworkbenchwindow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbenchwindow
    ADD CONSTRAINT adprocess_adworkbenchwindow FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_clientexception adprocess_aspclientexception; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientexception
    ADD CONSTRAINT adprocess_aspclientexception FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_process adprocess_aspprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_process
    ADD CONSTRAINT adprocess_aspprocess FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow adprocess_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT adprocess_iworkflow FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node adprocess_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT adprocess_ppordernode FOREIGN KEY (ad_process_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_columnprocesspara adprocesspara_adcolumnprocessp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_columnprocesspara
    ADD CONSTRAINT adprocesspara_adcolumnprocessp FOREIGN KEY (ad_process_para_id) REFERENCES adempiere.ad_process_para(ad_process_para_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_scheduler_para adprocesspara_adschedulerpara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_scheduler_para
    ADD CONSTRAINT adprocesspara_adschedulerpara FOREIGN KEY (ad_process_para_id) REFERENCES adempiere.ad_process_para(ad_process_para_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node_para adprocesspara_adwfnodepara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node_para
    ADD CONSTRAINT adprocesspara_adwfnodepara FOREIGN KEY (ad_process_para_id) REFERENCES adempiere.ad_process_para(ad_process_para_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_clientexception adprocesspara_aspclientexcepti; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientexception
    ADD CONSTRAINT adprocesspara_aspclientexcepti FOREIGN KEY (ad_process_para_id) REFERENCES adempiere.ad_process_para(ad_process_para_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_process_para adprocesspara_aspprocesspara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_process_para
    ADD CONSTRAINT adprocesspara_aspprocesspara FOREIGN KEY (ad_process_para_id) REFERENCES adempiere.ad_process_para(ad_process_para_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_para_trl adprocpara_adprocparatrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_para_trl
    ADD CONSTRAINT adprocpara_adprocparatrl FOREIGN KEY (ad_process_para_id) REFERENCES adempiere.ad_process_para(ad_process_para_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_attribute adreference_adattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_attribute
    ADD CONSTRAINT adreference_adattribute FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_field adreference_adbrowsefield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_field
    ADD CONSTRAINT adreference_adbrowsefield FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_element adreference_adelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_element
    ADD CONSTRAINT adreference_adelement FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_field adreference_adfield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field
    ADD CONSTRAINT adreference_adfield FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_infocolumn adreference_adinfocolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infocolumn
    ADD CONSTRAINT adreference_adinfocolumn FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adreference_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adreference_adpackageexpdetail FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_imp_backup adreference_adpackageimpbackup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_imp_backup
    ADD CONSTRAINT adreference_adpackageimpbackup FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_para adreference_adprocesspara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_para
    ADD CONSTRAINT adreference_adprocesspara FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_registrationattribute adreference_aregattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registrationattribute
    ADD CONSTRAINT adreference_aregattribute FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept adreference_hrconcept; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept
    ADD CONSTRAINT adreference_hrconcept FOREIGN KEY (ad_reference_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_relationtype adreferencesource_adrelationty; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_relationtype
    ADD CONSTRAINT adreferencesource_adrelationty FOREIGN KEY (ad_reference_source_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_relationtype adreferencetarget_adrelationty; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_relationtype
    ADD CONSTRAINT adreferencetarget_adrelationty FOREIGN KEY (ad_reference_target_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_attribute adreferencevalue_adattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_attribute
    ADD CONSTRAINT adreferencevalue_adattribute FOREIGN KEY (ad_reference_value_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_field adreferencevalue_adbrowsefield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_field
    ADD CONSTRAINT adreferencevalue_adbrowsefield FOREIGN KEY (ad_reference_value_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_element adreferencevalue_adelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_element
    ADD CONSTRAINT adreferencevalue_adelement FOREIGN KEY (ad_reference_value_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_field adreferencevalue_adfield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field
    ADD CONSTRAINT adreferencevalue_adfield FOREIGN KEY (ad_reference_value_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_para adreferencevalue_adprocpara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_para
    ADD CONSTRAINT adreferencevalue_adprocpara FOREIGN KEY (ad_reference_value_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_registrationattribute adreferencevalue_aregattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registrationattribute
    ADD CONSTRAINT adreferencevalue_aregattribute FOREIGN KEY (ad_reference_value_id) REFERENCES adempiere.ad_reference(ad_reference_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_document_action_access adreflist_addocumentactionacce; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_document_action_access
    ADD CONSTRAINT adreflist_addocumentactionacce FOREIGN KEY (ad_ref_list_id) REFERENCES adempiere.ad_ref_list(ad_ref_list_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replication_run adreplication_adreprun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replication_run
    ADD CONSTRAINT adreplication_adreprun FOREIGN KEY (ad_replication_id) REFERENCES adempiere.ad_replication(ad_replication_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replication_log adreplicationrun_adreplog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replication_log
    ADD CONSTRAINT adreplicationrun_adreplog FOREIGN KEY (ad_replication_run_id) REFERENCES adempiere.ad_replication_run(ad_replication_run_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_client adreplicationstrategy_adclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_client
    ADD CONSTRAINT adreplicationstrategy_adclient FOREIGN KEY (ad_replicationstrategy_id) REFERENCES adempiere.ad_replicationstrategy(ad_replicationstrategy_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replication adreplicationstrategy_adrep; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replication
    ADD CONSTRAINT adreplicationstrategy_adrep FOREIGN KEY (ad_replicationstrategy_id) REFERENCES adempiere.ad_replicationstrategy(ad_replicationstrategy_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replicationorgaccess adreplicationstrategy_adreplic; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationorgaccess
    ADD CONSTRAINT adreplicationstrategy_adreplic FOREIGN KEY (ad_replicationstrategy_id) REFERENCES adempiere.ad_replicationstrategy(ad_replicationstrategy_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replicationroleaccess adreplicationstrategy_adreplic; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationroleaccess
    ADD CONSTRAINT adreplicationstrategy_adreplic FOREIGN KEY (ad_replicationstrategy_id) REFERENCES adempiere.ad_replicationstrategy(ad_replicationstrategy_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_common adreportview_adpackageexpcommo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_common
    ADD CONSTRAINT adreportview_adpackageexpcommo FOREIGN KEY (ad_reportview_id) REFERENCES adempiere.ad_reportview(ad_reportview_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adreportview_adpackageexpdetai; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adreportview_adpackageexpdetai FOREIGN KEY (ad_reportview_id) REFERENCES adempiere.ad_reportview(ad_reportview_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process adreportview_adprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process
    ADD CONSTRAINT adreportview_adprocess FOREIGN KEY (ad_reportview_id) REFERENCES adempiere.ad_reportview(ad_reportview_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_reportview_trl adreportview_adreportviewtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reportview_trl
    ADD CONSTRAINT adreportview_adreportviewtrl FOREIGN KEY (ad_reportview_id) REFERENCES adempiere.ad_reportview(ad_reportview_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_reportview_col adreportview_col; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reportview_col
    ADD CONSTRAINT adreportview_col FOREIGN KEY (ad_reportview_id) REFERENCES adempiere.ad_reportview(ad_reportview_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replicationtable adrepstrategy_adreptable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationtable
    ADD CONSTRAINT adrepstrategy_adreptable FOREIGN KEY (ad_replicationstrategy_id) REFERENCES adempiere.ad_replicationstrategy(ad_replicationstrategy_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replication_log adreptable_adreplog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replication_log
    ADD CONSTRAINT adreptable_adreplog FOREIGN KEY (ad_replicationtable_id) REFERENCES adempiere.ad_replicationtable(ad_replicationtable_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_alertrecipient adrole_adaltertrecipient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_alertrecipient
    ADD CONSTRAINT adrole_adaltertrecipient FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_access adrole_adbrowseaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_access
    ADD CONSTRAINT adrole_adbrowseaccess FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column_access adrole_adcolumnaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column_access
    ADD CONSTRAINT adrole_adcolumnaccess FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_document_action_access adrole_addocumentactionaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_document_action_access
    ADD CONSTRAINT adrole_addocumentactionaccess FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_form_access adrole_adformaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_form_access
    ADD CONSTRAINT adrole_adformaccess FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_common adrole_adpackageexpcommon; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_common
    ADD CONSTRAINT adrole_adpackageexpcommon FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adrole_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adrole_adpackageexpdetail FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_access adrole_adprocessaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_access
    ADD CONSTRAINT adrole_adprocessaccess FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_recentitem adrole_adrecentitem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_recentitem
    ADD CONSTRAINT adrole_adrecentitem FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replicationroleaccess adrole_adreplicationroleaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationroleaccess
    ADD CONSTRAINT adrole_adreplicationroleaccess FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_role_orgaccess adrole_adroleorgaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_role_orgaccess
    ADD CONSTRAINT adrole_adroleorgaccess FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_schedulerrecipient adrole_adschedulerrecipient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_schedulerrecipient
    ADD CONSTRAINT adrole_adschedulerrecipient FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_session adrole_adsession; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_session
    ADD CONSTRAINT adrole_adsession FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table_access adrole_adtableaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_access
    ADD CONSTRAINT adrole_adtableaccess FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_task_access adrole_adtaskaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_task_access
    ADD CONSTRAINT adrole_adtaskaccess FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tree_favorite adrole_adtreefavorite; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tree_favorite
    ADD CONSTRAINT adrole_adtreefavorite FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_userdef_win adrole_aduserdefwin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userdef_win
    ADD CONSTRAINT adrole_aduserdefwin FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user_roles adrole_aduserroles; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user_roles
    ADD CONSTRAINT adrole_aduserroles FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_responsible adrole_adwfresponsible; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_responsible
    ADD CONSTRAINT adrole_adwfresponsible FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_window_access adrole_adwindowaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window_access
    ADD CONSTRAINT adrole_adwindowaccess FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow_access adrole_adworkflowaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow_access
    ADD CONSTRAINT adrole_adworkflowaccess FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_record_access adrole_ardecordaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_record_access
    ADD CONSTRAINT adrole_ardecordaccess FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_accesslistrole adrole_cmalistrole; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accesslistrole
    ADD CONSTRAINT adrole_cmalistrole FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_documentstatus adrole_padocumentstatus; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_documentstatus
    ADD CONSTRAINT adrole_padocumentstatus FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_goal adrole_pagoal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goal
    ADD CONSTRAINT adrole_pagoal FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request adrole_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT adrole_rrequest FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction adrole_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT adrole_rrequestaction FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_rolemenu adrole_urolemenu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_rolemenu
    ADD CONSTRAINT adrole_urolemenu FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ws_webservicetypeaccess adrole_wswebservicetypeaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicetypeaccess
    ADD CONSTRAINT adrole_wswebservicetypeaccess FOREIGN KEY (ad_role_id) REFERENCES adempiere.ad_role(ad_role_id);


--
-- Name: ad_table_scriptvalidator adrule_adtablescriptvalidator; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_scriptvalidator
    ADD CONSTRAINT adrule_adtablescriptvalidator FOREIGN KEY (ad_rule_id) REFERENCES adempiere.ad_rule(ad_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax adrule_ctax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax
    ADD CONSTRAINT adrule_ctax FOREIGN KEY (ad_rule_id) REFERENCES adempiere.ad_rule(ad_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute adrule_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT adrule_hrattribute FOREIGN KEY (ad_rule_id) REFERENCES adempiere.ad_rule(ad_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement adrule_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT adrule_hrmovement FOREIGN KEY (ad_rule_id) REFERENCES adempiere.ad_rule(ad_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payrollconcept adrule_hrpayrollconcept; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payrollconcept
    ADD CONSTRAINT adrule_hrpayrollconcept FOREIGN KEY (ad_rule_id) REFERENCES adempiere.ad_rule(ad_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_hr_attribute adrule_ihrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_hr_attribute
    ADD CONSTRAINT adrule_ihrattribute FOREIGN KEY (ad_rule_id) REFERENCES adempiere.ad_rule(ad_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrule adrule_ppforecastrule; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrule
    ADD CONSTRAINT adrule_ppforecastrule FOREIGN KEY (ad_rule_id) REFERENCES adempiere.ad_rule(ad_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_rule adrule_wmrule; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_rule
    ADD CONSTRAINT adrule_wmrule FOREIGN KEY (ad_rule_id) REFERENCES adempiere.ad_rule(ad_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_scheduler_para adscheduler_adschedulerpara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_scheduler_para
    ADD CONSTRAINT adscheduler_adschedulerpara FOREIGN KEY (ad_scheduler_id) REFERENCES adempiere.ad_scheduler(ad_scheduler_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_schedulerlog adscheduler_log; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_schedulerlog
    ADD CONSTRAINT adscheduler_log FOREIGN KEY (ad_scheduler_id) REFERENCES adempiere.ad_scheduler(ad_scheduler_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_schedulerrecipient adscheduler_recipient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_schedulerrecipient
    ADD CONSTRAINT adscheduler_recipient FOREIGN KEY (ad_scheduler_id) REFERENCES adempiere.ad_scheduler(ad_scheduler_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_edi adsequence_cbpedi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_edi
    ADD CONSTRAINT adsequence_cbpedi FOREIGN KEY (ad_sequence_id) REFERENCES adempiere.ad_sequence(ad_sequence_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_paymentprocessor adsequence_cpaymentprocessor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentprocessor
    ADD CONSTRAINT adsequence_cpaymentprocessor FOREIGN KEY (ad_sequence_id) REFERENCES adempiere.ad_sequence(ad_sequence_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_changelog adsession_adchangelog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_changelog
    ADD CONSTRAINT adsession_adchangelog FOREIGN KEY (ad_session_id) REFERENCES adempiere.ad_session(ad_session_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_comment adsession_kcomment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_comment
    ADD CONSTRAINT adsession_kcomment FOREIGN KEY (ad_session_id) REFERENCES adempiere.ad_session(ad_session_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_entry adsession_kentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_entry
    ADD CONSTRAINT adsession_kentry FOREIGN KEY (ad_session_id) REFERENCES adempiere.ad_session(ad_session_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_registration adsystem_adregistration; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_registration
    ADD CONSTRAINT adsystem_adregistration FOREIGN KEY (ad_system_id, ad_client_id) REFERENCES adempiere.ad_system(ad_system_id, ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_recentitem adtab_adrecentitem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_recentitem
    ADD CONSTRAINT adtab_adrecentitem FOREIGN KEY (ad_tab_id) REFERENCES adempiere.ad_tab(ad_tab_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_userdef_tab adtab_aduserdeftab; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userdef_tab
    ADD CONSTRAINT adtab_aduserdeftab FOREIGN KEY (ad_tab_id) REFERENCES adempiere.ad_tab(ad_tab_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_userquery adtab_aduserquery; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userquery
    ADD CONSTRAINT adtab_aduserquery FOREIGN KEY (ad_tab_id) REFERENCES adempiere.ad_tab(ad_tab_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_clientexception adtab_aspclientexception; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientexception
    ADD CONSTRAINT adtab_aspclientexception FOREIGN KEY (ad_tab_id) REFERENCES adempiere.ad_tab(ad_tab_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_tab adtab_asptab; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_tab
    ADD CONSTRAINT adtab_asptab FOREIGN KEY (ad_tab_id) REFERENCES adempiere.ad_tab(ad_tab_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab adtab_included; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab
    ADD CONSTRAINT adtab_included FOREIGN KEY (included_tab_id) REFERENCES adempiere.ad_tab(ad_tab_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_accesslog adtable_adacceslog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_accesslog
    ADD CONSTRAINT adtable_adacceslog FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_alertrule adtable_adaltertrule; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_alertrule
    ADD CONSTRAINT adtable_adaltertrule FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_archive adtable_adarchive; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_archive
    ADD CONSTRAINT adtable_adarchive FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_attachment adtable_adattachment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_attachment
    ADD CONSTRAINT adtable_adattachment FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_attribute adtable_adattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_attribute
    ADD CONSTRAINT adtable_adattribute FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_changelog adtable_adchangelog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_changelog
    ADD CONSTRAINT adtable_adchangelog FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_chartdatasource adtable_adchartdatasource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_chartdatasource
    ADD CONSTRAINT adtable_adchartdatasource FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientshare adtable_adclientshare; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientshare
    ADD CONSTRAINT adtable_adclientshare FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column_access adtable_adcolumnaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column_access
    ADD CONSTRAINT adtable_adcolumnaccess FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_housekeeping adtable_adhousekeeping; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_housekeeping
    ADD CONSTRAINT adtable_adhousekeeping FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_impformat adtable_adimpformat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_impformat
    ADD CONSTRAINT adtable_adimpformat FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_infowindow adtable_adinfowindow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infowindow
    ADD CONSTRAINT adtable_adinfowindow FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_memo adtable_admemo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_memo
    ADD CONSTRAINT adtable_admemo FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_note adtable_adnote; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_note
    ADD CONSTRAINT adtable_adnote FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_common adtable_adpackageexpcommon; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_common
    ADD CONSTRAINT adtable_adpackageexpcommon FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adtable_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adtable_adpackageexpdetail FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformat adtable_adprintformat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformat
    ADD CONSTRAINT adtable_adprintformat FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printlabel adtable_adprintlabel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printlabel
    ADD CONSTRAINT adtable_adprintlabel FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_private_access adtable_adprivateaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_private_access
    ADD CONSTRAINT adtable_adprivateaccess FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_recentitem adtable_adrecentitem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_recentitem
    ADD CONSTRAINT adtable_adrecentitem FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_record_access adtable_adrecordaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_record_access
    ADD CONSTRAINT adtable_adrecordaccess FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replicationdocument adtable_adreplicationdocument; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationdocument
    ADD CONSTRAINT adtable_adreplicationdocument FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replicationtable adtable_adreplicationtable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationtable
    ADD CONSTRAINT adtable_adreplicationtable FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_reportview adtable_adreportview; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reportview
    ADD CONSTRAINT adtable_adreportview FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_scheduler adtable_adscheduler; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_scheduler
    ADD CONSTRAINT adtable_adscheduler FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_searchdefinition adtable_adsearchdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_searchdefinition
    ADD CONSTRAINT adtable_adsearchdefinition FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_sequence_audit adtable_adsequenceaudit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sequence_audit
    ADD CONSTRAINT adtable_adsequenceaudit FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table_access adtable_adtableaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_access
    ADD CONSTRAINT adtable_adtableaccess FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table_process adtable_adtableprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_process
    ADD CONSTRAINT adtable_adtableprocess FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table_scriptvalidator adtable_adtablescriptvalidator; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_scriptvalidator
    ADD CONSTRAINT adtable_adtablescriptvalidator FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table_trl adtable_adtabletrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_trl
    ADD CONSTRAINT adtable_adtabletrl FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_userquery adtable_aduserquery; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userquery
    ADD CONSTRAINT adtable_aduserquery FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_view_definition adtable_adviewdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_definition
    ADD CONSTRAINT adtable_adviewdefinition FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_activity adtable_adwfactivity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_activity
    ADD CONSTRAINT adtable_adwfactivity FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_eventaudit adtable_adwfeventaudit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_eventaudit
    ADD CONSTRAINT adtable_adwfeventaudit FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_process adtable_adwfprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_process
    ADD CONSTRAINT adtable_adwfprocess FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow adtable_adworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow
    ADD CONSTRAINT adtable_adworkflow FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_zoomcondition adtable_adzoomcondition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_zoomcondition
    ADD CONSTRAINT adtable_adzoomcondition FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctprocessor adtable_cacctprocessor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctprocessor
    ADD CONSTRAINT adtable_cacctprocessor FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_chat adtable_cmchat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chat
    ADD CONSTRAINT adtable_cmchat FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_chattype adtable_cmchattype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chattype
    ADD CONSTRAINT adtable_cmchattype FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_templatetable adtable_cmtemplatetable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_templatetable
    ADD CONSTRAINT adtable_cmtemplatetable FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_wikitoken adtable_cmwikitoken; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_wikitoken
    ADD CONSTRAINT adtable_cmwikitoken FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: exp_format adtable_expformat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.exp_format
    ADD CONSTRAINT adtable_expformat FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct adtable_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT adtable_factacct FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow adtable_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT adtable_iworkflow FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_index adtable_kindex; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_index
    ADD CONSTRAINT adtable_kindex FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_attributesetexclude adtable_mattributesetexclude; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributesetexclude
    ADD CONSTRAINT adtable_mattributesetexclude FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_lotctlexclude adtable_mlotctlexclude; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_lotctlexclude
    ADD CONSTRAINT adtable_mlotctlexclude FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_sernoctlexclude adtable_msernoctlexclude; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_sernoctlexclude
    ADD CONSTRAINT adtable_msernoctlexclude FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_documentstatus adtable_padocumentstatus; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_documentstatus
    ADD CONSTRAINT adtable_padocumentstatus FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_measurecalc adtable_pameasurecalc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_measurecalc
    ADD CONSTRAINT adtable_pameasurecalc FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_sla_measure adtable_paslameasure; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_sla_measure
    ADD CONSTRAINT adtable_paslameasure FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_workflow adtable_pporderworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_workflow
    ADD CONSTRAINT adtable_pporderworkflow FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request adtable_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT adtable_rrequest FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ws_webservicetype adtable_wswebservicetype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicetype
    ADD CONSTRAINT adtable_wswebservicetype FOREIGN KEY (ad_table_id) REFERENCES adempiere.ad_table(ad_table_id);


--
-- Name: ad_menu adtask_admenu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu
    ADD CONSTRAINT adtask_admenu FOREIGN KEY (ad_task_id) REFERENCES adempiere.ad_task(ad_task_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_task_access adtask_adtaskaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_task_access
    ADD CONSTRAINT adtask_adtaskaccess FOREIGN KEY (ad_task_id) REFERENCES adempiere.ad_task(ad_task_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node adtask_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT adtask_adwfnode FOREIGN KEY (ad_task_id) REFERENCES adempiere.ad_task(ad_task_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workbenchwindow adtask_adworkbenchwindow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbenchwindow
    ADD CONSTRAINT adtask_adworkbenchwindow FOREIGN KEY (ad_task_id) REFERENCES adempiere.ad_task(ad_task_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_clientexception adtask_aspclientexception; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientexception
    ADD CONSTRAINT adtask_aspclientexception FOREIGN KEY (ad_task_id) REFERENCES adempiere.ad_task(ad_task_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_task adtask_asptask; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_task
    ADD CONSTRAINT adtask_asptask FOREIGN KEY (ad_task_id) REFERENCES adempiere.ad_task(ad_task_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow adtask_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT adtask_iworkflow FOREIGN KEY (ad_task_id) REFERENCES adempiere.ad_task(ad_task_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node adtask_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT adtask_ppordernode FOREIGN KEY (ad_task_id) REFERENCES adempiere.ad_task(ad_task_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_role adtree_adrole; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_role
    ADD CONSTRAINT adtree_adrole FOREIGN KEY (ad_tree_menu_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treebar adtree_adtreebar; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treebar
    ADD CONSTRAINT adtree_adtreebar FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treenode adtree_adtreenode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenode
    ADD CONSTRAINT adtree_adtreenode FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treenodebp adtree_adtreenodebp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodebp
    ADD CONSTRAINT adtree_adtreenodebp FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treenodecmc adtree_adtreenodecmc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodecmc
    ADD CONSTRAINT adtree_adtreenodecmc FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treenodecmm adtree_adtreenodecmm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodecmm
    ADD CONSTRAINT adtree_adtreenodecmm FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treenodecms adtree_adtreenodecms; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodecms
    ADD CONSTRAINT adtree_adtreenodecms FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treenodecmt adtree_adtreenodecmt; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodecmt
    ADD CONSTRAINT adtree_adtreenodecmt FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treenodemm adtree_adtreenodemm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodemm
    ADD CONSTRAINT adtree_adtreenodemm FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treenodepr adtree_adtreenodepr; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodepr
    ADD CONSTRAINT adtree_adtreenodepr FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treenodeu1 adtree_adtreenodeu1; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodeu1
    ADD CONSTRAINT adtree_adtreenodeu1 FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treenodeu2 adtree_adtreenodeu2; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodeu2
    ADD CONSTRAINT adtree_adtreenodeu2 FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treenodeu3 adtree_adtreenodeu3; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodeu3
    ADD CONSTRAINT adtree_adtreenodeu3 FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treenodeu4 adtree_adtreenodeu4; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treenodeu4
    ADD CONSTRAINT adtree_adtreenodeu4 FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_element adtree_celement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_element
    ADD CONSTRAINT adtree_celement FOREIGN KEY (ad_tree_id) REFERENCES adempiere.ad_tree(ad_tree_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_hierarchy adtreeaccount_pahierarchy; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_hierarchy
    ADD CONSTRAINT adtreeaccount_pahierarchy FOREIGN KEY (ad_tree_account_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo adtreeactivity_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT adtreeactivity_adclientinfo FOREIGN KEY (ad_tree_activity_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_hierarchy adtreeactivity_pahierarchy; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_hierarchy
    ADD CONSTRAINT adtreeactivity_pahierarchy FOREIGN KEY (ad_tree_activity_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo adtreebpartner_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT adtreebpartner_adclientinfo FOREIGN KEY (ad_tree_bpartner_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_hierarchy adtreebpartner_pahierarchy; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_hierarchy
    ADD CONSTRAINT adtreebpartner_pahierarchy FOREIGN KEY (ad_tree_bpartner_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo adtreecampaign_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT adtreecampaign_adclientinfo FOREIGN KEY (ad_tree_campaign_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_hierarchy adtreecampaign_pahierarchy; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_hierarchy
    ADD CONSTRAINT adtreecampaign_pahierarchy FOREIGN KEY (ad_tree_campaign_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_webproject adtreecmc_cmwebproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_webproject
    ADD CONSTRAINT adtreecmc_cmwebproject FOREIGN KEY (ad_treecmc_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_webproject adtreecmm_cmwebproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_webproject
    ADD CONSTRAINT adtreecmm_cmwebproject FOREIGN KEY (ad_treecmm_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_webproject adtreecms_cmwebproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_webproject
    ADD CONSTRAINT adtreecms_cmwebproject FOREIGN KEY (ad_treecms_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_webproject adtreecmt_cmwebproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_webproject
    ADD CONSTRAINT adtreecmt_cmwebproject FOREIGN KEY (ad_treecmt_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tree_favorite_node adtreefavorite_adtreefavoriten; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tree_favorite_node
    ADD CONSTRAINT adtreefavorite_adtreefavoriten FOREIGN KEY (ad_tree_favorite_id) REFERENCES adempiere.ad_tree_favorite(ad_tree_favorite_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo adtreemenu_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT adtreemenu_adclientinfo FOREIGN KEY (ad_tree_menu_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo adtreeorg_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT adtreeorg_adclientinfo FOREIGN KEY (ad_tree_org_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_role adtreeorg_adrole; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_role
    ADD CONSTRAINT adtreeorg_adrole FOREIGN KEY (ad_tree_org_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_hierarchy adtreeorg_pahierarchy; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_hierarchy
    ADD CONSTRAINT adtreeorg_pahierarchy FOREIGN KEY (ad_tree_org_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo adtreeproduct_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT adtreeproduct_adclientinfo FOREIGN KEY (ad_tree_product_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_hierarchy adtreeproduct_pahierarchy; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_hierarchy
    ADD CONSTRAINT adtreeproduct_pahierarchy FOREIGN KEY (ad_tree_product_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo adtreeproject_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT adtreeproject_adclientinfo FOREIGN KEY (ad_tree_project_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_hierarchy adtreeproject_pahierarchy; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_hierarchy
    ADD CONSTRAINT adtreeproject_pahierarchy FOREIGN KEY (ad_tree_project_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo adtreesalesreg_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT adtreesalesreg_adclientinfo FOREIGN KEY (ad_tree_salesregion_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_hierarchy adtreesr_pahierarchy; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_hierarchy
    ADD CONSTRAINT adtreesr_pahierarchy FOREIGN KEY (ad_tree_salesregion_id) REFERENCES adempiere.ad_tree(ad_tree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_ordersource aduser1_cordersource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_ordersource
    ADD CONSTRAINT aduser1_cordersource FOREIGN KEY (createdby) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_ordersource aduser2_cordersource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_ordersource
    ADD CONSTRAINT aduser2_cordersource FOREIGN KEY (updatedby) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset aduser_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT aduser_aasset FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_change aduser_aassetchange; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change
    ADD CONSTRAINT aduser_aassetchange FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_delivery aduser_aassetdelivery; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_delivery
    ADD CONSTRAINT aduser_aassetdelivery FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_alertrecipient aduser_adalertrecipient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_alertrecipient
    ADD CONSTRAINT aduser_adalertrecipient FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_attachmentnote aduser_adattachmentnote; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_attachmentnote
    ADD CONSTRAINT aduser_adattachmentnote FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ldapaccess aduser_adldapaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ldapaccess
    ADD CONSTRAINT aduser_adldapaccess FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ldapprocessor aduser_adldapprocessor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ldapprocessor
    ADD CONSTRAINT aduser_adldapprocessor FOREIGN KEY (supervisor_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_memo aduser_admemo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_memo
    ADD CONSTRAINT aduser_admemo FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_note aduser_adnote; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_note
    ADD CONSTRAINT aduser_adnote FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_orginfo aduser_adorginfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orginfo
    ADD CONSTRAINT aduser_adorginfo FOREIGN KEY (supervisor_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_private_access aduser_adprivateaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_private_access
    ADD CONSTRAINT aduser_adprivateaccess FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_recentitem aduser_adrecentitem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_recentitem
    ADD CONSTRAINT aduser_adrecentitem FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_scheduler aduser_adscheduler; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_scheduler
    ADD CONSTRAINT aduser_adscheduler FOREIGN KEY (supervisor_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_schedulerrecipient aduser_adschedulerrecipient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_schedulerrecipient
    ADD CONSTRAINT aduser_adschedulerrecipient FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_treebar aduser_adtreebar; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_treebar
    ADD CONSTRAINT aduser_adtreebar FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tree_favorite aduser_adtreefavorite; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tree_favorite
    ADD CONSTRAINT aduser_adtreefavorite FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_userbpaccess aduser_aduserbpaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userbpaccess
    ADD CONSTRAINT aduser_aduserbpaccess FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_userdef_win aduser_aduserdefwin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userdef_win
    ADD CONSTRAINT aduser_aduserdefwin FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_usermail aduser_adusermail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_usermail
    ADD CONSTRAINT aduser_adusermail FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user_orgaccess aduser_aduserorgaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user_orgaccess
    ADD CONSTRAINT aduser_aduserorgaccess FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_userquery aduser_aduserquery; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userquery
    ADD CONSTRAINT aduser_aduserquery FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user_substitute aduser_adusersub; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user_substitute
    ADD CONSTRAINT aduser_adusersub FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_activity aduser_adwfactivity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_activity
    ADD CONSTRAINT aduser_adwfactivity FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_eventaudit aduser_adwfeventaudit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_eventaudit
    ADD CONSTRAINT aduser_adwfeventaudit FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_process aduser_adwfprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_process
    ADD CONSTRAINT aduser_adwfprocess FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_responsible aduser_adwfresponsible; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_responsible
    ADD CONSTRAINT aduser_adwfresponsible FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflowprocessor aduser_adworkflowprocessor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflowprocessor
    ADD CONSTRAINT aduser_adworkflowprocessor FOREIGN KEY (supervisor_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_registration aduser_aregistration; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registration
    ADD CONSTRAINT aduser_aregistration FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq_topicsubscriber aduser_arfqtopicsubcr; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq_topicsubscriber
    ADD CONSTRAINT aduser_arfqtopicsubcr FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_bid aduser_bbid; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_bid
    ADD CONSTRAINT aduser_bbid FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_buyer aduser_bbuyer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_buyer
    ADD CONSTRAINT aduser_bbuyer FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_buyerfunds aduser_bbuyerfunds; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_buyerfunds
    ADD CONSTRAINT aduser_bbuyerfunds FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_bidcomment aduser_bidcomment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_bidcomment
    ADD CONSTRAINT aduser_bidcomment FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_offer aduser_boffer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_offer
    ADD CONSTRAINT aduser_boffer FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_seller aduser_bseller; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_seller
    ADD CONSTRAINT aduser_bseller FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_sellerfunds aduser_bsellerfunds; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_sellerfunds
    ADD CONSTRAINT aduser_bsellerfunds FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctprocessor aduser_cacctprocessor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctprocessor
    ADD CONSTRAINT aduser_cacctprocessor FOREIGN KEY (supervisor_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_alertprocessor aduser_calertprocessor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_alertprocessor
    ADD CONSTRAINT aduser_calertprocessor FOREIGN KEY (supervisor_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_bankaccount aduser_cbpbankaccount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_bankaccount
    ADD CONSTRAINT aduser_cbpbankaccount FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_contactactivity aduser_ccontactactivity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_contactactivity
    ADD CONSTRAINT aduser_ccontactactivity FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunningrunentry aduser_cdunningrunentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrunentry
    ADD CONSTRAINT aduser_cdunningrunentry FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice aduser_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT aduser_cinvoice FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatch aduser_cinvoicebatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatch
    ADD CONSTRAINT aduser_cinvoicebatch FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline aduser_cinvoicebatchline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT aduser_cinvoicebatchline FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_jobassignment aduser_cjobassignment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_jobassignment
    ADD CONSTRAINT aduser_cjobassignment FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_chatentry aduser_cmchatentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chatentry
    ADD CONSTRAINT aduser_cmchatentry FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_chattypeupdate aduser_cmchattypeupdate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chattypeupdate
    ADD CONSTRAINT aduser_cmchattypeupdate FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_chatupdate aduser_cmchatupdate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chatupdate
    ADD CONSTRAINT aduser_cmchatupdate FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_webaccesslog aduser_cmwebaccesslog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_webaccesslog
    ADD CONSTRAINT aduser_cmwebaccesslog FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_opportunity aduser_copportunity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_opportunity
    ADD CONSTRAINT aduser_copportunity FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order aduser_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT aduser_corder FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orgassignment aduser_corgassignment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orgassignment
    ADD CONSTRAINT aduser_corgassignment FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_pos aduser_cpos; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_pos
    ADD CONSTRAINT aduser_cpos FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project aduser_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT aduser_cproject FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq aduser_crfq; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq
    ADD CONSTRAINT aduser_crfq FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqresponse aduser_crfqresponse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqresponse
    ADD CONSTRAINT aduser_crfqresponse FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_userremuneration aduser_cuserremuneration; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_userremuneration
    ADD CONSTRAINT aduser_cuserremuneration FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order aduser_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT aduser_ddorder FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee aduser_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT aduser_hremployee FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobopening aduser_hrjobopening; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopening
    ADD CONSTRAINT aduser_hrjobopening FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobopeninghistory aduser_hrjobopeninghistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopeninghistory
    ADD CONSTRAINT aduser_hrjobopeninghistory FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bpartner aduser_ibpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bpartner
    ADD CONSTRAINT aduser_ibpartner FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice aduser_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT aduser_iinvoice FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_movement aduser_imovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_movement
    ADD CONSTRAINT aduser_imovement FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order aduser_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT aduser_iorder FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout aduser_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT aduser_minout FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement aduser_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT aduser_mmovement FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisition aduser_mrequisition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisition
    ADD CONSTRAINT aduser_mrequisition FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_documentstatus aduser_padocumentstatus; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_documentstatus
    ADD CONSTRAINT aduser_padocumentstatus FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_goal aduser_pagoal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goal
    ADD CONSTRAINT aduser_pagoal FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_pinstance aduser_pinstance; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_pinstance
    ADD CONSTRAINT aduser_pinstance FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector aduser_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT aduser_ppcostcollector FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bomline aduser_pporderbomline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bomline
    ADD CONSTRAINT aduser_pporderbomline FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_categoryupdates aduser_rcategoryupdates; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_categoryupdates
    ADD CONSTRAINT aduser_rcategoryupdates FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_contactinterest aduser_rcontactinterest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_contactinterest
    ADD CONSTRAINT aduser_rcontactinterest FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_issueuser aduser_rissueuser; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issueuser
    ADD CONSTRAINT aduser_rissueuser FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request aduser_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT aduser_rrequest FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction aduser_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT aduser_rrequestaction FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestprocessor aduser_rrequestprocessor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestprocessor
    ADD CONSTRAINT aduser_rrequestprocessor FOREIGN KEY (supervisor_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestprocessor_route aduser_rrequestprocessorroute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestprocessor_route
    ADD CONSTRAINT aduser_rrequestprocessorroute FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requesttypeupdates aduser_rrequesttypeupdates; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requesttypeupdates
    ADD CONSTRAINT aduser_rrequesttypeupdates FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestupdates aduser_rrequestupdates; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestupdates
    ADD CONSTRAINT aduser_rrequestupdates FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_groupupdates aduser_ruserupdates; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_groupupdates
    ADD CONSTRAINT aduser_ruserupdates FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice aduser_sr_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT aduser_sr_cinvoice FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order aduser_sr_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT aduser_sr_corder FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project aduser_sr_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT aduser_sr_cproject FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout aduser_sr_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT aduser_sr_minout FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_resource aduser_sresource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_resource
    ADD CONSTRAINT aduser_sresource FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user aduser_supervisor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user
    ADD CONSTRAINT aduser_supervisor FOREIGN KEY (supervisor_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user_roles aduser_userroles; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user_roles
    ADD CONSTRAINT aduser_userroles FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_advertisement aduser_wadvertisement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_advertisement
    ADD CONSTRAINT aduser_wadvertisement FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_basket aduser_wbasket; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_basket
    ADD CONSTRAINT aduser_wbasket FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_click aduser_wclick; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_click
    ADD CONSTRAINT aduser_wclick FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_counter aduser_wcounter; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_counter
    ADD CONSTRAINT aduser_wcounter FOREIGN KEY (ad_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order aduserbill_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT aduserbill_corder FOREIGN KEY (bill_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_userdef_field aduserdeftab_aduserdeffield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userdef_field
    ADD CONSTRAINT aduserdeftab_aduserdeffield FOREIGN KEY (ad_userdef_tab_id) REFERENCES adempiere.ad_userdef_tab(ad_userdef_tab_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_userdef_tab aduserdefwin_aduserdeftab; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userdef_tab
    ADD CONSTRAINT aduserdefwin_aduserdeftab FOREIGN KEY (ad_userdef_win_id) REFERENCES adempiere.ad_userdef_win(ad_userdef_win_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner adusersalesrep_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT adusersalesrep_cbpartner FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq adusersalesrep_crfq; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq
    ADD CONSTRAINT adusersalesrep_crfq FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice adusersalesrep_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT adusersalesrep_iinvoice FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order adusersalesrep_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT adusersalesrep_iorder FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request adusersr_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT adusersr_rrequest FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction adusersr_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT adusersr_rrequestaction FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user_substitute adusersub_ad_usersub; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user_substitute
    ADD CONSTRAINT adusersub_ad_usersub FOREIGN KEY (substitute_id) REFERENCES adempiere.ad_user(ad_user_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_role adusersupervisor_adrole; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_role
    ADD CONSTRAINT adusersupervisor_adrole FOREIGN KEY (supervisor_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_para advalrule_ad_processpara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_para
    ADD CONSTRAINT advalrule_ad_processpara FOREIGN KEY (ad_val_rule_id) REFERENCES adempiere.ad_val_rule(ad_val_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_attribute advalrule_adattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_attribute
    ADD CONSTRAINT advalrule_adattribute FOREIGN KEY (ad_val_rule_id) REFERENCES adempiere.ad_val_rule(ad_val_rule_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_field advalrule_adbrowsefield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_field
    ADD CONSTRAINT advalrule_adbrowsefield FOREIGN KEY (ad_val_rule_id) REFERENCES adempiere.ad_val_rule(ad_val_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_field advalrule_adfield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field
    ADD CONSTRAINT advalrule_adfield FOREIGN KEY (ad_val_rule_id) REFERENCES adempiere.ad_val_rule(ad_val_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse adview_adbrowse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse
    ADD CONSTRAINT adview_adbrowse FOREIGN KEY (ad_view_id) REFERENCES adempiere.ad_view(ad_view_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adview_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adview_adpackageexpdetail FOREIGN KEY (ad_view_id) REFERENCES adempiere.ad_view(ad_view_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_view_column adview_adviewcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_column
    ADD CONSTRAINT adview_adviewcolumn FOREIGN KEY (ad_view_id) REFERENCES adempiere.ad_view(ad_view_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_view_definition adview_adviewdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_definition
    ADD CONSTRAINT adview_adviewdefinition FOREIGN KEY (ad_view_id) REFERENCES adempiere.ad_view(ad_view_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_view_trl adview_adviewtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_trl
    ADD CONSTRAINT adview_adviewtrl FOREIGN KEY (ad_view_id) REFERENCES adempiere.ad_view(ad_view_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node adview_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT adview_adwfnode FOREIGN KEY (ad_view_id) REFERENCES adempiere.ad_view(ad_view_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_field adviewcolumn_adbrowsefield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_field
    ADD CONSTRAINT adviewcolumn_adbrowsefield FOREIGN KEY (ad_view_column_id) REFERENCES adempiere.ad_view_column(ad_view_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_view_column_trl adviewcolumn_adviewcolumntrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_column_trl
    ADD CONSTRAINT adviewcolumn_adviewcolumntrl FOREIGN KEY (ad_view_column_id) REFERENCES adempiere.ad_view_column(ad_view_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_view_column adviewdefinition_adviewcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_column
    ADD CONSTRAINT adviewdefinition_adviewcolumn FOREIGN KEY (ad_view_definition_id) REFERENCES adempiere.ad_view_definition(ad_view_definition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_note adwfactivity_adnote; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_note
    ADD CONSTRAINT adwfactivity_adnote FOREIGN KEY (ad_wf_activity_id) REFERENCES adempiere.ad_wf_activity(ad_wf_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_activityresult adwfactivity_adwfactresult; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_activityresult
    ADD CONSTRAINT adwfactivity_adwfactresult FOREIGN KEY (ad_wf_activity_id) REFERENCES adempiere.ad_wf_activity(ad_wf_activity_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node adwfblock_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT adwfblock_adwfnode FOREIGN KEY (ad_wf_block_id) REFERENCES adempiere.ad_wf_block(ad_wf_block_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node adwfblock_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT adwfblock_ppordernode FOREIGN KEY (ad_wf_block_id) REFERENCES adempiere.ad_wf_block(ad_wf_block_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_nodenext adwfnext_ppordernodenext; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_nodenext
    ADD CONSTRAINT adwfnext_ppordernodenext FOREIGN KEY (ad_wf_next_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_activity adwfnode_adwfactivity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_activity
    ADD CONSTRAINT adwfnode_adwfactivity FOREIGN KEY (ad_wf_node_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_eventaudit adwfnode_adwfeventaudit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_eventaudit
    ADD CONSTRAINT adwfnode_adwfeventaudit FOREIGN KEY (ad_wf_node_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_nodenext adwfnode_adwfnodenext; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_nodenext
    ADD CONSTRAINT adwfnode_adwfnodenext FOREIGN KEY (ad_wf_node_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node_para adwfnode_adwfnodepara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node_para
    ADD CONSTRAINT adwfnode_adwfnodepara FOREIGN KEY (ad_wf_node_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow adwfnode_adworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow
    ADD CONSTRAINT adwfnode_adworkflow FOREIGN KEY (ad_wf_node_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_clientexception adwfnode_aspclientexception; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientexception
    ADD CONSTRAINT adwfnode_aspclientexception FOREIGN KEY (ad_wf_node_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow adwfnode_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT adwfnode_iworkflow FOREIGN KEY (ad_wf_node_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node adwfnode_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT adwfnode_ppordernode FOREIGN KEY (ad_wf_node_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_nodenext adwfnode_ppordernodenext; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_nodenext
    ADD CONSTRAINT adwfnode_ppordernodenext FOREIGN KEY (ad_wf_node_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_workflow adwfnode_pporderworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_workflow
    ADD CONSTRAINT adwfnode_pporderworkflow FOREIGN KEY (ad_wf_node_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_wf_node_asset adwfnode_ppwfnodeasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_wf_node_asset
    ADD CONSTRAINT adwfnode_ppwfnodeasset FOREIGN KEY (ad_wf_node_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_wf_node_product adwfnode_ppwfnodeproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_wf_node_product
    ADD CONSTRAINT adwfnode_ppwfnodeproduct FOREIGN KEY (ad_wf_node_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_nextcondition adwfnodenext_adwfnextcond; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_nextcondition
    ADD CONSTRAINT adwfnodenext_adwfnextcond FOREIGN KEY (ad_wf_nodenext_id) REFERENCES adempiere.ad_wf_nodenext(ad_wf_nodenext_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_nodenext adwfnodenext_adwfnodenext; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_nodenext
    ADD CONSTRAINT adwfnodenext_adwfnodenext FOREIGN KEY (ad_wf_next_id) REFERENCES adempiere.ad_wf_node(ad_wf_node_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_processdata adwfproccess_adwfprocessdata; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_processdata
    ADD CONSTRAINT adwfproccess_adwfprocessdata FOREIGN KEY (ad_wf_process_id) REFERENCES adempiere.ad_wf_process(ad_wf_process_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_activity adwfprocess_adwfactivity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_activity
    ADD CONSTRAINT adwfprocess_adwfactivity FOREIGN KEY (ad_wf_process_id) REFERENCES adempiere.ad_wf_process(ad_wf_process_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_eventaudit adwfprocess_adwfeventaudit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_eventaudit
    ADD CONSTRAINT adwfprocess_adwfeventaudit FOREIGN KEY (ad_wf_process_id) REFERENCES adempiere.ad_wf_process(ad_wf_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_process adwfprocess_adwfprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_process
    ADD CONSTRAINT adwfprocess_adwfprocess FOREIGN KEY (ad_wf_process_id) REFERENCES adempiere.ad_wf_process(ad_wf_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_eventaudit adwfresponsib_adwfeventaudit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_eventaudit
    ADD CONSTRAINT adwfresponsib_adwfeventaudit FOREIGN KEY (ad_wf_responsible_id) REFERENCES adempiere.ad_wf_responsible(ad_wf_responsible_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_activity adwfresponsible_adwfactivity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_activity
    ADD CONSTRAINT adwfresponsible_adwfactivity FOREIGN KEY (ad_wf_responsible_id) REFERENCES adempiere.ad_wf_responsible(ad_wf_responsible_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node adwfresponsible_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT adwfresponsible_adwfnode FOREIGN KEY (ad_wf_responsible_id) REFERENCES adempiere.ad_wf_responsible(ad_wf_responsible_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_process adwfresponsible_adwfprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_process
    ADD CONSTRAINT adwfresponsible_adwfprocess FOREIGN KEY (ad_wf_responsible_id) REFERENCES adempiere.ad_wf_responsible(ad_wf_responsible_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow adwfresponsible_adworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow
    ADD CONSTRAINT adwfresponsible_adworkflow FOREIGN KEY (ad_wf_responsible_id) REFERENCES adempiere.ad_wf_responsible(ad_wf_responsible_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow adwfresponsible_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT adwfresponsible_iworkflow FOREIGN KEY (ad_wf_responsible_id) REFERENCES adempiere.ad_wf_responsible(ad_wf_responsible_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node adwfresponsible_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT adwfresponsible_ppordernode FOREIGN KEY (ad_wf_responsible_id) REFERENCES adempiere.ad_wf_responsible(ad_wf_responsible_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_workflow adwfresponsible_pporderworkflo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_workflow
    ADD CONSTRAINT adwfresponsible_pporderworkflo FOREIGN KEY (ad_wf_responsible_id) REFERENCES adempiere.ad_wf_responsible(ad_wf_responsible_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse adwindow_adbrowse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse
    ADD CONSTRAINT adwindow_adbrowse FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_issue adwindow_adissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_issue
    ADD CONSTRAINT adwindow_adissue FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_menu adwindow_admenu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu
    ADD CONSTRAINT adwindow_admenu FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_common adwindow_adpackageexpcommon; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_common
    ADD CONSTRAINT adwindow_adpackageexpcommon FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adwindow_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adwindow_adpackageexpdetail FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_recentitem adwindow_adrecentitem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_recentitem
    ADD CONSTRAINT adwindow_adrecentitem FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_table adwindow_adreftable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_table
    ADD CONSTRAINT adwindow_adreftable FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_searchdefinition adwindow_adsearchdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_searchdefinition
    ADD CONSTRAINT adwindow_adsearchdefinition FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_userdef_win adwindow_aduserdefwin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userdef_win
    ADD CONSTRAINT adwindow_aduserdefwin FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node adwindow_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT adwindow_adwfnode FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_window_access adwindow_adwindowaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window_access
    ADD CONSTRAINT adwindow_adwindowaccess FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workbenchwindow adwindow_adworkbenchwindow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbenchwindow
    ADD CONSTRAINT adwindow_adworkbenchwindow FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_zoomcondition adwindow_adzoomcondition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_zoomcondition
    ADD CONSTRAINT adwindow_adzoomcondition FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_clientexception adwindow_aspclientexception; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientexception
    ADD CONSTRAINT adwindow_aspclientexception FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_window adwindow_aspwindow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_window
    ADD CONSTRAINT adwindow_aspwindow FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow adwindow_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT adwindow_iworkflow FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_dashboardcontent adwindow_padashboardcontent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_dashboardcontent
    ADD CONSTRAINT adwindow_padashboardcontent FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_documentstatus adwindow_padocumentstatus; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_documentstatus
    ADD CONSTRAINT adwindow_padocumentstatus FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node adwindow_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT adwindow_ppordernode FOREIGN KEY (ad_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table adwindowpo_adtable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table
    ADD CONSTRAINT adwindowpo_adtable FOREIGN KEY (po_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_desktopworkbench adworkbench_addesktopwb; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_desktopworkbench
    ADD CONSTRAINT adworkbench_addesktopwb FOREIGN KEY (ad_workbench_id) REFERENCES adempiere.ad_workbench(ad_workbench_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_common adworkbench_adpackageexpcommon; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_common
    ADD CONSTRAINT adworkbench_adpackageexpcommon FOREIGN KEY (ad_workbench_id) REFERENCES adempiere.ad_workbench(ad_workbench_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adworkbench_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adworkbench_adpackageexpdetail FOREIGN KEY (ad_workbench_id) REFERENCES adempiere.ad_workbench(ad_workbench_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workbench_trl adworkbench_adworkbenchtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbench_trl
    ADD CONSTRAINT adworkbench_adworkbenchtrl FOREIGN KEY (ad_workbench_id) REFERENCES adempiere.ad_workbench(ad_workbench_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workbenchwindow adworkbench_adworkbenchwindow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbenchwindow
    ADD CONSTRAINT adworkbench_adworkbenchwindow FOREIGN KEY (ad_workbench_id) REFERENCES adempiere.ad_workbench(ad_workbench_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_menu adworkflow_admenu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu
    ADD CONSTRAINT adworkflow_admenu FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_common adworkflow_adpackageexpcommon; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_common
    ADD CONSTRAINT adworkflow_adpackageexpcommon FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_package_exp_detail adworkflow_adpackageexpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_package_exp_detail
    ADD CONSTRAINT adworkflow_adpackageexpdetail FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process adworkflow_adprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process
    ADD CONSTRAINT adworkflow_adprocess FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_activity adworkflow_adwfactivity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_activity
    ADD CONSTRAINT adworkflow_adwfactivity FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_block adworkflow_adwfblock; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_block
    ADD CONSTRAINT adworkflow_adwfblock FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node adworkflow_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT adworkflow_adwfnode FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node adworkflow_adwfnodesubflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT adworkflow_adwfnodesubflow FOREIGN KEY (workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_process adworkflow_adwfprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_process
    ADD CONSTRAINT adworkflow_adwfprocess FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_clientexception adworkflow_aspclientexception; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientexception
    ADD CONSTRAINT adworkflow_aspclientexception FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_workflow adworkflow_aspworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_workflow
    ADD CONSTRAINT adworkflow_aspworkflow FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_process adworkflow_hrprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT adworkflow_hrprocess FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow adworkflow_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT adworkflow_iworkflow FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order adworkflow_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT adworkflow_pporder FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_cost adworkflow_ppordercost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_cost
    ADD CONSTRAINT adworkflow_ppordercost FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node adworkflow_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT adworkflow_ppordernode FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_workflow adworkflow_pporderworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_workflow
    ADD CONSTRAINT adworkflow_pporderworkflow FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_planning adworkflow_ppproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_planning
    ADD CONSTRAINT adworkflow_ppproductplanning FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: qm_specification adworkflow_qmspecification; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.qm_specification
    ADD CONSTRAINT adworkflow_qmspecification FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow adworkflowprocessor_adwf; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow
    ADD CONSTRAINT adworkflowprocessor_adwf FOREIGN KEY (ad_workflowprocessor_id) REFERENCES adempiere.ad_workflowprocessor(ad_workflowprocessor_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow adworkflowprocessor_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT adworkflowprocessor_iworkflow FOREIGN KEY (ad_workflowprocessor_id) REFERENCES adempiere.ad_workflowprocessor(ad_workflowprocessor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflowprocessorlog adworkflowprocessor_log; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflowprocessorlog
    ADD CONSTRAINT adworkflowprocessor_log FOREIGN KEY (ad_workflowprocessor_id) REFERENCES adempiere.ad_workflowprocessor(ad_workflowprocessor_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_workflow adworkflowprocessor_pporderwor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_workflow
    ADD CONSTRAINT adworkflowprocessor_pporderwor FOREIGN KEY (ad_workflowprocessor_id) REFERENCES adempiere.ad_workflowprocessor(ad_workflowprocessor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow_access adworkfow_workflowaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow_access
    ADD CONSTRAINT adworkfow_workflowaccess FOREIGN KEY (ad_workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_build aendasset_adepreciationbuild; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_build
    ADD CONSTRAINT aendasset_adepreciationbuild FOREIGN KEY (a_end_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_forecast aendasset_adepreciationforecas; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_forecast
    ADD CONSTRAINT aendasset_adepreciationforecas FOREIGN KEY (a_end_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_workfile afundingmode_adepreciationwork; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_workfile
    ADD CONSTRAINT afundingmode_adepreciationwork FOREIGN KEY (a_fundingmode_id) REFERENCES adempiere.a_fundingmode(a_fundingmode_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_fundingmode_acct afundingmode_afundingmodeacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_fundingmode_acct
    ADD CONSTRAINT afundingmode_afundingmodeacct FOREIGN KEY (a_fundingmode_id) REFERENCES adempiere.a_fundingmode(a_fundingmode_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline aliasvalidcombination_gljourna; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT aliasvalidcombination_gljourna FOREIGN KEY (alias_validcombination_id) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leavetypecombination allowedleavetype_hrleavetypeco; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavetypecombination
    ADD CONSTRAINT allowedleavetype_hrleavetypeco FOREIGN KEY (allowedleavetype_id) REFERENCES adempiere.hr_leavetype(hr_leavetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset aparentasset_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT aparentasset_aasset FOREIGN KEY (a_parent_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_change aparentasset_aassetchange; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change
    ADD CONSTRAINT aparentasset_aassetchange FOREIGN KEY (a_parent_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_registrationproduct aregattribute_aregproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registrationproduct
    ADD CONSTRAINT aregattribute_aregproduct FOREIGN KEY (a_registrationattribute_id) REFERENCES adempiere.a_registrationattribute(a_registrationattribute_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_registrationvalue aregattribute_aregvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registrationvalue
    ADD CONSTRAINT aregattribute_aregvalue FOREIGN KEY (a_registrationattribute_id) REFERENCES adempiere.a_registrationattribute(a_registrationattribute_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_registrationvalue aregistration_aregvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registrationvalue
    ADD CONSTRAINT aregistration_aregvalue FOREIGN KEY (a_registration_id) REFERENCES adempiere.a_registration(a_registration_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_browse asplevel_aspbrowse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_browse
    ADD CONSTRAINT asplevel_aspbrowse FOREIGN KEY (asp_level_id) REFERENCES adempiere.asp_level(asp_level_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_clientlevel asplevel_aspclientlevel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientlevel
    ADD CONSTRAINT asplevel_aspclientlevel FOREIGN KEY (asp_level_id) REFERENCES adempiere.asp_level(asp_level_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_form asplevel_aspform; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_form
    ADD CONSTRAINT asplevel_aspform FOREIGN KEY (asp_level_id) REFERENCES adempiere.asp_level(asp_level_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_process asplevel_aspprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_process
    ADD CONSTRAINT asplevel_aspprocess FOREIGN KEY (asp_level_id) REFERENCES adempiere.asp_level(asp_level_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_task asplevel_asptask; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_task
    ADD CONSTRAINT asplevel_asptask FOREIGN KEY (asp_level_id) REFERENCES adempiere.asp_level(asp_level_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_window asplevel_aspwindow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_window
    ADD CONSTRAINT asplevel_aspwindow FOREIGN KEY (asp_level_id) REFERENCES adempiere.asp_level(asp_level_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_workflow asplevel_aspworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_workflow
    ADD CONSTRAINT asplevel_aspworkflow FOREIGN KEY (asp_level_id) REFERENCES adempiere.asp_level(asp_level_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_clientlevel aspmodule_aspclientlevel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_clientlevel
    ADD CONSTRAINT aspmodule_aspclientlevel FOREIGN KEY (asp_module_id) REFERENCES adempiere.asp_module(asp_module_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_level aspmodule_asplevel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_level
    ADD CONSTRAINT aspmodule_asplevel FOREIGN KEY (asp_module_id) REFERENCES adempiere.asp_module(asp_module_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_process_para aspprocess_aspprocesspara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_process_para
    ADD CONSTRAINT aspprocess_aspprocesspara FOREIGN KEY (asp_process_id) REFERENCES adempiere.asp_process(asp_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_field asptab_aspfield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_field
    ADD CONSTRAINT asptab_aspfield FOREIGN KEY (asp_tab_id) REFERENCES adempiere.asp_tab(asp_tab_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: asp_tab aspwindow_asptab; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.asp_tab
    ADD CONSTRAINT aspwindow_asptab FOREIGN KEY (asp_window_id) REFERENCES adempiere.asp_window(asp_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_build astartasset_adepreciationbuild; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_build
    ADD CONSTRAINT astartasset_adepreciationbuild FOREIGN KEY (a_start_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_forecast astartasset_adepreciationforec; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_forecast
    ADD CONSTRAINT astartasset_adepreciationforec FOREIGN KEY (a_start_asset_id) REFERENCES adempiere.a_asset(a_asset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_field axiscolumn_adbrowsefield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_field
    ADD CONSTRAINT axiscolumn_adbrowsefield FOREIGN KEY (axis_column_id) REFERENCES adempiere.ad_view_column(ad_view_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_field axisparentcolumn_adbrowsefield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_field
    ADD CONSTRAINT axisparentcolumn_adbrowsefield FOREIGN KEY (axis_parent_column_id) REFERENCES adempiere.ad_view_column(ad_view_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_pricelist basepricelist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_pricelist
    ADD CONSTRAINT basepricelist FOREIGN KEY (basepricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_bid bbuyer_bbid; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_bid
    ADD CONSTRAINT bbuyer_bbid FOREIGN KEY (ad_user_id) REFERENCES adempiere.b_buyer(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_buyerfunds bbuyer_bbuyerfunds; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_buyerfunds
    ADD CONSTRAINT bbuyer_bbuyerfunds FOREIGN KEY (ad_user_id) REFERENCES adempiere.b_buyer(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_bid bbuyerfunds_bbid; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_bid
    ADD CONSTRAINT bbuyerfunds_bbid FOREIGN KEY (b_buyerfunds_id) REFERENCES adempiere.b_buyerfunds(b_buyerfunds_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_withholding benefici_cwithholding; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_withholding
    ADD CONSTRAINT benefici_cwithholding FOREIGN KEY (beneficiary) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_offer bseller_boffer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_offer
    ADD CONSTRAINT bseller_boffer FOREIGN KEY (ad_user_id) REFERENCES adempiere.b_seller(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_sellerfunds bseller_bsellerfunds; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_sellerfunds
    ADD CONSTRAINT bseller_bsellerfunds FOREIGN KEY (ad_user_id) REFERENCES adempiere.b_seller(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_offer bsellerfunds_boffer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_offer
    ADD CONSTRAINT bsellerfunds_boffer FOREIGN KEY (b_sellerfunds_id) REFERENCES adempiere.b_sellerfunds(b_sellerfunds_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_bid btopic_bbid; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_bid
    ADD CONSTRAINT btopic_bbid FOREIGN KEY (b_topic_id) REFERENCES adempiere.b_topic(b_topic_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_bidcomment btopic_bbidcomment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_bidcomment
    ADD CONSTRAINT btopic_bbidcomment FOREIGN KEY (b_topic_id) REFERENCES adempiere.b_topic(b_topic_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_offer btopic_boffer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_offer
    ADD CONSTRAINT btopic_boffer FOREIGN KEY (b_topic_id) REFERENCES adempiere.b_topic(b_topic_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_topic btopiccategory_btopic; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_topic
    ADD CONSTRAINT btopiccategory_btopic FOREIGN KEY (b_topiccategory_id) REFERENCES adempiere.b_topiccategory(b_topiccategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_topic btopictype_btopic; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_topic
    ADD CONSTRAINT btopictype_btopic FOREIGN KEY (b_topictype_id) REFERENCES adempiere.b_topictype(b_topictype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_topiccategory btopictype_btopiccategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_topiccategory
    ADD CONSTRAINT btopictype_btopiccategory FOREIGN KEY (b_topictype_id) REFERENCES adempiere.b_topictype(b_topictype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journal c_acctschema_gl_journal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journal
    ADD CONSTRAINT c_acctschema_gl_journal FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_edi c_bpartner_cbpedi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_edi
    ADD CONSTRAINT c_bpartner_cbpedi FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request c_bpartner_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT c_bpartner_rrequest FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice c_bplocation_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT c_bplocation_cinvoice FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_vendor_acct c_buspartner_c_bp_vendor_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_vendor_acct
    ADD CONSTRAINT c_buspartner_c_bp_vendor_acct FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct c_buspartner_fact_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT c_buspartner_fact_acct FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner_location c_buspartner_locationclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner_location
    ADD CONSTRAINT c_buspartner_locationclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner_location c_buspartner_locationorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner_location
    ADD CONSTRAINT c_buspartner_locationorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_po c_buspartner_m_product_po; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_po
    ADD CONSTRAINT c_buspartner_m_product_po FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_year c_calendar_year; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_year
    ADD CONSTRAINT c_calendar_year FOREIGN KEY (c_calendar_id) REFERENCES adempiere.c_calendar(c_calendar_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_calendar c_calendarclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_calendar
    ADD CONSTRAINT c_calendarclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_nonbusinessday c_calendarnonbusinessday; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_nonbusinessday
    ADD CONSTRAINT c_calendarnonbusinessday FOREIGN KEY (c_calendar_id) REFERENCES adempiere.c_calendar(c_calendar_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_calendar c_calendarorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_calendar
    ADD CONSTRAINT c_calendarorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_city c_cityclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_city
    ADD CONSTRAINT c_cityclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_city c_cityorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_city
    ADD CONSTRAINT c_cityorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_conversion_rate c_conversion_rateclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_conversion_rate
    ADD CONSTRAINT c_conversion_rateclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_conversion_rate c_conversion_rateorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_conversion_rate
    ADD CONSTRAINT c_conversion_rateorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax c_country_c_tax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax
    ADD CONSTRAINT c_country_c_tax FOREIGN KEY (c_country_id) REFERENCES adempiere.c_country(c_country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_location c_country_location; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_location
    ADD CONSTRAINT c_country_location FOREIGN KEY (c_country_id) REFERENCES adempiere.c_country(c_country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_country c_countryclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_country
    ADD CONSTRAINT c_countryclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_country c_countryorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_country
    ADD CONSTRAINT c_countryorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax c_countryto_c_tax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax
    ADD CONSTRAINT c_countryto_c_tax FOREIGN KEY (to_country_id) REFERENCES adempiere.c_country(c_country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_role c_currency_ad_role; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_role
    ADD CONSTRAINT c_currency_ad_role FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema c_currency_c_acctschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema
    ADD CONSTRAINT c_currency_c_acctschema FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct c_currency_fact_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT c_currency_fact_acct FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_currency c_currencyclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_currency
    ADD CONSTRAINT c_currencyclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_conversion_rate c_currencyconvrateto; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_conversion_rate
    ADD CONSTRAINT c_currencyconvrateto FOREIGN KEY (c_currency_id_to) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_currency c_currencyorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_currency
    ADD CONSTRAINT c_currencyorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order c_doctype_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT c_doctype_corder FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_element c_elementorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_element
    ADD CONSTRAINT c_elementorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_orginfo c_location_ad_orginfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orginfo
    ADD CONSTRAINT c_location_ad_orginfo FOREIGN KEY (c_location_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_warehouse c_location_warehouse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_warehouse
    ADD CONSTRAINT c_location_warehouse FOREIGN KEY (c_location_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct c_locationfrom_fact_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT c_locationfrom_fact_acct FOREIGN KEY (c_locfrom_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct c_locationto_fact_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT c_locationto_fact_acct FOREIGN KEY (c_locto_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_nonbusinessday c_nonbusinesdaysclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_nonbusinessday
    ADD CONSTRAINT c_nonbusinesdaysclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_nonbusinessday c_nonbusinesdaysorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_nonbusinessday
    ADD CONSTRAINT c_nonbusinesdaysorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment c_payment__c_cashbo_c_cashbook; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT c_payment__c_cashbo_c_cashbook FOREIGN KEY (c_cashbook_id) REFERENCES adempiere.c_cashbook(c_cashbook_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journal c_period_journal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journal
    ADD CONSTRAINT c_period_journal FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalbatch c_period_journalbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalbatch
    ADD CONSTRAINT c_period_journalbatch FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_periodcontrol c_period_periodcontrol; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_periodcontrol
    ADD CONSTRAINT c_period_periodcontrol FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_period c_periodclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_period
    ADD CONSTRAINT c_periodclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_period c_periodorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_period
    ADD CONSTRAINT c_periodorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct c_project_fact_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT c_project_fact_acct FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project_acct c_project_projectacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project_acct
    ADD CONSTRAINT c_project_projectacct FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline c_projectphase_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT c_projectphase_minoutline FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax c_region_c_tax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax
    ADD CONSTRAINT c_region_c_tax FOREIGN KEY (c_region_id) REFERENCES adempiere.c_region(c_region_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_location c_region_location; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_location
    ADD CONSTRAINT c_region_location FOREIGN KEY (c_region_id) REFERENCES adempiere.c_region(c_region_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_region c_regionclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_region
    ADD CONSTRAINT c_regionclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_region c_regionorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_region
    ADD CONSTRAINT c_regionorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax c_regionto_c_tax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax
    ADD CONSTRAINT c_regionto_c_tax FOREIGN KEY (to_region_id) REFERENCES adempiere.c_region(c_region_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq_topicsubscriber c_rfqtopic_subscriber; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq_topicsubscriber
    ADD CONSTRAINT c_rfqtopic_subscriber FOREIGN KEY (c_rfq_topic_id) REFERENCES adempiere.c_rfq_topic(c_rfq_topic_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct c_salesregion_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT c_salesregion_factacct FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_uom_conversion c_uom_conversionclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_uom_conversion
    ADD CONSTRAINT c_uom_conversionclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_uom_conversion c_uom_conversionorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_uom_conversion
    ADD CONSTRAINT c_uom_conversionorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct c_uom_fact_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT c_uom_fact_acct FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo c_uom_length_ad_clientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT c_uom_length_ad_clientinfo FOREIGN KEY (c_uom_length_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_po c_uom_m_product_po; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_po
    ADD CONSTRAINT c_uom_m_product_po FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo c_uom_time_ad_clientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT c_uom_time_ad_clientinfo FOREIGN KEY (c_uom_time_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo c_uom_volume_ad_clientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT c_uom_volume_ad_clientinfo FOREIGN KEY (c_uom_volume_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo c_uom_weight_ad_clientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT c_uom_weight_ad_clientinfo FOREIGN KEY (c_uom_weight_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_uom c_uomclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_uom
    ADD CONSTRAINT c_uomclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_uom_conversion c_uomconversionto; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_uom_conversion
    ADD CONSTRAINT c_uomconversionto FOREIGN KEY (c_uom_to_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_uom c_uomorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_uom
    ADD CONSTRAINT c_uomorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_period c_year_period; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_period
    ADD CONSTRAINT c_year_period FOREIGN KEY (c_year_id) REFERENCES adempiere.c_year(c_year_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_year c_yearclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_year
    ADD CONSTRAINT c_yearclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_year c_yearorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_year
    ADD CONSTRAINT c_yearorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctprocessorlog cacctprocessor_log; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctprocessorlog
    ADD CONSTRAINT cacctprocessor_log FOREIGN KEY (c_acctprocessor_id) REFERENCES adempiere.c_acctprocessor(c_acctprocessor_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo cacctschema1_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT cacctschema1_adclientinfo FOREIGN KEY (c_acctschema1_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_acct cacctschema_aassetacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_acct
    ADD CONSTRAINT cacctschema_aassetacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_change cacctschema_aassetchange; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change
    ADD CONSTRAINT cacctschema_aassetchange FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_change_amt cacctschema_aassetchangeamt; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change_amt
    ADD CONSTRAINT cacctschema_aassetchangeamt FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_group_acct cacctschema_aassetgroupacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_group_acct
    ADD CONSTRAINT cacctschema_aassetgroupacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_reval_entry cacctschema_aassetrevalentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_reval_entry
    ADD CONSTRAINT cacctschema_aassetrevalentry FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_transfer cacctschema_aassettransfer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_transfer
    ADD CONSTRAINT cacctschema_aassettransfer FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_entry cacctschema_adepreciationentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_entry
    ADD CONSTRAINT cacctschema_adepreciationentry FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_fundingmode_acct cacctschema_afundingmodeacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_fundingmode_acct
    ADD CONSTRAINT cacctschema_afundingmodeacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctprocessor cacctschema_cacctprocessor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctprocessor
    ADD CONSTRAINT cacctschema_cacctprocessor FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_gl cacctschema_cacctschemagl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_gl
    ADD CONSTRAINT cacctschema_cacctschemagl FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element cacctschema_caschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT cacctschema_caschemaelement FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct cacctschema_cbankaccountacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT cacctschema_cbankaccountacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_customer_acct cacctschema_cbpcustomeracct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_customer_acct
    ADD CONSTRAINT cacctschema_cbpcustomeracct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_employee_acct cacctschema_cbpemployeeacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_employee_acct
    ADD CONSTRAINT cacctschema_cbpemployeeacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct cacctschema_cbpgroupacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT cacctschema_cbpgroupacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_vendor_acct cacctschema_cbpvendoracct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_vendor_acct
    ADD CONSTRAINT cacctschema_cbpvendoracct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashbook_acct cacctschema_ccashbookacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashbook_acct
    ADD CONSTRAINT cacctschema_ccashbookacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_charge_acct cacctschema_cchargeacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_charge_acct
    ADD CONSTRAINT cacctschema_cchargeacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_currency_acct cacctschema_ccurrencyacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_currency_acct
    ADD CONSTRAINT cacctschema_ccurrencyacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_interorg_acct cacctschema_cinterorgacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_interorg_acct
    ADD CONSTRAINT cacctschema_cinterorgacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project_acct cacctschema_cprojectacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project_acct
    ADD CONSTRAINT cacctschema_cprojectacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_revenuerecognition_plan cacctschema_crevrecplan; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_revenuerecognition_plan
    ADD CONSTRAINT cacctschema_crevrecplan FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax_acct cacctschema_ctaxacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax_acct
    ADD CONSTRAINT cacctschema_ctaxacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdeclarationacct cacctschema_ctaxdeclacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdeclarationacct
    ADD CONSTRAINT cacctschema_ctaxdeclacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination cacctschema_cvalidcombination; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT cacctschema_cvalidcombination FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_withholding_acct cacctschema_cwithholdingacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_withholding_acct
    ADD CONSTRAINT cacctschema_cwithholdingacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default cacctschema_default; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT cacctschema_default FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct cacctschema_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT cacctschema_factacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary cacctschema_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT cacctschema_factacctsummary FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_budgetcontrol cacctschema_glbudgetcontrol; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_budgetcontrol
    ADD CONSTRAINT cacctschema_glbudgetcontrol FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution cacctschema_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT cacctschema_gldist FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_fund cacctschema_glfund; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_fund
    ADD CONSTRAINT cacctschema_glfund FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept_acct cacctschema_hrconceptacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_acct
    ADD CONSTRAINT cacctschema_hrconceptacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_asset cacctschema_iasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_asset
    ADD CONSTRAINT cacctschema_iasset FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget cacctschema_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT cacctschema_ibudget FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal cacctschema_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT cacctschema_ifajournal FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal cacctschema_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT cacctschema_igljournal FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_cost cacctschema_mcost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_cost
    ADD CONSTRAINT cacctschema_mcost FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail cacctschema_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT cacctschema_mcostdetail FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costqueue cacctschema_mcostqueue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costqueue
    ADD CONSTRAINT cacctschema_mcostqueue FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct cacctschema_mprodcatacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT cacctschema_mprodcatacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct cacctschema_mproductacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT cacctschema_mproductacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_costing cacctschema_mproductcosting; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_costing
    ADD CONSTRAINT cacctschema_mproductcosting FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_warehouse_acct cacctschema_mwarehouseacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_warehouse_acct
    ADD CONSTRAINT cacctschema_mwarehouseacct FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_ratio cacctschema_paratio; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_ratio
    ADD CONSTRAINT cacctschema_paratio FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_report cacctschema_pareport; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_report
    ADD CONSTRAINT cacctschema_pareport FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_cost cacctschema_ppordercost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_cost
    ADD CONSTRAINT cacctschema_ppordercost FOREIGN KEY (c_acctschema_id) REFERENCES adempiere.c_acctschema(c_acctschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset cactivity_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT cactivity_aasset FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_memo cactivity_admemo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_memo
    ADD CONSTRAINT cactivity_admemo FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element cactivity_cacctschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT cactivity_cacctschemaelement FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cash cactivity_ccash; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cash
    ADD CONSTRAINT cactivity_ccash FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice cactivity_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT cactivity_cinvoice FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline cactivity_cinvoicebatchline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT cactivity_cinvoicebatchline FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline cactivity_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT cactivity_cinvoiceline FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cactivity_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cactivity_corder FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline cactivity_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT cactivity_corderline FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment cactivity_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT cactivity_cpayment FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory cactivity_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT cactivity_csaleshistory FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination cactivity_cvalidcombination; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT cactivity_cvalidcombination FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order cactivity_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT cactivity_ddorder FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline cactivity_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT cactivity_ddorderline FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct cactivity_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT cactivity_factacct FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary cactivity_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT cactivity_factacctsummary FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution cactivity_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT cactivity_gldist FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline cactivity_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT cactivity_gldistline FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal cactivity_gljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT cactivity_gljournal FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline cactivity_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT cactivity_gljournalline FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute cactivity_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT cactivity_hrattribute FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_department cactivity_hrdepartment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_department
    ADD CONSTRAINT cactivity_hrdepartment FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee cactivity_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT cactivity_hremployee FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement cactivity_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT cactivity_hrmovement FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget cactivity_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT cactivity_ibudget FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal cactivity_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT cactivity_ifajournal FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice cactivity_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT cactivity_iinvoice FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order cactivity_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT cactivity_iorder FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory cactivity_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT cactivity_isaleshistory FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout cactivity_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT cactivity_minout FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline cactivity_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT cactivity_minoutline FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventory cactivity_minventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT cactivity_minventory FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline cactivity_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT cactivity_minventoryline FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement cactivity_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT cactivity_mmovement FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline cactivity_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT cactivity_mmovementline FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production cactivity_mproduction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT cactivity_mproduction FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionbatch cactivity_mproductionbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionbatch
    ADD CONSTRAINT cactivity_mproductionbatch FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline cactivity_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT cactivity_mproductionline FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotionprecondition cactivity_mpromotionpreconditi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionprecondition
    ADD CONSTRAINT cactivity_mpromotionpreconditi FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisition cactivity_mrequisition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisition
    ADD CONSTRAINT cactivity_mrequisition FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline cactivity_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT cactivity_mrequisitionline FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn cactivity_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT cactivity_pareportcolumn FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource cactivity_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT cactivity_pareportsource FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector cactivity_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT cactivity_ppcostcollector FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order cactivity_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT cactivity_pporder FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request cactivity_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT cactivity_rrequest FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction cactivity_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT cactivity_rrequestaction FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline cactivity_stimeexpenseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT cactivity_stimeexpenseline FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_aging cactivity_taging; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_aging
    ADD CONSTRAINT cactivity_taging FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound cactivity_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT cactivity_wminoutbound FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline cactivity_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT cactivity_wminoutboundline FOREIGN KEY (c_activity_id) REFERENCES adempiere.c_activity(c_activity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_alert calertprocessor_adalert; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_alert
    ADD CONSTRAINT calertprocessor_adalert FOREIGN KEY (ad_alertprocessor_id) REFERENCES adempiere.ad_alertprocessor(ad_alertprocessor_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_alertprocessorlog calertprocessor_log; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_alertprocessorlog
    ADD CONSTRAINT calertprocessor_log FOREIGN KEY (ad_alertprocessor_id) REFERENCES adempiere.ad_alertprocessor(ad_alertprocessor_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_allocationline callocation_callocationline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_allocationline
    ADD CONSTRAINT callocation_callocationline FOREIGN KEY (c_allocationhdr_id) REFERENCES adempiere.c_allocationhdr(c_allocationhdr_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdeclarationline callocationline_ctaxdeclline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdeclarationline
    ADD CONSTRAINT callocationline_ctaxdeclline FOREIGN KEY (c_allocationline_id) REFERENCES adempiere.c_allocationline(c_allocationline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal cardbankaccount_uposterminal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT cardbankaccount_uposterminal FOREIGN KEY (card_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal cardtransferbankaccount_uposte; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT cardtransferbankaccount_uposte FOREIGN KEY (cardtransferbankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal cardtransfercashbook_upostermi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT cardtransfercashbook_upostermi FOREIGN KEY (cardtransfercashbook_id) REFERENCES adempiere.c_cashbook(c_cashbook_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_pos cashtransferbankaccount_cpos; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_pos
    ADD CONSTRAINT cashtransferbankaccount_cpos FOREIGN KEY (cashtransferbankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal cashtransferbankaccount_uposte; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT cashtransferbankaccount_uposte FOREIGN KEY (cashtransferbankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal cashtransfercashbook_upostermi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT cashtransfercashbook_upostermi FOREIGN KEY (cashtransfercashbook_id) REFERENCES adempiere.c_cashbook(c_cashbook_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_orginfo cbank_adorginfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orginfo
    ADD CONSTRAINT cbank_adorginfo FOREIGN KEY (transferbank_id) REFERENCES adempiere.c_bank(c_bank_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount cbank_cbankaccount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount
    ADD CONSTRAINT cbank_cbankaccount FOREIGN KEY (c_bank_id) REFERENCES adempiere.c_bank(c_bank_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_bankaccount cbank_cbpbankaccount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_bankaccount
    ADD CONSTRAINT cbank_cbpbankaccount FOREIGN KEY (c_bank_id) REFERENCES adempiere.c_bank(c_bank_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccountdoc cbankaccount_cbadoc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccountdoc
    ADD CONSTRAINT cbankaccount_cbadoc FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct cbankaccount_cbankacctacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT cbankaccount_cbankacctacct FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankstatement cbankaccount_cbankstatement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankstatement
    ADD CONSTRAINT cbankaccount_cbankstatement FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashflow cbankaccount_ccashflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashflow
    ADD CONSTRAINT cbankaccount_ccashflow FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_elementvalue cbankaccount_celementvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_elementvalue
    ADD CONSTRAINT cbankaccount_celementvalue FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment cbankaccount_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT cbankaccount_cpayment FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_paymentprocessor cbankaccount_cpaymtprocessor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentprocessor
    ADD CONSTRAINT cbankaccount_cpaymtprocessor FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselection cbankaccount_cpayselection; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselection
    ADD CONSTRAINT cbankaccount_cpayselection FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_pos cbankaccount_cpos; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_pos
    ADD CONSTRAINT cbankaccount_cpos FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payselection cbankaccount_hrpayselection; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payselection
    ADD CONSTRAINT cbankaccount_hrpayselection FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bankstatement cbankaccount_ibankstatement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bankstatement
    ADD CONSTRAINT cbankaccount_ibankstatement FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_payment cbankaccount_ipayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_payment
    ADD CONSTRAINT cbankaccount_ipayment FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankstatementloader cbankacct_cbankstmtloader; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankstatementloader
    ADD CONSTRAINT cbankacct_cbankstmtloader FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashline cbankacct_ccashline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashline
    ADD CONSTRAINT cbankacct_ccashline FOREIGN KEY (c_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bankstatement cbankstatement_ibankstatement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bankstatement
    ADD CONSTRAINT cbankstatement_ibankstatement FOREIGN KEY (c_bankstatement_id) REFERENCES adempiere.c_bankstatement(c_bankstatement_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bankstatement cbankstmtline_ibankstmt; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bankstatement
    ADD CONSTRAINT cbankstmtline_ibankstmt FOREIGN KEY (c_bankstatementline_id) REFERENCES adempiere.c_bankstatementline(c_bankstatementline_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order cbolocation_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT cbolocation_iorder FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset cbpartner_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT cbpartner_aasset FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_change cbpartner_aassetchange; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change
    ADD CONSTRAINT cbpartner_aassetchange FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_info_fin cbpartner_aassetinfofin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_info_fin
    ADD CONSTRAINT cbpartner_aassetinfofin FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_archive cbpartner_adarchive; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_archive
    ADD CONSTRAINT cbpartner_adarchive FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_memo cbpartner_admemo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_memo
    ADD CONSTRAINT cbpartner_admemo FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user cbpartner_aduser; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user
    ADD CONSTRAINT cbpartner_aduser FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node cbpartner_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT cbpartner_adwfnode FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_registration cbpartner_aregistration; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registration
    ADD CONSTRAINT cbpartner_aregistration FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_allocationline cbpartner_callocationline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_allocationline
    ADD CONSTRAINT cbpartner_callocationline FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankstatementline cbpartner_cbankstatementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankstatementline
    ADD CONSTRAINT cbpartner_cbankstatementline FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_bankaccount cbpartner_cbpbankaccount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_bankaccount
    ADD CONSTRAINT cbpartner_cbpbankaccount FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner_location cbpartner_cbplocation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner_location
    ADD CONSTRAINT cbpartner_cbplocation FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner_product cbpartner_cbpproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner_product
    ADD CONSTRAINT cbpartner_cbpproduct FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_relation cbpartner_cbprelation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_relation
    ADD CONSTRAINT cbpartner_cbprelation FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_relation cbpartner_cbprelationbp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_relation
    ADD CONSTRAINT cbpartner_cbprelationbp FOREIGN KEY (c_bpartnerrelation_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_withholding cbpartner_cbpwithholding; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_withholding
    ADD CONSTRAINT cbpartner_cbpwithholding FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashflow cbpartner_ccashflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashflow
    ADD CONSTRAINT cbpartner_ccashflow FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_charge cbpartner_ccharge; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_charge
    ADD CONSTRAINT cbpartner_ccharge FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commission cbpartner_ccommission; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commission
    ADD CONSTRAINT cbpartner_ccommission FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionamt cbpartner_ccommissionamt; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionamt
    ADD CONSTRAINT cbpartner_ccommissionamt FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline cbpartner_ccommissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT cbpartner_ccommissionline FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionsalesrep cbpartner_ccommissionsalesrep; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionsalesrep
    ADD CONSTRAINT cbpartner_ccommissionsalesrep FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunningrunentry cbpartner_cdunningrunentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrunentry
    ADD CONSTRAINT cbpartner_cdunningrunentry FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice cbpartner_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT cbpartner_cinvoice FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline cbpartner_cinvoicebatchline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT cbpartner_cinvoicebatchline FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_opportunity cbpartner_copportunity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_opportunity
    ADD CONSTRAINT cbpartner_copportunity FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cbpartner_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cbpartner_corder FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment cbpartner_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT cbpartner_cpayment FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectioncheck cbpartner_cpayselectioncheck; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectioncheck
    ADD CONSTRAINT cbpartner_cpayselectioncheck FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectionline cbpartner_cpayselectionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectionline
    ADD CONSTRAINT cbpartner_cpayselectionline FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner cbpartner_cpbartnerparent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT cbpartner_cpbartnerparent FOREIGN KEY (bpartner_parent_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project cbpartner_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT cbpartner_cproject FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq cbpartner_crfq; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq
    ADD CONSTRAINT cbpartner_crfq FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqresponse cbpartner_crfqresponse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqresponse
    ADD CONSTRAINT cbpartner_crfqresponse FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq_topicsubscriber cbpartner_crfqtopicsubr; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq_topicsubscriber
    ADD CONSTRAINT cbpartner_crfqtopicsubr FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory cbpartner_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT cbpartner_csaleshistory FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_subscription cbpartner_csubscription; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_subscription
    ADD CONSTRAINT cbpartner_csubscription FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdeclarationline cbpartner_ctaxdeclline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdeclarationline
    ADD CONSTRAINT cbpartner_ctaxdeclline FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdefinition cbpartner_ctaxdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdefinition
    ADD CONSTRAINT cbpartner_ctaxdefinition FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_driver cbpartner_dddriver; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_driver
    ADD CONSTRAINT cbpartner_dddriver FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freight cbpartner_ddfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freight
    ADD CONSTRAINT cbpartner_ddfreight FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order cbpartner_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT cbpartner_ddorder FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary cbpartner_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT cbpartner_factacctsummary FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution cbpartner_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT cbpartner_gldist FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline cbpartner_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT cbpartner_gldistline FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline cbpartner_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT cbpartner_gljournalline FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute cbpartner_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT cbpartner_hrattribute FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_contract cbpartner_hrcontract; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_contract
    ADD CONSTRAINT cbpartner_hrcontract FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_department cbpartner_hrdepartment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_department
    ADD CONSTRAINT cbpartner_hrdepartment FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_education cbpartner_hreducation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_education
    ADD CONSTRAINT cbpartner_hreducation FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee cbpartner_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT cbpartner_hremployee FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employeedependent cbpartner_hremployeedependent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeedependent
    ADD CONSTRAINT cbpartner_hremployeedependent FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employeeexperience cbpartner_hremployeeexperience; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeeexperience
    ADD CONSTRAINT cbpartner_hremployeeexperience FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employeeinsurance cbpartner_hremployeeinsurance; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeeinsurance
    ADD CONSTRAINT cbpartner_hremployeeinsurance FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employeeweeklyoff cbpartner_hremployeeweeklyoff; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeeweeklyoff
    ADD CONSTRAINT cbpartner_hremployeeweeklyoff FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_interview cbpartner_hrinterview; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_interview
    ADD CONSTRAINT cbpartner_hrinterview FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobapplication cbpartner_hrjobapplication; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobapplication
    ADD CONSTRAINT cbpartner_hrjobapplication FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leaveassign cbpartner_hrleaveassign; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leaveassign
    ADD CONSTRAINT cbpartner_hrleaveassign FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leavecredithistory cbpartner_hrleavecredithistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavecredithistory
    ADD CONSTRAINT cbpartner_hrleavecredithistory FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement cbpartner_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT cbpartner_hrmovement FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payselectioncheck cbpartner_hrpayselectioncheck; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payselectioncheck
    ADD CONSTRAINT cbpartner_hrpayselectioncheck FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_process cbpartner_hrprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT cbpartner_hrprocess FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_asset cbpartner_iasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_asset
    ADD CONSTRAINT cbpartner_iasset FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bankstatement cbpartner_ibankstatement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bankstatement
    ADD CONSTRAINT cbpartner_ibankstatement FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bpartner cbpartner_ibpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bpartner
    ADD CONSTRAINT cbpartner_ibpartner FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget cbpartner_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT cbpartner_ibudget FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal cbpartner_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT cbpartner_ifajournal FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal cbpartner_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT cbpartner_igljournal FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_hr_attribute cbpartner_ihrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_hr_attribute
    ADD CONSTRAINT cbpartner_ihrattribute FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_hr_movement cbpartner_ihrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_hr_movement
    ADD CONSTRAINT cbpartner_ihrmovement FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice cbpartner_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT cbpartner_iinvoice FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_movement cbpartner_imovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_movement
    ADD CONSTRAINT cbpartner_imovement FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order cbpartner_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT cbpartner_iorder FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_payment cbpartner_ipayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_payment
    ADD CONSTRAINT cbpartner_ipayment FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_pricelist cbpartner_ipricelist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_pricelist
    ADD CONSTRAINT cbpartner_ipricelist FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product cbpartner_iproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product
    ADD CONSTRAINT cbpartner_iproduct FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_productplanning cbpartner_iproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_productplanning
    ADD CONSTRAINT cbpartner_iproductplanning FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory cbpartner_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT cbpartner_isaleshistory FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_bp_price cbpartner_mbpprice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bp_price
    ADD CONSTRAINT cbpartner_mbpprice FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_discountschemaline cbpartner_mdiscountsline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_discountschemaline
    ADD CONSTRAINT cbpartner_mdiscountsline FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_distributionlistline cbpartner_mdistlistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_distributionlistline
    ADD CONSTRAINT cbpartner_mdistlistline FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_distributionrun cbpartner_mdistributionrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_distributionrun
    ADD CONSTRAINT cbpartner_mdistributionrun FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout cbpartner_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT cbpartner_minout FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement cbpartner_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT cbpartner_mmovement FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productpricevendorbreak cbpartner_mproductpricevendorb; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productpricevendorbreak
    ADD CONSTRAINT cbpartner_mproductpricevendorb FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotionprecondition cbpartner_mpromotionpreconditi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionprecondition
    ADD CONSTRAINT cbpartner_mpromotionpreconditi FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline cbpartner_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT cbpartner_mrequisitionline FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_rma cbpartner_mrma; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rma
    ADD CONSTRAINT cbpartner_mrma FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_shipper cbpartner_mshipper; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_shipper
    ADD CONSTRAINT cbpartner_mshipper FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_goalrestriction cbpartner_pagoalrestriction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goalrestriction
    ADD CONSTRAINT cbpartner_pagoalrestriction FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn cbpartner_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT cbpartner_pareportcolumn FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource cbpartner_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT cbpartner_pareportsource FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_sla_goal cbpartner_paslagoal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_sla_goal
    ADD CONSTRAINT cbpartner_paslagoal FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastdefinitionline cbpartner_ppforecastdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastdefinitionline
    ADD CONSTRAINT cbpartner_ppforecastdefinition FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp cbpartner_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT cbpartner_ppmrp FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node cbpartner_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT cbpartner_ppordernode FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction cbpartner_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT cbpartner_rrequestaction FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline cbpartner_soline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT cbpartner_soline FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpense cbpartner_stimeexpense; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpense
    ADD CONSTRAINT cbpartner_stimeexpense FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline cbpartner_stimeexpenseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT cbpartner_stimeexpenseline FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_aging cbpartner_taging; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_aging
    ADD CONSTRAINT cbpartner_taging FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_distributionrundetail cbpartner_tdrdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_distributionrundetail
    ADD CONSTRAINT cbpartner_tdrdetail FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination cbpartner_vc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT cbpartner_vc FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_advertisement cbpartner_wadvertisement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_advertisement
    ADD CONSTRAINT cbpartner_wadvertisement FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_basket cbpartner_wbasket; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_basket
    ADD CONSTRAINT cbpartner_wbasket FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_clickcount cbpartner_wclickcount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_clickcount
    ADD CONSTRAINT cbpartner_wclickcount FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_countercount cbpartner_wcountercount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_countercount
    ADD CONSTRAINT cbpartner_wcountercount FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_definition cbpartner_wmdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_definition
    ADD CONSTRAINT cbpartner_wmdefinition FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cbpartnerbill_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cbpartnerbill_corder FOREIGN KEY (bill_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo cbpartnercashtrx_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT cbpartnercashtrx_adclientinfo FOREIGN KEY (c_bpartnercashtrx_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_pos cbpartnercashtrx_cpos; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_pos
    ADD CONSTRAINT cbpartnercashtrx_cpos FOREIGN KEY (c_bpartnercashtrx_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq_topicsubscriber cbpartnerloc_crfqtopicsubr; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq_topicsubscriber
    ADD CONSTRAINT cbpartnerloc_crfqtopicsubr FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_distributionlistline cbpartnerloc_mdistlistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_distributionlistline
    ADD CONSTRAINT cbpartnerloc_mdistlistline FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_change cbpartnerlocation_aassetchange; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change
    ADD CONSTRAINT cbpartnerlocation_aassetchange FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunningrunentry cbpartnerlocation_cdunningrune; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrunentry
    ADD CONSTRAINT cbpartnerlocation_cdunningrune FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cbpartnerlocation_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cbpartnerlocation_corder FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory cbpartnerlocation_csaleshistor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT cbpartnerlocation_csaleshistor FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order cbpartnerlocation_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT cbpartnerlocation_ddorder FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_asset cbpartnerlocation_iasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_asset
    ADD CONSTRAINT cbpartnerlocation_iasset FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bpartner cbpartnerlocation_ibpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bpartner
    ADD CONSTRAINT cbpartnerlocation_ibpartner FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory cbpartnerlocation_isaleshistor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT cbpartnerlocation_isaleshistor FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement cbpartnerlocation_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT cbpartnerlocation_mmovement FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline cbpartnerlocation_soline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT cbpartnerlocation_soline FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_distributionrundetail cbpartnerlocation_tdrdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_distributionrundetail
    ADD CONSTRAINT cbpartnerlocation_tdrdetail FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order cbpartnerlocbillto_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT cbpartnerlocbillto_iorder FOREIGN KEY (billto_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cbpartnerpay_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cbpartnerpay_corder FOREIGN KEY (pay_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employeedependent cbpartnerrelation_hremployeede; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeedependent
    ADD CONSTRAINT cbpartnerrelation_hremployeede FOREIGN KEY (c_bpartnerrelation_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset cbpartnersr_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT cbpartnersr_aasset FOREIGN KEY (c_bpartnersr_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project cbpartnersr_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT cbpartnersr_cproject FOREIGN KEY (c_bpartnersr_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fixedasset cbpartnersr_ifixedasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fixedasset
    ADD CONSTRAINT cbpartnersr_ifixedasset FOREIGN KEY (c_bpartnersr_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectioncheck cbpbankaccount_cpayselectionch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectioncheck
    ADD CONSTRAINT cbpbankaccount_cpayselectionch FOREIGN KEY (c_bp_bankaccount_id) REFERENCES adempiere.c_bp_bankaccount(c_bp_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectionline cbpbankaccount_cpayselectionli; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectionline
    ADD CONSTRAINT cbpbankaccount_cpayselectionli FOREIGN KEY (c_bp_bankaccount_id) REFERENCES adempiere.c_bp_bankaccount(c_bp_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement cbpbankaccount_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT cbpbankaccount_hrmovement FOREIGN KEY (c_bp_bankaccount_id) REFERENCES adempiere.c_bp_bankaccount(c_bp_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payselectioncheck cbpbankaccount_hrpayselectionc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payselectioncheck
    ADD CONSTRAINT cbpbankaccount_hrpayselectionc FOREIGN KEY (c_bp_bankaccount_id) REFERENCES adempiere.c_bp_bankaccount(c_bp_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment cbpbankacct_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT cbpbankacct_cpayment FOREIGN KEY (c_bp_bankaccount_id) REFERENCES adempiere.c_bp_bankaccount(c_bp_bankaccount_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_edi cbpedi_medi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_edi
    ADD CONSTRAINT cbpedi_medi FOREIGN KEY (c_bp_edi_id) REFERENCES adempiere.c_bp_edi(c_bp_edi_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner cbpgroup_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT cbpgroup_cbpartner FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct cbpgroup_cbpgroupacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT cbpgroup_cbpgroupacct FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline cbpgroup_commissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT cbpgroup_commissionline FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory cbpgroup_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT cbpgroup_csaleshistory FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdefinition cbpgroup_ctaxdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdefinition
    ADD CONSTRAINT cbpgroup_ctaxdefinition FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept_acct cbpgroup_hrconceptacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_acct
    ADD CONSTRAINT cbpgroup_hrconceptacct FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement cbpgroup_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT cbpgroup_hrmovement FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bpartner cbpgroup_ibpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bpartner
    ADD CONSTRAINT cbpgroup_ibpartner FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory cbpgroup_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT cbpgroup_isaleshistory FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotionprecondition cbpgroup_mpromotionpreconditio; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionprecondition
    ADD CONSTRAINT cbpgroup_mpromotionpreconditio FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_goalrestriction cbpgroup_pagoalrestriction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goalrestriction
    ADD CONSTRAINT cbpgroup_pagoalrestriction FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastdefinitionline cbpgroup_ppforecastdefinitionl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastdefinitionline
    ADD CONSTRAINT cbpgroup_ppforecastdefinitionl FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_aging cbpgroup_taging; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_aging
    ADD CONSTRAINT cbpgroup_taging FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_definition cbpgroup_wmdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_definition
    ADD CONSTRAINT cbpgroup_wmdefinition FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_accesslistbpgroup cbpgrpup_cmalistbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accesslistbpgroup
    ADD CONSTRAINT cbpgrpup_cmalistbpgroup FOREIGN KEY (c_bp_group_id) REFERENCES adempiere.c_bp_group(c_bp_group_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset cbplocation_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT cbplocation_aasset FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user cbplocation_aduser; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user
    ADD CONSTRAINT cbplocation_aduser FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_relation cbplocation_cbprelation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_relation
    ADD CONSTRAINT cbplocation_cbprelation FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_relation cbplocation_cbprelationbp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_relation
    ADD CONSTRAINT cbplocation_cbprelationbp FOREIGN KEY (c_bpartnerrelation_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline cbplocation_cinvoicebline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT cbplocation_cinvoicebline FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project cbplocation_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT cbplocation_cproject FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq cbplocation_crfq; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq
    ADD CONSTRAINT cbplocation_crfq FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqresponse cbplocation_crfqresponse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqresponse
    ADD CONSTRAINT cbplocation_crfqresponse FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice cbplocation_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT cbplocation_iinvoice FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_distributionrun cbplocation_mdistributionrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_distributionrun
    ADD CONSTRAINT cbplocation_mdistributionrun FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cbplocationbill_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cbplocationbill_corder FOREIGN KEY (bill_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cbplocationpay_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cbplocationpay_corder FOREIGN KEY (pay_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute cbprelation_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT cbprelation_hrattribute FOREIGN KEY (c_bp_relation_id) REFERENCES adempiere.c_bp_relation(c_bp_relation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement cbprelation_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT cbprelation_hrmovement FOREIGN KEY (c_bp_relation_id) REFERENCES adempiere.c_bp_relation(c_bp_relation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankstatementline cbstatement_cbstatementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankstatementline
    ADD CONSTRAINT cbstatement_cbstatementline FOREIGN KEY (c_bankstatement_id) REFERENCES adempiere.c_bankstatement(c_bankstatement_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_employee_acct cbuspartner_c_bpemployeeacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_employee_acct
    ADD CONSTRAINT cbuspartner_c_bpemployeeacct FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element cbuspartner_caschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT cbuspartner_caschemaelement FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_customer_acct cbuspartner_cbpcustomer_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_customer_acct
    ADD CONSTRAINT cbuspartner_cbpcustomer_acct FOREIGN KEY (c_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo ccalendar_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT ccalendar_adclientinfo FOREIGN KEY (c_calendar_id) REFERENCES adempiere.c_calendar(c_calendar_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_orginfo ccalendar_adorginfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orginfo
    ADD CONSTRAINT ccalendar_adorginfo FOREIGN KEY (c_calendar_id) REFERENCES adempiere.c_calendar(c_calendar_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_demand ccalendar_mdemand; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_demand
    ADD CONSTRAINT ccalendar_mdemand FOREIGN KEY (c_calendar_id) REFERENCES adempiere.c_calendar(c_calendar_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecast ccalendar_mforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecast
    ADD CONSTRAINT ccalendar_mforecast FOREIGN KEY (c_calendar_id) REFERENCES adempiere.c_calendar(c_calendar_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_report ccalendar_pareport; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_report
    ADD CONSTRAINT ccalendar_pareport FOREIGN KEY (c_calendar_id) REFERENCES adempiere.c_calendar(c_calendar_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcube ccalendar_pareportcube; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcube
    ADD CONSTRAINT ccalendar_pareportcube FOREIGN KEY (c_calendar_id) REFERENCES adempiere.c_calendar(c_calendar_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_memo ccampaign_admemo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_memo
    ADD CONSTRAINT ccampaign_admemo FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user ccampaign_aduser; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user
    ADD CONSTRAINT ccampaign_aduser FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cash ccampaign_ccash; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cash
    ADD CONSTRAINT ccampaign_ccash FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline ccampaign_ccommissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT ccampaign_ccommissionline FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice ccampaign_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT ccampaign_cinvoice FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline ccampaign_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT ccampaign_cinvoiceline FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_opportunity ccampaign_copportunity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_opportunity
    ADD CONSTRAINT ccampaign_copportunity FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order ccampaign_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT ccampaign_corder FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline ccampaign_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT ccampaign_corderline FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment ccampaign_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT ccampaign_cpayment FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project ccampaign_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT ccampaign_cproject FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory ccampaign_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT ccampaign_csaleshistory FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order ccampaign_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT ccampaign_ddorder FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline ccampaign_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT ccampaign_ddorderline FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary ccampaign_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT ccampaign_factacctsummary FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution ccampaign_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT ccampaign_gldist FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline ccampaign_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT ccampaign_gldistline FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline ccampaign_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT ccampaign_gljournalline FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute ccampaign_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT ccampaign_hrattribute FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_contract ccampaign_hrcontract; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_contract
    ADD CONSTRAINT ccampaign_hrcontract FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee ccampaign_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT ccampaign_hremployee FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement ccampaign_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT ccampaign_hrmovement FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget ccampaign_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT ccampaign_ibudget FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal ccampaign_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT ccampaign_ifajournal FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal ccampaign_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT ccampaign_igljournal FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice ccampaign_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT ccampaign_iinvoice FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_movement ccampaign_imovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_movement
    ADD CONSTRAINT ccampaign_imovement FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order ccampaign_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT ccampaign_iorder FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory ccampaign_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT ccampaign_isaleshistory FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecast ccampaign_mforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecast
    ADD CONSTRAINT ccampaign_mforecast FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout ccampaign_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT ccampaign_minout FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline ccampaign_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT ccampaign_minoutline FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventory ccampaign_minventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT ccampaign_minventory FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline ccampaign_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT ccampaign_minventoryline FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement ccampaign_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT ccampaign_mmovement FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline ccampaign_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT ccampaign_mmovementline FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production ccampaign_mproduction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT ccampaign_mproduction FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionbatch ccampaign_mproductionbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionbatch
    ADD CONSTRAINT ccampaign_mproductionbatch FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline ccampaign_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT ccampaign_mproductionline FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotion ccampaign_mpromotion; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotion
    ADD CONSTRAINT ccampaign_mpromotion FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisition ccampaign_mrequisition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisition
    ADD CONSTRAINT ccampaign_mrequisition FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline ccampaign_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT ccampaign_mrequisitionline FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn ccampaign_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT ccampaign_pareportcolumn FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource ccampaign_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT ccampaign_pareportsource FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector ccampaign_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT ccampaign_ppcostcollector FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastdefinitionline ccampaign_ppforecastdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastdefinitionline
    ADD CONSTRAINT ccampaign_ppforecastdefinition FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order ccampaign_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT ccampaign_pporder FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request ccampaign_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT ccampaign_rrequest FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline ccampaign_stimeexpenseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT ccampaign_stimeexpenseline FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_aging ccampaign_taging; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_aging
    ADD CONSTRAINT ccampaign_taging FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound ccampaign_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT ccampaign_wminoutbound FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline ccampaign_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT ccampaign_wminoutboundline FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashline ccash_ccashline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashline
    ADD CONSTRAINT ccash_ccashline FOREIGN KEY (c_cash_id) REFERENCES adempiere.c_cash(c_cash_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_orginfo ccashbook_adorginfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orginfo
    ADD CONSTRAINT ccashbook_adorginfo FOREIGN KEY (transfercashbook_id) REFERENCES adempiere.c_cashbook(c_cashbook_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cash ccashbook_ccash; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cash
    ADD CONSTRAINT ccashbook_ccash FOREIGN KEY (c_cashbook_id) REFERENCES adempiere.c_cashbook(c_cashbook_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashbook_acct ccashbook_ccashbookacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashbook_acct
    ADD CONSTRAINT ccashbook_ccashbookacct FOREIGN KEY (c_cashbook_id) REFERENCES adempiere.c_cashbook(c_cashbook_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_pos ccashbook_cpos; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_pos
    ADD CONSTRAINT ccashbook_cpos FOREIGN KEY (c_cashbook_id) REFERENCES adempiere.c_cashbook(c_cashbook_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal ccashbook_uposterminal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT ccashbook_uposterminal FOREIGN KEY (c_cashbook_id) REFERENCES adempiere.c_cashbook(c_cashbook_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal ccashbpartner_uposterminal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT ccashbpartner_uposterminal FOREIGN KEY (c_cashbpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_allocationline ccashline_callocationline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_allocationline
    ADD CONSTRAINT ccashline_callocationline FOREIGN KEY (c_cashline_id) REFERENCES adempiere.c_cashline(c_cashline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice ccashline_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT ccashline_cinvoice FOREIGN KEY (c_cashline_id) REFERENCES adempiere.c_cashline(c_cashline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order ccashline_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT ccashline_corder FOREIGN KEY (c_cashline_id) REFERENCES adempiere.c_cashline(c_cashline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_campaign cchannel_ccampaign; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_campaign
    ADD CONSTRAINT cchannel_ccampaign FOREIGN KEY (c_channel_id) REFERENCES adempiere.c_channel(c_channel_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline cchannel_ccommissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT cchannel_ccommissionline FOREIGN KEY (c_channel_id) REFERENCES adempiere.c_channel(c_channel_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_addition ccharge_aassetaddition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT ccharge_aassetaddition FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_allocationline ccharge_callocationline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_allocationline
    ADD CONSTRAINT ccharge_callocationline FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankstatementline ccharge_cbankstmtlime; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankstatementline
    ADD CONSTRAINT ccharge_cbankstmtlime FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashline ccharge_ccashline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashline
    ADD CONSTRAINT ccharge_ccashline FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_charge_trl ccharge_cchargetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_charge_trl
    ADD CONSTRAINT ccharge_cchargetrl FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commission ccharge_ccommission; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commission
    ADD CONSTRAINT ccharge_ccommission FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice ccharge_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT ccharge_cinvoice FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline ccharge_cinvoicebatchline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT ccharge_cinvoicebatchline FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline ccharge_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT ccharge_cinvoiceline FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order ccharge_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT ccharge_corder FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline ccharge_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT ccharge_corderline FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment ccharge_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT ccharge_cpayment FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectionline ccharge_cpayselectionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectionline
    ADD CONSTRAINT ccharge_cpayselectionline FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freightline ccharge_ddfreightline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freightline
    ADD CONSTRAINT ccharge_ddfreightline FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order ccharge_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT ccharge_ddorder FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline ccharge_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT ccharge_ddorderline FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute ccharge_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT ccharge_hrattribute FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payroll ccharge_hrpayroll; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payroll
    ADD CONSTRAINT ccharge_hrpayroll FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_process ccharge_hrprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT ccharge_hrprocess FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bankstatement ccharge_ibankstmt; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bankstatement
    ADD CONSTRAINT ccharge_ibankstmt FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_elementvalue ccharge_ielementvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_elementvalue
    ADD CONSTRAINT ccharge_ielementvalue FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice ccharge_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT ccharge_iinvoice FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order ccharge_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT ccharge_iorder FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_payment ccharge_ipayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_payment
    ADD CONSTRAINT ccharge_ipayment FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout ccharge_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT ccharge_minout FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline ccharge_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT ccharge_minoutline FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline ccharge_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT ccharge_minventoryline FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement ccharge_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT ccharge_mmovement FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotionreward ccharge_mpromotionreward; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionreward
    ADD CONSTRAINT ccharge_mpromotionreward FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline ccharge_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT ccharge_mrequisitionline FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_rmaline ccharge_mrmaline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rmaline
    ADD CONSTRAINT ccharge_mrmaline FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline ccharge_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT ccharge_wminoutboundline FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_charge cchargetype_ccharge; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_charge
    ADD CONSTRAINT cchargetype_ccharge FOREIGN KEY (c_chargetype_id) REFERENCES adempiere.c_chargetype(c_chargetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_chargetype_doctype cchargetype_cchargetypedoctype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_chargetype_doctype
    ADD CONSTRAINT cchargetype_cchargetypedoctype FOREIGN KEY (c_chargetype_id) REFERENCES adempiere.c_chargetype(c_chargetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_charge_acct cchrage_cchargeacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_charge_acct
    ADD CONSTRAINT cchrage_cchargeacct FOREIGN KEY (c_charge_id) REFERENCES adempiere.c_charge(c_charge_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_location ccity_clocation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_location
    ADD CONSTRAINT ccity_clocation FOREIGN KEY (c_city_id) REFERENCES adempiere.c_city(c_city_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fixedasset ccity_ifixedasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fixedasset
    ADD CONSTRAINT ccity_ifixedasset FOREIGN KEY (c_city_id) REFERENCES adempiere.c_city(c_city_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionamt ccomline_ccomamt; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionamt
    ADD CONSTRAINT ccomline_ccomamt FOREIGN KEY (c_commissionline_id) REFERENCES adempiere.c_commissionline(c_commissionline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionamt ccommentrun_ccommissionamt; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionamt
    ADD CONSTRAINT ccommentrun_ccommissionamt FOREIGN KEY (c_commissionrun_id) REFERENCES adempiere.c_commissionrun(c_commissionrun_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline ccommission_ccommissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT ccommission_ccommissionline FOREIGN KEY (c_commission_id) REFERENCES adempiere.c_commission(c_commission_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionrun ccommission_ccommissionrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionrun
    ADD CONSTRAINT ccommission_ccommissionrun FOREIGN KEY (c_commission_id) REFERENCES adempiere.c_commission(c_commission_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionsalesrep ccommission_ccommissionsalesre; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionsalesrep
    ADD CONSTRAINT ccommission_ccommissionsalesre FOREIGN KEY (c_commission_id) REFERENCES adempiere.c_commission(c_commission_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissiondetail ccommissionamt_ccomdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissiondetail
    ADD CONSTRAINT ccommissionamt_ccomdetail FOREIGN KEY (c_commissionamt_id) REFERENCES adempiere.c_commissionamt(c_commissionamt_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commission ccommissiongroup_ccommission; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commission
    ADD CONSTRAINT ccommissiongroup_ccommission FOREIGN KEY (c_commissiongroup_id) REFERENCES adempiere.c_commissiongroup(c_commissiongroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionrun ccommissiongroup_ccommissionru; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionrun
    ADD CONSTRAINT ccommissiongroup_ccommissionru FOREIGN KEY (c_commissiongroup_id) REFERENCES adempiere.c_commissiongroup(c_commissiongroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatch cconventiontype_cinvoicebatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatch
    ADD CONSTRAINT cconventiontype_cinvoicebatch FOREIGN KEY (c_conversiontype_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectionline cconversionrate_cpayselectionl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectionline
    ADD CONSTRAINT cconversionrate_cpayselectionl FOREIGN KEY (c_conversion_rate_id) REFERENCES adempiere.c_conversion_rate(c_conversion_rate_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_conversion_rate cconversionrate_iconvrate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_conversion_rate
    ADD CONSTRAINT cconversionrate_iconvrate FOREIGN KEY (c_conversion_rate_id) REFERENCES adempiere.c_conversion_rate(c_conversion_rate_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_addition cconversiontype_aassetaddition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT cconversiontype_aassetaddition FOREIGN KEY (c_conversiontype_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashflow cconversiontype_ccashflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashflow
    ADD CONSTRAINT cconversiontype_ccashflow FOREIGN KEY (c_conversiontype_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_conversion_rate cconversiontype_cconvrate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_conversion_rate
    ADD CONSTRAINT cconversiontype_cconvrate FOREIGN KEY (c_conversiontype_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice cconversiontype_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT cconversiontype_cinvoice FOREIGN KEY (c_conversiontype_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cconversiontype_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cconversiontype_corder FOREIGN KEY (c_conversiontype_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment cconversiontype_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT cconversiontype_cpayment FOREIGN KEY (c_conversiontype_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectionline cconversiontype_cpayselectionl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectionline
    ADD CONSTRAINT cconversiontype_cpayselectionl FOREIGN KEY (c_conversiontype_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journal cconversiontype_gljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journal
    ADD CONSTRAINT cconversiontype_gljournal FOREIGN KEY (c_conversiontype_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline cconversiontype_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT cconversiontype_gljournalline FOREIGN KEY (c_conversiontype_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal cconversiontype_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT cconversiontype_igljournal FOREIGN KEY (c_conversiontype_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_discountschemaline cconversiontype_mdiscschline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_discountschemaline
    ADD CONSTRAINT cconversiontype_mdiscschline FOREIGN KEY (c_conversiontype_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_invoicegl cconversiontype_tinvoicegl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_invoicegl
    ADD CONSTRAINT cconversiontype_tinvoicegl FOREIGN KEY (c_conversiontypereval_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_conversion_rate cconvtype_iconvrate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_conversion_rate
    ADD CONSTRAINT cconvtype_iconvrate FOREIGN KEY (c_conversiontype_id) REFERENCES adempiere.c_conversiontype(c_conversiontype_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_landedcost ccostelement_clandedcost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_landedcost
    ADD CONSTRAINT ccostelement_clandedcost FOREIGN KEY (m_costelement_id) REFERENCES adempiere.m_costelement(m_costelement_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_city ccountry_ccity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_city
    ADD CONSTRAINT ccountry_ccity FOREIGN KEY (c_country_id) REFERENCES adempiere.c_country(c_country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_country ccountry_ccountry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_country
    ADD CONSTRAINT ccountry_ccountry FOREIGN KEY (c_country_id) REFERENCES adempiere.c_country(c_country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_country_trl ccountry_ccountrytrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_country_trl
    ADD CONSTRAINT ccountry_ccountrytrl FOREIGN KEY (c_country_id) REFERENCES adempiere.c_country(c_country_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_region ccountry_cregion; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_region
    ADD CONSTRAINT ccountry_cregion FOREIGN KEY (c_country_id) REFERENCES adempiere.c_country(c_country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice ccountry_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT ccountry_iinvoice FOREIGN KEY (c_country_id) REFERENCES adempiere.c_country(c_country_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order ccountry_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT ccountry_iorder FOREIGN KEY (c_country_id) REFERENCES adempiere.c_country(c_country_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bpartner ccountry_ipartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bpartner
    ADD CONSTRAINT ccountry_ipartner FOREIGN KEY (c_country_id) REFERENCES adempiere.c_country(c_country_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_freight ccountry_mfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_freight
    ADD CONSTRAINT ccountry_mfreight FOREIGN KEY (c_country_id) REFERENCES adempiere.c_country(c_country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_freight ccountryto_mfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_freight
    ADD CONSTRAINT ccountryto_mfreight FOREIGN KEY (to_country_id) REFERENCES adempiere.c_country(c_country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_addition ccurrency_aassetaddition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT ccurrency_aassetaddition FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_reval_entry ccurrency_aassetrevalentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_reval_entry
    ADD CONSTRAINT ccurrency_aassetrevalentry FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_entry ccurrency_adepreciationentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_entry
    ADD CONSTRAINT ccurrency_adepreciationentry FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_registration ccurrency_adregistration; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_registration
    ADD CONSTRAINT ccurrency_adregistration FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_allocationhdr ccurrency_callocation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_allocationhdr
    ADD CONSTRAINT ccurrency_callocation FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount ccurrency_cbankaccount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount
    ADD CONSTRAINT ccurrency_cbankaccount FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankstatementline ccurrency_cbankstmtline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankstatementline
    ADD CONSTRAINT ccurrency_cbankstmtline FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashbook ccurrency_ccashbook; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashbook
    ADD CONSTRAINT ccurrency_ccashbook FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashflow ccurrency_ccashflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashflow
    ADD CONSTRAINT ccurrency_ccashflow FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashline ccurrency_ccashline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashline
    ADD CONSTRAINT ccurrency_ccashline FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commission ccurrency_ccommission; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commission
    ADD CONSTRAINT ccurrency_ccommission FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissiondetail ccurrency_ccommissiondetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissiondetail
    ADD CONSTRAINT ccurrency_ccommissiondetail FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_conversion_rate ccurrency_cconversionrate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_conversion_rate
    ADD CONSTRAINT ccurrency_cconversionrate FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_country ccurrency_ccountry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_country
    ADD CONSTRAINT ccurrency_ccountry FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_currency_acct ccurrency_ccurrencyacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_currency_acct
    ADD CONSTRAINT ccurrency_ccurrencyacct FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_currency_trl ccurrency_ccurrencytrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_currency_trl
    ADD CONSTRAINT ccurrency_ccurrencytrl FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cycle ccurrency_ccycle; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cycle
    ADD CONSTRAINT ccurrency_ccycle FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunningrunentry ccurrency_cdunningrunentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrunentry
    ADD CONSTRAINT ccurrency_cdunningrunentry FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_elementvalue ccurrency_celementvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_elementvalue
    ADD CONSTRAINT ccurrency_celementvalue FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice ccurrency_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT ccurrency_cinvoice FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatch ccurrency_cinvoicebatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatch
    ADD CONSTRAINT ccurrency_cinvoicebatch FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_opportunity ccurrency_copportunity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_opportunity
    ADD CONSTRAINT ccurrency_copportunity FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order ccurrency_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT ccurrency_corder FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline ccurrency_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT ccurrency_corderline FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment ccurrency_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT ccurrency_cpayment FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_paymentprocessor ccurrency_cpaymentprocessor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentprocessor
    ADD CONSTRAINT ccurrency_cpaymentprocessor FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselection ccurrency_cpayselection; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselection
    ADD CONSTRAINT ccurrency_cpayselection FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project ccurrency_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT ccurrency_cproject FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_revenuerecognition_plan ccurrency_crevenuerecplan; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_revenuerecognition_plan
    ADD CONSTRAINT ccurrency_crevenuerecplan FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq ccurrency_crfq; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq
    ADD CONSTRAINT ccurrency_crfq FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqresponse ccurrency_crfqresponse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqresponse
    ADD CONSTRAINT ccurrency_crfqresponse FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdeclarationline ccurrency_ctaxdeclline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdeclarationline
    ADD CONSTRAINT ccurrency_ctaxdeclline FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journal ccurrency_gljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journal
    ADD CONSTRAINT ccurrency_gljournal FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalbatch ccurrency_gljournalbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalbatch
    ADD CONSTRAINT ccurrency_gljournalbatch FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline ccurrency_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT ccurrency_gljournalline FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bankstatement ccurrency_ibankstatement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bankstatement
    ADD CONSTRAINT ccurrency_ibankstatement FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_conversion_rate ccurrency_iconvrate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_conversion_rate
    ADD CONSTRAINT ccurrency_iconvrate FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_conversion_rate ccurrency_iconvrateto; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_conversion_rate
    ADD CONSTRAINT ccurrency_iconvrateto FOREIGN KEY (c_currency_id_to) REFERENCES adempiere.c_currency(c_currency_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal ccurrency_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT ccurrency_ifajournal FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal ccurrency_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT ccurrency_igljournal FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice ccurrency_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT ccurrency_iinvoice FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order ccurrency_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT ccurrency_iorder FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_payment ccurrency_ipayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_payment
    ADD CONSTRAINT ccurrency_ipayment FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_pricelist ccurrency_ipricelist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_pricelist
    ADD CONSTRAINT ccurrency_ipricelist FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product ccurrency_iproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product
    ADD CONSTRAINT ccurrency_iproduct FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_bp_price ccurrency_mbpprice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bp_price
    ADD CONSTRAINT ccurrency_mbpprice FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_freight ccurrency_mfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_freight
    ADD CONSTRAINT ccurrency_mfreight FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_pricelist ccurrency_mpricelist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_pricelist
    ADD CONSTRAINT ccurrency_mpricelist FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_po ccurrency_mproductpo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_po
    ADD CONSTRAINT ccurrency_mproductpo FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_rma ccurrency_mrma; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rma
    ADD CONSTRAINT ccurrency_mrma FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn ccurrency_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT ccurrency_pareportcolumn FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline ccurrency_stimeexpenseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT ccurrency_stimeexpenseline FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_aging ccurrency_taging; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_aging
    ADD CONSTRAINT ccurrency_taging FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_inventoryvalue ccurrency_tinventoryvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_inventoryvalue
    ADD CONSTRAINT ccurrency_tinventoryvalue FOREIGN KEY (c_currency_id) REFERENCES adempiere.c_currency(c_currency_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cyclestep ccycle_ccyclestep; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cyclestep
    ADD CONSTRAINT ccycle_ccyclestep FOREIGN KEY (c_cycle_id) REFERENCES adempiere.c_cycle(c_cycle_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cyclephase ccyclestep_ccyclephase; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cyclephase
    ADD CONSTRAINT ccyclestep_ccyclephase FOREIGN KEY (c_cyclestep_id) REFERENCES adempiere.c_cyclestep(c_cyclestep_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_addition cdoctype_aassetaddition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT cdoctype_aassetaddition FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_disposed cdoctype_aassetdisposed; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_disposed
    ADD CONSTRAINT cdoctype_aassetdisposed FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_reval_entry cdoctype_aassetrevalentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_reval_entry
    ADD CONSTRAINT cdoctype_aassetrevalentry FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_document_action_access cdoctype_addocumentactionacces; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_document_action_access
    ADD CONSTRAINT cdoctype_addocumentactionacces FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_entry cdoctype_adepreciationentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_entry
    ADD CONSTRAINT cdoctype_adepreciationentry FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replicationdocument cdoctype_adreplicationdocument; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationdocument
    ADD CONSTRAINT cdoctype_adreplicationdocument FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_chargetype_doctype cdoctype_cchargetypedoctype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_chargetype_doctype
    ADD CONSTRAINT cdoctype_cchargetypedoctype FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionrun cdoctype_ccommissionrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionrun
    ADD CONSTRAINT cdoctype_ccommissionrun FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_doctypecounter cdoctype_cdoctypecounter; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctypecounter
    ADD CONSTRAINT cdoctype_cdoctypecounter FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_doctype_trl cdoctype_cdoctypetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctype_trl
    ADD CONSTRAINT cdoctype_cdoctypetrl FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice cdoctype_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT cdoctype_cinvoice FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline cdoctype_cinvoicebatchline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT cdoctype_cinvoicebatchline FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment cdoctype_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT cdoctype_cpayment FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselection cdoctype_cpayselection; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselection
    ADD CONSTRAINT cdoctype_cpayselection FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_pos cdoctype_cpos; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_pos
    ADD CONSTRAINT cdoctype_cpos FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freight cdoctype_ddfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freight
    ADD CONSTRAINT cdoctype_ddfreight FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order cdoctype_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT cdoctype_ddorder FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution cdoctype_gldistribution; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT cdoctype_gldistribution FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journal cdoctype_gljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journal
    ADD CONSTRAINT cdoctype_gljournal FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalbatch cdoctype_gljournalbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalbatch
    ADD CONSTRAINT cdoctype_gljournalbatch FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute cdoctype_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT cdoctype_hrattribute FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobopening cdoctype_hrjobopening; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopening
    ADD CONSTRAINT cdoctype_hrjobopening FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_process cdoctype_hrprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT cdoctype_hrprocess FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal cdoctype_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT cdoctype_ifajournal FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal cdoctype_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT cdoctype_igljournal FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice cdoctype_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT cdoctype_iinvoice FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_movement cdoctype_imovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_movement
    ADD CONSTRAINT cdoctype_imovement FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_doctype cdoctype_invoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctype
    ADD CONSTRAINT cdoctype_invoice FOREIGN KEY (c_doctypeinvoice_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order cdoctype_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT cdoctype_iorder FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_payment cdoctype_ipayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_payment
    ADD CONSTRAINT cdoctype_ipayment FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_index cdoctype_kindex; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_index
    ADD CONSTRAINT cdoctype_kindex FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_indexstop cdoctype_kindexstop; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_indexstop
    ADD CONSTRAINT cdoctype_kindexstop FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout cdoctype_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT cdoctype_minout FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventory cdoctype_minventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT cdoctype_minventory FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement cdoctype_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT cdoctype_mmovement FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production cdoctype_mproduction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT cdoctype_mproduction FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionbatch cdoctype_mproductionbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionbatch
    ADD CONSTRAINT cdoctype_mproductionbatch FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenishplan cdoctype_mreplenishplan; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenishplan
    ADD CONSTRAINT cdoctype_mreplenishplan FOREIGN KEY (c_doctype_po) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisition cdoctype_mrequisition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisition
    ADD CONSTRAINT cdoctype_mrequisition FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_rma cdoctype_mrma; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rma
    ADD CONSTRAINT cdoctype_mrma FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector cdoctype_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT cdoctype_ppcostcollector FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order cdoctype_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT cdoctype_pporder FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_doctype cdoctype_proforma; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctype
    ADD CONSTRAINT cdoctype_proforma FOREIGN KEY (c_doctypeproforma_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_doctype cdoctype_shipment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctype
    ADD CONSTRAINT cdoctype_shipment FOREIGN KEY (c_doctypeshipment_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_invoicegl cdoctype_tinvoicegl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_invoicegl
    ADD CONSTRAINT cdoctype_tinvoicegl FOREIGN KEY (c_doctypereval_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_replenish cdoctype_treplenish; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_replenish
    ADD CONSTRAINT cdoctype_treplenish FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound cdoctype_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT cdoctype_wminoutbound FOREIGN KEY (c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenishplan cdoctypeconfirmedor_mreplenish; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenishplan
    ADD CONSTRAINT cdoctypeconfirmedor_mreplenish FOREIGN KEY (c_doctype_confirmedorder) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_doctypecounter cdoctypecount_cdoctypecount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctypecounter
    ADD CONSTRAINT cdoctypecount_cdoctypecount FOREIGN KEY (counter_c_doctype_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_doctype cdoctypedifference_cdoctype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctype
    ADD CONSTRAINT cdoctypedifference_cdoctype FOREIGN KEY (c_doctypedifference_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenishplan cdoctypeplannedor_mreplenishpl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenishplan
    ADD CONSTRAINT cdoctypeplannedor_mreplenishpl FOREIGN KEY (c_doctype_plannedorder) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenishplan cdoctyperequisit_mreplenishpla; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenishplan
    ADD CONSTRAINT cdoctyperequisit_mreplenishpla FOREIGN KEY (c_doctype_requisition) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice cdoctypetarget_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT cdoctypetarget_cinvoice FOREIGN KEY (c_doctypetarget_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cdoctypetarget_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cdoctypetarget_corder FOREIGN KEY (c_doctypetarget_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_process cdoctypetarget_hrprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT cdoctypetarget_hrprocess FOREIGN KEY (c_doctypetarget_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector cdoctypetarget_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT cdoctypetarget_ppcostcollector FOREIGN KEY (c_doctypetarget_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order cdoctypetarget_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT cdoctypetarget_pporder FOREIGN KEY (c_doctypetarget_id) REFERENCES adempiere.c_doctype(c_doctype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner cdunning_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT cdunning_cbpartner FOREIGN KEY (c_dunning_id) REFERENCES adempiere.c_dunning(c_dunning_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group cdunning_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group
    ADD CONSTRAINT cdunning_cbpgroup FOREIGN KEY (c_dunning_id) REFERENCES adempiere.c_dunning(c_dunning_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunninglevel cdunning_cdunninglevel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunninglevel
    ADD CONSTRAINT cdunning_cdunninglevel FOREIGN KEY (c_dunning_id) REFERENCES adempiere.c_dunning(c_dunning_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunningrun cdunning_cdunningrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrun
    ADD CONSTRAINT cdunning_cdunningrun FOREIGN KEY (c_dunning_id) REFERENCES adempiere.c_dunning(c_dunning_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline cdunninglevel_ccommissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT cdunninglevel_ccommissionline FOREIGN KEY (c_dunninglevel_id) REFERENCES adempiere.c_dunninglevel(c_dunninglevel_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunninglevel_trl cdunninglevel_cdltrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunninglevel_trl
    ADD CONSTRAINT cdunninglevel_cdltrl FOREIGN KEY (c_dunninglevel_id) REFERENCES adempiere.c_dunninglevel(c_dunninglevel_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunningrun cdunninglevel_cdunningrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrun
    ADD CONSTRAINT cdunninglevel_cdunningrun FOREIGN KEY (c_dunninglevel_id) REFERENCES adempiere.c_dunninglevel(c_dunninglevel_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunningrunentry cdunninglevel_cdunningrunentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrunentry
    ADD CONSTRAINT cdunninglevel_cdunningrunentry FOREIGN KEY (c_dunninglevel_id) REFERENCES adempiere.c_dunninglevel(c_dunninglevel_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice cdunninglevel_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT cdunninglevel_cinvoice FOREIGN KEY (c_dunninglevel_id) REFERENCES adempiere.c_dunninglevel(c_dunninglevel_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice cdunninglevel_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT cdunninglevel_iinvoice FOREIGN KEY (c_dunninglevel_id) REFERENCES adempiere.c_dunninglevel(c_dunninglevel_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunningrunentry cdunningrun_cdunningrunentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrunentry
    ADD CONSTRAINT cdunningrun_cdunningrunentry FOREIGN KEY (c_dunningrun_id) REFERENCES adempiere.c_dunningrun(c_dunningrun_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunningrunline cdunningrunentry_line; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrunline
    ADD CONSTRAINT cdunningrunentry_line FOREIGN KEY (c_dunningrunentry_id) REFERENCES adempiere.c_dunningrunentry(c_dunningrunentry_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline celemenrvalueuser1_cinvline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT celemenrvalueuser1_cinvline FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline celemenrvalueuser1_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT celemenrvalueuser1_corderline FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline celemenrvalueuser1_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT celemenrvalueuser1_minoutline FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline celemenrvalueuser2_cinvline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT celemenrvalueuser2_cinvline FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order celemenrvalueuser2_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT celemenrvalueuser2_corder FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline celemenrvalueuser2_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT celemenrvalueuser2_corderline FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline celemenrvalueuser2_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT celemenrvalueuser2_minoutline FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element celement_caschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT celement_caschemaelement FOREIGN KEY (c_element_id) REFERENCES adempiere.c_element(c_element_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_elementvalue celement_celementvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_elementvalue
    ADD CONSTRAINT celement_celementvalue FOREIGN KEY (c_element_id) REFERENCES adempiere.c_element(c_element_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_elementvalue celement_ielementvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_elementvalue
    ADD CONSTRAINT celement_ielementvalue FOREIGN KEY (c_element_id) REFERENCES adempiere.c_element(c_element_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element celementvalue_caschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT celementvalue_caschemaelement FOREIGN KEY (c_elementvalue_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_elementvalue_trl celementvalue_cevaluetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_elementvalue_trl
    ADD CONSTRAINT celementvalue_cevaluetrl FOREIGN KEY (c_elementvalue_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_subacct celementvalue_csubacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_subacct
    ADD CONSTRAINT celementvalue_csubacct FOREIGN KEY (c_elementvalue_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct celementvalue_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT celementvalue_factacct FOREIGN KEY (account_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_fundrestriction celementvalue_glfundrestr; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_fundrestriction
    ADD CONSTRAINT celementvalue_glfundrestr FOREIGN KEY (c_elementvalue_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_elementvalue celementvalue_ielementvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_elementvalue
    ADD CONSTRAINT celementvalue_ielementvalue FOREIGN KEY (c_elementvalue_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_reportline celementvalue_ireportline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_reportline
    ADD CONSTRAINT celementvalue_ireportline FOREIGN KEY (c_elementvalue_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_ratioelement celementvalue_paratioelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_ratioelement
    ADD CONSTRAINT celementvalue_paratioelement FOREIGN KEY (account_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn celementvalue_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT celementvalue_pareportcolumn FOREIGN KEY (c_elementvalue_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource celementvalue_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT celementvalue_pareportsource FOREIGN KEY (c_elementvalue_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination celementvalueaccount_vc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT celementvalueaccount_vc FOREIGN KEY (account_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline celementvalueu1_cinvoicebline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT celementvalueu1_cinvoicebline FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline celementvalueu2_cinvoicebline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT celementvalueu2_cinvoicebline FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cash celementvalueuser1_ccash; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cash
    ADD CONSTRAINT celementvalueuser1_ccash FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice celementvalueuser1_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT celementvalueuser1_cinvoice FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order celementvalueuser1_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT celementvalueuser1_corder FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment celementvalueuser1_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT celementvalueuser1_cpayment FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct celementvalueuser1_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT celementvalueuser1_factacct FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout celementvalueuser1_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT celementvalueuser1_minout FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventory celementvalueuser1_minvent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT celementvalueuser1_minvent FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement celementvalueuser1_mmove; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT celementvalueuser1_mmove FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production celementvalueuser1_mprod; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT celementvalueuser1_mprod FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination celementvalueuser1_vc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT celementvalueuser1_vc FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cash celementvalueuser2_ccash; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cash
    ADD CONSTRAINT celementvalueuser2_ccash FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice celementvalueuser2_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT celementvalueuser2_cinvoice FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment celementvalueuser2_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT celementvalueuser2_cpayment FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct celementvalueuser2_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT celementvalueuser2_factacct FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout celementvalueuser2_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT celementvalueuser2_minout FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventory celementvalueuser2_minvent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT celementvalueuser2_minvent FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement celementvalueuser2_mmove; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT celementvalueuser2_mmove FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production celementvalueuser2_mprod; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT celementvalueuser2_mprod FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination celementvalueuser2_vc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT celementvalueuser2_vc FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal celvalueaccount_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT celvalueaccount_igljournal FOREIGN KEY (account_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal celvalueuser2_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT celvalueuser2_igljournal FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution cevalueacct_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT cevalueacct_gldist FOREIGN KEY (account_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline cevalueacct_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT cevalueacct_gldistline FOREIGN KEY (account_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_elementvalue cevalueparent_ielementvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_elementvalue
    ADD CONSTRAINT cevalueparent_ielementvalue FOREIGN KEY (parentelementvalue_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution cevalueuser1_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT cevalueuser1_gldist FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline cevalueuser1_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT cevalueuser1_gldistline FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal cevalueuser1_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT cevalueuser1_igljournal FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution cevalueuser2_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT cevalueuser2_gldist FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline cevalueuser2_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT cevalueuser2_gldistline FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user cgreeting_aduser; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user
    ADD CONSTRAINT cgreeting_aduser FOREIGN KEY (c_greeting_id) REFERENCES adempiere.c_greeting(c_greeting_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner cgreeting_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT cgreeting_cbpartner FOREIGN KEY (c_greeting_id) REFERENCES adempiere.c_greeting(c_greeting_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_greeting_trl cgreeting_cgreetingtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_greeting_trl
    ADD CONSTRAINT cgreeting_cgreetingtrl FOREIGN KEY (c_greeting_id) REFERENCES adempiere.c_greeting(c_greeting_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bpartner cgreeting_ibpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bpartner
    ADD CONSTRAINT cgreeting_ibpartner FOREIGN KEY (c_greeting_id) REFERENCES adempiere.c_greeting(c_greeting_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal checkbankaccount_uposterminal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT checkbankaccount_uposterminal FOREIGN KEY (check_bankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal checktransferbankaccount_upost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT checktransferbankaccount_upost FOREIGN KEY (checktransferbankaccount_id) REFERENCES adempiere.c_bankaccount(c_bankaccount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal checktransfercashbook_uposterm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT checktransfercashbook_uposterm FOREIGN KEY (checktransfercashbook_id) REFERENCES adempiere.c_cashbook(c_cashbook_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice cinvliceline_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT cinvliceline_iinvoice FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_addition cinvoice_aassetaddition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT cinvoice_aassetaddition FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_disposed cinvoice_aassetdisposed; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_disposed
    ADD CONSTRAINT cinvoice_aassetdisposed FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_allocationline cinvoice_callocationline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_allocationline
    ADD CONSTRAINT cinvoice_callocationline FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankstatementline cinvoice_cbankstatementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankstatementline
    ADD CONSTRAINT cinvoice_cbankstatementline FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashline cinvoice_ccashline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashline
    ADD CONSTRAINT cinvoice_ccashline FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunningrunline cinvoice_cdunningrunline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrunline
    ADD CONSTRAINT cinvoice_cdunningrunline FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline cinvoice_cinvoicebatchline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT cinvoice_cinvoicebatchline FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline cinvoice_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT cinvoice_cinvoiceline FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicepayschedule cinvoice_cinvoicepaysched; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicepayschedule
    ADD CONSTRAINT cinvoice_cinvoicepaysched FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicetax cinvoice_cinvoicetax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicetax
    ADD CONSTRAINT cinvoice_cinvoicetax FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment cinvoice_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT cinvoice_cpayment FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_paymentallocate cinvoice_cpaymentallocate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentallocate
    ADD CONSTRAINT cinvoice_cpaymentallocate FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectionline cinvoice_cpayselectline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectionline
    ADD CONSTRAINT cinvoice_cpayselectline FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_recurring cinvoice_crecurring; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_recurring
    ADD CONSTRAINT cinvoice_crecurring FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_recurring_run cinvoice_crecurringrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_recurring_run
    ADD CONSTRAINT cinvoice_crecurringrun FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdeclarationline cinvoice_ctaxdeclline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdeclarationline
    ADD CONSTRAINT cinvoice_ctaxdeclline FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order cinvoice_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT cinvoice_ddorder FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute cinvoice_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT cinvoice_hrattribute FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bankstatement cinvoice_ibankstatement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bankstatement
    ADD CONSTRAINT cinvoice_ibankstatement FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice cinvoice_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT cinvoice_iinvoice FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_payment cinvoice_ipayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_payment
    ADD CONSTRAINT cinvoice_ipayment FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout cinvoice_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT cinvoice_minout FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutconfirm cinvoice_minoutconfirm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutconfirm
    ADD CONSTRAINT cinvoice_minoutconfirm FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice cinvoice_ref; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT cinvoice_ref FOREIGN KEY (ref_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction cinvoice_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT cinvoice_rrequestaction FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpense cinvoice_stimeexpense; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpense
    ADD CONSTRAINT cinvoice_stimeexpense FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_invoicegl cinvoice_tinvoicegl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_invoicegl
    ADD CONSTRAINT cinvoice_tinvoicegl FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline cinvoice_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT cinvoice_wminoutboundline FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline cinvoicebatch_cinvoicebline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT cinvoicebatch_cinvoicebline FOREIGN KEY (c_invoicebatch_id) REFERENCES adempiere.c_invoicebatch(c_invoicebatch_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_addition cinvoiceline_aassetaddition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT cinvoiceline_aassetaddition FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_disposed cinvoiceline_aassetdisposed; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_disposed
    ADD CONSTRAINT cinvoiceline_aassetdisposed FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_retirement cinvoiceline_aassetretirement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_retirement
    ADD CONSTRAINT cinvoiceline_aassetretirement FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissiondetail cinvoiceline_ccommissiondet; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissiondetail
    ADD CONSTRAINT cinvoiceline_ccommissiondet FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline cinvoiceline_cinvoicebline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT cinvoiceline_cinvoicebline FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_landedcost cinvoiceline_clandedcost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_landedcost
    ADD CONSTRAINT cinvoiceline_clandedcost FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_landedcostallocation cinvoiceline_clandedcostalloc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_landedcostallocation
    ADD CONSTRAINT cinvoiceline_clandedcostalloc FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_revenuerecognition_plan cinvoiceline_crevenuerecplan; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_revenuerecognition_plan
    ADD CONSTRAINT cinvoiceline_crevenuerecplan FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory cinvoiceline_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT cinvoiceline_csaleshistory FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdeclarationline cinvoiceline_ctaxdeclline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdeclarationline
    ADD CONSTRAINT cinvoiceline_ctaxdeclline FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement cinvoiceline_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT cinvoiceline_hrmovement FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutlineconfirm cinvoiceline_minoutlineconfirm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutlineconfirm
    ADD CONSTRAINT cinvoiceline_minoutlineconfirm FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_matchpo cinvoiceline_mmatchpo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_matchpo
    ADD CONSTRAINT cinvoiceline_mmatchpo FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request cinvoiceline_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT cinvoiceline_rrequest FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline cinvoiceline_stimeexpenseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT cinvoiceline_stimeexpenseline FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline cinvoiceline_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT cinvoiceline_wminoutboundline FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunningrunline cinvoicepayschedule_cdunningru; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrunline
    ADD CONSTRAINT cinvoicepayschedule_cdunningru FOREIGN KEY (c_invoicepayschedule_id) REFERENCES adempiere.c_invoicepayschedule(c_invoicepayschedule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectionline cinvoicepayschedule_cpayselect; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectionline
    ADD CONSTRAINT cinvoicepayschedule_cpayselect FOREIGN KEY (c_invoicepayschedule_id) REFERENCES adempiere.c_invoicepayschedule(c_invoicepayschedule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request cinvoicerequest_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT cinvoicerequest_rrequest FOREIGN KEY (c_invoicerequest_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner cinvoiceschedule_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT cinvoiceschedule_cbpartner FOREIGN KEY (c_invoiceschedule_id) REFERENCES adempiere.c_invoiceschedule(c_invoiceschedule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user cjob_aduser; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user
    ADD CONSTRAINT cjob_aduser FOREIGN KEY (c_job_id) REFERENCES adempiere.c_job(c_job_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_jobassignment cjob_cjobassignment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_jobassignment
    ADD CONSTRAINT cjob_cjobassignment FOREIGN KEY (c_job_id) REFERENCES adempiere.c_job(c_job_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_jobremuneration cjob_cjobremuneration; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_jobremuneration
    ADD CONSTRAINT cjob_cjobremuneration FOREIGN KEY (c_job_id) REFERENCES adempiere.c_job(c_job_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_operationresource cjob_moperationresource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_operationresource
    ADD CONSTRAINT cjob_moperationresource FOREIGN KEY (c_job_id) REFERENCES adempiere.c_job(c_job_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_job cjobcategory_cjob; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_job
    ADD CONSTRAINT cjobcategory_cjob FOREIGN KEY (c_jobcategory_id) REFERENCES adempiere.c_jobcategory(c_jobcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail clandedcostallocation_mcostdet; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT clandedcostallocation_mcostdet FOREIGN KEY (c_landedcostallocation_id) REFERENCES adempiere.c_landedcostallocation(c_landedcostallocation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset clocation_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT clocation_aasset FOREIGN KEY (c_location_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_change clocation_aassetchange; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_change
    ADD CONSTRAINT clocation_aassetchange FOREIGN KEY (c_location_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_registration clocation_adregistration; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_registration
    ADD CONSTRAINT clocation_adregistration FOREIGN KEY (c_location_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element clocation_caschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT clocation_caschemaelement FOREIGN KEY (c_location_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bank clocation_cbank; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bank
    ADD CONSTRAINT clocation_cbank FOREIGN KEY (c_location_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner_location clocation_cbplocation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner_location
    ADD CONSTRAINT clocation_cbplocation FOREIGN KEY (c_location_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_asset clocation_iasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_asset
    ADD CONSTRAINT clocation_iasset FOREIGN KEY (c_location_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice clocation_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT clocation_iinvoice FOREIGN KEY (c_location_id) REFERENCES adempiere.c_location(c_location_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order clocation_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT clocation_iorder FOREIGN KEY (c_location_id) REFERENCES adempiere.c_location(c_location_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn clocation_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT clocation_pareportcolumn FOREIGN KEY (c_location_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource clocation_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT clocation_pareportsource FOREIGN KEY (c_location_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freightline clocfrom_ddfreightline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freightline
    ADD CONSTRAINT clocfrom_ddfreightline FOREIGN KEY (c_locfrom_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary clocfrom_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT clocfrom_factacctsummary FOREIGN KEY (c_locfrom_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution clocfrom_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT clocfrom_gldist FOREIGN KEY (c_locfrom_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline clocfrom_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT clocfrom_gldistline FOREIGN KEY (c_locfrom_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline clocfrom_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT clocfrom_gljournalline FOREIGN KEY (c_locfrom_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget clocfrom_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT clocfrom_ibudget FOREIGN KEY (c_locfrom_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal clocfrom_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT clocfrom_igljournal FOREIGN KEY (c_locfrom_id) REFERENCES adempiere.c_location(c_location_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freightline clocto_ddfreightline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freightline
    ADD CONSTRAINT clocto_ddfreightline FOREIGN KEY (c_locto_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary clocto_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT clocto_factacctsummary FOREIGN KEY (c_locto_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution clocto_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT clocto_gldist FOREIGN KEY (c_locto_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline clocto_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT clocto_gldistline FOREIGN KEY (c_locto_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline clocto_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT clocto_gljournalline FOREIGN KEY (c_locto_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget clocto_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT clocto_ibudget FOREIGN KEY (c_locto_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal clocto_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT clocto_igljournal FOREIGN KEY (c_locto_id) REFERENCES adempiere.c_location(c_location_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_accessnewschannel cmaccesprofile_cmanewschannel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accessnewschannel
    ADD CONSTRAINT cmaccesprofile_cmanewschannel FOREIGN KEY (cm_accessprofile_id) REFERENCES adempiere.cm_accessprofile(cm_accessprofile_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_accesscontainer cmaccessprofile_cmacccontainer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accesscontainer
    ADD CONSTRAINT cmaccessprofile_cmacccontainer FOREIGN KEY (cm_accessprofile_id) REFERENCES adempiere.cm_accessprofile(cm_accessprofile_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_accessmedia cmaccessprofile_cmaccessmedia; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accessmedia
    ADD CONSTRAINT cmaccessprofile_cmaccessmedia FOREIGN KEY (cm_accessprofile_id) REFERENCES adempiere.cm_accessprofile(cm_accessprofile_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_accessstage cmaccessprofile_cmaccessstage; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accessstage
    ADD CONSTRAINT cmaccessprofile_cmaccessstage FOREIGN KEY (cm_accessprofile_id) REFERENCES adempiere.cm_accessprofile(cm_accessprofile_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_accesslistbpgroup cmaccessprofile_cmalbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accesslistbpgroup
    ADD CONSTRAINT cmaccessprofile_cmalbpgroup FOREIGN KEY (cm_accessprofile_id) REFERENCES adempiere.cm_accessprofile(cm_accessprofile_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_accesslistrole cmaccessprofile_cmalistrole; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accesslistrole
    ADD CONSTRAINT cmaccessprofile_cmalistrole FOREIGN KEY (cm_accessprofile_id) REFERENCES adempiere.cm_accessprofile(cm_accessprofile_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_ad cmadcat_cmad; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_ad
    ADD CONSTRAINT cmadcat_cmad FOREIGN KEY (cm_ad_cat_id) REFERENCES adempiere.cm_ad_cat(cm_ad_cat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_template_ad_cat cmadcat_cmtemplateadcat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_template_ad_cat
    ADD CONSTRAINT cmadcat_cmtemplateadcat FOREIGN KEY (cm_ad_cat_id) REFERENCES adempiere.cm_ad_cat(cm_ad_cat_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_webaccesslog cmbroadcastserver_cmwebalog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_webaccesslog
    ADD CONSTRAINT cmbroadcastserver_cmwebalog FOREIGN KEY (cm_broadcastserver_id) REFERENCES adempiere.cm_broadcastserver(cm_broadcastserver_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_chatentry cmchat_chchatentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chatentry
    ADD CONSTRAINT cmchat_chchatentry FOREIGN KEY (cm_chat_id) REFERENCES adempiere.cm_chat(cm_chat_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_chatupdate cmchat_cmchatupdate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chatupdate
    ADD CONSTRAINT cmchat_cmchatupdate FOREIGN KEY (cm_chat_id) REFERENCES adempiere.cm_chat(cm_chat_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_chatentry cmchatentry_grandparent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chatentry
    ADD CONSTRAINT cmchatentry_grandparent FOREIGN KEY (cm_chatentrygrandparent_id) REFERENCES adempiere.cm_chatentry(cm_chatentry_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_chat cmchattype_cmchat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chat
    ADD CONSTRAINT cmchattype_cmchat FOREIGN KEY (cm_chattype_id) REFERENCES adempiere.cm_chattype(cm_chattype_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_chattypeupdate cmchattype_cmchattypeupdate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chattypeupdate
    ADD CONSTRAINT cmchattype_cmchattypeupdate FOREIGN KEY (cm_chattype_id) REFERENCES adempiere.cm_chattype(cm_chattype_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_accesscontainer cmcontainer_cmaccesscontainer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accesscontainer
    ADD CONSTRAINT cmcontainer_cmaccesscontainer FOREIGN KEY (cm_container_id) REFERENCES adempiere.cm_container(cm_container_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_container_element cmcontainer_cmcontainerelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container_element
    ADD CONSTRAINT cmcontainer_cmcontainerelement FOREIGN KEY (cm_container_id) REFERENCES adempiere.cm_container(cm_container_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_container cmcontainer_cmcontainerlink; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container
    ADD CONSTRAINT cmcontainer_cmcontainerlink FOREIGN KEY (cm_containerlink_id) REFERENCES adempiere.cm_container(cm_container_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_container_trl cmcontainer_cmcontainertrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container_trl
    ADD CONSTRAINT cmcontainer_cmcontainertrl FOREIGN KEY (cm_container_id) REFERENCES adempiere.cm_container(cm_container_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_containerttable cmcontainer_cmcontainerttable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_containerttable
    ADD CONSTRAINT cmcontainer_cmcontainerttable FOREIGN KEY (cm_container_id) REFERENCES adempiere.cm_container(cm_container_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_container_url cmcontainer_cmcontainerurl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container_url
    ADD CONSTRAINT cmcontainer_cmcontainerurl FOREIGN KEY (cm_container_id) REFERENCES adempiere.cm_container(cm_container_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_webproject_domain cmcontainer_cmwebprojectdomain; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_webproject_domain
    ADD CONSTRAINT cmcontainer_cmwebprojectdomain FOREIGN KEY (cm_container_id) REFERENCES adempiere.cm_container(cm_container_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_container_element_trl cmcontainerelement_cmcetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container_element_trl
    ADD CONSTRAINT cmcontainerelement_cmcetrl FOREIGN KEY (cm_container_element_id) REFERENCES adempiere.cm_container_element(cm_container_element_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_accessstage cmcstage_cmaccessstage; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accessstage
    ADD CONSTRAINT cmcstage_cmaccessstage FOREIGN KEY (cm_cstage_id) REFERENCES adempiere.cm_cstage(cm_cstage_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_cstage_element cmcstage_cmcstageelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstage_element
    ADD CONSTRAINT cmcstage_cmcstageelement FOREIGN KEY (cm_cstage_id) REFERENCES adempiere.cm_cstage(cm_cstage_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_cstage cmcstage_cmcstagelink; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstage
    ADD CONSTRAINT cmcstage_cmcstagelink FOREIGN KEY (cm_cstagelink_id) REFERENCES adempiere.cm_cstage(cm_cstage_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_cstage_trl cmcstage_cmcstagetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstage_trl
    ADD CONSTRAINT cmcstage_cmcstagetrl FOREIGN KEY (cm_cstage_id) REFERENCES adempiere.cm_cstage(cm_cstage_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_cstage_element_trl cmcstageelement_cmcsetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstage_element_trl
    ADD CONSTRAINT cmcstageelement_cmcsetrl FOREIGN KEY (cm_cstage_element_id) REFERENCES adempiere.cm_cstage_element(cm_cstage_element_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_chatentry cmentrty_cmentryparent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_chatentry
    ADD CONSTRAINT cmentrty_cmentryparent FOREIGN KEY (cm_chatentryparent_id) REFERENCES adempiere.cm_chatentry(cm_chatentry_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_accessmedia cmmedia_cmaccessmedia; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accessmedia
    ADD CONSTRAINT cmmedia_cmaccessmedia FOREIGN KEY (cm_media_id) REFERENCES adempiere.cm_media(cm_media_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_ad cmmedia_cmad; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_ad
    ADD CONSTRAINT cmmedia_cmad FOREIGN KEY (cm_media_id) REFERENCES adempiere.cm_media(cm_media_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_mediadeploy cmmedia_cmmediadeploy; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_mediadeploy
    ADD CONSTRAINT cmmedia_cmmediadeploy FOREIGN KEY (cm_media_id) REFERENCES adempiere.cm_media(cm_media_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_webaccesslog cmmedia_cmwebaccesslog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_webaccesslog
    ADD CONSTRAINT cmmedia_cmwebaccesslog FOREIGN KEY (cm_media_id) REFERENCES adempiere.cm_media(cm_media_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_mediadeploy cmmediaserver_cmmediadeploy; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_mediadeploy
    ADD CONSTRAINT cmmediaserver_cmmediadeploy FOREIGN KEY (cm_media_server_id) REFERENCES adempiere.cm_media_server(cm_media_server_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_newsitem cmnewschannel_cmnewsitem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_newsitem
    ADD CONSTRAINT cmnewschannel_cmnewsitem FOREIGN KEY (cm_newschannel_id) REFERENCES adempiere.cm_newschannel(cm_newschannel_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_cstagettable cmstage_cmcstagettable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstagettable
    ADD CONSTRAINT cmstage_cmcstagettable FOREIGN KEY (cm_cstage_id) REFERENCES adempiere.cm_cstage(cm_cstage_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_container cmtemplate_cmcontainer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container
    ADD CONSTRAINT cmtemplate_cmcontainer FOREIGN KEY (cm_template_id) REFERENCES adempiere.cm_template(cm_template_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_cstage cmtemplate_cmcstage; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstage
    ADD CONSTRAINT cmtemplate_cmcstage FOREIGN KEY (cm_template_id) REFERENCES adempiere.cm_template(cm_template_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_template_ad_cat cmtemplate_cmtemplateadcat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_template_ad_cat
    ADD CONSTRAINT cmtemplate_cmtemplateadcat FOREIGN KEY (cm_template_id) REFERENCES adempiere.cm_template(cm_template_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_templatetable cmtemplate_cmttable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_templatetable
    ADD CONSTRAINT cmtemplate_cmttable FOREIGN KEY (cm_template_id) REFERENCES adempiere.cm_template(cm_template_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_containerttable cmttable_cmcontainertable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_containerttable
    ADD CONSTRAINT cmttable_cmcontainertable FOREIGN KEY (cm_templatetable_id) REFERENCES adempiere.cm_templatetable(cm_templatetable_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_cstagettable cmttable_cmstagettable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstagettable
    ADD CONSTRAINT cmttable_cmstagettable FOREIGN KEY (cm_templatetable_id) REFERENCES adempiere.cm_templatetable(cm_templatetable_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_ad_cat cmwebproject_cmadcat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_ad_cat
    ADD CONSTRAINT cmwebproject_cmadcat FOREIGN KEY (cm_webproject_id) REFERENCES adempiere.cm_webproject(cm_webproject_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_broadcastserver cmwebproject_cmbroadcastserver; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_broadcastserver
    ADD CONSTRAINT cmwebproject_cmbroadcastserver FOREIGN KEY (cm_webproject_id) REFERENCES adempiere.cm_webproject(cm_webproject_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_container cmwebproject_cmcontainer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_container
    ADD CONSTRAINT cmwebproject_cmcontainer FOREIGN KEY (cm_webproject_id) REFERENCES adempiere.cm_webproject(cm_webproject_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_cstage cmwebproject_cmcstage; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_cstage
    ADD CONSTRAINT cmwebproject_cmcstage FOREIGN KEY (cm_webproject_id) REFERENCES adempiere.cm_webproject(cm_webproject_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_media cmwebproject_cmmedia; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_media
    ADD CONSTRAINT cmwebproject_cmmedia FOREIGN KEY (cm_webproject_id) REFERENCES adempiere.cm_webproject(cm_webproject_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_media_server cmwebproject_cmmediaserver; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_media_server
    ADD CONSTRAINT cmwebproject_cmmediaserver FOREIGN KEY (cm_webproject_id) REFERENCES adempiere.cm_webproject(cm_webproject_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_newschannel cmwebproject_cmnewschannel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_newschannel
    ADD CONSTRAINT cmwebproject_cmnewschannel FOREIGN KEY (cm_webproject_id) REFERENCES adempiere.cm_webproject(cm_webproject_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_template cmwebproject_cmtemplate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_template
    ADD CONSTRAINT cmwebproject_cmtemplate FOREIGN KEY (cm_webproject_id) REFERENCES adempiere.cm_webproject(cm_webproject_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_webaccesslog cmwebproject_cmwebaccesslog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_webaccesslog
    ADD CONSTRAINT cmwebproject_cmwebaccesslog FOREIGN KEY (cm_webproject_id) REFERENCES adempiere.cm_webproject(cm_webproject_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_webproject_domain cmwebproject_cmwpdomain; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_webproject_domain
    ADD CONSTRAINT cmwebproject_cmwpdomain FOREIGN KEY (cm_webproject_id) REFERENCES adempiere.cm_webproject(cm_webproject_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_index cmwebproject_kindex; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_index
    ADD CONSTRAINT cmwebproject_kindex FOREIGN KEY (cm_webproject_id) REFERENCES adempiere.cm_webproject(cm_webproject_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_indexstop cmwebproject_kindexstop; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_indexstop
    ADD CONSTRAINT cmwebproject_kindexstop FOREIGN KEY (cm_webproject_id) REFERENCES adempiere.cm_webproject(cm_webproject_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cm_accessnewschannel cnmewschannel_cmaccessnewsc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.cm_accessnewschannel
    ADD CONSTRAINT cnmewschannel_cmaccessnewsc FOREIGN KEY (cm_newschannel_id) REFERENCES adempiere.cm_newschannel(cm_newschannel_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column columnclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column
    ADD CONSTRAINT columnclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column columnorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column
    ADD CONSTRAINT columnorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_gl commitmentoffset_cacctschemagl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_gl
    ADD CONSTRAINT commitmentoffset_cacctschemagl FOREIGN KEY (commitmentoffset_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_gl commitmentoffsetsales_cacctsch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_gl
    ADD CONSTRAINT commitmentoffsetsales_cacctsch FOREIGN KEY (commitmentoffsetsales_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_matchinv convoiceline_mmatchinv; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_matchinv
    ADD CONSTRAINT convoiceline_mmatchinv FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline convoiceline_ref; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT convoiceline_ref FOREIGN KEY (ref_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_contactactivity copportunity_ccontactactivity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_contactactivity
    ADD CONSTRAINT copportunity_ccontactactivity FOREIGN KEY (c_opportunity_id) REFERENCES adempiere.c_opportunity(c_opportunity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order copportunity_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT copportunity_corder FOREIGN KEY (c_opportunity_id) REFERENCES adempiere.c_opportunity(c_opportunity_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_buyerfunds corder_bbuyersfunds; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_buyerfunds
    ADD CONSTRAINT corder_bbuyersfunds FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_sellerfunds corder_bsellerfunds; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_sellerfunds
    ADD CONSTRAINT corder_bsellerfunds FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_allocationline corder_callocation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_allocationline
    ADD CONSTRAINT corder_callocation FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice corder_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT corder_cinvoice FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_opportunity corder_copportunity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_opportunity
    ADD CONSTRAINT corder_copportunity FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline corder_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT corder_corderline FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_ordertax corder_cordertax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_ordertax
    ADD CONSTRAINT corder_cordertax FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment corder_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT corder_cpayment FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectionline corder_cpayselectionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectionline
    ADD CONSTRAINT corder_cpayselectionline FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectline corder_cprojectline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectline
    ADD CONSTRAINT corder_cprojectline FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectphase corder_cprojectphase; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectphase
    ADD CONSTRAINT corder_cprojectphase FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_recurring corder_crecurring; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_recurring
    ADD CONSTRAINT corder_crecurring FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_recurring_run corder_crecurringrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_recurring_run
    ADD CONSTRAINT corder_crecurringrun FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq corder_crfq; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq
    ADD CONSTRAINT corder_crfq FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqresponse corder_crfqresponse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqresponse
    ADD CONSTRAINT corder_crfqresponse FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freight corder_ddfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freight
    ADD CONSTRAINT corder_ddfreight FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order corder_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT corder_ddorder FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order corder_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT corder_iorder FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout corder_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT corder_minout FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenishplanline corder_mreplenishplanline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenishplanline
    ADD CONSTRAINT corder_mreplenishplanline FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_rma corder_mrma; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rma
    ADD CONSTRAINT corder_mrma FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp corder_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT corder_ppmrp FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order corder_ref; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT corder_ref FOREIGN KEY (ref_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request corder_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT corder_rrequest FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction corder_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT corder_rrequestaction FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline corder_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT corder_wminoutboundline FOREIGN KEY (c_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissiondetail corderline_ccommissiondetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissiondetail
    ADD CONSTRAINT corderline_ccommissiondetail FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline corderline_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT corderline_cinvoiceline FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order corderline_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT corderline_iorder FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail corderline_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT corderline_mcostdetail FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_demanddetail corderline_mdemanddetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_demanddetail
    ADD CONSTRAINT corderline_mdemanddetail FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline corderline_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT corderline_minout FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_matchpo corderline_mmatchpo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_matchpo
    ADD CONSTRAINT corderline_mmatchpo FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production corderline_mproduction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT corderline_mproduction FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline corderline_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT corderline_mrequisitionline FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp corderline_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT corderline_ppmrp FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order corderline_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT corderline_pporder FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline corderline_ref; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT corderline_ref FOREIGN KEY (ref_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request corderline_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT corderline_rrequest FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline corderline_stimeexpenseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT corderline_stimeexpenseline FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline corderline_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT corderline_wminoutboundline FOREIGN KEY (c_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectline corderpo_cprojectline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectline
    ADD CONSTRAINT corderpo_cprojectline FOREIGN KEY (c_orderpo_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cordersource_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cordersource_corder FOREIGN KEY (c_ordersource_id) REFERENCES adempiere.c_ordersource(c_ordersource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order cordersource_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT cordersource_iorder FOREIGN KEY (c_ordersource_id) REFERENCES adempiere.c_ordersource(c_ordersource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_buyerfunds cpayment_bbuyerfunds; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_buyerfunds
    ADD CONSTRAINT cpayment_bbuyerfunds FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_sellerfunds cpayment_bsellerfunds; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_sellerfunds
    ADD CONSTRAINT cpayment_bsellerfunds FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_allocationline cpayment_callocationline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_allocationline
    ADD CONSTRAINT cpayment_callocationline FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankstatementline cpayment_cbankstmtline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankstatementline
    ADD CONSTRAINT cpayment_cbankstmtline FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashline cpayment_ccashline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashline
    ADD CONSTRAINT cpayment_ccashline FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunningrunline cpayment_cdunningrunline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrunline
    ADD CONSTRAINT cpayment_cdunningrunline FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice cpayment_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT cpayment_cinvoice FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cpayment_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cpayment_corder FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_paymentallocate cpayment_cpaymentallocate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentallocate
    ADD CONSTRAINT cpayment_cpaymentallocate FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectioncheck cpayment_cpayselectioncheck; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectioncheck
    ADD CONSTRAINT cpayment_cpayselectioncheck FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_recurring cpayment_crecurring; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_recurring
    ADD CONSTRAINT cpayment_crecurring FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_recurring_run cpayment_crecurringrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_recurring_run
    ADD CONSTRAINT cpayment_crecurringrun FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payselectioncheck cpayment_hrpayselectioncheck; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payselectioncheck
    ADD CONSTRAINT cpayment_hrpayselectioncheck FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bankstatement cpayment_ibankstatement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bankstatement
    ADD CONSTRAINT cpayment_ibankstatement FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_payment cpayment_ipayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_payment
    ADD CONSTRAINT cpayment_ipayment FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request cpayment_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT cpayment_rrequest FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction cpayment_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT cpayment_rrequestaction FOREIGN KEY (c_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment cpaymentbatch_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT cpaymentbatch_cpayment FOREIGN KEY (c_paymentbatch_id) REFERENCES adempiere.c_paymentbatch(c_paymentbatch_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner cpaymentterm_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT cpaymentterm_cbpartner FOREIGN KEY (c_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashflow cpaymentterm_ccashflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashflow
    ADD CONSTRAINT cpaymentterm_ccashflow FOREIGN KEY (c_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline cpaymentterm_ccommissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT cpaymentterm_ccommissionline FOREIGN KEY (c_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunninglevel cpaymentterm_cdunninglevel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunninglevel
    ADD CONSTRAINT cpaymentterm_cdunninglevel FOREIGN KEY (c_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice cpaymentterm_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT cpaymentterm_cinvoice FOREIGN KEY (c_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payschedule cpaymentterm_cpayschedule; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payschedule
    ADD CONSTRAINT cpaymentterm_cpayschedule FOREIGN KEY (c_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_paymentterm_trl cpaymentterm_cpaytermtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentterm_trl
    ADD CONSTRAINT cpaymentterm_cpaytermtrl FOREIGN KEY (c_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project cpaymentterm_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT cpaymentterm_cproject FOREIGN KEY (c_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_withholding cpaymentterm_cwithholding; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_withholding
    ADD CONSTRAINT cpaymentterm_cwithholding FOREIGN KEY (c_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice cpaymentterm_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT cpaymentterm_iinvoice FOREIGN KEY (c_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order cpaymentterm_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT cpaymentterm_iorder FOREIGN KEY (c_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cpaymentterm_soheader; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cpaymentterm_soheader FOREIGN KEY (c_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_store cpaymentterm_wstore; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_store
    ADD CONSTRAINT cpaymentterm_wstore FOREIGN KEY (c_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_paymentallocate cpaymtallocate_callocationline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentallocate
    ADD CONSTRAINT cpaymtallocate_callocationline FOREIGN KEY (c_allocationline_id) REFERENCES adempiere.c_allocationline(c_allocationline_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_paymentbatch cpaymtprocessor_cpaymtbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_paymentbatch
    ADD CONSTRAINT cpaymtprocessor_cpaymtbatch FOREIGN KEY (c_paymentprocessor_id) REFERENCES adempiere.c_paymentprocessor(c_paymentprocessor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicepayschedule cpayschedule_cinvoicepaysched; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicepayschedule
    ADD CONSTRAINT cpayschedule_cinvoicepaysched FOREIGN KEY (c_payschedule_id) REFERENCES adempiere.c_payschedule(c_payschedule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectionline cpaysel_cpayselline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectionline
    ADD CONSTRAINT cpaysel_cpayselline FOREIGN KEY (c_payselection_id) REFERENCES adempiere.c_payselection(c_payselection_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectionline cpayselcheck_cpayselline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectionline
    ADD CONSTRAINT cpayselcheck_cpayselline FOREIGN KEY (c_payselectioncheck_id) REFERENCES adempiere.c_payselectioncheck(c_payselectioncheck_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectioncheck cpayselection_cpayselectcheck; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectioncheck
    ADD CONSTRAINT cpayselection_cpayselectcheck FOREIGN KEY (c_payselection_id) REFERENCES adempiere.c_payselection(c_payselection_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_process cpayselection_hrprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT cpayselection_hrprocess FOREIGN KEY (c_payselection_id) REFERENCES adempiere.c_payselection(c_payselection_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectionline cpayselectionlineparent_cpayse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectionline
    ADD CONSTRAINT cpayselectionlineparent_cpayse FOREIGN KEY (c_payselectionline_parent_id) REFERENCES adempiere.c_payselectionline(c_payselectionline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_disposed cperiod_aassetdisposed; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_disposed
    ADD CONSTRAINT cperiod_aassetdisposed FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_reval_entry cperiod_aassetrevalentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_reval_entry
    ADD CONSTRAINT cperiod_aassetrevalentry FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_split cperiod_aassetsplit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_split
    ADD CONSTRAINT cperiod_aassetsplit FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_transfer cperiod_aassettransfer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_transfer
    ADD CONSTRAINT cperiod_aassettransfer FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_build cperiod_adepreciationbuild; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_build
    ADD CONSTRAINT cperiod_adepreciationbuild FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_entry cperiod_adepreciationentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_entry
    ADD CONSTRAINT cperiod_adepreciationentry FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema cperiod_cacctschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema
    ADD CONSTRAINT cperiod_cacctschema FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct cperiod_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT cperiod_factacct FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary cperiod_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT cperiod_factacctsummary FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_period cperiod_hrperiod; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_period
    ADD CONSTRAINT cperiod_hrperiod FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal cperiod_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT cperiod_ifajournal FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal cperiod_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT cperiod_igljournal FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_demandline cperiod_mdemandline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_demandline
    ADD CONSTRAINT cperiod_mdemandline FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecastline cperiod_mforecastline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecastline
    ADD CONSTRAINT cperiod_mforecastline FOREIGN KEY (c_period_id) REFERENCES adempiere.c_period(c_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cyclephase cphase_ccyclephase; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cyclephase
    ADD CONSTRAINT cphase_ccyclephase FOREIGN KEY (c_phase_id) REFERENCES adempiere.c_phase(c_phase_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project cphase_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT cphase_cproject FOREIGN KEY (c_phase_id) REFERENCES adempiere.c_phase(c_phase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectphase cphase_cprojectphase; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectphase
    ADD CONSTRAINT cphase_cprojectphase FOREIGN KEY (c_phase_id) REFERENCES adempiere.c_phase(c_phase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_task cphase_ctask; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_task
    ADD CONSTRAINT cphase_ctask FOREIGN KEY (c_phase_id) REFERENCES adempiere.c_phase(c_phase_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner cpopaymentterm_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT cpopaymentterm_cbpartner FOREIGN KEY (po_paymentterm_id) REFERENCES adempiere.c_paymentterm(c_paymentterm_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice cpos_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT cpos_cinvoice FOREIGN KEY (c_pos_id) REFERENCES adempiere.c_pos(c_pos_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cpos_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cpos_corder FOREIGN KEY (c_pos_id) REFERENCES adempiere.c_pos(c_pos_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment cpos_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT cpos_cpayment FOREIGN KEY (c_pos_id) REFERENCES adempiere.c_pos(c_pos_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout cpos_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT cpos_minout FOREIGN KEY (c_pos_id) REFERENCES adempiere.c_pos(c_pos_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_poskey cposkeylayout_c_poskey; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_poskey
    ADD CONSTRAINT cposkeylayout_c_poskey FOREIGN KEY (c_poskeylayout_id) REFERENCES adempiere.c_poskeylayout(c_poskeylayout_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_pos cposkeylayout_cpos; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_pos
    ADD CONSTRAINT cposkeylayout_cpos FOREIGN KEY (c_poskeylayout_id) REFERENCES adempiere.c_poskeylayout(c_poskeylayout_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset cproject_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT cproject_aasset FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_addition cproject_aassetaddition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT cproject_aassetaddition FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_memo cproject_admemo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_memo
    ADD CONSTRAINT cproject_admemo FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element cproject_caschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT cproject_caschemaelement FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cash cproject_ccash; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cash
    ADD CONSTRAINT cproject_ccash FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline cproject_ccommissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT cproject_ccommissionline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice cproject_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT cproject_cinvoice FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline cproject_cinvoicebatchline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT cproject_cinvoicebatchline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline cproject_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT cproject_cinvoiceline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order cproject_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT cproject_corder FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline cproject_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT cproject_corderline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment cproject_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT cproject_cpayment FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectissue cproject_cprojectissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectissue
    ADD CONSTRAINT cproject_cprojectissue FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectline cproject_cprojectline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectline
    ADD CONSTRAINT cproject_cprojectline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectphase cproject_cprojectphase; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectphase
    ADD CONSTRAINT cproject_cprojectphase FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_recurring cproject_crecurring; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_recurring
    ADD CONSTRAINT cproject_crecurring FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_recurring_run cproject_crecurringrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_recurring_run
    ADD CONSTRAINT cproject_crecurringrun FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory cproject_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT cproject_csaleshistory FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order cproject_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT cproject_ddorder FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline cproject_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT cproject_ddorderline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary cproject_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT cproject_factacctsummary FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution cproject_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT cproject_gldist FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline cproject_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT cproject_gldistline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline cproject_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT cproject_gljournalline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute cproject_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT cproject_hrattribute FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_contract cproject_hrcontract; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_contract
    ADD CONSTRAINT cproject_hrcontract FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee cproject_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT cproject_hremployee FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement cproject_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT cproject_hrmovement FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget cproject_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT cproject_ibudget FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal cproject_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT cproject_ifajournal FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal cproject_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT cproject_igljournal FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice cproject_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT cproject_iinvoice FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_movement cproject_imovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_movement
    ADD CONSTRAINT cproject_imovement FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order cproject_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT cproject_iorder FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory cproject_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT cproject_isaleshistory FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecast cproject_mforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecast
    ADD CONSTRAINT cproject_mforecast FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout cproject_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT cproject_minout FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline cproject_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT cproject_minoutline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventory cproject_minventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT cproject_minventory FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline cproject_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT cproject_minventoryline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement cproject_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT cproject_mmovement FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline cproject_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT cproject_mmovementline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production cproject_mproduction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT cproject_mproduction FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionbatch cproject_mproductionbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionbatch
    ADD CONSTRAINT cproject_mproductionbatch FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline cproject_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT cproject_mproductionline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisition cproject_mrequisition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisition
    ADD CONSTRAINT cproject_mrequisition FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline cproject_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT cproject_mrequisitionline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_documentstatus cproject_padocumentstatus; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_documentstatus
    ADD CONSTRAINT cproject_padocumentstatus FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn cproject_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT cproject_pareportcolumn FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource cproject_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT cproject_pareportsource FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector cproject_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT cproject_ppcostcollector FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp cproject_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT cproject_ppmrp FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order cproject_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT cproject_pporder FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_issueproject cproject_rissueproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issueproject
    ADD CONSTRAINT cproject_rissueproject FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request cproject_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT cproject_rrequest FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction cproject_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT cproject_rrequestaction FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline cproject_stimeexpenseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT cproject_stimeexpenseline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_aging cproject_taging; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_aging
    ADD CONSTRAINT cproject_taging FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination cproject_vc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT cproject_vc FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline cproject_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT cproject_wminoutboundline FOREIGN KEY (c_project_id) REFERENCES adempiere.c_project(c_project_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectissuema cprojectissue_cprojectissuema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectissuema
    ADD CONSTRAINT cprojectissue_cprojectissuema FOREIGN KEY (c_projectissue_id) REFERENCES adempiere.c_projectissue(c_projectissue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectline cprojectissue_cprojectline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectline
    ADD CONSTRAINT cprojectissue_cprojectline FOREIGN KEY (c_projectissue_id) REFERENCES adempiere.c_projectissue(c_projectissue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail cprojectissue_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT cprojectissue_mcostdetail FOREIGN KEY (c_projectissue_id) REFERENCES adempiere.c_projectissue(c_projectissue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transaction cprojectissue_mtransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transaction
    ADD CONSTRAINT cprojectissue_mtransaction FOREIGN KEY (c_projectissue_id) REFERENCES adempiere.c_projectissue(c_projectissue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_transaction cprojectissue_ttransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_transaction
    ADD CONSTRAINT cprojectissue_ttransaction FOREIGN KEY (c_projectissue_id) REFERENCES adempiere.c_projectissue(c_projectissue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline cprojectphase_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT cprojectphase_cinvoiceline FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline cprojectphase_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT cprojectphase_corderline FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectline cprojectphase_cprojectline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectline
    ADD CONSTRAINT cprojectphase_cprojectline FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projecttask cprojectphase_cprojecttask; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projecttask
    ADD CONSTRAINT cprojectphase_cprojecttask FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory cprojectphase_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT cprojectphase_csaleshistory FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline cprojectphase_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT cprojectphase_ddorderline FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct cprojectphase_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT cprojectphase_factacct FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary cprojectphase_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT cprojectphase_factacctsummary FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement cprojectphase_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT cprojectphase_hrmovement FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory cprojectphase_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT cprojectphase_isaleshistory FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecast cprojectphase_mforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecast
    ADD CONSTRAINT cprojectphase_mforecast FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline cprojectphase_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT cprojectphase_minventoryline FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline cprojectphase_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT cprojectphase_mmovementline FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline cprojectphase_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT cprojectphase_mproductionline FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline cprojectphase_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT cprojectphase_mrequisitionline FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp cprojectphase_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT cprojectphase_ppmrp FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order cprojectphase_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT cprojectphase_pporder FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request cprojectphase_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT cprojectphase_rrequest FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline cprojectphase_stimeexpenseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT cprojectphase_stimeexpenseline FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline cprojectphase_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT cprojectphase_wminoutboundline FOREIGN KEY (c_projectphase_id) REFERENCES adempiere.c_projectphase(c_projectphase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline cprojecttask_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT cprojecttask_cinvoiceline FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline cprojecttask_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT cprojecttask_corderline FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectline cprojecttask_cprojectline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectline
    ADD CONSTRAINT cprojecttask_cprojectline FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory cprojecttask_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT cprojecttask_csaleshistory FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline cprojecttask_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT cprojecttask_ddorderline FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct cprojecttask_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT cprojecttask_factacct FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary cprojecttask_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT cprojecttask_factacctsummary FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement cprojecttask_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT cprojecttask_hrmovement FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory cprojecttask_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT cprojecttask_isaleshistory FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline cprojecttask_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT cprojecttask_minoutline FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline cprojecttask_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT cprojecttask_minventoryline FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline cprojecttask_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT cprojecttask_mmovementline FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline cprojecttask_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT cprojecttask_mproductionline FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline cprojecttask_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT cprojecttask_mrequisitionline FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp cprojecttask_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT cprojecttask_ppmrp FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order cprojecttask_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT cprojecttask_pporder FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request cprojecttask_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT cprojecttask_rrequest FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline cprojecttask_stimeexpenseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT cprojecttask_stimeexpenseline FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline cprojecttask_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT cprojecttask_wminoutboundline FOREIGN KEY (c_projecttask_id) REFERENCES adempiere.c_projecttask(c_projecttask_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_phase cprojecttype_cphase; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_phase
    ADD CONSTRAINT cprojecttype_cphase FOREIGN KEY (c_projecttype_id) REFERENCES adempiere.c_projecttype(c_projecttype_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project cprojecttype_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT cprojecttype_cproject FOREIGN KEY (c_projecttype_id) REFERENCES adempiere.c_projecttype(c_projecttype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_measure cprojecttype_pameasure; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_measure
    ADD CONSTRAINT cprojecttype_pameasure FOREIGN KEY (c_projecttype_id) REFERENCES adempiere.c_projecttype(c_projecttype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default creceivableservices_cacctschem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT creceivableservices_cacctschem FOREIGN KEY (c_receivable_services_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_customer_acct creceivableservices_cbpcustome; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_customer_acct
    ADD CONSTRAINT creceivableservices_cbpcustome FOREIGN KEY (c_receivable_services_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct creceivableservices_cbpgroupac; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT creceivableservices_cbpgroupac FOREIGN KEY (c_receivable_services_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_recurring_run crecurring_crecurringrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_recurring_run
    ADD CONSTRAINT crecurring_crecurringrun FOREIGN KEY (c_recurring_id) REFERENCES adempiere.c_recurring(c_recurring_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_city cregion_ccity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_city
    ADD CONSTRAINT cregion_ccity FOREIGN KEY (c_region_id) REFERENCES adempiere.c_region(c_region_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bpartner cregion_ibpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bpartner
    ADD CONSTRAINT cregion_ibpartner FOREIGN KEY (c_region_id) REFERENCES adempiere.c_region(c_region_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice cregion_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT cregion_iinvoice FOREIGN KEY (c_region_id) REFERENCES adempiere.c_region(c_region_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order cregion_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT cregion_iorder FOREIGN KEY (c_region_id) REFERENCES adempiere.c_region(c_region_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_freight cregion_mfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_freight
    ADD CONSTRAINT cregion_mfreight FOREIGN KEY (c_region_id) REFERENCES adempiere.c_region(c_region_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_freight cregionto_mfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_freight
    ADD CONSTRAINT cregionto_mfreight FOREIGN KEY (to_region_id) REFERENCES adempiere.c_region(c_region_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_jobremuneration cremuneration_cjobrem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_jobremuneration
    ADD CONSTRAINT cremuneration_cjobrem FOREIGN KEY (c_remuneration_id) REFERENCES adempiere.c_remuneration(c_remuneration_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_userremuneration cremuneration_cuserrem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_userremuneration
    ADD CONSTRAINT cremuneration_cuserrem FOREIGN KEY (c_remuneration_id) REFERENCES adempiere.c_remuneration(c_remuneration_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_revenuerecognition_plan crevenuerecognition_plan; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_revenuerecognition_plan
    ADD CONSTRAINT crevenuerecognition_plan FOREIGN KEY (c_revenuerecognition_id) REFERENCES adempiere.c_revenuerecognition(c_revenuerecognition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product crevrecognition_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT crevrecognition_mproduct FOREIGN KEY (c_revenuerecognition_id) REFERENCES adempiere.c_revenuerecognition(c_revenuerecognition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_revenuerecognition_run crevrecplan_crefrecrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_revenuerecognition_run
    ADD CONSTRAINT crevrecplan_crefrecrun FOREIGN KEY (c_revenuerecognition_plan_id) REFERENCES adempiere.c_revenuerecognition_plan(c_revenuerecognition_plan_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_servicelevel crevrecplan_cservicelevel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_servicelevel
    ADD CONSTRAINT crevrecplan_cservicelevel FOREIGN KEY (c_revenuerecognition_plan_id) REFERENCES adempiere.c_revenuerecognition_plan(c_revenuerecognition_plan_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqline crfq_crfqline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqline
    ADD CONSTRAINT crfq_crfqline FOREIGN KEY (c_rfq_id) REFERENCES adempiere.c_rfq(c_rfq_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqresponse crfq_crfqresponse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqresponse
    ADD CONSTRAINT crfq_crfqresponse FOREIGN KEY (c_rfq_id) REFERENCES adempiere.c_rfq(c_rfq_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqlineqty crfqline_crfqlineqty; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqlineqty
    ADD CONSTRAINT crfqline_crfqlineqty FOREIGN KEY (c_rfqline_id) REFERENCES adempiere.c_rfqline(c_rfqline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqresponseline crfqline_crfqresponseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqresponseline
    ADD CONSTRAINT crfqline_crfqresponseline FOREIGN KEY (c_rfqline_id) REFERENCES adempiere.c_rfqline(c_rfqline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqresponselineqty crfqlineqty_crfqresplineqty; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqresponselineqty
    ADD CONSTRAINT crfqlineqty_crfqresplineqty FOREIGN KEY (c_rfqlineqty_id) REFERENCES adempiere.c_rfqlineqty(c_rfqlineqty_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqresponselineqty crfqresonseline_qty; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqresponselineqty
    ADD CONSTRAINT crfqresonseline_qty FOREIGN KEY (c_rfqresponseline_id) REFERENCES adempiere.c_rfqresponseline(c_rfqresponseline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqresponseline crfqresponse_line; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqresponseline
    ADD CONSTRAINT crfqresponse_line FOREIGN KEY (c_rfqresponse_id) REFERENCES adempiere.c_rfqresponse(c_rfqresponse_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq crfqtopic_crfq; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq
    ADD CONSTRAINT crfqtopic_crfq FOREIGN KEY (c_rfq_topic_id) REFERENCES adempiere.c_rfq_topic(c_rfq_topic_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq_topicsubscriberonly crfqtopicsubscriber_only; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq_topicsubscriberonly
    ADD CONSTRAINT crfqtopicsubscriber_only FOREIGN KEY (c_rfq_topicsubscriber_id) REFERENCES adempiere.c_rfq_topicsubscriber(c_rfq_topicsubscriber_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory csaleshistory_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT csaleshistory_isaleshistory FOREIGN KEY (c_saleshistory_id) REFERENCES adempiere.c_saleshistory(c_saleshistory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrunline csaleshistory_ppforecastrunlin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunline
    ADD CONSTRAINT csaleshistory_ppforecastrunlin FOREIGN KEY (c_saleshistory_id) REFERENCES adempiere.c_saleshistory(c_saleshistory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner_location csalesregion_bpartnerlocation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner_location
    ADD CONSTRAINT csalesregion_bpartnerlocation FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element csalesregion_caschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT csalesregion_caschemaelement FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline csalesregion_ccommissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT csalesregion_ccommissionline FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory csalesregion_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT csalesregion_csaleshistory FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary csalesregion_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT csalesregion_factacctsummary FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline csalesregion_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT csalesregion_gldistline FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline csalesregion_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT csalesregion_gljournalline FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee csalesregion_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT csalesregion_hremployee FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement csalesregion_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT csalesregion_hrmovement FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget csalesregion_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT csalesregion_ibudget FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal csalesregion_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT csalesregion_ifajournal FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal csalesregion_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT csalesregion_igljournal FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory csalesregion_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT csalesregion_isaleshistory FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn csalesregion_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT csalesregion_pareportcolumn FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource csalesregion_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT csalesregion_pareportsource FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastdefinitionline csalesregion_ppforecastdefinit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastdefinitionline
    ADD CONSTRAINT csalesregion_ppforecastdefinit FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination csalesregion_vc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT csalesregion_vc FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution csalesregopn_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT csalesregopn_gldist FOREIGN KEY (c_salesregion_id) REFERENCES adempiere.c_salesregion(c_salesregion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_opportunity csalesstage_copportunity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_opportunity
    ADD CONSTRAINT csalesstage_copportunity FOREIGN KEY (c_salesstage_id) REFERENCES adempiere.c_salesstage(c_salesstage_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_servicelevelline cservicelevel_line; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_servicelevelline
    ADD CONSTRAINT cservicelevel_line FOREIGN KEY (c_servicelevel_id) REFERENCES adempiere.c_servicelevel(c_servicelevel_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination csubacct_cvalidcombination; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT csubacct_cvalidcombination FOREIGN KEY (c_subacct_id) REFERENCES adempiere.c_subacct(c_subacct_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct csubacct_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT csubacct_factacct FOREIGN KEY (c_subacct_id) REFERENCES adempiere.c_subacct(c_subacct_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary csubacct_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT csubacct_factacctsummary FOREIGN KEY (c_subacct_id) REFERENCES adempiere.c_subacct(c_subacct_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline csubacct_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT csubacct_gljournalline FOREIGN KEY (c_subacct_id) REFERENCES adempiere.c_subacct(c_subacct_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_subscription_delivery csubcription_csubscrdelivery; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_subscription_delivery
    ADD CONSTRAINT csubcription_csubscrdelivery FOREIGN KEY (c_subscription_id) REFERENCES adempiere.c_subscription(c_subscription_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product csubscriptiontype_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT csubscriptiontype_mproduct FOREIGN KEY (c_subscriptiontype_id) REFERENCES adempiere.c_subscriptiontype(c_subscriptiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_subscription csubscrtype_csubscription; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_subscription
    ADD CONSTRAINT csubscrtype_csubscription FOREIGN KEY (c_subscriptiontype_id) REFERENCES adempiere.c_subscriptiontype(c_subscriptiontype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projecttask ctask_cprojecttask; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projecttask
    ADD CONSTRAINT ctask_cprojecttask FOREIGN KEY (c_task_id) REFERENCES adempiere.c_task(c_task_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline ctax_cinvoicebatchline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT ctax_cinvoicebatchline FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline ctax_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT ctax_cinvoiceline FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicetax ctax_cinvoicetax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicetax
    ADD CONSTRAINT ctax_cinvoicetax FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline ctax_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT ctax_corderline FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_ordertax ctax_cordertax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_ordertax
    ADD CONSTRAINT ctax_cordertax FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax_acct ctax_ctaxacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax_acct
    ADD CONSTRAINT ctax_ctaxacct FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdeclarationline ctax_ctaxdeclline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdeclarationline
    ADD CONSTRAINT ctax_ctaxdeclline FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdefinition ctax_ctaxdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdefinition
    ADD CONSTRAINT ctax_ctaxdefinition FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxpostal ctax_ctaxpostal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxpostal
    ADD CONSTRAINT ctax_ctaxpostal FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax_trl ctax_ctaxtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax_trl
    ADD CONSTRAINT ctax_ctaxtrl FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct ctax_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT ctax_factacct FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice ctax_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT ctax_iinvoice FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order ctax_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT ctax_iorder FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax ctax_parent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax
    ADD CONSTRAINT ctax_parent FOREIGN KEY (parent_tax_id) REFERENCES adempiere.c_tax(c_tax_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline ctax_stimeexpenseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT ctax_stimeexpenseline FOREIGN KEY (c_tax_id) REFERENCES adempiere.c_tax(c_tax_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdefinition ctaxbase_ctaxdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdefinition
    ADD CONSTRAINT ctaxbase_ctaxdefinition FOREIGN KEY (c_taxbase_id) REFERENCES adempiere.c_taxbase(c_taxbase_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_charge ctaxcategory_ccharge; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_charge
    ADD CONSTRAINT ctaxcategory_ccharge FOREIGN KEY (c_taxcategory_id) REFERENCES adempiere.c_taxcategory(c_taxcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax ctaxcategory_ctax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax
    ADD CONSTRAINT ctaxcategory_ctax FOREIGN KEY (c_taxcategory_id) REFERENCES adempiere.c_taxcategory(c_taxcategory_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdefinition ctaxcategory_ctaxdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdefinition
    ADD CONSTRAINT ctaxcategory_ctaxdefinition FOREIGN KEY (c_taxcategory_id) REFERENCES adempiere.c_taxcategory(c_taxcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_elementvalue ctaxcategory_ielementvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_elementvalue
    ADD CONSTRAINT ctaxcategory_ielementvalue FOREIGN KEY (c_taxcategory_id) REFERENCES adempiere.c_taxcategory(c_taxcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product ctaxcategory_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT ctaxcategory_mproduct FOREIGN KEY (c_taxcategory_id) REFERENCES adempiere.c_taxcategory(c_taxcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_expensetype ctaxcategory_sexpensetype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_expensetype
    ADD CONSTRAINT ctaxcategory_sexpensetype FOREIGN KEY (c_taxcategory_id) REFERENCES adempiere.c_taxcategory(c_taxcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_resourcetype ctaxcategory_sresourcetype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_resourcetype
    ADD CONSTRAINT ctaxcategory_sresourcetype FOREIGN KEY (c_taxcategory_id) REFERENCES adempiere.c_taxcategory(c_taxcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_training ctaxcategory_straining; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_training
    ADD CONSTRAINT ctaxcategory_straining FOREIGN KEY (c_taxcategory_id) REFERENCES adempiere.c_taxcategory(c_taxcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxcategory_trl ctaxcategory_trl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxcategory_trl
    ADD CONSTRAINT ctaxcategory_trl FOREIGN KEY (c_taxcategory_id) REFERENCES adempiere.c_taxcategory(c_taxcategory_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdeclarationacct ctaxdecl_ctaxdeclacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdeclarationacct
    ADD CONSTRAINT ctaxdecl_ctaxdeclacct FOREIGN KEY (c_taxdeclaration_id) REFERENCES adempiere.c_taxdeclaration(c_taxdeclaration_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdeclarationline ctaxdeclaration_ctaxdeclline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdeclarationline
    ADD CONSTRAINT ctaxdeclaration_ctaxdeclline FOREIGN KEY (c_taxdeclaration_id) REFERENCES adempiere.c_taxdeclaration(c_taxdeclaration_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner ctaxgroup_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT ctaxgroup_cbpartner FOREIGN KEY (c_taxgroup_id) REFERENCES adempiere.c_taxgroup(c_taxgroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdefinition ctaxgroup_ctaxdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdefinition
    ADD CONSTRAINT ctaxgroup_ctaxdefinition FOREIGN KEY (c_taxgroup_id) REFERENCES adempiere.c_taxgroup(c_taxgroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdefinition ctaxtype_ctaxdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdefinition
    ADD CONSTRAINT ctaxtype_ctaxdefinition FOREIGN KEY (c_taxtype_id) REFERENCES adempiere.c_taxtype(c_taxtype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal ctemplatebpartner_uposterminal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT ctemplatebpartner_uposterminal FOREIGN KEY (c_templatebpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline cuom_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT cuom_cinvoiceline FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline cuom_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT cuom_corderline FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqlineqty cuom_crfqlineqty; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqlineqty
    ADD CONSTRAINT cuom_crfqlineqty FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_uom_conversion cuom_cuomconversion; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_uom_conversion
    ADD CONSTRAINT cuom_cuomconversion FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_uom_trl cuom_cuomtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_uom_trl
    ADD CONSTRAINT cuom_cuomtrl FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline cuom_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT cuom_ddorderline FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline cuom_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT cuom_gljournalline FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal cuom_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT cuom_ifajournal FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fixedasset cuom_ifixedasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fixedasset
    ADD CONSTRAINT cuom_ifixedasset FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal cuom_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT cuom_igljournal FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order cuom_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT cuom_iorder FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_pricelist cuom_ipricelist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_pricelist
    ADD CONSTRAINT cuom_ipricelist FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product cuom_iproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product
    ADD CONSTRAINT cuom_iproduct FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product_bom cuom_iproductbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product_bom
    ADD CONSTRAINT cuom_iproductbom FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline cuom_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT cuom_minoutline FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product cuom_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT cuom_mproduct FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline cuom_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT cuom_mrequisitionline FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector cuom_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT cuom_ppcostcollector FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order cuom_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT cuom_pporder FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bom cuom_pporderbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bom
    ADD CONSTRAINT cuom_pporderbom FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bomline cuom_pporderbomline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bomline
    ADD CONSTRAINT cuom_pporderbomline FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_bom cuom_ppproductbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bom
    ADD CONSTRAINT cuom_ppproductbom FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_bomline cuom_ppproductbomline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bomline
    ADD CONSTRAINT cuom_ppproductbomline FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_expensetype cuom_sexpensetype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_expensetype
    ADD CONSTRAINT cuom_sexpensetype FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_resourcetype cuom_sresourcetype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_resourcetype
    ADD CONSTRAINT cuom_sresourcetype FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline cuom_stimeexpenseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT cuom_stimeexpenseline FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_training cuom_straining; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_training
    ADD CONSTRAINT cuom_straining FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline cuom_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT cuom_wminoutboundline FOREIGN KEY (c_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget cvalidcombination_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT cvalidcombination_ibudget FOREIGN KEY (c_validcombination_id) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal cvalidcombination_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT cvalidcombination_ifajournal FOREIGN KEY (c_validcombination_id) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal cvalidcombination_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT cvalidcombination_igljournal FOREIGN KEY (c_validcombination_id) REFERENCES adempiere.c_validcombination(c_validcombination_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline cvc_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT cvc_gljournalline FOREIGN KEY (c_validcombination_id) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_withholding cwithholding_cbpwithholding; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_withholding
    ADD CONSTRAINT cwithholding_cbpwithholding FOREIGN KEY (c_withholding_id) REFERENCES adempiere.c_withholding(c_withholding_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_withholding_acct cwithholding_cwithholdingacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_withholding_acct
    ADD CONSTRAINT cwithholding_cwithholdingacct FOREIGN KEY (c_withholding_id) REFERENCES adempiere.c_withholding(c_withholding_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leaveassign cyear_hrleaveassign; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leaveassign
    ADD CONSTRAINT cyear_hrleaveassign FOREIGN KEY (c_year_id) REFERENCES adempiere.c_year(c_year_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leavecredithistory cyear_hrleavecredithistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavecredithistory
    ADD CONSTRAINT cyear_hrleavecredithistory FOREIGN KEY (c_year_id) REFERENCES adempiere.c_year(c_year_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_period cyear_hrperiod; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_period
    ADD CONSTRAINT cyear_hrperiod FOREIGN KEY (c_year_id) REFERENCES adempiere.c_year(c_year_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_year cyear_hryear; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_year
    ADD CONSTRAINT cyear_hryear FOREIGN KEY (c_year_id) REFERENCES adempiere.c_year(c_year_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_demand cyear_mdemand; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_demand
    ADD CONSTRAINT cyear_mdemand FOREIGN KEY (c_year_id) REFERENCES adempiere.c_year(c_year_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecast cyear_mforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecast
    ADD CONSTRAINT cyear_mforecast FOREIGN KEY (c_year_id) REFERENCES adempiere.c_year(c_year_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_contract dailysalary_hrcontract; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_contract
    ADD CONSTRAINT dailysalary_hrcontract FOREIGN KEY (dailysalary_id) REFERENCES adempiere.hr_concept(hr_concept_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_compartmentassignment ddcompartment_ddcompartmentass; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_compartmentassignment
    ADD CONSTRAINT ddcompartment_ddcompartmentass FOREIGN KEY (dd_compartment_id) REFERENCES adempiere.dd_compartment(dd_compartment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_compartment ddcompatibilitygroup_ddcompart; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_compartment
    ADD CONSTRAINT ddcompatibilitygroup_ddcompart FOREIGN KEY (dd_compatibilitygroup_id) REFERENCES adempiere.dd_compatibilitygroup(dd_compatibilitygroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_transportunit ddcompatibilitygroup_ddtranspo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportunit
    ADD CONSTRAINT ddcompatibilitygroup_ddtranspo FOREIGN KEY (dd_compatibilitygroup_id) REFERENCES adempiere.dd_compatibilitygroup(dd_compatibilitygroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_vehicle ddcompatibilitygroup_ddvehicle; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_vehicle
    ADD CONSTRAINT ddcompatibilitygroup_ddvehicle FOREIGN KEY (dd_compatibilitygroup_id) REFERENCES adempiere.dd_compatibilitygroup(dd_compatibilitygroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_driverassignment dddriver_dddriverassignment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_driverassignment
    ADD CONSTRAINT dddriver_dddriverassignment FOREIGN KEY (dd_driver_id) REFERENCES adempiere.dd_driver(dd_driver_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freight dddriver_ddfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freight
    ADD CONSTRAINT dddriver_ddfreight FOREIGN KEY (dd_driver_id) REFERENCES adempiere.dd_driver(dd_driver_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_licenseassignment dddriver_ddlicenseassignment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_licenseassignment
    ADD CONSTRAINT dddriver_ddlicenseassignment FOREIGN KEY (dd_driver_id) REFERENCES adempiere.dd_driver(dd_driver_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_requirementassignment dddriver_ddrequirementassignme; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_requirementassignment
    ADD CONSTRAINT dddriver_ddrequirementassignme FOREIGN KEY (dd_driver_id) REFERENCES adempiere.dd_driver(dd_driver_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freightline ddfreight_ddfreightline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freightline
    ADD CONSTRAINT ddfreight_ddfreightline FOREIGN KEY (dd_freight_id) REFERENCES adempiere.dd_freight(dd_freight_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_licenseassignment ddlicense_ddlicenseassignment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_licenseassignment
    ADD CONSTRAINT ddlicense_ddlicenseassignment FOREIGN KEY (dd_license_id) REFERENCES adempiere.dd_license(dd_license_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_license ddlicensetype_ddlicense; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_license
    ADD CONSTRAINT ddlicensetype_ddlicense FOREIGN KEY (dd_licensetype_id) REFERENCES adempiere.dd_licensetype(dd_licensetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_networkdistributionline ddnetworkdistribution_ddnetwor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_networkdistributionline
    ADD CONSTRAINT ddnetworkdistribution_ddnetwor FOREIGN KEY (dd_networkdistribution_id) REFERENCES adempiere.dd_networkdistribution(dd_networkdistribution_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_planning ddnetworkdistribution_ppproduc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_planning
    ADD CONSTRAINT ddnetworkdistribution_ppproduc FOREIGN KEY (dd_networkdistribution_id) REFERENCES adempiere.dd_networkdistribution(dd_networkdistribution_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freight ddorder_ddfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freight
    ADD CONSTRAINT ddorder_ddfreight FOREIGN KEY (dd_order_id) REFERENCES adempiere.dd_order(dd_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline ddorder_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT ddorder_ddorderline FOREIGN KEY (dd_order_id) REFERENCES adempiere.dd_order(dd_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement ddorder_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT ddorder_mmovement FOREIGN KEY (dd_order_id) REFERENCES adempiere.dd_order(dd_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp ddorder_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT ddorder_ppmrp FOREIGN KEY (dd_order_id) REFERENCES adempiere.dd_order(dd_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request ddorder_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT ddorder_rrequest FOREIGN KEY (dd_order_id) REFERENCES adempiere.dd_order(dd_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline ddorder_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT ddorder_wminoutboundline FOREIGN KEY (dd_order_id) REFERENCES adempiere.dd_order(dd_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline ddorderline_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT ddorderline_mmovementline FOREIGN KEY (dd_orderline_id) REFERENCES adempiere.dd_orderline(dd_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp ddorderline_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT ddorderline_ppmrp FOREIGN KEY (dd_orderline_id) REFERENCES adempiere.dd_orderline(dd_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request ddorderline_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT ddorderline_rrequest FOREIGN KEY (dd_orderline_id) REFERENCES adempiere.dd_orderline(dd_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline ddorderline_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT ddorderline_wminoutboundline FOREIGN KEY (dd_orderline_id) REFERENCES adempiere.dd_orderline(dd_orderline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_requirementassignment ddrequirement_ddrequirementass; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_requirementassignment
    ADD CONSTRAINT ddrequirement_ddrequirementass FOREIGN KEY (dd_requirement_id) REFERENCES adempiere.dd_requirement(dd_requirement_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_requirement ddrequirementtype_ddrequiremen; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_requirement
    ADD CONSTRAINT ddrequirementtype_ddrequiremen FOREIGN KEY (dd_requirementtype_id) REFERENCES adempiere.dd_requirementtype(dd_requirementtype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_compartmentassignment ddtransportunit_ddcompartmenta; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_compartmentassignment
    ADD CONSTRAINT ddtransportunit_ddcompartmenta FOREIGN KEY (dd_transportunit_id) REFERENCES adempiere.dd_transportunit(dd_transportunit_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_transportassignment ddtransportunit_ddtransportass; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportassignment
    ADD CONSTRAINT ddtransportunit_ddtransportass FOREIGN KEY (dd_transportunit_id) REFERENCES adempiere.dd_transportunit(dd_transportunit_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_transportunit ddtransportunittype_ddtranspor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportunit
    ADD CONSTRAINT ddtransportunittype_ddtranspor FOREIGN KEY (dd_transportunittype_id) REFERENCES adempiere.dd_transportunittype(dd_transportunittype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_driverassignment ddvehicle_dddriverassignment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_driverassignment
    ADD CONSTRAINT ddvehicle_dddriverassignment FOREIGN KEY (dd_vehicle_id) REFERENCES adempiere.dd_vehicle(dd_vehicle_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freight ddvehicle_ddfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freight
    ADD CONSTRAINT ddvehicle_ddfreight FOREIGN KEY (dd_vehicle_id) REFERENCES adempiere.dd_vehicle(dd_vehicle_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_licenseassignment ddvehicle_ddlicenseassignment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_licenseassignment
    ADD CONSTRAINT ddvehicle_ddlicenseassignment FOREIGN KEY (dd_vehicle_id) REFERENCES adempiere.dd_vehicle(dd_vehicle_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_requirementassignment ddvehicle_ddrequirementassignm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_requirementassignment
    ADD CONSTRAINT ddvehicle_ddrequirementassignm FOREIGN KEY (dd_vehicle_id) REFERENCES adempiere.dd_vehicle(dd_vehicle_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_transportassignment ddvehicle_ddtransportassignmen; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportassignment
    ADD CONSTRAINT ddvehicle_ddtransportassignmen FOREIGN KEY (dd_vehicle_id) REFERENCES adempiere.dd_vehicle(dd_vehicle_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_vehicleassignment ddvehicle_ddvehicleassignment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_vehicleassignment
    ADD CONSTRAINT ddvehicle_ddvehicleassignment FOREIGN KEY (dd_vehicle_id) REFERENCES adempiere.dd_vehicle(dd_vehicle_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_vehicle ddvehicletype_ddvehicle; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_vehicle
    ADD CONSTRAINT ddvehicletype_ddvehicle FOREIGN KEY (dd_vehicletype_id) REFERENCES adempiere.dd_vehicletype(dd_vehicletype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_doctype definitesequence_cdoctype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctype
    ADD CONSTRAINT definitesequence_cdoctype FOREIGN KEY (definitesequence_id) REFERENCES adempiere.ad_sequence(ad_sequence_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_transportunit dimensionuom_ddtransportunit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportunit
    ADD CONSTRAINT dimensionuom_ddtransportunit FOREIGN KEY (dimension_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_transportunittype dimensionuom_ddtransportunitty; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportunittype
    ADD CONSTRAINT dimensionuom_ddtransportunitty FOREIGN KEY (dimension_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_vehicle dimensionuom_ddvehicle; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_vehicle
    ADD CONSTRAINT dimensionuom_ddvehicle FOREIGN KEY (dimension_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform distribordermailtext_adprintfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT distribordermailtext_adprintfo FOREIGN KEY (distrib_order_mailtext_id) REFERENCES adempiere.r_mailtext(r_mailtext_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform distriborderprintformat_adprin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT distriborderprintformat_adprin FOREIGN KEY (distrib_order_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order dropshipbpartner_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT dropshipbpartner_corder FOREIGN KEY (dropship_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout dropshipbpartner_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT dropshipbpartner_minout FOREIGN KEY (dropship_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound dropshipbpartner_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT dropshipbpartner_wminoutbound FOREIGN KEY (dropship_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order dropshiplocation_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT dropshiplocation_corder FOREIGN KEY (dropship_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout dropshiplocation_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT dropshiplocation_minout FOREIGN KEY (dropship_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound dropshiplocation_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT dropshiplocation_wminoutbound FOREIGN KEY (dropship_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order dropshipuser_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT dropshipuser_corder FOREIGN KEY (dropship_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout dropshipuser_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT dropshipuser_minout FOREIGN KEY (dropship_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound dropshipuser_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT dropshipuser_wminoutbound FOREIGN KEY (dropship_user_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_orginfo dropshipwarehouse_adorginfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orginfo
    ADD CONSTRAINT dropshipwarehouse_adorginfo FOREIGN KEY (dropship_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse entityt_adbrowse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse
    ADD CONSTRAINT entityt_adbrowse FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_browse_field entityt_adbrowsefield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_browse_field
    ADD CONSTRAINT entityt_adbrowsefield FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_chartdatasource entityt_adchartdatasource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_chartdatasource
    ADD CONSTRAINT entityt_adchartdatasource FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_column entityt_adcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_column
    ADD CONSTRAINT entityt_adcolumn FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_element entityt_adelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_element
    ADD CONSTRAINT entityt_adelement FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_field entityt_adfield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field
    ADD CONSTRAINT entityt_adfield FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_fieldgroup entityt_adfieldgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_fieldgroup
    ADD CONSTRAINT entityt_adfieldgroup FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_form entityt_adform; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_form
    ADD CONSTRAINT entityt_adform FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_image entityt_adimage; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_image
    ADD CONSTRAINT entityt_adimage FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_infocolumn entityt_adinfocolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infocolumn
    ADD CONSTRAINT entityt_adinfocolumn FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_infowindow entityt_adinfowindow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_infowindow
    ADD CONSTRAINT entityt_adinfowindow FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_menu entityt_admenu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_menu
    ADD CONSTRAINT entityt_admenu FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_message entityt_admessage; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_message
    ADD CONSTRAINT entityt_admessage FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_migration entityt_admigration; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_migration
    ADD CONSTRAINT entityt_admigration FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_modelvalidator entityt_admodelvalidator; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_modelvalidator
    ADD CONSTRAINT entityt_admodelvalidator FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process entityt_adprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process
    ADD CONSTRAINT entityt_adprocess FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_process_para entityt_adprocesspara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_process_para
    ADD CONSTRAINT entityt_adprocesspara FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_reference entityt_adreference; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reference
    ADD CONSTRAINT entityt_adreference FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_list entityt_adreflist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_list
    ADD CONSTRAINT entityt_adreflist FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_table entityt_adreftable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_table
    ADD CONSTRAINT entityt_adreftable FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replicationstrategy entityt_adreplicationstrategy; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationstrategy
    ADD CONSTRAINT entityt_adreplicationstrategy FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replicationtable entityt_adreplicationtable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationtable
    ADD CONSTRAINT entityt_adreplicationtable FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_reportview entityt_adreportview; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reportview
    ADD CONSTRAINT entityt_adreportview FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_rule entityt_adrule; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_rule
    ADD CONSTRAINT entityt_adrule FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_sysconfig entityt_adsysconfig; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sysconfig
    ADD CONSTRAINT entityt_adsysconfig FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab entityt_adtab; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab
    ADD CONSTRAINT entityt_adtab FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table entityt_adtable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table
    ADD CONSTRAINT entityt_adtable FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table_process entityt_adtableprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table_process
    ADD CONSTRAINT entityt_adtableprocess FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_task entityt_adtask; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_task
    ADD CONSTRAINT entityt_adtask FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_val_rule entityt_advalrule; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_val_rule
    ADD CONSTRAINT entityt_advalrule FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_view_column entityt_adviewcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_view_column
    ADD CONSTRAINT entityt_adviewcolumn FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_nextcondition entityt_adwfnextcondition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_nextcondition
    ADD CONSTRAINT entityt_adwfnextcondition FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node entityt_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT entityt_adwfnode FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_nodenext entityt_adwfnodenext; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_nodenext
    ADD CONSTRAINT entityt_adwfnodenext FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node_para entityt_adwfnodepara; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node_para
    ADD CONSTRAINT entityt_adwfnodepara FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_responsible entityt_adwfresponsible; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_responsible
    ADD CONSTRAINT entityt_adwfresponsible FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_window entityt_adwindow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window
    ADD CONSTRAINT entityt_adwindow FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workbench entityt_adworkbench; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbench
    ADD CONSTRAINT entityt_adworkbench FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workbenchwindow entityt_adworkbenchwindow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workbenchwindow
    ADD CONSTRAINT entityt_adworkbenchwindow FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow entityt_adworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow
    ADD CONSTRAINT entityt_adworkflow FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow entityt_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT entityt_iworkflow FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_colorschema entityt_pacolorschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_colorschema
    ADD CONSTRAINT entityt_pacolorschema FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_measurecalc entityt_pameasurecalc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_measurecalc
    ADD CONSTRAINT entityt_pameasurecalc FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node entityt_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT entityt_ppordernode FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_nodenext entityt_ppordernodenext; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_nodenext
    ADD CONSTRAINT entityt_ppordernodenext FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_workflow entityt_pporderworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_workflow
    ADD CONSTRAINT entityt_pporderworkflow FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_wf_node_product entityt_ppwfnodeproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_wf_node_product
    ADD CONSTRAINT entityt_ppwfnodeproduct FOREIGN KEY (entitytype) REFERENCES adempiere.ad_entitytype(entitytype) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: exp_formatline expembeddedformat_expformatlin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.exp_formatline
    ADD CONSTRAINT expembeddedformat_expformatlin FOREIGN KEY (exp_embeddedformat_id) REFERENCES adempiere.exp_format(exp_format_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: exp_formatline expformat_expformatline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.exp_formatline
    ADD CONSTRAINT expformat_expformatline FOREIGN KEY (exp_format_id) REFERENCES adempiere.exp_format(exp_format_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replicationstrategy expprocessor_adreplicationstra; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replicationstrategy
    ADD CONSTRAINT expprocessor_adreplicationstra FOREIGN KEY (exp_processor_id) REFERENCES adempiere.exp_processor(exp_processor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: exp_processorparameter expprocessor_expprocessorparam; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.exp_processorparameter
    ADD CONSTRAINT expprocessor_expprocessorparam FOREIGN KEY (exp_processor_id) REFERENCES adempiere.exp_processor(exp_processor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: exp_processor expprocessortype_expprocessor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.exp_processor
    ADD CONSTRAINT expprocessortype_expprocessor FOREIGN KEY (exp_processor_type_id) REFERENCES adempiere.exp_processor_type(exp_processor_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdeclarationacct factacct_ctaxdeclacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdeclarationacct
    ADD CONSTRAINT factacct_ctaxdeclacct FOREIGN KEY (fact_acct_id) REFERENCES adempiere.fact_acct(fact_acct_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_reconciliation factacct_factreconciliation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_reconciliation
    ADD CONSTRAINT factacct_factreconciliation FOREIGN KEY (fact_acct_id) REFERENCES adempiere.fact_acct(fact_acct_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_invoicegl factacct_tinvoicegl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_invoicegl
    ADD CONSTRAINT factacct_tinvoicegl FOREIGN KEY (fact_acct_id) REFERENCES adempiere.fact_acct(fact_acct_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_field fieldclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field
    ADD CONSTRAINT fieldclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_field fieldorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field
    ADD CONSTRAINT fieldorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct glbudget_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT glbudget_factacct FOREIGN KEY (gl_budget_id) REFERENCES adempiere.gl_budget(gl_budget_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary glbudget_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT glbudget_factacctsummary FOREIGN KEY (gl_budget_id) REFERENCES adempiere.gl_budget(gl_budget_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_budgetcontrol glbudget_glbudgetcontrol; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_budgetcontrol
    ADD CONSTRAINT glbudget_glbudgetcontrol FOREIGN KEY (gl_budget_id) REFERENCES adempiere.gl_budget(gl_budget_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journal glbudget_gljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journal
    ADD CONSTRAINT glbudget_gljournal FOREIGN KEY (gl_budget_id) REFERENCES adempiere.gl_budget(gl_budget_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget glbudget_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT glbudget_ibudget FOREIGN KEY (gl_budget_id) REFERENCES adempiere.gl_budget(gl_budget_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal glbudget_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT glbudget_ifajournal FOREIGN KEY (gl_budget_id) REFERENCES adempiere.gl_budget(gl_budget_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal glbudget_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT glbudget_igljournal FOREIGN KEY (gl_budget_id) REFERENCES adempiere.gl_budget(gl_budget_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn glbudget_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT glbudget_pareportcolumn FOREIGN KEY (gl_budget_id) REFERENCES adempiere.gl_budget(gl_budget_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportline glbudget_pareportline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportline
    ADD CONSTRAINT glbudget_pareportline FOREIGN KEY (gl_budget_id) REFERENCES adempiere.gl_budget(gl_budget_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_reval_entry glcategory_aassetrevalentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_reval_entry
    ADD CONSTRAINT glcategory_aassetrevalentry FOREIGN KEY (gl_category_id) REFERENCES adempiere.gl_category(gl_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_depreciation_entry glcategory_adepreciationentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_depreciation_entry
    ADD CONSTRAINT glcategory_adepreciationentry FOREIGN KEY (gl_category_id) REFERENCES adempiere.gl_category(gl_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_doctype glcategory_cdoctype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_doctype
    ADD CONSTRAINT glcategory_cdoctype FOREIGN KEY (gl_category_id) REFERENCES adempiere.gl_category(gl_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct glcategory_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT glcategory_factacct FOREIGN KEY (gl_category_id) REFERENCES adempiere.gl_category(gl_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journal glcategory_gljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journal
    ADD CONSTRAINT glcategory_gljournal FOREIGN KEY (gl_category_id) REFERENCES adempiere.gl_category(gl_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalbatch glcategory_gljournalbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalbatch
    ADD CONSTRAINT glcategory_gljournalbatch FOREIGN KEY (gl_category_id) REFERENCES adempiere.gl_category(gl_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal glcategory_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT glcategory_ifajournal FOREIGN KEY (gl_category_id) REFERENCES adempiere.gl_category(gl_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal glcategory_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT glcategory_igljournal FOREIGN KEY (gl_category_id) REFERENCES adempiere.gl_category(gl_category_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline gldistribution_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT gldistribution_gldistline FOREIGN KEY (gl_distribution_id) REFERENCES adempiere.gl_distribution(gl_distribution_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_fundrestriction glfund_glfundrestriction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_fundrestriction
    ADD CONSTRAINT glfund_glfundrestriction FOREIGN KEY (gl_fund_id) REFERENCES adempiere.gl_fund(gl_fund_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal gljourbelline_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT gljourbelline_igljournal FOREIGN KEY (gl_journalline_id) REFERENCES adempiere.gl_journalline(gl_journalline_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_revenuerecognition_run gljournal_crevenuerecrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_revenuerecognition_run
    ADD CONSTRAINT gljournal_crevenuerecrun FOREIGN KEY (gl_journal_id) REFERENCES adempiere.gl_journal(gl_journal_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline gljournal_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT gljournal_gljournalline FOREIGN KEY (gl_journal_id) REFERENCES adempiere.gl_journal(gl_journal_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal gljournal_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT gljournal_ifajournal FOREIGN KEY (gl_journal_id) REFERENCES adempiere.gl_journal(gl_journal_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal gljournal_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT gljournal_igljournal FOREIGN KEY (gl_journal_id) REFERENCES adempiere.gl_journal(gl_journal_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_addition gljournalbatch_aassetaddition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT gljournalbatch_aassetaddition FOREIGN KEY (gl_journalbatch_id) REFERENCES adempiere.gl_journalbatch(gl_journalbatch_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_recurring gljournalbatch_crecurring; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_recurring
    ADD CONSTRAINT gljournalbatch_crecurring FOREIGN KEY (gl_journalbatch_id) REFERENCES adempiere.gl_journalbatch(gl_journalbatch_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_recurring_run gljournalbatch_crecurringrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_recurring_run
    ADD CONSTRAINT gljournalbatch_crecurringrun FOREIGN KEY (gl_journalbatch_id) REFERENCES adempiere.gl_journalbatch(gl_journalbatch_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journal gljournalbatch_gljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journal
    ADD CONSTRAINT gljournalbatch_gljournal FOREIGN KEY (gl_journalbatch_id) REFERENCES adempiere.gl_journalbatch(gl_journalbatch_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget gljournalbatch_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT gljournalbatch_ibudget FOREIGN KEY (gl_journalbatch_id) REFERENCES adempiere.gl_journalbatch(gl_journalbatch_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal gljournalbatch_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT gljournalbatch_ifajournal FOREIGN KEY (gl_journalbatch_id) REFERENCES adempiere.gl_journalbatch(gl_journalbatch_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal gljournalbatch_igljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT gljournalbatch_igljournal FOREIGN KEY (gl_journalbatch_id) REFERENCES adempiere.gl_journalbatch(gl_journalbatch_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal gljournalline_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT gljournalline_ifajournal FOREIGN KEY (gl_journalline_id) REFERENCES adempiere.gl_journalline(gl_journalline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrattribute_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrattribute_hrattribute FOREIGN KEY (hr_attribute_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hrattribute_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hrattribute_hrmovement FOREIGN KEY (hr_attribute_id) REFERENCES adempiere.hr_attribute(hr_attribute_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_hr_attribute hrattribute_ihrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_hr_attribute
    ADD CONSTRAINT hrattribute_ihrattribute FOREIGN KEY (hr_attribute_id) REFERENCES adempiere.hr_attribute(hr_attribute_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrcareerlevel_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrcareerlevel_hrattribute FOREIGN KEY (hr_careerlevel_id) REFERENCES adempiere.hr_careerlevel(hr_careerlevel_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrcareerlevel_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrcareerlevel_hremployee FOREIGN KEY (hr_careerlevel_id) REFERENCES adempiere.hr_careerlevel(hr_careerlevel_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobopening hrcareerlevel_hrjobopening; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopening
    ADD CONSTRAINT hrcareerlevel_hrjobopening FOREIGN KEY (hr_careerlevel_id) REFERENCES adempiere.hr_careerlevel(hr_careerlevel_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrconcept_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrconcept_hrattribute FOREIGN KEY (hr_concept_id) REFERENCES adempiere.hr_concept(hr_concept_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept_acct hrconcept_hrconceptacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_acct
    ADD CONSTRAINT hrconcept_hrconceptacct FOREIGN KEY (hr_concept_id) REFERENCES adempiere.hr_concept(hr_concept_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept_category hrconcept_hrconceptcategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_category
    ADD CONSTRAINT hrconcept_hrconceptcategory FOREIGN KEY (hr_concept_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hrconcept_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hrconcept_hrmovement FOREIGN KEY (hr_concept_id) REFERENCES adempiere.hr_concept(hr_concept_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payrollconcept hrconcept_hrpayrollconcept; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payrollconcept
    ADD CONSTRAINT hrconcept_hrpayrollconcept FOREIGN KEY (hr_concept_id) REFERENCES adempiere.hr_concept(hr_concept_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_salarystructureline hrconcept_hrsalarystructurelin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_salarystructureline
    ADD CONSTRAINT hrconcept_hrsalarystructurelin FOREIGN KEY (hr_concept_id) REFERENCES adempiere.hr_concept(hr_concept_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_hr_attribute hrconcept_ihrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_hr_attribute
    ADD CONSTRAINT hrconcept_ihrattribute FOREIGN KEY (hr_concept_id) REFERENCES adempiere.hr_concept(hr_concept_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_hr_movement hrconcept_ihrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_hr_movement
    ADD CONSTRAINT hrconcept_ihrmovement FOREIGN KEY (hr_concept_id) REFERENCES adempiere.hr_concept(hr_concept_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept hrconceptcategory_hrconcept; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept
    ADD CONSTRAINT hrconceptcategory_hrconcept FOREIGN KEY (hr_concept_category_id) REFERENCES adempiere.hr_concept_category(hr_concept_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hrconceptcategory_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hrconceptcategory_hrmovement FOREIGN KEY (hr_concept_category_id) REFERENCES adempiere.hr_concept_category(hr_concept_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept hrconcepttype_hrconcept; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept
    ADD CONSTRAINT hrconcepttype_hrconcept FOREIGN KEY (hr_concept_type_id) REFERENCES adempiere.hr_concept_type(hr_concept_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrcontract_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrcontract_hrattribute FOREIGN KEY (hr_contract_id) REFERENCES adempiere.hr_contract(hr_contract_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hrcontract_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hrcontract_hrmovement FOREIGN KEY (hr_contract_id) REFERENCES adempiere.hr_contract(hr_contract_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payroll hrcontract_hrpayroll; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payroll
    ADD CONSTRAINT hrcontract_hrpayroll FOREIGN KEY (hr_contract_id) REFERENCES adempiere.hr_contract(hr_contract_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrdegree_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrdegree_hrattribute FOREIGN KEY (hr_degree_id) REFERENCES adempiere.hr_degree(hr_degree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_education hrdegree_hreducation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_education
    ADD CONSTRAINT hrdegree_hreducation FOREIGN KEY (hr_degree_id) REFERENCES adempiere.hr_degree(hr_degree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrdegree_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrdegree_hremployee FOREIGN KEY (hr_degree_id) REFERENCES adempiere.hr_degree(hr_degree_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrdepartment_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrdepartment_hrattribute FOREIGN KEY (hr_department_id) REFERENCES adempiere.hr_department(hr_department_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept hrdepartment_hrconcept; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept
    ADD CONSTRAINT hrdepartment_hrconcept FOREIGN KEY (hr_department_id) REFERENCES adempiere.hr_department(hr_department_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_departmentproduct hrdepartment_hrdepartmentprodu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_departmentproduct
    ADD CONSTRAINT hrdepartment_hrdepartmentprodu FOREIGN KEY (hr_department_id) REFERENCES adempiere.hr_department(hr_department_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrdepartment_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrdepartment_hremployee FOREIGN KEY (hr_department_id) REFERENCES adempiere.hr_department(hr_department_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_job hrdepartment_hrjob; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_job
    ADD CONSTRAINT hrdepartment_hrjob FOREIGN KEY (hr_department_id) REFERENCES adempiere.hr_department(hr_department_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobopening hrdepartment_hrjobopening; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopening
    ADD CONSTRAINT hrdepartment_hrjobopening FOREIGN KEY (hr_department_id) REFERENCES adempiere.hr_department(hr_department_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_list hrdepartment_hrlist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_list
    ADD CONSTRAINT hrdepartment_hrlist FOREIGN KEY (hr_department_id) REFERENCES adempiere.hr_department(hr_department_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hrdepartment_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hrdepartment_hrmovement FOREIGN KEY (hr_department_id) REFERENCES adempiere.hr_department(hr_department_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_process hrdepartment_hrprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT hrdepartment_hrprocess FOREIGN KEY (hr_department_id) REFERENCES adempiere.hr_department(hr_department_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrdesignation_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrdesignation_hrattribute FOREIGN KEY (hr_designation_id) REFERENCES adempiere.hr_designation(hr_designation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrdesignation_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrdesignation_hremployee FOREIGN KEY (hr_designation_id) REFERENCES adempiere.hr_designation(hr_designation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobapplication hrdesignation_hrjobapplication; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobapplication
    ADD CONSTRAINT hrdesignation_hrjobapplication FOREIGN KEY (hr_designation_id) REFERENCES adempiere.hr_designation(hr_designation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobopening hrdesignation_hrjobopening; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopening
    ADD CONSTRAINT hrdesignation_hrjobopening FOREIGN KEY (hr_designation_id) REFERENCES adempiere.hr_designation(hr_designation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hrdesignation_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hrdesignation_hrmovement FOREIGN KEY (hr_designation_id) REFERENCES adempiere.hr_designation(hr_designation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hremployee_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hremployee_hrattribute FOREIGN KEY (hr_employee_id) REFERENCES adempiere.hr_employee(hr_employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_education hremployee_hreducation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_education
    ADD CONSTRAINT hremployee_hreducation FOREIGN KEY (hr_employee_id) REFERENCES adempiere.hr_employee(hr_employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employeedependent hremployee_hremployeedependent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeedependent
    ADD CONSTRAINT hremployee_hremployeedependent FOREIGN KEY (hr_employee_id) REFERENCES adempiere.hr_employee(hr_employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employeeexperience hremployee_hremployeeexperienc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeeexperience
    ADD CONSTRAINT hremployee_hremployeeexperienc FOREIGN KEY (hr_employee_id) REFERENCES adempiere.hr_employee(hr_employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employeeinsurance hremployee_hremployeeinsurance; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeeinsurance
    ADD CONSTRAINT hremployee_hremployeeinsurance FOREIGN KEY (hr_employee_id) REFERENCES adempiere.hr_employee(hr_employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employeeweeklyoff hremployee_hremployeeweeklyoff; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeeweeklyoff
    ADD CONSTRAINT hremployee_hremployeeweeklyoff FOREIGN KEY (hr_employee_id) REFERENCES adempiere.hr_employee(hr_employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leaveassign hremployee_hrleaveassign; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leaveassign
    ADD CONSTRAINT hremployee_hrleaveassign FOREIGN KEY (hr_employee_id) REFERENCES adempiere.hr_employee(hr_employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leavecredithistory hremployee_hrleavecredithistor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavecredithistory
    ADD CONSTRAINT hremployee_hrleavecredithistor FOREIGN KEY (hr_employee_id) REFERENCES adempiere.hr_employee(hr_employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_list hremployee_hrlist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_list
    ADD CONSTRAINT hremployee_hrlist FOREIGN KEY (hr_employee_id) REFERENCES adempiere.hr_employee(hr_employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hremployee_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hremployee_hrmovement FOREIGN KEY (hr_employee_id) REFERENCES adempiere.hr_employee(hr_employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_process hremployee_hrprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT hremployee_hrprocess FOREIGN KEY (hr_employee_id) REFERENCES adempiere.hr_employee(hr_employee_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hremployeetype_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hremployeetype_hrattribute FOREIGN KEY (hr_employeetype_id) REFERENCES adempiere.hr_employeetype(hr_employeetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_designation hremployeetype_hrdesignation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_designation
    ADD CONSTRAINT hremployeetype_hrdesignation FOREIGN KEY (hr_employeetype_id) REFERENCES adempiere.hr_employeetype(hr_employeetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hremployeetype_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hremployeetype_hremployee FOREIGN KEY (hr_employeetype_id) REFERENCES adempiere.hr_employeetype(hr_employeetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leavetypeemployeetype hremployeetype_hrleavetypeempl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavetypeemployeetype
    ADD CONSTRAINT hremployeetype_hrleavetypeempl FOREIGN KEY (hr_employeetype_id) REFERENCES adempiere.hr_employeetype(hr_employeetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hremployeetype_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hremployeetype_hrmovement FOREIGN KEY (hr_employeetype_id) REFERENCES adempiere.hr_employeetype(hr_employeetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept_acct hrexpense_hrconceptacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_acct
    ADD CONSTRAINT hrexpense_hrconceptacct FOREIGN KEY (hr_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrgrade_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrgrade_hrattribute FOREIGN KEY (hr_grade_id) REFERENCES adempiere.hr_grade(hr_grade_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrgrade_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrgrade_hremployee FOREIGN KEY (hr_grade_id) REFERENCES adempiere.hr_grade(hr_grade_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employeeinsurance hrinsurancetype_hremployeeinsu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeeinsurance
    ADD CONSTRAINT hrinsurancetype_hremployeeinsu FOREIGN KEY (hr_insurancetype_id) REFERENCES adempiere.hr_insurancetype(hr_insurancetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrjob_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrjob_hrattribute FOREIGN KEY (hr_job_id) REFERENCES adempiere.hr_job(hr_job_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept hrjob_hrconcept; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept
    ADD CONSTRAINT hrjob_hrconcept FOREIGN KEY (hr_job_id) REFERENCES adempiere.hr_job(hr_job_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrjob_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrjob_hremployee FOREIGN KEY (hr_job_id) REFERENCES adempiere.hr_job(hr_job_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hrjob_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hrjob_hrmovement FOREIGN KEY (hr_job_id) REFERENCES adempiere.hr_job(hr_job_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_process hrjob_hrprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT hrjob_hrprocess FOREIGN KEY (hr_job_id) REFERENCES adempiere.hr_job(hr_job_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_interview hrjobapplication_hrinterview; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_interview
    ADD CONSTRAINT hrjobapplication_hrinterview FOREIGN KEY (hr_jobapplication_id) REFERENCES adempiere.hr_jobapplication(hr_jobapplication_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobapplicationhistory hrjobapplication_hrjobapplicat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobapplicationhistory
    ADD CONSTRAINT hrjobapplication_hrjobapplicat FOREIGN KEY (hr_jobapplication_id) REFERENCES adempiere.hr_jobapplication(hr_jobapplication_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrjobeducation_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrjobeducation_hrattribute FOREIGN KEY (hr_jobeducation_id) REFERENCES adempiere.hr_jobeducation(hr_jobeducation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrjobeducation_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrjobeducation_hremployee FOREIGN KEY (hr_jobeducation_id) REFERENCES adempiere.hr_jobeducation(hr_jobeducation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobopening hrjobeducation_hrjobopening; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopening
    ADD CONSTRAINT hrjobeducation_hrjobopening FOREIGN KEY (hr_jobeducation_id) REFERENCES adempiere.hr_jobeducation(hr_jobeducation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrjobopening_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrjobopening_hremployee FOREIGN KEY (hr_jobopening_id) REFERENCES adempiere.hr_jobopening(hr_jobopening_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobapplication hrjobopening_hrjobapplication; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobapplication
    ADD CONSTRAINT hrjobopening_hrjobapplication FOREIGN KEY (hr_jobopening_id) REFERENCES adempiere.hr_jobopening(hr_jobopening_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobopening hrjobopening_hrjobopening; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopening
    ADD CONSTRAINT hrjobopening_hrjobopening FOREIGN KEY (hr_jobopening_id) REFERENCES adempiere.hr_jobopening(hr_jobopening_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobopeninghistory hrjobopening_hrjobopeninghisto; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopeninghistory
    ADD CONSTRAINT hrjobopening_hrjobopeninghisto FOREIGN KEY (hr_jobopening_id) REFERENCES adempiere.hr_jobopening(hr_jobopening_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrjobtype_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrjobtype_hrattribute FOREIGN KEY (hr_jobtype_id) REFERENCES adempiere.hr_jobtype(hr_jobtype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrjobtype_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrjobtype_hremployee FOREIGN KEY (hr_jobtype_id) REFERENCES adempiere.hr_jobtype(hr_jobtype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobopening hrjobtype_hrjobopening; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopening
    ADD CONSTRAINT hrjobtype_hrjobopening FOREIGN KEY (hr_jobtype_id) REFERENCES adempiere.hr_jobtype(hr_jobtype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hrjobtype_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hrjobtype_hrmovement FOREIGN KEY (hr_jobtype_id) REFERENCES adempiere.hr_jobtype(hr_jobtype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leavecredithistory hrleaveassign_hrleavecredithis; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavecredithistory
    ADD CONSTRAINT hrleaveassign_hrleavecredithis FOREIGN KEY (hr_leaveassign_id) REFERENCES adempiere.hr_leaveassign(hr_leaveassign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leavecredithistory hrleavereason_hrleavecredithis; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavecredithistory
    ADD CONSTRAINT hrleavereason_hrleavecredithis FOREIGN KEY (hr_leavereason_id) REFERENCES adempiere.hr_leavereason(hr_leavereason_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leaveassign hrleavetype_hrleaveassign; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leaveassign
    ADD CONSTRAINT hrleavetype_hrleaveassign FOREIGN KEY (hr_leavetype_id) REFERENCES adempiere.hr_leavetype(hr_leavetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leavecredithistory hrleavetype_hrleavecredithisto; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavecredithistory
    ADD CONSTRAINT hrleavetype_hrleavecredithisto FOREIGN KEY (hr_leavetype_id) REFERENCES adempiere.hr_leavetype(hr_leavetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leavetypecombination hrleavetype_hrleavetypecombina; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavetypecombination
    ADD CONSTRAINT hrleavetype_hrleavetypecombina FOREIGN KEY (hr_leavetype_id) REFERENCES adempiere.hr_leavetype(hr_leavetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_leavetypeemployeetype hrleavetype_hrleavetypeemploye; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_leavetypeemployeetype
    ADD CONSTRAINT hrleavetype_hrleavetypeemploye FOREIGN KEY (hr_leavetype_id) REFERENCES adempiere.hr_leavetype(hr_leavetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_listversion hrlist_hrlistversion; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_listversion
    ADD CONSTRAINT hrlist_hrlistversion FOREIGN KEY (hr_list_id) REFERENCES adempiere.hr_list(hr_list_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_listversion hrlistbase_hrlistversion; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_listversion
    ADD CONSTRAINT hrlistbase_hrlistversion FOREIGN KEY (hr_listbase_id) REFERENCES adempiere.hr_list(hr_list_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_list hrlisttype_hrlist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_list
    ADD CONSTRAINT hrlisttype_hrlist FOREIGN KEY (hr_listtype_id) REFERENCES adempiere.hr_listtype(hr_listtype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_listline hrlistversion_hrlistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_listline
    ADD CONSTRAINT hrlistversion_hrlistline FOREIGN KEY (hr_listversion_id) REFERENCES adempiere.hr_listversion(hr_listversion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payselectionline hrmovement_cpayselectionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payselectionline
    ADD CONSTRAINT hrmovement_cpayselectionline FOREIGN KEY (hr_movement_id) REFERENCES adempiere.hr_movement(hr_movement_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payselectionline hrmovement_hrpayselectionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payselectionline
    ADD CONSTRAINT hrmovement_hrpayselectionline FOREIGN KEY (hr_movement_id) REFERENCES adempiere.hr_movement(hr_movement_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_hr_movement hrmovement_ihrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_hr_movement
    ADD CONSTRAINT hrmovement_ihrmovement FOREIGN KEY (hr_movement_id) REFERENCES adempiere.hr_movement(hr_movement_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrpayroll_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrpayroll_hrattribute FOREIGN KEY (hr_payroll_id) REFERENCES adempiere.hr_payroll(hr_payroll_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept hrpayroll_hrconcept; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept
    ADD CONSTRAINT hrpayroll_hrconcept FOREIGN KEY (hr_payroll_id) REFERENCES adempiere.hr_payroll(hr_payroll_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_designation hrpayroll_hrdesignation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_designation
    ADD CONSTRAINT hrpayroll_hrdesignation FOREIGN KEY (hr_payroll_id) REFERENCES adempiere.hr_payroll(hr_payroll_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrpayroll_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrpayroll_hremployee FOREIGN KEY (hr_payroll_id) REFERENCES adempiere.hr_payroll(hr_payroll_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employeetype hrpayroll_hremployeetype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeetype
    ADD CONSTRAINT hrpayroll_hremployeetype FOREIGN KEY (hr_payroll_id) REFERENCES adempiere.hr_payroll(hr_payroll_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_list hrpayroll_hrlist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_list
    ADD CONSTRAINT hrpayroll_hrlist FOREIGN KEY (hr_payroll_id) REFERENCES adempiere.hr_payroll(hr_payroll_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hrpayroll_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hrpayroll_hrmovement FOREIGN KEY (hr_payroll_id) REFERENCES adempiere.hr_payroll(hr_payroll_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payrollconcept hrpayroll_hrpayrollconcept; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payrollconcept
    ADD CONSTRAINT hrpayroll_hrpayrollconcept FOREIGN KEY (hr_payroll_id) REFERENCES adempiere.hr_payroll(hr_payroll_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_period hrpayroll_hrperiod; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_period
    ADD CONSTRAINT hrpayroll_hrperiod FOREIGN KEY (hr_payroll_id) REFERENCES adempiere.hr_payroll(hr_payroll_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_process hrpayroll_hrprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT hrpayroll_hrprocess FOREIGN KEY (hr_payroll_id) REFERENCES adempiere.hr_payroll(hr_payroll_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_year hrpayroll_hryear; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_year
    ADD CONSTRAINT hrpayroll_hryear FOREIGN KEY (hr_payroll_id) REFERENCES adempiere.hr_payroll(hr_payroll_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_hr_attribute hrpayroll_ihrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_hr_attribute
    ADD CONSTRAINT hrpayroll_ihrattribute FOREIGN KEY (hr_payroll_id) REFERENCES adempiere.hr_payroll(hr_payroll_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hrpayrollconcept_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hrpayrollconcept_hrmovement FOREIGN KEY (hr_payrollconcept_id) REFERENCES adempiere.hr_payrollconcept(hr_payrollconcept_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payselectioncheck hrpayselection_hrpayselectionc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payselectioncheck
    ADD CONSTRAINT hrpayselection_hrpayselectionc FOREIGN KEY (hr_payselection_id) REFERENCES adempiere.hr_payselection(hr_payselection_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payselectionline hrpayselection_hrpayselectionl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payselectionline
    ADD CONSTRAINT hrpayselection_hrpayselectionl FOREIGN KEY (hr_payselection_id) REFERENCES adempiere.hr_payselection(hr_payselection_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payselectionline hrpayselectioncheck_hrpayselec; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payselectionline
    ADD CONSTRAINT hrpayselectioncheck_hrpayselec FOREIGN KEY (hr_payselectioncheck_id) REFERENCES adempiere.hr_payselectioncheck(hr_payselectioncheck_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employeeinsurance hrperiod_hremployeeinsurance; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeeinsurance
    ADD CONSTRAINT hrperiod_hremployeeinsurance FOREIGN KEY (hr_period_id) REFERENCES adempiere.hr_period(hr_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_process hrperiod_hrprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT hrperiod_hrprocess FOREIGN KEY (hr_period_id) REFERENCES adempiere.hr_period(hr_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hrprocess_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hrprocess_hrmovement FOREIGN KEY (hr_process_id) REFERENCES adempiere.hr_process(hr_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_payselection hrprocess_hrpayselection; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_payselection
    ADD CONSTRAINT hrprocess_hrpayselection FOREIGN KEY (hr_process_id) REFERENCES adempiere.hr_process(hr_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_hr_movement hrprocess_ihrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_hr_movement
    ADD CONSTRAINT hrprocess_ihrmovement FOREIGN KEY (hr_process_id) REFERENCES adempiere.hr_process(hr_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrrace_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrrace_hrattribute FOREIGN KEY (hr_race_id) REFERENCES adempiere.hr_race(hr_race_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrrace_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrrace_hremployee FOREIGN KEY (hr_race_id) REFERENCES adempiere.hr_race(hr_race_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner_location hrrelationship_cbpartnerlocati; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner_location
    ADD CONSTRAINT hrrelationship_cbpartnerlocati FOREIGN KEY (hr_relationship_id) REFERENCES adempiere.hr_relationship(hr_relationship_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employeedependent hrrelationship_hremployeedepen; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employeedependent
    ADD CONSTRAINT hrrelationship_hremployeedepen FOREIGN KEY (hr_relationship_id) REFERENCES adempiere.hr_relationship(hr_relationship_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept_acct hrrevenue_hrconceptacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_acct
    ADD CONSTRAINT hrrevenue_hrconceptacct FOREIGN KEY (hr_revenue_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrsalaryrange_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrsalaryrange_hrattribute FOREIGN KEY (hr_salaryrange_id) REFERENCES adempiere.hr_salaryrange(hr_salaryrange_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrsalaryrange_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrsalaryrange_hremployee FOREIGN KEY (hr_salaryrange_id) REFERENCES adempiere.hr_salaryrange(hr_salaryrange_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobopening hrsalaryrange_hrjobopening; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopening
    ADD CONSTRAINT hrsalaryrange_hrjobopening FOREIGN KEY (hr_salaryrange_id) REFERENCES adempiere.hr_salaryrange(hr_salaryrange_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrsalarystructure_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrsalarystructure_hrattribute FOREIGN KEY (hr_salarystructure_id) REFERENCES adempiere.hr_salarystructure(hr_salarystructure_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_designation hrsalarystructure_hrdesignatio; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_designation
    ADD CONSTRAINT hrsalarystructure_hrdesignatio FOREIGN KEY (hr_salarystructure_id) REFERENCES adempiere.hr_salarystructure(hr_salarystructure_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrsalarystructure_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrsalarystructure_hremployee FOREIGN KEY (hr_salarystructure_id) REFERENCES adempiere.hr_salarystructure(hr_salarystructure_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_salarystructure hrsalarystructure_hrsalarystru; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_salarystructure
    ADD CONSTRAINT hrsalarystructure_hrsalarystru FOREIGN KEY (hr_salarystructure_id) REFERENCES adempiere.hr_salarystructure(hr_salarystructure_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_salarystructureline hrsalstruc_hrsalstrucline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_salarystructureline
    ADD CONSTRAINT hrsalstruc_hrsalstrucline FOREIGN KEY (hr_salarystructure_id) REFERENCES adempiere.hr_salarystructure(hr_salarystructure_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrshiftgroup_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrshiftgroup_hrattribute FOREIGN KEY (hr_shiftgroup_id) REFERENCES adempiere.hr_shiftgroup(hr_shiftgroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrshiftgroup_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrshiftgroup_hremployee FOREIGN KEY (hr_shiftgroup_id) REFERENCES adempiere.hr_shiftgroup(hr_shiftgroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_shiftgroup hrshiftgroup_hrshiftgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_shiftgroup
    ADD CONSTRAINT hrshiftgroup_hrshiftgroup FOREIGN KEY (hr_shiftgroup_id) REFERENCES adempiere.hr_shiftgroup(hr_shiftgroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_workgroup hrshiftgroup_hrworkgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_workgroup
    ADD CONSTRAINT hrshiftgroup_hrworkgroup FOREIGN KEY (hr_shiftgroup_id) REFERENCES adempiere.hr_shiftgroup(hr_shiftgroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_workshift hrshiftgroup_hrworkshift; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_workshift
    ADD CONSTRAINT hrshiftgroup_hrworkshift FOREIGN KEY (hr_shiftgroup_id) REFERENCES adempiere.hr_shiftgroup(hr_shiftgroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrskilltype_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrskilltype_hrattribute FOREIGN KEY (hr_skilltype_id) REFERENCES adempiere.hr_skilltype(hr_skilltype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrskilltype_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrskilltype_hremployee FOREIGN KEY (hr_skilltype_id) REFERENCES adempiere.hr_skilltype(hr_skilltype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement hrskilltype_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT hrskilltype_hrmovement FOREIGN KEY (hr_skilltype_id) REFERENCES adempiere.hr_skilltype(hr_skilltype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_attribute hrworkgroup_hrattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_attribute
    ADD CONSTRAINT hrworkgroup_hrattribute FOREIGN KEY (hr_workgroup_id) REFERENCES adempiere.hr_workgroup(hr_workgroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee hrworkgroup_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT hrworkgroup_hremployee FOREIGN KEY (hr_workgroup_id) REFERENCES adempiere.hr_workgroup(hr_workgroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_workgroup hrworkshift_hrworkgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_workgroup
    ADD CONSTRAINT hrworkshift_hrworkgroup FOREIGN KEY (hr_workshift_id) REFERENCES adempiere.hr_workshift(hr_workshift_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_period hryear_hrperiod; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_period
    ADD CONSTRAINT hryear_hrperiod FOREIGN KEY (hr_year_id) REFERENCES adempiere.hr_year(hr_year_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_addition ifixedasset_aassetaddition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT ifixedasset_aassetaddition FOREIGN KEY (i_fixedasset_id) REFERENCES adempiere.i_fixedasset(i_fixedasset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: imp_processorlog impprocessor_impprocessorlog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.imp_processorlog
    ADD CONSTRAINT impprocessor_impprocessorlog FOREIGN KEY (imp_processor_id) REFERENCES adempiere.imp_processor(imp_processor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: imp_processorparameter impprocessor_impprocessorparam; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.imp_processorparameter
    ADD CONSTRAINT impprocessor_impprocessorparam FOREIGN KEY (imp_processor_id) REFERENCES adempiere.imp_processor(imp_processor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: imp_processor impprocessortype_impprocessor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.imp_processor
    ADD CONSTRAINT impprocessortype_impprocessor FOREIGN KEY (imp_processor_type_id) REFERENCES adempiere.imp_processor_type(imp_processor_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_field includedtab_adfield; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_field
    ADD CONSTRAINT includedtab_adfield FOREIGN KEY (included_tab_id) REFERENCES adempiere.ad_tab(ad_tab_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printformat jasperprocess_adprintformat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printformat
    ADD CONSTRAINT jasperprocess_adprintformat FOREIGN KEY (jasperprocess_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_report jasperprocess_pareport; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_report
    ADD CONSTRAINT jasperprocess_pareport FOREIGN KEY (jasperprocess_id) REFERENCES adempiere.ad_process(ad_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_categoryvalue kcategory_kcategoryvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_categoryvalue
    ADD CONSTRAINT kcategory_kcategoryvalue FOREIGN KEY (k_category_id) REFERENCES adempiere.k_category(k_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_entrycategory kcategory_kentrycategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_entrycategory
    ADD CONSTRAINT kcategory_kentrycategory FOREIGN KEY (k_category_id) REFERENCES adempiere.k_category(k_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_entrycategory kcategoryvalue_kentrycategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_entrycategory
    ADD CONSTRAINT kcategoryvalue_kentrycategory FOREIGN KEY (k_categoryvalue_id) REFERENCES adempiere.k_categoryvalue(k_categoryvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_comment kentry_kcomment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_comment
    ADD CONSTRAINT kentry_kcomment FOREIGN KEY (k_entry_id) REFERENCES adempiere.k_entry(k_entry_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_entrycategory kentry_kentrycatalog; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_entrycategory
    ADD CONSTRAINT kentry_kentrycatalog FOREIGN KEY (k_entry_id) REFERENCES adempiere.k_entry(k_entry_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_entryrelated kentry_kentryrelated; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_entryrelated
    ADD CONSTRAINT kentry_kentryrelated FOREIGN KEY (k_entry_id) REFERENCES adempiere.k_entry(k_entry_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_entryrelated kentry_kentryrelatedid; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_entryrelated
    ADD CONSTRAINT kentry_kentryrelatedid FOREIGN KEY (k_entryrelated_id) REFERENCES adempiere.k_entry(k_entry_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_entry ksource_kentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_entry
    ADD CONSTRAINT ksource_kentry FOREIGN KEY (k_source_id) REFERENCES adempiere.k_source(k_source_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_entry ktopic_kentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_entry
    ADD CONSTRAINT ktopic_kentry FOREIGN KEY (k_topic_id) REFERENCES adempiere.k_topic(k_topic_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_topic ktype_ktopic; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_topic
    ADD CONSTRAINT ktype_ktopic FOREIGN KEY (k_type_id) REFERENCES adempiere.k_type(k_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_language languageclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_language
    ADD CONSTRAINT languageclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_language languageorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_language
    ADD CONSTRAINT languageorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset leasebpartner_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT leasebpartner_aasset FOREIGN KEY (lease_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order linkorder_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT linkorder_corder FOREIGN KEY (link_order_id) REFERENCES adempiere.c_order(c_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline linkorderline_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT linkorderline_corderline FOREIGN KEY (link_orderline_id) REFERENCES adempiere.c_orderline(c_orderline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo logo_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT logo_adclientinfo FOREIGN KEY (logo_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_orginfo logo_adorginfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orginfo
    ADD CONSTRAINT logo_adorginfo FOREIGN KEY (logo_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner logo_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT logo_cbpartner FOREIGN KEY (logo_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo logoreport_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT logoreport_adclientinfo FOREIGN KEY (logoreport_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo logoweb_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT logoweb_adclientinfo FOREIGN KEY (logoweb_id) REFERENCES adempiere.ad_image(ad_image_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_storage m_item_storage_client; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_storage
    ADD CONSTRAINT m_item_storage_client FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_storage m_item_storage_org; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_storage
    ADD CONSTRAINT m_item_storage_org FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_storage m_locator_storage; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_storage
    ADD CONSTRAINT m_locator_storage FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct m_product_fact_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT m_product_fact_acct FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct m_product_m_product_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT m_product_m_product_acct FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_po m_product_productpo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_po
    ADD CONSTRAINT m_product_productpo FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenish m_product_replenish; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenish
    ADD CONSTRAINT m_product_replenish FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_po m_productpo_client; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_po
    ADD CONSTRAINT m_productpo_client FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_po m_productpo_org; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_po
    ADD CONSTRAINT m_productpo_org FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenishplanline m_replenishplan_planline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenishplanline
    ADD CONSTRAINT m_replenishplan_planline FOREIGN KEY (m_replenishplan_id) REFERENCES adempiere.m_replenishplan(m_replenishplan_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_substitute m_substitute_client; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_substitute
    ADD CONSTRAINT m_substitute_client FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_substitute m_substitute_org; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_substitute
    ADD CONSTRAINT m_substitute_org FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_warehouse m_warehouse_client; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_warehouse
    ADD CONSTRAINT m_warehouse_client FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_locator m_warehouse_locator; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_locator
    ADD CONSTRAINT m_warehouse_locator FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_warehouse m_warehouse_org; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_warehouse
    ADD CONSTRAINT m_warehouse_org FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenish m_warehouse_replenish; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenish
    ADD CONSTRAINT m_warehouse_replenish FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_warehouse_acct m_warehouse_warehouse_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_warehouse_acct
    ADD CONSTRAINT m_warehouse_warehouse_acct FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_locator m_wh_locator_client; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_locator
    ADD CONSTRAINT m_wh_locator_client FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_locator m_wh_locator_org; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_locator
    ADD CONSTRAINT m_wh_locator_org FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform manufordermailtext_adprintform; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT manufordermailtext_adprintform FOREIGN KEY (manuf_order_mailtext_id) REFERENCES adempiere.r_mailtext(r_mailtext_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform manuforderprintformat_adprintf; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT manuforderprintformat_adprintf FOREIGN KEY (manuf_order_printformat_id) REFERENCES adempiere.ad_printformat(ad_printformat_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqline masetinstance_crfqline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqline
    ADD CONSTRAINT masetinstance_crfqline FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_landedcostallocation masi_clandedcostallocation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_landedcostallocation
    ADD CONSTRAINT masi_clandedcostallocation FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectissuema masi_cprojectissuema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectissuema
    ADD CONSTRAINT masi_cprojectissuema FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_bomproduct masi_mbomproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bomproduct
    ADD CONSTRAINT masi_mbomproduct FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_cost masi_mcost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_cost
    ADD CONSTRAINT masi_mcost FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail masi_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT masi_mcostdetail FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costqueue masi_mcostqueue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costqueue
    ADD CONSTRAINT masi_mcostqueue FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutlinema masi_minourlinema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutlinema
    ADD CONSTRAINT masi_minourlinema FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventorylinema masi_minventorylinema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventorylinema
    ADD CONSTRAINT masi_minventorylinema FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementlinema masi_mmovementlinema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementlinema
    ADD CONSTRAINT masi_mmovementlinema FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionlinema masi_mproductionlinema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionlinema
    ADD CONSTRAINT masi_mproductionlinema FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_inventoryvalue masi_tinventoryvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_inventoryvalue
    ADD CONSTRAINT masi_tinventoryvalue FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_transaction masi_ttransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_transaction
    ADD CONSTRAINT masi_ttransaction FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product_asi mattribute_iproductasi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product_asi
    ADD CONSTRAINT mattribute_iproductasi FOREIGN KEY (m_attribute_id) REFERENCES adempiere.m_attribute(m_attribute_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_attributeinstance mattribute_mattributeinst; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributeinstance
    ADD CONSTRAINT mattribute_mattributeinst FOREIGN KEY (m_attribute_id) REFERENCES adempiere.m_attribute(m_attribute_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_attributeuse mattribute_mattributeuse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributeuse
    ADD CONSTRAINT mattribute_mattributeuse FOREIGN KEY (m_attribute_id) REFERENCES adempiere.m_attribute(m_attribute_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_attributevalue mattribute_mattributevalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributevalue
    ADD CONSTRAINT mattribute_mattributevalue FOREIGN KEY (m_attribute_id) REFERENCES adempiere.m_attribute(m_attribute_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: qm_specificationline mattribute_qmspecificationline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.qm_specificationline
    ADD CONSTRAINT mattribute_qmspecificationline FOREIGN KEY (m_attribute_id) REFERENCES adempiere.m_attribute(m_attribute_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product_asi mattributesearch_iproductasi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product_asi
    ADD CONSTRAINT mattributesearch_iproductasi FOREIGN KEY (m_attributesearch_id) REFERENCES adempiere.m_attributesearch(m_attributesearch_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_attribute mattributesearch_mattribute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attribute
    ADD CONSTRAINT mattributesearch_mattribute FOREIGN KEY (m_attributesearch_id) REFERENCES adempiere.m_attributesearch(m_attributesearch_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product_asi mattributeset_iproductasi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product_asi
    ADD CONSTRAINT mattributeset_iproductasi FOREIGN KEY (m_attributeset_id) REFERENCES adempiere.m_attributeset(m_attributeset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_attributesetexclude mattributeset_masexclude; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributesetexclude
    ADD CONSTRAINT mattributeset_masexclude FOREIGN KEY (m_attributeset_id) REFERENCES adempiere.m_attributeset(m_attributeset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_attributesetinstance mattributeset_mattribsetinst; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributesetinstance
    ADD CONSTRAINT mattributeset_mattribsetinst FOREIGN KEY (m_attributeset_id) REFERENCES adempiere.m_attributeset(m_attributeset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_attributeuse mattributeset_mattributeuse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributeuse
    ADD CONSTRAINT mattributeset_mattributeuse FOREIGN KEY (m_attributeset_id) REFERENCES adempiere.m_attributeset(m_attributeset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product mattributeset_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT mattributeset_mproduct FOREIGN KEY (m_attributeset_id) REFERENCES adempiere.m_attributeset(m_attributeset_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: qm_specification mattributeset_qmspecification; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.qm_specification
    ADD CONSTRAINT mattributeset_qmspecification FOREIGN KEY (m_attributeset_id) REFERENCES adempiere.m_attributeset(m_attributeset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transactionallocation mattributesetinst_mtrxalloc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transactionallocation
    ADD CONSTRAINT mattributesetinst_mtrxalloc FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset mattributesetinstance_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT mattributesetinstance_aasset FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline mattributesetinstance_ddorderl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT mattributesetinstance_ddorderl FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_matchinv mattributesetinstance_mmatchin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_matchinv
    ADD CONSTRAINT mattributesetinstance_mmatchin FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_matchpo mattributesetinstance_mmatchpo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_matchpo
    ADD CONSTRAINT mattributesetinstance_mmatchpo FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline mattributesetinstance_mrequisi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT mattributesetinstance_mrequisi FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector mattributesetinstance_ppcostco; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT mattributesetinstance_ppcostco FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collectorma mattributesetinstance_ppcostma; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collectorma
    ADD CONSTRAINT mattributesetinstance_ppcostma FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bomline mattributesetinstance_ppordbl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bomline
    ADD CONSTRAINT mattributesetinstance_ppordbl FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order mattributesetinstance_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT mattributesetinstance_pporder FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bom mattributesetinstance_pporderb; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bom
    ADD CONSTRAINT mattributesetinstance_pporderb FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_cost mattributesetinstance_pporderc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_cost
    ADD CONSTRAINT mattributesetinstance_pporderc FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_bomline mattributesetinstance_ppprodbl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bomline
    ADD CONSTRAINT mattributesetinstance_ppprodbl FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_bom mattributesetinstance_ppproduc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bom
    ADD CONSTRAINT mattributesetinstance_ppproduc FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline mattributesetinstanceto_ddorde; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT mattributesetinstanceto_ddorde FOREIGN KEY (m_attributesetinstanceto_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline mattributesetinstanceto_mmovem; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT mattributesetinstanceto_mmovem FOREIGN KEY (m_attributesetinstanceto_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product_asi mattributevalue_iproductasi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product_asi
    ADD CONSTRAINT mattributevalue_iproductasi FOREIGN KEY (m_attributevalue_id) REFERENCES adempiere.m_attributevalue(m_attributevalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_attributeinstance mattributevalue_mattrinst; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributeinstance
    ADD CONSTRAINT mattributevalue_mattrinst FOREIGN KEY (m_attributevalue_id) REFERENCES adempiere.m_attributevalue(m_attributevalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_attributeinstance mattrsetinst__mattrinst; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributeinstance
    ADD CONSTRAINT mattrsetinst__mattrinst FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline mattrsetinst_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT mattrsetinst_cinvoiceline FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline mattrsetinst_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT mattrsetinst_corderline FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectissue mattrsetinst_cprojectissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectissue
    ADD CONSTRAINT mattrsetinst_cprojectissue FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline mattrsetinst_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT mattrsetinst_minoutline FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline mattrsetinst_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT mattrsetinst_minventoryline FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline mattrsetinst_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT mattrsetinst_mmovementline FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product mattrsetinst_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT mattrsetinst_mproduct FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline mattrsetinst_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT mattrsetinst_mproductionline FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_storage mattrsetinst_mstorage; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_storage
    ADD CONSTRAINT mattrsetinst_mstorage FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transaction mattrsetinst_mtransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transaction
    ADD CONSTRAINT mattrsetinst_mtransaction FOREIGN KEY (m_attributesetinstance_id) REFERENCES adempiere.m_attributesetinstance(m_attributesetinstance_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_bomproduct mbom_mbomproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bomproduct
    ADD CONSTRAINT mbom_mbomproduct FOREIGN KEY (m_bom_id) REFERENCES adempiere.m_bom(m_bom_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_group mbom_rgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_group
    ADD CONSTRAINT mbom_rgroup FOREIGN KEY (m_bom_id) REFERENCES adempiere.m_bom(m_bom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_bomproduct mbomalternative_mbomproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bomproduct
    ADD CONSTRAINT mbomalternative_mbomproduct FOREIGN KEY (m_bomalternative_id) REFERENCES adempiere.m_bomalternative(m_bomalternative_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product_bom mbomproduct_iproductbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product_bom
    ADD CONSTRAINT mbomproduct_iproductbom FOREIGN KEY (m_bomproduct_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_networkdistribution mchangenotice_ddnetworkdistrib; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_networkdistribution
    ADD CONSTRAINT mchangenotice_ddnetworkdistrib FOREIGN KEY (m_changenotice_id) REFERENCES adempiere.m_changenotice(m_changenotice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product_bom mchangenotice_iproductbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product_bom
    ADD CONSTRAINT mchangenotice_iproductbom FOREIGN KEY (m_changenotice_id) REFERENCES adempiere.m_changenotice(m_changenotice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bom mchangenotice_pporderbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bom
    ADD CONSTRAINT mchangenotice_pporderbom FOREIGN KEY (m_changenotice_id) REFERENCES adempiere.m_changenotice(m_changenotice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bomline mchangenotice_pporderbomline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bomline
    ADD CONSTRAINT mchangenotice_pporderbomline FOREIGN KEY (m_changenotice_id) REFERENCES adempiere.m_changenotice(m_changenotice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_bom mchangenotice_ppproductbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bom
    ADD CONSTRAINT mchangenotice_ppproductbom FOREIGN KEY (m_changenotice_id) REFERENCES adempiere.m_changenotice(m_changenotice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_bomline mchangenotice_ppproductbomline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bomline
    ADD CONSTRAINT mchangenotice_ppproductbomline FOREIGN KEY (m_changenotice_id) REFERENCES adempiere.m_changenotice(m_changenotice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_group mchangenotice_rgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_group
    ADD CONSTRAINT mchangenotice_rgroup FOREIGN KEY (m_changenotice_id) REFERENCES adempiere.m_changenotice(m_changenotice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request mchangerequest_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT mchangerequest_rrequest FOREIGN KEY (m_changerequest_id) REFERENCES adempiere.m_changerequest(m_changerequest_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_classification mclassificationparent_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_classification
    ADD CONSTRAINT mclassificationparent_mproduct FOREIGN KEY (m_classification_parent_id) REFERENCES adempiere.m_product_classification(m_product_classification_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_bom mcn_mbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bom
    ADD CONSTRAINT mcn_mbom FOREIGN KEY (m_changenotice_id) REFERENCES adempiere.m_changenotice(m_changenotice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_bomproduct mcn_mbomproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bomproduct
    ADD CONSTRAINT mcn_mbomproduct FOREIGN KEY (m_changenotice_id) REFERENCES adempiere.m_changenotice(m_changenotice_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_changerequest mcn_mcr; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_changerequest
    ADD CONSTRAINT mcn_mcr FOREIGN KEY (m_changenotice_id) REFERENCES adempiere.m_changenotice(m_changenotice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_cost mcostelement_mcost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_cost
    ADD CONSTRAINT mcostelement_mcost FOREIGN KEY (m_costelement_id) REFERENCES adempiere.m_costelement(m_costelement_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail mcostelement_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT mcostelement_mcostdetail FOREIGN KEY (m_costelement_id) REFERENCES adempiere.m_costelement(m_costelement_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costqueue mcostelement_mcostqueue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costqueue
    ADD CONSTRAINT mcostelement_mcostqueue FOREIGN KEY (m_costelement_id) REFERENCES adempiere.m_costelement(m_costelement_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_landedcostallocation mcostelement_mlandedcostalloc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_landedcostallocation
    ADD CONSTRAINT mcostelement_mlandedcostalloc FOREIGN KEY (m_costelement_id) REFERENCES adempiere.m_costelement(m_costelement_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_cost mcostelement_ppordercost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_cost
    ADD CONSTRAINT mcostelement_ppordercost FOREIGN KEY (m_costelement_id) REFERENCES adempiere.m_costelement(m_costelement_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_inventoryvalue mcostelement_tinventoryvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_inventoryvalue
    ADD CONSTRAINT mcostelement_tinventoryvalue FOREIGN KEY (m_costelement_id) REFERENCES adempiere.m_costelement(m_costelement_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema mcosttype_cacctschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema
    ADD CONSTRAINT mcosttype_cacctschema FOREIGN KEY (m_costtype_id) REFERENCES adempiere.m_costtype(m_costtype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_cost mcosttype_mcost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_cost
    ADD CONSTRAINT mcosttype_mcost FOREIGN KEY (m_costtype_id) REFERENCES adempiere.m_costtype(m_costtype_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail mcosttype_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT mcosttype_mcostdetail FOREIGN KEY (m_costtype_id) REFERENCES adempiere.m_costtype(m_costtype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costqueue mcosttype_mcostqueue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costqueue
    ADD CONSTRAINT mcosttype_mcostqueue FOREIGN KEY (m_costtype_id) REFERENCES adempiere.m_costtype(m_costtype_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_cost mcosttype_ppordercost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_cost
    ADD CONSTRAINT mcosttype_ppordercost FOREIGN KEY (m_costtype_id) REFERENCES adempiere.m_costtype(m_costtype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_demandline mdemand_mdemandline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_demandline
    ADD CONSTRAINT mdemand_mdemandline FOREIGN KEY (m_demand_id) REFERENCES adempiere.m_demand(m_demand_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_demanddetail mdemandline_mdemanddetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_demanddetail
    ADD CONSTRAINT mdemandline_mdemanddetail FOREIGN KEY (m_demandline_id) REFERENCES adempiere.m_demandline(m_demandline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner mdiscounts_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT mdiscounts_cbpartner FOREIGN KEY (m_discountschema_id) REFERENCES adempiere.m_discountschema(m_discountschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_discountschemabreak mdiscounts_mdsbreak; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_discountschemabreak
    ADD CONSTRAINT mdiscounts_mdsbreak FOREIGN KEY (m_discountschema_id) REFERENCES adempiere.m_discountschema(m_discountschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_pricelist_version mdiscounts_mplversion; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_pricelist_version
    ADD CONSTRAINT mdiscounts_mplversion FOREIGN KEY (m_discountschema_id) REFERENCES adempiere.m_discountschema(m_discountschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group mdiscountschema_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group
    ADD CONSTRAINT mdiscountschema_cbpgroup FOREIGN KEY (m_discountschema_id) REFERENCES adempiere.m_discountschema(m_discountschema_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_discountschemaline mdiscountschema_mdsline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_discountschemaline
    ADD CONSTRAINT mdiscountschema_mdsline FOREIGN KEY (m_discountschema_id) REFERENCES adempiere.m_discountschema(m_discountschema_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group mdiscountschemapo_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group
    ADD CONSTRAINT mdiscountschemapo_cbpgroup FOREIGN KEY (po_discountschema_id) REFERENCES adempiere.m_discountschema(m_discountschema_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner mdiscountspo_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT mdiscountspo_cbpartner FOREIGN KEY (po_discountschema_id) REFERENCES adempiere.m_discountschema(m_discountschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_distributionlistline mdistributionlist_line; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_distributionlistline
    ADD CONSTRAINT mdistributionlist_line FOREIGN KEY (m_distributionlist_id) REFERENCES adempiere.m_distributionlist(m_distributionlist_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_distributionrunline mdistributionlist_runline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_distributionrunline
    ADD CONSTRAINT mdistributionlist_runline FOREIGN KEY (m_distributionlist_id) REFERENCES adempiere.m_distributionlist(m_distributionlist_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_distributionrundetail mdistributionlist_tdrdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_distributionrundetail
    ADD CONSTRAINT mdistributionlist_tdrdetail FOREIGN KEY (m_distributionlist_id) REFERENCES adempiere.m_distributionlist(m_distributionlist_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_distributionrundetail mdistributionlline_tdrdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_distributionrundetail
    ADD CONSTRAINT mdistributionlline_tdrdetail FOREIGN KEY (m_distributionlistline_id) REFERENCES adempiere.m_distributionlistline(m_distributionlistline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_distributionrundetail mdistributionrline_tdrdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_distributionrundetail
    ADD CONSTRAINT mdistributionrline_tdrdetail FOREIGN KEY (m_distributionrunline_id) REFERENCES adempiere.m_distributionrunline(m_distributionrunline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_distributionrunline mdistributionrun_line; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_distributionrunline
    ADD CONSTRAINT mdistributionrun_line FOREIGN KEY (m_distributionrun_id) REFERENCES adempiere.m_distributionrun(m_distributionrun_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_distributionrundetail mdistributionrun_tdrdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_distributionrundetail
    ADD CONSTRAINT mdistributionrun_tdrdetail FOREIGN KEY (m_distributionrun_id) REFERENCES adempiere.m_distributionrun(m_distributionrun_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_edi_info medi_ediinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_edi_info
    ADD CONSTRAINT medi_ediinfo FOREIGN KEY (m_edi_id) REFERENCES adempiere.m_edi(m_edi_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_message messageclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_message
    ADD CONSTRAINT messageclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_message messageorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_message
    ADD CONSTRAINT messageorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_changerequest mfixchangenotice_mchangereques; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_changerequest
    ADD CONSTRAINT mfixchangenotice_mchangereques FOREIGN KEY (m_fixchangenotice_id) REFERENCES adempiere.m_changenotice(m_changenotice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request mfixchangenotice_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT mfixchangenotice_rrequest FOREIGN KEY (m_fixchangenotice_id) REFERENCES adempiere.m_changenotice(m_changenotice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_forecast mforecast_iforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_forecast
    ADD CONSTRAINT mforecast_iforecast FOREIGN KEY (m_forecast_id) REFERENCES adempiere.m_forecast(m_forecast_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_productplanning mforecast_iproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_productplanning
    ADD CONSTRAINT mforecast_iproductplanning FOREIGN KEY (m_forecast_id) REFERENCES adempiere.m_forecast(m_forecast_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecastline mforecast_mforecastline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecastline
    ADD CONSTRAINT mforecast_mforecastline FOREIGN KEY (m_forecast_id) REFERENCES adempiere.m_forecast(m_forecast_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp mforecast_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT mforecast_ppmrp FOREIGN KEY (m_forecast_id) REFERENCES adempiere.m_forecast(m_forecast_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_forecast mforecastline_iforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_forecast
    ADD CONSTRAINT mforecastline_iforecast FOREIGN KEY (m_forecastline_id) REFERENCES adempiere.m_forecastline(m_forecastline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_productplanning mforecastline_iproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_productplanning
    ADD CONSTRAINT mforecastline_iproductplanning FOREIGN KEY (m_forecastline_id) REFERENCES adempiere.m_forecastline(m_forecastline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_demanddetail mforecastline_mdemanddetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_demanddetail
    ADD CONSTRAINT mforecastline_mdemanddetail FOREIGN KEY (m_forecastline_id) REFERENCES adempiere.m_forecastline(m_forecastline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp mforecastline_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT mforecastline_ppmrp FOREIGN KEY (m_forecastline_id) REFERENCES adempiere.m_forecastline(m_forecastline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freightline mfreight_ddfreightline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freightline
    ADD CONSTRAINT mfreight_ddfreightline FOREIGN KEY (m_freight_id) REFERENCES adempiere.m_freight(m_freight_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline mfreightcategory_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT mfreightcategory_corderline FOREIGN KEY (m_freightcategory_id) REFERENCES adempiere.m_freightcategory(m_freightcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freight mfreightcategory_ddfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freight
    ADD CONSTRAINT mfreightcategory_ddfreight FOREIGN KEY (m_freightcategory_id) REFERENCES adempiere.m_freightcategory(m_freightcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freightline mfreightcategory_ddfreightline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freightline
    ADD CONSTRAINT mfreightcategory_ddfreightline FOREIGN KEY (m_freightcategory_id) REFERENCES adempiere.m_freightcategory(m_freightcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order mfreightcategory_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT mfreightcategory_ddorder FOREIGN KEY (m_freightcategory_id) REFERENCES adempiere.m_freightcategory(m_freightcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline mfreightcategory_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT mfreightcategory_ddorderline FOREIGN KEY (m_freightcategory_id) REFERENCES adempiere.m_freightcategory(m_freightcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_freight mfreightcategory_mfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_freight
    ADD CONSTRAINT mfreightcategory_mfreight FOREIGN KEY (m_freightcategory_id) REFERENCES adempiere.m_freightcategory(m_freightcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product mfreightcategory_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT mfreightcategory_mproduct FOREIGN KEY (m_freightcategory_id) REFERENCES adempiere.m_freightcategory(m_freightcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order mfreightcategory_order; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT mfreightcategory_order FOREIGN KEY (m_freightcategory_id) REFERENCES adempiere.m_freightcategory(m_freightcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order mfreightcategory_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT mfreightcategory_pporder FOREIGN KEY (m_freightcategory_id) REFERENCES adempiere.m_freightcategory(m_freightcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound mfreightcategory_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT mfreightcategory_wminoutbound FOREIGN KEY (m_freightcategory_id) REFERENCES adempiere.m_freightcategory(m_freightcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline mfreightcategory_wminoutboundl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT mfreightcategory_wminoutboundl FOREIGN KEY (m_freightcategory_id) REFERENCES adempiere.m_freightcategory(m_freightcategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_landedcost minout_clandedcost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_landedcost
    ADD CONSTRAINT minout_clandedcost FOREIGN KEY (m_inout_id) REFERENCES adempiere.m_inout(m_inout_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutconfirm minout_minoutconfirm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutconfirm
    ADD CONSTRAINT minout_minoutconfirm FOREIGN KEY (m_inout_id) REFERENCES adempiere.m_inout(m_inout_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline minout_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT minout_minoutline FOREIGN KEY (m_inout_id) REFERENCES adempiere.m_inout(m_inout_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_package minout_mpackage; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_package
    ADD CONSTRAINT minout_mpackage FOREIGN KEY (m_inout_id) REFERENCES adempiere.m_inout(m_inout_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction minout_mrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT minout_mrequestaction FOREIGN KEY (m_inout_id) REFERENCES adempiere.m_inout(m_inout_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_rma minout_mrma; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rma
    ADD CONSTRAINT minout_mrma FOREIGN KEY (inout_id) REFERENCES adempiere.m_inout(m_inout_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout minout_ref; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT minout_ref FOREIGN KEY (ref_inout_id) REFERENCES adempiere.m_inout(m_inout_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request minout_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT minout_rrequest FOREIGN KEY (m_inout_id) REFERENCES adempiere.m_inout(m_inout_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutlineconfirm minoutconfirm_minoutlineconf; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutlineconfirm
    ADD CONSTRAINT minoutconfirm_minoutlineconf FOREIGN KEY (m_inoutconfirm_id) REFERENCES adempiere.m_inoutconfirm(m_inoutconfirm_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset minoutline_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT minoutline_aasset FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_addition minoutline_aassetaddition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT minoutline_aassetaddition FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline minoutline_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT minoutline_cinvoiceline FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_landedcost minoutline_clandedcost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_landedcost
    ADD CONSTRAINT minoutline_clandedcost FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_landedcostallocation minoutline_clandedcostallocati; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_landedcostallocation
    ADD CONSTRAINT minoutline_clandedcostallocati FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectissue minoutline_cprojectissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectissue
    ADD CONSTRAINT minoutline_cprojectissue FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail minoutline_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT minoutline_mcostdetail FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutlineconfirm minoutline_minoutconfirm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutlineconfirm
    ADD CONSTRAINT minoutline_minoutconfirm FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutlinema minoutline_minoutlinema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutlinema
    ADD CONSTRAINT minoutline_minoutlinema FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_matchinv minoutline_mmatchinv; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_matchinv
    ADD CONSTRAINT minoutline_mmatchinv FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_matchpo minoutline_mmatchpo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_matchpo
    ADD CONSTRAINT minoutline_mmatchpo FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_packageline minoutline_mpackageline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_packageline
    ADD CONSTRAINT minoutline_mpackageline FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_rmaline minoutline_mrmaline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rmaline
    ADD CONSTRAINT minoutline_mrmaline FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transaction minoutline_mtransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transaction
    ADD CONSTRAINT minoutline_mtransaction FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transactionallocation minoutline_mtrxalloc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transactionallocation
    ADD CONSTRAINT minoutline_mtrxalloc FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline minoutline_ref; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT minoutline_ref FOREIGN KEY (ref_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request minoutline_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT minoutline_rrequest FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_transaction minoutline_ttransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_transaction
    ADD CONSTRAINT minoutline_ttransaction FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundlinema minoutline_wminoutboundlinema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundlinema
    ADD CONSTRAINT minoutline_wminoutboundlinema FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_inoutlineconfirm minoutlineconfirm_import; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_inoutlineconfirm
    ADD CONSTRAINT minoutlineconfirm_import FOREIGN KEY (m_inoutlineconfirm_id) REFERENCES adempiere.m_inoutlineconfirm(m_inoutlineconfirm_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transactionallocation minoutlineout_mtrxalloc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transactionallocation
    ADD CONSTRAINT minoutlineout_mtrxalloc FOREIGN KEY (out_m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_inventory minventory_iinventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_inventory
    ADD CONSTRAINT minventory_iinventory FOREIGN KEY (m_inventory_id) REFERENCES adempiere.m_inventory(m_inventory_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutconfirm minventory_minoutconfirm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutconfirm
    ADD CONSTRAINT minventory_minoutconfirm FOREIGN KEY (m_inventory_id) REFERENCES adempiere.m_inventory(m_inventory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline minventory_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT minventory_minventoryline FOREIGN KEY (m_inventory_id) REFERENCES adempiere.m_inventory(m_inventory_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementconfirm minventory_mmovconfirm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementconfirm
    ADD CONSTRAINT minventory_mmovconfirm FOREIGN KEY (m_inventory_id) REFERENCES adempiere.m_inventory(m_inventory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_inventory minventoryline_iinventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_inventory
    ADD CONSTRAINT minventoryline_iinventory FOREIGN KEY (m_inventoryline_id) REFERENCES adempiere.m_inventoryline(m_inventoryline_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail minventoryline_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT minventoryline_mcostdetail FOREIGN KEY (m_inventoryline_id) REFERENCES adempiere.m_inventoryline(m_inventoryline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventorylinema minventoryline_milinema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventorylinema
    ADD CONSTRAINT minventoryline_milinema FOREIGN KEY (m_inventoryline_id) REFERENCES adempiere.m_inventoryline(m_inventoryline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutlineconfirm minventoryline_minoutlineconfi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutlineconfirm
    ADD CONSTRAINT minventoryline_minoutlineconfi FOREIGN KEY (m_inventoryline_id) REFERENCES adempiere.m_inventoryline(m_inventoryline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementlineconfirm minventoryline_mmovlineconfirm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementlineconfirm
    ADD CONSTRAINT minventoryline_mmovlineconfirm FOREIGN KEY (m_inventoryline_id) REFERENCES adempiere.m_inventoryline(m_inventoryline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transaction minventoryline_mtransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transaction
    ADD CONSTRAINT minventoryline_mtransaction FOREIGN KEY (m_inventoryline_id) REFERENCES adempiere.m_inventoryline(m_inventoryline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transactionallocation minventoryline_mtrxalloc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transactionallocation
    ADD CONSTRAINT minventoryline_mtrxalloc FOREIGN KEY (m_inventoryline_id) REFERENCES adempiere.m_inventoryline(m_inventoryline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_transaction minventoryline_ttransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_transaction
    ADD CONSTRAINT minventoryline_ttransaction FOREIGN KEY (m_inventoryline_id) REFERENCES adempiere.m_inventoryline(m_inventoryline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transactionallocation minventorylineout_mtrxalloc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transactionallocation
    ADD CONSTRAINT minventorylineout_mtrxalloc FOREIGN KEY (out_m_inventoryline_id) REFERENCES adempiere.m_inventoryline(m_inventoryline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail minvoiceline_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT minvoiceline_mcostdetail FOREIGN KEY (c_invoiceline_id) REFERENCES adempiere.c_invoiceline(c_invoiceline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination mlocationfrom_vc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT mlocationfrom_vc FOREIGN KEY (c_locfrom_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination mlocationto_vc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT mlocationto_vc FOREIGN KEY (c_locto_id) REFERENCES adempiere.c_location(c_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset mlocator_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT mlocator_aasset FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectissue mlocator_cprojectissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectissue
    ADD CONSTRAINT mlocator_cprojectissue FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline mlocator_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT mlocator_ddorderline FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct mlocator_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT mlocator_factacct FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_asset mlocator_iasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_asset
    ADD CONSTRAINT mlocator_iasset FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fixedasset mlocator_ifixedasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fixedasset
    ADD CONSTRAINT mlocator_ifixedasset FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_inventory mlocator_iinventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_inventory
    ADD CONSTRAINT mlocator_iinventory FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline mlocator_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT mlocator_minoutline FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transaction mlocator_minventorycount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transaction
    ADD CONSTRAINT mlocator_minventorycount FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline mlocator_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT mlocator_minventoryline FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline mlocator_movementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT mlocator_movementline FOREIGN KEY (m_locatorto_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product mlocator_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT mlocator_mproduct FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionbatch mlocator_mproductionbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionbatch
    ADD CONSTRAINT mlocator_mproductionbatch FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline mlocator_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT mlocator_mproductionline FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionplan mlocator_mproductionplan; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionplan
    ADD CONSTRAINT mlocator_mproductionplan FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenish mlocator_mreplenish; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenish
    ADD CONSTRAINT mlocator_mreplenish FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector mlocator_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT mlocator_ppcostcollector FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bomline mlocator_pporderbomline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bomline
    ADD CONSTRAINT mlocator_pporderbomline FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_transaction mlocator_ttransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_transaction
    ADD CONSTRAINT mlocator_ttransaction FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound mlocator_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT mlocator_wminoutbound FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline mlocatorto_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT mlocatorto_ddorderline FOREIGN KEY (m_locatorto_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline mlocatorto_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT mlocatorto_mmovementline FOREIGN KEY (m_locator_id) REFERENCES adempiere.m_locator(m_locator_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_attributesetinstance mlot_mattributesetinstance; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributesetinstance
    ADD CONSTRAINT mlot_mattributesetinstance FOREIGN KEY (m_lot_id) REFERENCES adempiere.m_lot(m_lot_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_attributeset mlotctl_mattributeset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributeset
    ADD CONSTRAINT mlotctl_mattributeset FOREIGN KEY (m_lotctl_id) REFERENCES adempiere.m_lotctl(m_lotctl_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_lot mlotctl_mlot; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_lot
    ADD CONSTRAINT mlotctl_mlot FOREIGN KEY (m_lotctl_id) REFERENCES adempiere.m_lotctl(m_lotctl_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_lotctlexclude mlotctl_mlotctlexclude; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_lotctlexclude
    ADD CONSTRAINT mlotctl_mlotctlexclude FOREIGN KEY (m_lotctl_id) REFERENCES adempiere.m_lotctl(m_lotctl_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_addition mmatchinv_aassetaddition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT mmatchinv_aassetaddition FOREIGN KEY (m_matchinv_id) REFERENCES adempiere.m_matchinv(m_matchinv_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_movement mmovement_imovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_movement
    ADD CONSTRAINT mmovement_imovement FOREIGN KEY (m_movement_id) REFERENCES adempiere.m_movement(m_movement_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementconfirm mmovement_mmovementconfirm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementconfirm
    ADD CONSTRAINT mmovement_mmovementconfirm FOREIGN KEY (m_movement_id) REFERENCES adempiere.m_movement(m_movement_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline mmovement_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT mmovement_mmovementline FOREIGN KEY (m_movement_id) REFERENCES adempiere.m_movement(m_movement_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementlineconfirm mmovementconfirm_mmovlineconf; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementlineconfirm
    ADD CONSTRAINT mmovementconfirm_mmovlineconf FOREIGN KEY (m_movementconfirm_id) REFERENCES adempiere.m_movementconfirm(m_movementconfirm_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_movement mmovementline_imovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_movement
    ADD CONSTRAINT mmovementline_imovement FOREIGN KEY (m_movementline_id) REFERENCES adempiere.m_movementline(m_movementline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail mmovementline_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT mmovementline_mcostdetail FOREIGN KEY (m_movementline_id) REFERENCES adempiere.m_movementline(m_movementline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementlinema mmovementline_mmovementlinema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementlinema
    ADD CONSTRAINT mmovementline_mmovementlinema FOREIGN KEY (m_movementline_id) REFERENCES adempiere.m_movementline(m_movementline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementlineconfirm mmovementline_mmovlineconfirm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementlineconfirm
    ADD CONSTRAINT mmovementline_mmovlineconfirm FOREIGN KEY (m_movementline_id) REFERENCES adempiere.m_movementline(m_movementline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transaction mmovementline_mtransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transaction
    ADD CONSTRAINT mmovementline_mtransaction FOREIGN KEY (m_movementline_id) REFERENCES adempiere.m_movementline(m_movementline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_transaction mmovementline_ttransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_transaction
    ADD CONSTRAINT mmovementline_ttransaction FOREIGN KEY (m_movementline_id) REFERENCES adempiere.m_movementline(m_movementline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_contract monthlysalary_hrcontract; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_contract
    ADD CONSTRAINT monthlysalary_hrcontract FOREIGN KEY (monthlysalary_id) REFERENCES adempiere.hr_concept(hr_concept_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_delivery moutline_aassetdelivery; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_delivery
    ADD CONSTRAINT moutline_aassetdelivery FOREIGN KEY (m_inoutline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_packageline mpackage_mpackageline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_packageline
    ADD CONSTRAINT mpackage_mpackageline FOREIGN KEY (m_package_id) REFERENCES adempiere.m_package(m_package_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product mparttype_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT mparttype_mproduct FOREIGN KEY (m_parttype_id) REFERENCES adempiere.m_parttype(m_parttype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventory mperpetualinv_minventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT mperpetualinv_minventory FOREIGN KEY (m_perpetualinv_id) REFERENCES adempiere.m_perpetualinv(m_perpetualinv_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_inventoryvalue mplversion_tinventoryvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_inventoryvalue
    ADD CONSTRAINT mplversion_tinventoryvalue FOREIGN KEY (m_pricelist_version_id) REFERENCES adempiere.m_pricelist_version(m_pricelist_version_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_topictype mpricelist_btopictype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_topictype
    ADD CONSTRAINT mpricelist_btopictype FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner mpricelist_cbpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT mpricelist_cbpartner FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group mpricelist_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group
    ADD CONSTRAINT mpricelist_cbpgroup FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice mpricelist_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT mpricelist_cinvoice FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_pos mpricelist_cpos; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_pos
    ADD CONSTRAINT mpricelist_cpos FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice mpricelist_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT mpricelist_iinvoice FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order mpricelist_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT mpricelist_iorder FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_pricelist mpricelist_ipricelist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_pricelist
    ADD CONSTRAINT mpricelist_ipricelist FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecast mpricelist_mforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecast
    ADD CONSTRAINT mpricelist_mforecast FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_pricelist_version mpricelist_mpricelistversion; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_pricelist_version
    ADD CONSTRAINT mpricelist_mpricelistversion FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotionprecondition mpricelist_mpromotionprecondit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionprecondition
    ADD CONSTRAINT mpricelist_mpromotionprecondit FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenishplan mpricelist_mreplenishplan; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenishplan
    ADD CONSTRAINT mpricelist_mreplenishplan FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order mpricelist_soheader; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT mpricelist_soheader FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpense mpricelist_stimeexpense; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpense
    ADD CONSTRAINT mpricelist_stimeexpense FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_basket mpricelist_wbasket; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_basket
    ADD CONSTRAINT mpricelist_wbasket FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_store mpricelist_wstore; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_store
    ADD CONSTRAINT mpricelist_wstore FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group mpricelistpo_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group
    ADD CONSTRAINT mpricelistpo_cbpgroup FOREIGN KEY (po_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner mpricelistpo_cbuspartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner
    ADD CONSTRAINT mpricelistpo_cbuspartner FOREIGN KEY (po_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productprice mpricelistver_mproductprice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productprice
    ADD CONSTRAINT mpricelistver_mproductprice FOREIGN KEY (m_pricelist_version_id) REFERENCES adempiere.m_pricelist_version(m_pricelist_version_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project mpricelistversion_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT mpricelistversion_cproject FOREIGN KEY (m_pricelist_version_id) REFERENCES adempiere.m_pricelist_version(m_pricelist_version_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_pricelist mpricelistversion_ipricelist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_pricelist
    ADD CONSTRAINT mpricelistversion_ipricelist FOREIGN KEY (m_pricelist_version_id) REFERENCES adempiere.m_pricelist_version(m_pricelist_version_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productpricevendorbreak mpricelistversion_mproductpric; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productpricevendorbreak
    ADD CONSTRAINT mpricelistversion_mproductpric FOREIGN KEY (m_pricelist_version_id) REFERENCES adempiere.m_pricelist_version(m_pricelist_version_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_pricelist_version mpricelistversionbase_mpriceli; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_pricelist_version
    ADD CONSTRAINT mpricelistversionbase_mpriceli FOREIGN KEY (m_pricelist_version_base_id) REFERENCES adempiere.m_pricelist_version(m_pricelist_version_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisition mprocelist_mrequisition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisition
    ADD CONSTRAINT mprocelist_mrequisition FOREIGN KEY (m_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct mprodcat_mprodcatacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT mprodcat_mprodcatacct FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq_topicsubscriberonly mprodcategory_crfqtsubonly; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq_topicsubscriberonly
    ADD CONSTRAINT mprodcategory_crfqtsubonly FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_discountschemabreak mprodcategory_mdiscountsbreak; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_discountschemabreak
    ADD CONSTRAINT mprodcategory_mdiscountsbreak FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_discountschemaline mprodcategory_mdiscountsline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_discountschemaline
    ADD CONSTRAINT mprodcategory_mdiscountsline FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_perpetualinv mprodcategory_mperpetualinv; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_perpetualinv
    ADD CONSTRAINT mprodcategory_mperpetualinv FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_resourcetype mprodcategory_sresourcetype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_resourcetype
    ADD CONSTRAINT mprodcategory_sresourcetype FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset mproduct_aasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset
    ADD CONSTRAINT mproduct_aasset FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_addition mproduct_aassetaddition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_addition
    ADD CONSTRAINT mproduct_aassetaddition FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_product mproduct_aassetproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_product
    ADD CONSTRAINT mproduct_aassetproduct FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_memo mproduct_admemo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_memo
    ADD CONSTRAINT mproduct_admemo FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_registration mproduct_aregistration; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registration
    ADD CONSTRAINT mproduct_aregistration FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_registrationproduct mproduct_aregproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_registrationproduct
    ADD CONSTRAINT mproduct_aregproduct FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_bom mproduct_bomproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_bom
    ADD CONSTRAINT mproduct_bomproduct FOREIGN KEY (m_productbom_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_topictype mproduct_btopictype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_topictype
    ADD CONSTRAINT mproduct_btopictype FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: b_topictype mproduct_btopictypemember; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.b_topictype
    ADD CONSTRAINT mproduct_btopictypemember FOREIGN KEY (m_productmember_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element mproduct_caschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT mproduct_caschemaelement FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bpartner_product mproduct_cbpproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bpartner_product
    ADD CONSTRAINT mproduct_cbpproduct FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline mproduct_ccommissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT mproduct_ccommissionline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline mproduct_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT mproduct_cinvoiceline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_landedcost mproduct_clandedcost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_landedcost
    ADD CONSTRAINT mproduct_clandedcost FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_landedcostallocation mproduct_clandedcostalloc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_landedcostallocation
    ADD CONSTRAINT mproduct_clandedcostalloc FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline mproduct_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT mproduct_corderline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_phase mproduct_cphase; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_phase
    ADD CONSTRAINT mproduct_cphase FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_poskey mproduct_cposkey; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_poskey
    ADD CONSTRAINT mproduct_cposkey FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectissue mproduct_cprojectissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectissue
    ADD CONSTRAINT mproduct_cprojectissue FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectline mproduct_cprojectline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectline
    ADD CONSTRAINT mproduct_cprojectline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectphase mproduct_cprojectphase; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectphase
    ADD CONSTRAINT mproduct_cprojectphase FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projecttask mproduct_cprojecttask; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projecttask
    ADD CONSTRAINT mproduct_cprojecttask FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfqline mproduct_crfqline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfqline
    ADD CONSTRAINT mproduct_crfqline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_rfq_topicsubscriberonly mproduct_crfqtsubonly; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_rfq_topicsubscriberonly
    ADD CONSTRAINT mproduct_crfqtsubonly FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory mproduct_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT mproduct_csaleshistory FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_servicelevel mproduct_cservicelevel; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_servicelevel
    ADD CONSTRAINT mproduct_cservicelevel FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_subscription mproduct_csubscription; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_subscription
    ADD CONSTRAINT mproduct_csubscription FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_task mproduct_ctask; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_task
    ADD CONSTRAINT mproduct_ctask FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdefinition mproduct_ctaxdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdefinition
    ADD CONSTRAINT mproduct_ctaxdefinition FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_uom_conversion mproduct_cuomconversion; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_uom_conversion
    ADD CONSTRAINT mproduct_cuomconversion FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freightline mproduct_ddfreightline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freightline
    ADD CONSTRAINT mproduct_ddfreightline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline mproduct_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT mproduct_ddorderline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary mproduct_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT mproduct_factacctsummary FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution mproduct_gldist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT mproduct_gldist FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline mproduct_gldistline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT mproduct_gldistline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline mproduct_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT mproduct_gljournalline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_departmentproduct mproduct_hrdepartmentproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_departmentproduct
    ADD CONSTRAINT mproduct_hrdepartmentproduct FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_asset mproduct_iasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_asset
    ADD CONSTRAINT mproduct_iasset FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget mproduct_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT mproduct_ibudget FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal mproduct_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT mproduct_ifajournal FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fixedasset mproduct_ifixedasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fixedasset
    ADD CONSTRAINT mproduct_ifixedasset FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_forecast mproduct_iforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_forecast
    ADD CONSTRAINT mproduct_iforecast FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_inventory mproduct_iinventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_inventory
    ADD CONSTRAINT mproduct_iinventory FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_movement mproduct_imovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_movement
    ADD CONSTRAINT mproduct_imovement FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order mproduct_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT mproduct_iorder FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_pricelist mproduct_ipricelist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_pricelist
    ADD CONSTRAINT mproduct_ipricelist FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product mproduct_iproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product
    ADD CONSTRAINT mproduct_iproduct FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product_asi mproduct_iproductasi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product_asi
    ADD CONSTRAINT mproduct_iproductasi FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product_bom mproduct_iproductbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product_bom
    ADD CONSTRAINT mproduct_iproductbom FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_productplanning mproduct_iproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_productplanning
    ADD CONSTRAINT mproduct_iproductplanning FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory mproduct_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT mproduct_isaleshistory FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_bom mproduct_mbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bom
    ADD CONSTRAINT mproduct_mbom FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_bomalternative mproduct_mbomalternative; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bomalternative
    ADD CONSTRAINT mproduct_mbomalternative FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_bomproduct mproduct_mbomproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bomproduct
    ADD CONSTRAINT mproduct_mbomproduct FOREIGN KEY (m_productbom_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_bp_price mproduct_mbpprice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bp_price
    ADD CONSTRAINT mproduct_mbpprice FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_cost mproduct_mcost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_cost
    ADD CONSTRAINT mproduct_mcost FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail mproduct_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT mproduct_mcostdetail FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costqueue mproduct_mcostqueue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costqueue
    ADD CONSTRAINT mproduct_mcostqueue FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_demandline mproduct_mdemandline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_demandline
    ADD CONSTRAINT mproduct_mdemandline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_discountschemabreak mproduct_mdiscountsbreak; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_discountschemabreak
    ADD CONSTRAINT mproduct_mdiscountsbreak FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_discountschemaline mproduct_mdiscountsline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_discountschemaline
    ADD CONSTRAINT mproduct_mdiscountsline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_distributionrunline mproduct_mdistributionrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_distributionrunline
    ADD CONSTRAINT mproduct_mdistributionrun FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_edi mproduct_medi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_edi
    ADD CONSTRAINT mproduct_medi FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecastline mproduct_mforecastline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecastline
    ADD CONSTRAINT mproduct_mforecastline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline mproduct_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT mproduct_minoutline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transaction mproduct_minventorycount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transaction
    ADD CONSTRAINT mproduct_minventorycount FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline mproduct_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT mproduct_minventoryline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_lot mproduct_mlot; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_lot
    ADD CONSTRAINT mproduct_mlot FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_matchinv mproduct_mmatchinv; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_matchinv
    ADD CONSTRAINT mproduct_mmatchinv FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_matchpo mproduct_mmatchpo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_matchpo
    ADD CONSTRAINT mproduct_mmatchpo FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline mproduct_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT mproduct_mmovementline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_bom mproduct_mproductbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_bom
    ADD CONSTRAINT mproduct_mproductbom FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product mproduct_mproductcategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT mproduct_mproductcategory FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_costing mproduct_mproductcosting; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_costing
    ADD CONSTRAINT mproduct_mproductcosting FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productdownload mproduct_mproductdownload; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productdownload
    ADD CONSTRAINT mproduct_mproductdownload FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production mproduct_mproduction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT mproduct_mproduction FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionbatch mproduct_mproductionbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionbatch
    ADD CONSTRAINT mproduct_mproductionbatch FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionbatchline mproduct_mproductionbatchline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionbatchline
    ADD CONSTRAINT mproduct_mproductionbatchline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline mproduct_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT mproduct_mproductionline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionplan mproduct_mproductionplan; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionplan
    ADD CONSTRAINT mproduct_mproductionplan FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productoperation mproduct_mproductoperation; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productoperation
    ADD CONSTRAINT mproduct_mproductoperation FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productprice mproduct_mproductprice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productprice
    ADD CONSTRAINT mproduct_mproductprice FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productpricevendorbreak mproduct_mproductpricevendorbr; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productpricevendorbreak
    ADD CONSTRAINT mproduct_mproductpricevendorbr FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_qualitytest mproduct_mproductqualitytest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_qualitytest
    ADD CONSTRAINT mproduct_mproductqualitytest FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_trl mproduct_mproducttrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_trl
    ADD CONSTRAINT mproduct_mproducttrl FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotiongroupline mproduct_mpromotiongroupline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotiongroupline
    ADD CONSTRAINT mproduct_mpromotiongroupline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_relatedproduct mproduct_mrelated_product; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_relatedproduct
    ADD CONSTRAINT mproduct_mrelated_product FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_relatedproduct mproduct_mrelatedproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_relatedproduct
    ADD CONSTRAINT mproduct_mrelatedproduct FOREIGN KEY (relatedproduct_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenishplanline mproduct_mreplenishplanline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenishplanline
    ADD CONSTRAINT mproduct_mreplenishplanline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline mproduct_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT mproduct_mrequisitionline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transactionallocation mproduct_mtrxalloc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transactionallocation
    ADD CONSTRAINT mproduct_mtrxalloc FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_gljournal mproduct_ogljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_gljournal
    ADD CONSTRAINT mproduct_ogljournal FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_goalrestriction mproduct_pagoalrestriction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goalrestriction
    ADD CONSTRAINT mproduct_pagoalrestriction FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn mproduct_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT mproduct_pareportcolumn FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource mproduct_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT mproduct_pareportsource FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector mproduct_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT mproduct_ppcostcollector FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastdefinitionline mproduct_ppforecastdefinitionl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastdefinitionline
    ADD CONSTRAINT mproduct_ppforecastdefinitionl FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrunmaster mproduct_ppforecastrunmaster; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunmaster
    ADD CONSTRAINT mproduct_ppforecastrunmaster FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp mproduct_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT mproduct_ppmrp FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order mproduct_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT mproduct_pporder FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bom mproduct_pporderbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bom
    ADD CONSTRAINT mproduct_pporderbom FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bomline mproduct_pporderbomline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bomline
    ADD CONSTRAINT mproduct_pporderbomline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_cost mproduct_ppordercost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_cost
    ADD CONSTRAINT mproduct_ppordercost FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node_product mproduct_ppordernodeproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node_product
    ADD CONSTRAINT mproduct_ppordernodeproduct FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_bom mproduct_ppproductbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bom
    ADD CONSTRAINT mproduct_ppproductbom FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_bomline mproduct_ppproductbomline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bomline
    ADD CONSTRAINT mproduct_ppproductbomline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_planning mproduct_ppproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_planning
    ADD CONSTRAINT mproduct_ppproductplanning FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_wf_node_product mproduct_ppwfnodeproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_wf_node_product
    ADD CONSTRAINT mproduct_ppwfnodeproduct FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: qm_specification mproduct_qmspecification; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.qm_specification
    ADD CONSTRAINT mproduct_qmspecification FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_category mproduct_rcategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_category
    ADD CONSTRAINT mproduct_rcategory FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request mproduct_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT mproduct_rrequest FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction mproduct_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT mproduct_rrequestaction FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline mproduct_stimeexpenseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT mproduct_stimeexpenseline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_storage mproduct_storage; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_storage
    ADD CONSTRAINT mproduct_storage FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_training_class mproduct_strainingclass; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_training_class
    ADD CONSTRAINT mproduct_strainingclass FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_substitute mproduct_substitute; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_substitute
    ADD CONSTRAINT mproduct_substitute FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_substitute mproduct_substitutesub; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_substitute
    ADD CONSTRAINT mproduct_substitutesub FOREIGN KEY (substitute_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_distributionrundetail mproduct_tdrdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_distributionrundetail
    ADD CONSTRAINT mproduct_tdrdetail FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_inventoryvalue mproduct_tinventoryvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_inventoryvalue
    ADD CONSTRAINT mproduct_tinventoryvalue FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_replenish mproduct_treplenish; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_replenish
    ADD CONSTRAINT mproduct_treplenish FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_transaction mproduct_ttransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_transaction
    ADD CONSTRAINT mproduct_ttransaction FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination mproduct_vc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT mproduct_vc FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_basketline mproduct_wbasketline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_basketline
    ADD CONSTRAINT mproduct_wbasketline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_definition mproduct_wmdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_definition
    ADD CONSTRAINT mproduct_wmdefinition FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline mproduct_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT mproduct_wminoutboundline FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline mproductcat_ccommissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT mproductcat_ccommissionline FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectline mproductcat_cprojectline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectline
    ADD CONSTRAINT mproductcat_cprojectline FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_goalrestriction mproductcat_pagoalrestriction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goalrestriction
    ADD CONSTRAINT mproductcat_pagoalrestriction FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category mproductcat_parentcat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category
    ADD CONSTRAINT mproductcat_parentcat FOREIGN KEY (m_product_category_parent_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory mproductcategory_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT mproductcategory_csaleshistory FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_taxdefinition mproductcategory_ctaxdefinitio; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_taxdefinition
    ADD CONSTRAINT mproductcategory_ctaxdefinitio FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product mproductcategory_iproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product
    ADD CONSTRAINT mproductcategory_iproduct FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory mproductcategory_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT mproductcategory_isaleshistory FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenishplanline mproductcategory_mreplenishpla; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenishplanline
    ADD CONSTRAINT mproductcategory_mreplenishpla FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastdefinitionline mproductcategory_ppforecastdef; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastdefinitionline
    ADD CONSTRAINT mproductcategory_ppforecastdef FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_expensetype mproductcategory_sexpensetype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_expensetype
    ADD CONSTRAINT mproductcategory_sexpensetype FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_training mproductcategory_straining; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_training
    ADD CONSTRAINT mproductcategory_straining FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_definition mproductcategory_wmdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_definition
    ADD CONSTRAINT mproductcategory_wmdefinition FOREIGN KEY (m_product_category_id) REFERENCES adempiere.m_product_category(m_product_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline mproductclass_ccommissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT mproductclass_ccommissionline FOREIGN KEY (m_product_class_id) REFERENCES adempiere.m_product_class(m_product_class_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory mproductclass_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT mproductclass_csaleshistory FOREIGN KEY (m_product_class_id) REFERENCES adempiere.m_product_class(m_product_class_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product mproductclass_iproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product
    ADD CONSTRAINT mproductclass_iproduct FOREIGN KEY (m_product_class_id) REFERENCES adempiere.m_product_class(m_product_class_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory mproductclass_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT mproductclass_isaleshistory FOREIGN KEY (m_product_class_id) REFERENCES adempiere.m_product_class(m_product_class_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product mproductclass_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT mproductclass_mproduct FOREIGN KEY (m_product_class_id) REFERENCES adempiere.m_product_class(m_product_class_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastdefinitionline mproductclass_ppforecastdefini; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastdefinitionline
    ADD CONSTRAINT mproductclass_ppforecastdefini FOREIGN KEY (m_product_class_id) REFERENCES adempiere.m_product_class(m_product_class_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline mproductclassification_ccommis; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT mproductclassification_ccommis FOREIGN KEY (m_product_classification_id) REFERENCES adempiere.m_product_classification(m_product_classification_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory mproductclassification_csalesh; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT mproductclassification_csalesh FOREIGN KEY (m_product_classification_id) REFERENCES adempiere.m_product_classification(m_product_classification_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product mproductclassification_iproduc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product
    ADD CONSTRAINT mproductclassification_iproduc FOREIGN KEY (m_product_classification_id) REFERENCES adempiere.m_product_classification(m_product_classification_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory mproductclassification_isalesh; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT mproductclassification_isalesh FOREIGN KEY (m_product_classification_id) REFERENCES adempiere.m_product_classification(m_product_classification_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product mproductclassification_mproduc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT mproductclassification_mproduc FOREIGN KEY (m_product_classification_id) REFERENCES adempiere.m_product_classification(m_product_classification_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastdefinitionline mproductclassification_ppforec; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastdefinitionline
    ADD CONSTRAINT mproductclassification_ppforec FOREIGN KEY (m_product_classification_id) REFERENCES adempiere.m_product_classification(m_product_classification_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_class mproductclassparent_mproductcl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_class
    ADD CONSTRAINT mproductclassparent_mproductcl FOREIGN KEY (m_product_class_parent_id) REFERENCES adempiere.m_product_class(m_product_class_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: a_asset_delivery mproductdl_aassetdelivery; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.a_asset_delivery
    ADD CONSTRAINT mproductdl_aassetdelivery FOREIGN KEY (m_productdownload_id) REFERENCES adempiere.m_productdownload(m_productdownload_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_clientinfo mproductfreight_adclientinfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_clientinfo
    ADD CONSTRAINT mproductfreight_adclientinfo FOREIGN KEY (m_productfreight_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_commissionline mproductgroup_ccommissionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_commissionline
    ADD CONSTRAINT mproductgroup_ccommissionline FOREIGN KEY (m_product_group_id) REFERENCES adempiere.m_product_group(m_product_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory mproductgroup_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT mproductgroup_csaleshistory FOREIGN KEY (m_product_group_id) REFERENCES adempiere.m_product_group(m_product_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product mproductgroup_iproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product
    ADD CONSTRAINT mproductgroup_iproduct FOREIGN KEY (m_product_group_id) REFERENCES adempiere.m_product_group(m_product_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory mproductgroup_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT mproductgroup_isaleshistory FOREIGN KEY (m_product_group_id) REFERENCES adempiere.m_product_group(m_product_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product mproductgroup_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT mproductgroup_mproduct FOREIGN KEY (m_product_group_id) REFERENCES adempiere.m_product_group(m_product_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastdefinitionline mproductgroup_ppforecastdefini; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastdefinitionline
    ADD CONSTRAINT mproductgroup_ppforecastdefini FOREIGN KEY (m_product_group_id) REFERENCES adempiere.m_product_group(m_product_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_group mproductgroupparent_mproductgr; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_group
    ADD CONSTRAINT mproductgroupparent_mproductgr FOREIGN KEY (m_product_group_parent_id) REFERENCES adempiere.m_product_group(m_product_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline mproduction_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT mproduction_mproductionline FOREIGN KEY (m_production_id) REFERENCES adempiere.m_production(m_production_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenishplanline mproduction_mreplenishplanline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenishplanline
    ADD CONSTRAINT mproduction_mreplenishplanline FOREIGN KEY (m_production_id) REFERENCES adempiere.m_production(m_production_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionplan mproduction_plan; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionplan
    ADD CONSTRAINT mproduction_plan FOREIGN KEY (m_production_id) REFERENCES adempiere.m_production(m_production_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement mproductionbatch_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT mproductionbatch_mmovement FOREIGN KEY (m_productionbatch_id) REFERENCES adempiere.m_productionbatch(m_productionbatch_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production mproductionbatch_mproduction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT mproductionbatch_mproduction FOREIGN KEY (m_productionbatch_id) REFERENCES adempiere.m_productionbatch(m_productionbatch_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionbatchline mproductionbatch_mproductionba; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionbatchline
    ADD CONSTRAINT mproductionbatch_mproductionba FOREIGN KEY (m_productionbatch_id) REFERENCES adempiere.m_productionbatch(m_productionbatch_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail mproductionline_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT mproductionline_mcostdetail FOREIGN KEY (m_productionline_id) REFERENCES adempiere.m_productionline(m_productionline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionlinema mproductionline_mplinema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionlinema
    ADD CONSTRAINT mproductionline_mplinema FOREIGN KEY (m_productionline_id) REFERENCES adempiere.m_productionline(m_productionline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transaction mproductionline_mtransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transaction
    ADD CONSTRAINT mproductionline_mtransaction FOREIGN KEY (m_productionline_id) REFERENCES adempiere.m_productionline(m_productionline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transactionallocation mproductionline_mtrxalloc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transactionallocation
    ADD CONSTRAINT mproductionline_mtrxalloc FOREIGN KEY (m_productionline_id) REFERENCES adempiere.m_productionline(m_productionline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_transaction mproductionline_ttransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_transaction
    ADD CONSTRAINT mproductionline_ttransaction FOREIGN KEY (m_productionline_id) REFERENCES adempiere.m_productionline(m_productionline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transactionallocation mproductionlineout_mtrxalloc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transactionallocation
    ADD CONSTRAINT mproductionlineout_mtrxalloc FOREIGN KEY (out_m_productionline_id) REFERENCES adempiere.m_productionline(m_productionline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline mproductionplan_line; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT mproductionplan_line FOREIGN KEY (m_productionplan_id) REFERENCES adempiere.m_productionplan(m_productionplan_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_bomproduct mproductop_mbomproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_bomproduct
    ADD CONSTRAINT mproductop_mbomproduct FOREIGN KEY (m_productoperation_id) REFERENCES adempiere.m_productoperation(m_productoperation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_operationresource mproductop_mopresource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_operationresource
    ADD CONSTRAINT mproductop_mopresource FOREIGN KEY (m_productoperation_id) REFERENCES adempiere.m_productoperation(m_productoperation_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request mproductspent_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT mproductspent_rrequest FOREIGN KEY (m_productspent_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction mproductspent_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT mproductspent_rrequestaction FOREIGN KEY (m_productspent_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestupdate mproductspent_rrequestupdate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestupdate
    ADD CONSTRAINT mproductspent_rrequestupdate FOREIGN KEY (m_productspent_id) REFERENCES adempiere.m_product(m_product_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline mpromotion_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT mpromotion_corderline FOREIGN KEY (m_promotion_id) REFERENCES adempiere.m_promotion(m_promotion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotiondistribution mpromotion_mpromotiondistribut; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotiondistribution
    ADD CONSTRAINT mpromotion_mpromotiondistribut FOREIGN KEY (m_promotion_id) REFERENCES adempiere.m_promotion(m_promotion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotionline mpromotion_mpromotionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionline
    ADD CONSTRAINT mpromotion_mpromotionline FOREIGN KEY (m_promotion_id) REFERENCES adempiere.m_promotion(m_promotion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotionprecondition mpromotion_mpromotionprecondit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionprecondition
    ADD CONSTRAINT mpromotion_mpromotionprecondit FOREIGN KEY (m_promotion_id) REFERENCES adempiere.m_promotion(m_promotion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotionreward mpromotion_mpromotionreward; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionreward
    ADD CONSTRAINT mpromotion_mpromotionreward FOREIGN KEY (m_promotion_id) REFERENCES adempiere.m_promotion(m_promotion_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotionreward mpromotiondistribution_mpromot; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionreward
    ADD CONSTRAINT mpromotiondistribution_mpromot FOREIGN KEY (m_promotiondistribution_id) REFERENCES adempiere.m_promotiondistribution(m_promotiondistribution_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotiongroupline mpromotiongroup_mpromotiongrou; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotiongroupline
    ADD CONSTRAINT mpromotiongroup_mpromotiongrou FOREIGN KEY (m_promotiongroup_id) REFERENCES adempiere.m_promotiongroup(m_promotiongroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotionline mpromotiongroup_mpromotionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionline
    ADD CONSTRAINT mpromotiongroup_mpromotionline FOREIGN KEY (m_promotiongroup_id) REFERENCES adempiere.m_promotiongroup(m_promotiongroup_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotiondistribution mpromotionline_mpromotiondistr; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotiondistribution
    ADD CONSTRAINT mpromotionline_mpromotiondistr FOREIGN KEY (m_promotionline_id) REFERENCES adempiere.m_promotionline(m_promotionline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_qualitytest mqualitytest_mproductqualityte; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_qualitytest
    ADD CONSTRAINT mqualitytest_mproductqualityte FOREIGN KEY (m_qualitytest_id) REFERENCES adempiere.m_qualitytest(m_qualitytest_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_qualitytestresult mqualitytest_mqualitytestresul; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_qualitytestresult
    ADD CONSTRAINT mqualitytest_mqualitytestresul FOREIGN KEY (m_qualitytest_id) REFERENCES adempiere.m_qualitytest(m_qualitytest_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_demanddetail mreqline_mdemanddetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_demanddetail
    ADD CONSTRAINT mreqline_mdemanddetail FOREIGN KEY (m_requisitionline_id) REFERENCES adempiere.m_requisitionline(m_requisitionline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenishplanline mrequisition_mreplenishplanlin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenishplanline
    ADD CONSTRAINT mrequisition_mreplenishplanlin FOREIGN KEY (m_requisition_id) REFERENCES adempiere.m_requisition(m_requisition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline mrequisition_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT mrequisition_mrequisitionline FOREIGN KEY (m_requisition_id) REFERENCES adempiere.m_requisition(m_requisition_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp mrequisition_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT mrequisition_ppmrp FOREIGN KEY (m_requisition_id) REFERENCES adempiere.m_requisition(m_requisition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request mrequisition_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT mrequisition_rrequest FOREIGN KEY (m_requisition_id) REFERENCES adempiere.m_requisition(m_requisition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp mrequisitionline_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT mrequisitionline_ppmrp FOREIGN KEY (m_requisitionline_id) REFERENCES adempiere.m_requisitionline(m_requisitionline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request mrequisitionline_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT mrequisitionline_rrequest FOREIGN KEY (m_requisitionline_id) REFERENCES adempiere.m_requisitionline(m_requisitionline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice mrma_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT mrma_cinvoice FOREIGN KEY (m_rma_id) REFERENCES adempiere.m_rma(m_rma_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout mrma_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT mrma_minout FOREIGN KEY (m_rma_id) REFERENCES adempiere.m_rma(m_rma_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_rmaline mrma_mrmaline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rmaline
    ADD CONSTRAINT mrma_mrmaline FOREIGN KEY (m_rma_id) REFERENCES adempiere.m_rma(m_rma_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request mrma_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT mrma_rrequest FOREIGN KEY (m_rma_id) REFERENCES adempiere.m_rma(m_rma_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction mrma_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT mrma_rrequestaction FOREIGN KEY (m_rma_id) REFERENCES adempiere.m_rma(m_rma_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline mrmaline_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT mrmaline_cinvoiceline FOREIGN KEY (m_rmaline_id) REFERENCES adempiere.m_rmaline(m_rmaline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline mrmaline_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT mrmaline_minoutline FOREIGN KEY (m_rmaline_id) REFERENCES adempiere.m_rmaline(m_rmaline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request mrmaline_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT mrmaline_rrequest FOREIGN KEY (m_rmaline_id) REFERENCES adempiere.m_rmaline(m_rmaline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_rma mrmatype_mrma; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rma
    ADD CONSTRAINT mrmatype_mrma FOREIGN KEY (m_rmatype_id) REFERENCES adempiere.m_rmatype(m_rmatype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp_detail mrpdemand_ppmrpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp_detail
    ADD CONSTRAINT mrpdemand_ppmrpdetail FOREIGN KEY (mrp_demand_id) REFERENCES adempiere.pp_mrp(pp_mrp_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp_detail mrpsupply_ppmrpdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp_detail
    ADD CONSTRAINT mrpsupply_ppmrpdetail FOREIGN KEY (mrp_supply_id) REFERENCES adempiere.pp_mrp(pp_mrp_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_attributeset msernoctl_attributeset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_attributeset
    ADD CONSTRAINT msernoctl_attributeset FOREIGN KEY (m_sernoctl_id) REFERENCES adempiere.m_sernoctl(m_sernoctl_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_sernoctlexclude msernoctl_msernoctlexclude; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_sernoctlexclude
    ADD CONSTRAINT msernoctl_msernoctlexclude FOREIGN KEY (m_sernoctl_id) REFERENCES adempiere.m_sernoctl(m_sernoctl_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order mshipper_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT mshipper_corder FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline mshipper_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT mshipper_corderline FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freight mshipper_ddfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freight
    ADD CONSTRAINT mshipper_ddfreight FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_networkdistributionline mshipper_ddnetworkdistribution; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_networkdistributionline
    ADD CONSTRAINT mshipper_ddnetworkdistribution FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order mshipper_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT mshipper_ddorder FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline mshipper_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT mshipper_ddorderline FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_vehicleassignment mshipper_ddvehicleassignment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_vehicleassignment
    ADD CONSTRAINT mshipper_ddvehicleassignment FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_movement mshipper_imovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_movement
    ADD CONSTRAINT mshipper_imovement FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order mshipper_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT mshipper_iorder FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_freight mshipper_mfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_freight
    ADD CONSTRAINT mshipper_mfreight FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout mshipper_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT mshipper_minout FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement mshipper_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT mshipper_mmovement FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_package mshipper_mpackage; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_package
    ADD CONSTRAINT mshipper_mpackage FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order mshipper_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT mshipper_pporder FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound mshipper_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT mshipper_wminoutbound FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline mshipper_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT mshipper_wminoutboundline FOREIGN KEY (m_shipper_id) REFERENCES adempiere.m_shipper(m_shipper_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotionreward mtargetdistribution_mpromotion; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionreward
    ADD CONSTRAINT mtargetdistribution_mpromotion FOREIGN KEY (m_targetdistribution_id) REFERENCES adempiere.m_promotiondistribution(m_promotiondistribution_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_transaction mtransaction_ttransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_transaction
    ADD CONSTRAINT mtransaction_ttransaction FOREIGN KEY (m_transaction_id) REFERENCES adempiere.m_transaction(m_transaction_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transactionallocation mtransactionout_mtrxalloc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transactionallocation
    ADD CONSTRAINT mtransactionout_mtrxalloc FOREIGN KEY (out_m_transaction_id) REFERENCES adempiere.m_transaction(m_transaction_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transactionallocation mttransaction_mtrxalloc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transactionallocation
    ADD CONSTRAINT mttransaction_mtrxalloc FOREIGN KEY (m_transaction_id) REFERENCES adempiere.m_transaction(m_transaction_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_orginfo mwarehouse_adorginfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orginfo
    ADD CONSTRAINT mwarehouse_adorginfo FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_edi mwarehouse_cbpedi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_edi
    ADD CONSTRAINT mwarehouse_cbpedi FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order mwarehouse_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT mwarehouse_corder FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline mwarehouse_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT mwarehouse_corderline FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_pos mwarehouse_cpos; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_pos
    ADD CONSTRAINT mwarehouse_cpos FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project mwarehouse_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project
    ADD CONSTRAINT mwarehouse_cproject FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory mwarehouse_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT mwarehouse_csaleshistory FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_networkdistributionline mwarehouse_ddnetworkdistributi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_networkdistributionline
    ADD CONSTRAINT mwarehouse_ddnetworkdistributi FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order mwarehouse_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT mwarehouse_ddorder FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_forecast mwarehouse_iforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_forecast
    ADD CONSTRAINT mwarehouse_iforecast FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_inventory mwarehouse_iinventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_inventory
    ADD CONSTRAINT mwarehouse_iinventory FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_order mwarehouse_iorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_order
    ADD CONSTRAINT mwarehouse_iorder FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_productplanning mwarehouse_iproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_productplanning
    ADD CONSTRAINT mwarehouse_iproductplanning FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory mwarehouse_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT mwarehouse_isaleshistory FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_cost mwarehouse_mcost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_cost
    ADD CONSTRAINT mwarehouse_mcost FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail mwarehouse_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT mwarehouse_mcostdetail FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_edi mwarehouse_medi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_edi
    ADD CONSTRAINT mwarehouse_medi FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecastline mwarehouse_mforecastline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecastline
    ADD CONSTRAINT mwarehouse_mforecastline FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout mwarehouse_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT mwarehouse_minout FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventory mwarehouse_minventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT mwarehouse_minventory FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_perpetualinv mwarehouse_mperpetualinv; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_perpetualinv
    ADD CONSTRAINT mwarehouse_mperpetualinv FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_promotionprecondition mwarehouse_mpromotionprecondit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_promotionprecondition
    ADD CONSTRAINT mwarehouse_mpromotionprecondit FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisition mwarehouse_mrequisition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisition
    ADD CONSTRAINT mwarehouse_mrequisition FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector mwarehouse_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT mwarehouse_ppcostcollector FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrun mwarehouse_ppforecastrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrun
    ADD CONSTRAINT mwarehouse_ppforecastrun FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrunmaster mwarehouse_ppforecastrunmaster; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunmaster
    ADD CONSTRAINT mwarehouse_ppforecastrunmaster FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp mwarehouse_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT mwarehouse_ppmrp FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order mwarehouse_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT mwarehouse_pporder FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bomline mwarehouse_pporderbomline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bomline
    ADD CONSTRAINT mwarehouse_pporderbomline FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_planning mwarehouse_ppproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_planning
    ADD CONSTRAINT mwarehouse_ppproductplanning FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_resource mwarehouse_sresource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_resource
    ADD CONSTRAINT mwarehouse_sresource FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpense mwarehouse_stimeexpense; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpense
    ADD CONSTRAINT mwarehouse_stimeexpense FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_inventoryvalue mwarehouse_tinventoryvalue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_inventoryvalue
    ADD CONSTRAINT mwarehouse_tinventoryvalue FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_replenish mwarehouse_treplenish; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_replenish
    ADD CONSTRAINT mwarehouse_treplenish FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal mwarehouse_uposterminal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT mwarehouse_uposterminal FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_area mwarehouse_wmarea; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_area
    ADD CONSTRAINT mwarehouse_wmarea FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound mwarehouse_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT mwarehouse_wminoutbound FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_strategy mwarehouse_wmstrategy; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_strategy
    ADD CONSTRAINT mwarehouse_wmstrategy FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_store mwarehouse_wstore; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_store
    ADD CONSTRAINT mwarehouse_wstore FOREIGN KEY (m_warehouse_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_networkdistributionline mwarehousesource_ddnetworkdist; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_networkdistributionline
    ADD CONSTRAINT mwarehousesource_ddnetworkdist FOREIGN KEY (m_warehousesource_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_replenish mwarehousesource_mreplenish; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_replenish
    ADD CONSTRAINT mwarehousesource_mreplenish FOREIGN KEY (m_warehousesource_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_warehouse mwarehousesource_mwarehouse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_warehouse
    ADD CONSTRAINT mwarehousesource_mwarehouse FOREIGN KEY (m_warehousesource_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrun mwarehousesource_ppforecastrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrun
    ADD CONSTRAINT mwarehousesource_ppforecastrun FOREIGN KEY (m_warehousesource_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: t_replenish mwarehousesource_treplenish; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.t_replenish
    ADD CONSTRAINT mwarehousesource_treplenish FOREIGN KEY (m_warehousesource_id) REFERENCES adempiere.m_warehouse(m_warehouse_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_documentstatus nameprintcolor_padocumentstatu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_documentstatus
    ADD CONSTRAINT nameprintcolor_padocumentstatu FOREIGN KEY (name_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_documentstatus nameprintfont_padocumentstatus; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_documentstatus
    ADD CONSTRAINT nameprintfont_padocumentstatus FOREIGN KEY (name_printfont_id) REFERENCES adempiere.ad_printfont(ad_printfont_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_employee nationality_hremployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_employee
    ADD CONSTRAINT nationality_hremployee FOREIGN KEY (nationality_id) REFERENCES adempiere.c_country(c_country_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_job nextjob_hrjob; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_job
    ADD CONSTRAINT nextjob_hrjob FOREIGN KEY (next_job_id) REFERENCES adempiere.hr_job(hr_job_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_status nextstatus_rstatus; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_status
    ADD CONSTRAINT nextstatus_rstatus FOREIGN KEY (next_status_id) REFERENCES adempiere.r_status(r_status_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_invoice nproduct_iinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_invoice
    ADD CONSTRAINT nproduct_iinvoice FOREIGN KEY (m_product_id) REFERENCES adempiere.m_product(m_product_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_documentstatus numberprintcolor_padocumentsta; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_documentstatus
    ADD CONSTRAINT numberprintcolor_padocumentsta FOREIGN KEY (number_printcolor_id) REFERENCES adempiere.ad_printcolor(ad_printcolor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_documentstatus numberprintfont_padocumentstat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_documentstatus
    ADD CONSTRAINT numberprintfont_padocumentstat FOREIGN KEY (number_printfont_id) REFERENCES adempiere.ad_printfont(ad_printfont_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_pos oskkeylayout_cpos; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_pos
    ADD CONSTRAINT oskkeylayout_cpos FOREIGN KEY (osk_keylayout_id) REFERENCES adempiere.c_poskeylayout(c_poskeylayout_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_pos osnpkeylayout_cpos; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_pos
    ADD CONSTRAINT osnpkeylayout_cpos FOREIGN KEY (osnp_keylayout_id) REFERENCES adempiere.c_poskeylayout(c_poskeylayout_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource pa_reportcolumn_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT pa_reportcolumn_pareportsource FOREIGN KEY (pa_reportcolumn_id) REFERENCES adempiere.pa_reportcolumn(pa_reportcolumn_id);


--
-- Name: pa_benchmarkdata pabenchmark_pabenchmarkdata; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_benchmarkdata
    ADD CONSTRAINT pabenchmark_pabenchmarkdata FOREIGN KEY (pa_benchmark_id) REFERENCES adempiere.pa_benchmark(pa_benchmark_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_measure pabenchmark_pameasure; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_measure
    ADD CONSTRAINT pabenchmark_pameasure FOREIGN KEY (pa_benchmark_id) REFERENCES adempiere.pa_benchmark(pa_benchmark_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_goal pacolorschema_pagoal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goal
    ADD CONSTRAINT pacolorschema_pagoal FOREIGN KEY (pa_colorschema_id) REFERENCES adempiere.pa_colorschema(pa_colorschema_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_dashboardcontent_trl padashboardcontent_padashboard; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_dashboardcontent_trl
    ADD CONSTRAINT padashboardcontent_padashboard FOREIGN KEY (pa_dashboardcontent_id) REFERENCES adempiere.pa_dashboardcontent(pa_dashboardcontent_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_orginfo pagoal_adorginfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_orginfo
    ADD CONSTRAINT pagoal_adorginfo FOREIGN KEY (pa_goal_id) REFERENCES adempiere.pa_goal(pa_goal_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_dashboardcontent pagoal_padashboardcontent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_dashboardcontent
    ADD CONSTRAINT pagoal_padashboardcontent FOREIGN KEY (pa_goal_id) REFERENCES adempiere.pa_goal(pa_goal_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_goalrestriction pagoal_pagoalrestriction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goalrestriction
    ADD CONSTRAINT pagoal_pagoalrestriction FOREIGN KEY (pa_goal_id) REFERENCES adempiere.pa_goal(pa_goal_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_goal pagoalparent_pagoal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goal
    ADD CONSTRAINT pagoalparent_pagoal FOREIGN KEY (pa_goalparent_id) REFERENCES adempiere.pa_goal(pa_goal_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_measure pahierarchy_pameasure; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_measure
    ADD CONSTRAINT pahierarchy_pameasure FOREIGN KEY (pa_hierarchy_id) REFERENCES adempiere.pa_hierarchy(pa_hierarchy_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_achievement pameasure_paachievement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_achievement
    ADD CONSTRAINT pameasure_paachievement FOREIGN KEY (pa_measure_id) REFERENCES adempiere.pa_measure(pa_measure_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_goal pameasure_pagoal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_goal
    ADD CONSTRAINT pameasure_pagoal FOREIGN KEY (pa_measure_id) REFERENCES adempiere.pa_measure(pa_measure_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_measure pameasurecalc_pameasure; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_measure
    ADD CONSTRAINT pameasurecalc_pameasure FOREIGN KEY (pa_measurecalc_id) REFERENCES adempiere.pa_measurecalc(pa_measurecalc_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_ratioelement pameasurecalc_paratioelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_ratioelement
    ADD CONSTRAINT pameasurecalc_paratioelement FOREIGN KEY (pa_measurecalc_id) REFERENCES adempiere.pa_measurecalc(pa_measurecalc_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_measure paratio_pameasure; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_measure
    ADD CONSTRAINT paratio_pameasure FOREIGN KEY (pa_ratio_id) REFERENCES adempiere.pa_ratio(pa_ratio_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_ratioelement paratio_paratioelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_ratioelement
    ADD CONSTRAINT paratio_paratioelement FOREIGN KEY (pa_ratio_id) REFERENCES adempiere.pa_ratio(pa_ratio_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_ratioelement paratioused_paratioelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_ratioelement
    ADD CONSTRAINT paratioused_paratioelement FOREIGN KEY (pa_ratioused_id) REFERENCES adempiere.pa_ratio(pa_ratio_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab parentcolumn_adtab; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab
    ADD CONSTRAINT parentcolumn_adtab FOREIGN KEY (parent_column_id) REFERENCES adempiere.ad_column(ad_column_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_webmenu parentmenu_uwebmenu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_webmenu
    ADD CONSTRAINT parentmenu_uwebmenu FOREIGN KEY (parentmenu_id) REFERENCES adempiere.u_webmenu(u_webmenu_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_report pareport_columnset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_report
    ADD CONSTRAINT pareport_columnset FOREIGN KEY (pa_reportcolumnset_id) REFERENCES adempiere.pa_reportcolumnset(pa_reportcolumnset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_report pareport_lineset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_report
    ADD CONSTRAINT pareport_lineset FOREIGN KEY (pa_reportlineset_id) REFERENCES adempiere.pa_reportlineset(pa_reportlineset_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn pareportcolumn_oper1; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT pareportcolumn_oper1 FOREIGN KEY (oper_1_id) REFERENCES adempiere.pa_reportcolumn(pa_reportcolumn_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn pareportcolumn_oper2; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT pareportcolumn_oper2 FOREIGN KEY (oper_2_id) REFERENCES adempiere.pa_reportcolumn(pa_reportcolumn_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource pareportcolumn_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT pareportcolumn_pareportsource FOREIGN KEY (pa_reportcolumn_id) REFERENCES adempiere.pa_reportcolumn(pa_reportcolumn_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn pareportcolumnset_column; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT pareportcolumnset_column FOREIGN KEY (pa_reportcolumnset_id) REFERENCES adempiere.pa_reportcolumnset(pa_reportcolumnset_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary pareportcube_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT pareportcube_factacctsummary FOREIGN KEY (pa_reportcube_id) REFERENCES adempiere.pa_reportcube(pa_reportcube_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_report pareportcube_pareport; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_report
    ADD CONSTRAINT pareportcube_pareport FOREIGN KEY (pa_reportcube_id) REFERENCES adempiere.pa_reportcube(pa_reportcube_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_reportline pareportline_ireportline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_reportline
    ADD CONSTRAINT pareportline_ireportline FOREIGN KEY (pa_reportline_id) REFERENCES adempiere.pa_reportline(pa_reportline_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportline pareportline_oper1; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportline
    ADD CONSTRAINT pareportline_oper1 FOREIGN KEY (oper_1_id) REFERENCES adempiere.pa_reportline(pa_reportline_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportline pareportline_oper2; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportline
    ADD CONSTRAINT pareportline_oper2 FOREIGN KEY (oper_2_id) REFERENCES adempiere.pa_reportline(pa_reportline_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportline pareportline_parent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportline
    ADD CONSTRAINT pareportline_parent FOREIGN KEY (parent_id) REFERENCES adempiere.pa_reportline(pa_reportline_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource pareportline_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT pareportline_pareportsource FOREIGN KEY (pa_reportline_id) REFERENCES adempiere.pa_reportline(pa_reportline_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_reportline pareportlineset_ireportline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_reportline
    ADD CONSTRAINT pareportlineset_ireportline FOREIGN KEY (pa_reportlineset_id) REFERENCES adempiere.pa_reportlineset(pa_reportlineset_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportline pareportlineset_line; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportline
    ADD CONSTRAINT pareportlineset_line FOREIGN KEY (pa_reportlineset_id) REFERENCES adempiere.pa_reportlineset(pa_reportlineset_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_reportline pareportsource_ireportline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_reportline
    ADD CONSTRAINT pareportsource_ireportline FOREIGN KEY (pa_reportsource_id) REFERENCES adempiere.pa_reportsource(pa_reportsource_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_sla_goal paslacriteria_paslagoal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_sla_goal
    ADD CONSTRAINT paslacriteria_paslagoal FOREIGN KEY (pa_sla_criteria_id) REFERENCES adempiere.pa_sla_criteria(pa_sla_criteria_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_sla_measure paslagoal_paslameasure; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_sla_measure
    ADD CONSTRAINT paslagoal_paslameasure FOREIGN KEY (pa_sla_goal_id) REFERENCES adempiere.pa_sla_goal(pa_sla_goal_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default paveragecostvariance_cacctsche; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT paveragecostvariance_cacctsche FOREIGN KEY (p_averagecostvariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct paveragecostvariance_mproducta; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT paveragecostvariance_mproducta FOREIGN KEY (p_averagecostvariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct paveragecostvariance_mproductc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT paveragecostvariance_mproductc FOREIGN KEY (p_averagecostvariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default pburden_cacctschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT pburden_cacctschemadefault FOREIGN KEY (p_burden_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct pburden_mproductacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT pburden_mproductacct FOREIGN KEY (p_burden_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct pburden_mproductcategoryacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT pburden_mproductcategoryacct FOREIGN KEY (p_burden_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default pcostadjustment_cacctschemadef; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT pcostadjustment_cacctschemadef FOREIGN KEY (p_costadjustment_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct pcostadjustment_mproductacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT pcostadjustment_mproductacct FOREIGN KEY (p_costadjustment_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct pcostadjustment_mproductcatego; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT pcostadjustment_mproductcatego FOREIGN KEY (p_costadjustment_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default pcostofproduction_cacctschemad; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT pcostofproduction_cacctschemad FOREIGN KEY (p_costofproduction_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct pcostofproduction_mproductacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT pcostofproduction_mproductacct FOREIGN KEY (p_costofproduction_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct pcostofproduction_mproductcate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT pcostofproduction_mproductcate FOREIGN KEY (p_costofproduction_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default pfloorstock_cacctschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT pfloorstock_cacctschemadefault FOREIGN KEY (p_floorstock_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct pfloorstock_mproductacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT pfloorstock_mproductacct FOREIGN KEY (p_floorstock_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct pfloorstock_mproductcategoryac; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT pfloorstock_mproductcategoryac FOREIGN KEY (p_floorstock_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default pinventoryclearing_cacctschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT pinventoryclearing_cacctschema FOREIGN KEY (p_inventoryclearing_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct pinventoryclearing_mproductacc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT pinventoryclearing_mproductacc FOREIGN KEY (p_inventoryclearing_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct pinventoryclearing_mproductcat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT pinventoryclearing_mproductcat FOREIGN KEY (p_inventoryclearing_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default plabor_cacctschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT plabor_cacctschemadefault FOREIGN KEY (p_labor_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct plabor_mproductacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT plabor_mproductacct FOREIGN KEY (p_labor_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct plabor_mproductcategoryacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT plabor_mproductcategoryacct FOREIGN KEY (p_labor_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_productplanning planner_iproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_productplanning
    ADD CONSTRAINT planner_iproductplanning FOREIGN KEY (planner_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp planner_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT planner_ppmrp FOREIGN KEY (planner_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order planner_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT planner_pporder FOREIGN KEY (planner_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_planning planner_ppproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_planning
    ADD CONSTRAINT planner_ppproductplanning FOREIGN KEY (planner_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default pmethodchangevariance_cacctsch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT pmethodchangevariance_cacctsch FOREIGN KEY (p_methodchangevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct pmethodchangevariance_mprodcat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT pmethodchangevariance_mprodcat FOREIGN KEY (p_methodchangevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct pmethodchangevariance_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT pmethodchangevariance_mproduct FOREIGN KEY (p_methodchangevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default pmixvariance_cacctschemadefaul; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT pmixvariance_cacctschemadefaul FOREIGN KEY (p_mixvariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct pmixvariance_mproductacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT pmixvariance_mproductacct FOREIGN KEY (p_mixvariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct pmixvariance_mproductcategorya; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT pmixvariance_mproductcategorya FOREIGN KEY (p_mixvariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal popricelist_uposterminal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT popricelist_uposterminal FOREIGN KEY (po_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default poutsideprocessing_cacctschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT poutsideprocessing_cacctschema FOREIGN KEY (p_outsideprocessing_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct poutsideprocessing_mproductacc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT poutsideprocessing_mproductacc FOREIGN KEY (p_outsideprocessing_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct poutsideprocessing_mproductcat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT poutsideprocessing_mproductcat FOREIGN KEY (p_outsideprocessing_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default poverhead_cacctschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT poverhead_cacctschemadefault FOREIGN KEY (p_overhead_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct poverhead_mproductacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT poverhead_mproductacct FOREIGN KEY (p_overhead_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct poverhead_mproductcategoryacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT poverhead_mproductcategoryacct FOREIGN KEY (p_overhead_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_searchdefinition powindow_adsearchdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_searchdefinition
    ADD CONSTRAINT powindow_adsearchdefinition FOREIGN KEY (po_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecast ppcalendar_mforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecast
    ADD CONSTRAINT ppcalendar_mforecast FOREIGN KEY (pp_calendar_id) REFERENCES adempiere.pp_calendar(pp_calendar_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrun ppcalendar_ppforecastrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrun
    ADD CONSTRAINT ppcalendar_ppforecastrun FOREIGN KEY (pp_calendar_id) REFERENCES adempiere.pp_calendar(pp_calendar_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_perioddefinition ppcalendar_ppperioddefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_perioddefinition
    ADD CONSTRAINT ppcalendar_ppperioddefinition FOREIGN KEY (pp_calendar_id) REFERENCES adempiere.pp_calendar(pp_calendar_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline ppcostcollector_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT ppcostcollector_corderline FOREIGN KEY (pp_cost_collector_id) REFERENCES adempiere.pp_cost_collector(pp_cost_collector_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement ppcostcollector_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT ppcostcollector_hrmovement FOREIGN KEY (pp_cost_collector_id) REFERENCES adempiere.pp_cost_collector(pp_cost_collector_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_costdetail ppcostcollector_mcostdetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_costdetail
    ADD CONSTRAINT ppcostcollector_mcostdetail FOREIGN KEY (pp_cost_collector_id) REFERENCES adempiere.pp_cost_collector(pp_cost_collector_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_transaction ppcostcollector_mtransaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_transaction
    ADD CONSTRAINT ppcostcollector_mtransaction FOREIGN KEY (pp_cost_collector_id) REFERENCES adempiere.pp_cost_collector(pp_cost_collector_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collectorma ppcostcollector_ppccma; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collectorma
    ADD CONSTRAINT ppcostcollector_ppccma FOREIGN KEY (pp_cost_collector_id) REFERENCES adempiere.pp_cost_collector(pp_cost_collector_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request ppcostcollector_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT ppcostcollector_rrequest FOREIGN KEY (pp_cost_collector_id) REFERENCES adempiere.pp_cost_collector(pp_cost_collector_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastdefinitionline ppforecastdefinition_ppfdline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastdefinitionline
    ADD CONSTRAINT ppforecastdefinition_ppfdline FOREIGN KEY (pp_forecastdefinition_id) REFERENCES adempiere.pp_forecastdefinition(pp_forecastdefinition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrun ppforecastdefinition_ppfrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrun
    ADD CONSTRAINT ppforecastdefinition_ppfrun FOREIGN KEY (pp_forecastdefinition_id) REFERENCES adempiere.pp_forecastdefinition(pp_forecastdefinition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrunmaster ppforecastdefinitionline_ppfor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunmaster
    ADD CONSTRAINT ppforecastdefinitionline_ppfor FOREIGN KEY (pp_forecastdefinitionline_id) REFERENCES adempiere.pp_forecastdefinitionline(pp_forecastdefinitionline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrun ppforecastrule_ppforecastrun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrun
    ADD CONSTRAINT ppforecastrule_ppforecastrun FOREIGN KEY (pp_forecastrule_id) REFERENCES adempiere.pp_forecastrule(pp_forecastrule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrundetail ppforecastrun_ppforecastrundet; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrundetail
    ADD CONSTRAINT ppforecastrun_ppforecastrundet FOREIGN KEY (pp_forecastrun_id) REFERENCES adempiere.pp_forecastrun(pp_forecastrun_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrunline ppforecastrun_ppforecastrunlin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunline
    ADD CONSTRAINT ppforecastrun_ppforecastrunlin FOREIGN KEY (pp_forecastrun_id) REFERENCES adempiere.pp_forecastrun(pp_forecastrun_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrunmaster ppforecastrun_ppforecastrunmas; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunmaster
    ADD CONSTRAINT ppforecastrun_ppforecastrunmas FOREIGN KEY (pp_forecastrun_id) REFERENCES adempiere.pp_forecastrun(pp_forecastrun_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrunresult ppforecastrun_ppforecastrunres; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunresult
    ADD CONSTRAINT ppforecastrun_ppforecastrunres FOREIGN KEY (pp_forecastrun_id) REFERENCES adempiere.pp_forecastrun(pp_forecastrun_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrunline ppforecastrundetail_ppforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunline
    ADD CONSTRAINT ppforecastrundetail_ppforecast FOREIGN KEY (pp_forecastrundetail_id) REFERENCES adempiere.pp_forecastrundetail(pp_forecastrundetail_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrunresult ppforecastrunmaster_ppforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunresult
    ADD CONSTRAINT ppforecastrunmaster_ppforecast FOREIGN KEY (pp_forecastrunmaster_id) REFERENCES adempiere.pp_forecastrunmaster(pp_forecastrunmaster_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrundetail ppforecastrunmaster_ppfrundet; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrundetail
    ADD CONSTRAINT ppforecastrunmaster_ppfrundet FOREIGN KEY (pp_forecastrunmaster_id) REFERENCES adempiere.pp_forecastrunmaster(pp_forecastrunmaster_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline ppmrp_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT ppmrp_wminoutboundline FOREIGN KEY (pp_mrp_id) REFERENCES adempiere.pp_mrp(pp_mrp_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freight pporder_ddfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freight
    ADD CONSTRAINT pporder_ddfreight FOREIGN KEY (pp_order_id) REFERENCES adempiere.pp_order(pp_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector pporder_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT pporder_ppcostcollector FOREIGN KEY (pp_order_id) REFERENCES adempiere.pp_order(pp_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp pporder_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT pporder_ppmrp FOREIGN KEY (pp_order_id) REFERENCES adempiere.pp_order(pp_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bom pporder_pporderbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bom
    ADD CONSTRAINT pporder_pporderbom FOREIGN KEY (pp_order_id) REFERENCES adempiere.pp_order(pp_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bomline pporder_pporderbomline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bomline
    ADD CONSTRAINT pporder_pporderbomline FOREIGN KEY (pp_order_id) REFERENCES adempiere.pp_order(pp_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_cost pporder_ppordercost; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_cost
    ADD CONSTRAINT pporder_ppordercost FOREIGN KEY (pp_order_id) REFERENCES adempiere.pp_order(pp_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node pporder_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT pporder_ppordernode FOREIGN KEY (pp_order_id) REFERENCES adempiere.pp_order(pp_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node_asset pporder_ppordernodeasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node_asset
    ADD CONSTRAINT pporder_ppordernodeasset FOREIGN KEY (pp_order_id) REFERENCES adempiere.pp_order(pp_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_nodenext pporder_ppordernodenext; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_nodenext
    ADD CONSTRAINT pporder_ppordernodenext FOREIGN KEY (pp_order_id) REFERENCES adempiere.pp_order(pp_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node_product pporder_ppordernodeproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node_product
    ADD CONSTRAINT pporder_ppordernodeproduct FOREIGN KEY (pp_order_id) REFERENCES adempiere.pp_order(pp_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_workflow pporder_pporderworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_workflow
    ADD CONSTRAINT pporder_pporderworkflow FOREIGN KEY (pp_order_id) REFERENCES adempiere.pp_order(pp_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request pporder_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT pporder_rrequest FOREIGN KEY (pp_order_id) REFERENCES adempiere.pp_order(pp_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline pporder_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT pporder_wminoutboundline FOREIGN KEY (pp_order_id) REFERENCES adempiere.pp_order(pp_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bomline pporderbom_pporderbomline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bomline
    ADD CONSTRAINT pporderbom_pporderbomline FOREIGN KEY (pp_order_bom_id) REFERENCES adempiere.pp_order_bom(pp_order_bom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bom_trl pporderbom_pporderbomtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bom_trl
    ADD CONSTRAINT pporderbom_pporderbomtrl FOREIGN KEY (pp_order_bom_id) REFERENCES adempiere.pp_order_bom(pp_order_bom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector pporderbomline_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT pporderbomline_ppcostcollector FOREIGN KEY (pp_order_bomline_id) REFERENCES adempiere.pp_order_bomline(pp_order_bomline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp pporderbomline_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT pporderbomline_ppmrp FOREIGN KEY (pp_order_bomline_id) REFERENCES adempiere.pp_order_bomline(pp_order_bomline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_bomline_trl pporderbomline_pporderbomlinet; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_bomline_trl
    ADD CONSTRAINT pporderbomline_pporderbomlinet FOREIGN KEY (pp_order_bomline_id) REFERENCES adempiere.pp_order_bomline(pp_order_bomline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline pporderbomline_wminoutboundlin; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT pporderbomline_wminoutboundlin FOREIGN KEY (pp_order_bomline_id) REFERENCES adempiere.pp_order_bomline(pp_order_bomline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_nodenext ppordernext_ppordernodenext; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_nodenext
    ADD CONSTRAINT ppordernext_ppordernodenext FOREIGN KEY (pp_order_next_id) REFERENCES adempiere.pp_order_node(pp_order_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector ppordernode_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT ppordernode_ppcostcollector FOREIGN KEY (pp_order_node_id) REFERENCES adempiere.pp_order_node(pp_order_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node_asset ppordernode_ppordernodeasset; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node_asset
    ADD CONSTRAINT ppordernode_ppordernodeasset FOREIGN KEY (pp_order_node_id) REFERENCES adempiere.pp_order_node(pp_order_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_nodenext ppordernode_ppordernodenext; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_nodenext
    ADD CONSTRAINT ppordernode_ppordernodenext FOREIGN KEY (pp_order_node_id) REFERENCES adempiere.pp_order_node(pp_order_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node_product ppordernode_ppordernodeproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node_product
    ADD CONSTRAINT ppordernode_ppordernodeproduct FOREIGN KEY (pp_order_node_id) REFERENCES adempiere.pp_order_node(pp_order_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node_trl ppordernode_ppordernodetrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node_trl
    ADD CONSTRAINT ppordernode_ppordernodetrl FOREIGN KEY (pp_order_node_id) REFERENCES adempiere.pp_order_node(pp_order_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_workflow ppordernode_pporderworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_workflow
    ADD CONSTRAINT ppordernode_pporderworkflow FOREIGN KEY (pp_order_node_id) REFERENCES adempiere.pp_order_node(pp_order_node_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector pporderworkflow_ppcostcollecto; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT pporderworkflow_ppcostcollecto FOREIGN KEY (pp_order_workflow_id) REFERENCES adempiere.pp_order_workflow(pp_order_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node pporderworkflow_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT pporderworkflow_ppordernode FOREIGN KEY (pp_order_workflow_id) REFERENCES adempiere.pp_order_workflow(pp_order_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node_asset pporderworkflow_ppordernodeass; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node_asset
    ADD CONSTRAINT pporderworkflow_ppordernodeass FOREIGN KEY (pp_order_workflow_id) REFERENCES adempiere.pp_order_workflow(pp_order_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node_product pporderworkflow_ppordernodepro; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node_product
    ADD CONSTRAINT pporderworkflow_ppordernodepro FOREIGN KEY (pp_order_workflow_id) REFERENCES adempiere.pp_order_workflow(pp_order_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_workflow_trl pporderworkflow_pporderworkflo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_workflow_trl
    ADD CONSTRAINT pporderworkflow_pporderworkflo FOREIGN KEY (pp_order_workflow_id) REFERENCES adempiere.pp_order_workflow(pp_order_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecastline ppperiod_mforecastline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecastline
    ADD CONSTRAINT ppperiod_mforecastline FOREIGN KEY (pp_period_id) REFERENCES adempiere.pp_period(pp_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrundetail ppperiod_ppforecastrundetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrundetail
    ADD CONSTRAINT ppperiod_ppforecastrundetail FOREIGN KEY (pp_period_id) REFERENCES adempiere.pp_period(pp_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrunline ppperiod_ppforecastrunline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunline
    ADD CONSTRAINT ppperiod_ppforecastrunline FOREIGN KEY (pp_period_id) REFERENCES adempiere.pp_period(pp_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrunresult ppperiod_ppforecastrunresult; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrunresult
    ADD CONSTRAINT ppperiod_ppforecastrunresult FOREIGN KEY (pp_period_id) REFERENCES adempiere.pp_period(pp_period_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecast ppperioddefinition_mforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecast
    ADD CONSTRAINT ppperioddefinition_mforecast FOREIGN KEY (pp_perioddefinition_id) REFERENCES adempiere.pp_perioddefinition(pp_perioddefinition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrun ppperioddefinition_ppforecastr; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrun
    ADD CONSTRAINT ppperioddefinition_ppforecastr FOREIGN KEY (pp_perioddefinition_id) REFERENCES adempiere.pp_perioddefinition(pp_perioddefinition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_period ppperioddefinition_ppperiod; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_period
    ADD CONSTRAINT ppperioddefinition_ppperiod FOREIGN KEY (pp_perioddefinition_id) REFERENCES adempiere.pp_perioddefinition(pp_perioddefinition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product_bom ppproductbom_iproductbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product_bom
    ADD CONSTRAINT ppproductbom_iproductbom FOREIGN KEY (pp_product_bom_id) REFERENCES adempiere.pp_product_bom(pp_product_bom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_productplanning ppproductbom_iproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_productplanning
    ADD CONSTRAINT ppproductbom_iproductplanning FOREIGN KEY (pp_product_bom_id) REFERENCES adempiere.pp_product_bom(pp_product_bom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_changerequest ppproductbom_mchangerequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_changerequest
    ADD CONSTRAINT ppproductbom_mchangerequest FOREIGN KEY (pp_product_bom_id) REFERENCES adempiere.pp_product_bom(pp_product_bom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order ppproductbom_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT ppproductbom_pporder FOREIGN KEY (pp_product_bom_id) REFERENCES adempiere.pp_product_bom(pp_product_bom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_bomline ppproductbom_ppproductbomline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bomline
    ADD CONSTRAINT ppproductbom_ppproductbomline FOREIGN KEY (pp_product_bom_id) REFERENCES adempiere.pp_product_bom(pp_product_bom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_bom_trl ppproductbom_ppproductbomtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bom_trl
    ADD CONSTRAINT ppproductbom_ppproductbomtrl FOREIGN KEY (pp_product_bom_id) REFERENCES adempiere.pp_product_bom(pp_product_bom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_planning ppproductbom_ppproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_planning
    ADD CONSTRAINT ppproductbom_ppproductplanning FOREIGN KEY (pp_product_bom_id) REFERENCES adempiere.pp_product_bom(pp_product_bom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: qm_specification ppproductbom_qmspecification; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.qm_specification
    ADD CONSTRAINT ppproductbom_qmspecification FOREIGN KEY (pp_product_bom_id) REFERENCES adempiere.pp_product_bom(pp_product_bom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_group ppproductbom_rgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_group
    ADD CONSTRAINT ppproductbom_rgroup FOREIGN KEY (pp_product_bom_id) REFERENCES adempiere.pp_product_bom(pp_product_bom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_product_bom ppproductbomline_iproductbom; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_product_bom
    ADD CONSTRAINT ppproductbomline_iproductbom FOREIGN KEY (pp_product_bomline_id) REFERENCES adempiere.pp_product_bomline(pp_product_bomline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_bomline_trl ppproductbomline_ppproductboml; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_bomline_trl
    ADD CONSTRAINT ppproductbomline_ppproductboml FOREIGN KEY (pp_product_bomline_id) REFERENCES adempiere.pp_product_bomline(pp_product_bomline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_productplanning ppproductplanning_iproductplan; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_productplanning
    ADD CONSTRAINT ppproductplanning_iproductplan FOREIGN KEY (pp_product_planning_id) REFERENCES adempiere.pp_product_planning(pp_product_planning_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default pratevariance_cacctschemadefau; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT pratevariance_cacctschemadefau FOREIGN KEY (p_ratevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct pratevariance_mproductacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT pratevariance_mproductacct FOREIGN KEY (p_ratevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct pratevariance_mproductcategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT pratevariance_mproductcategory FOREIGN KEY (p_ratevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default pscrap_cacctschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT pscrap_cacctschemadefault FOREIGN KEY (p_scrap_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct pscrap_mproductacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT pscrap_mproductacct FOREIGN KEY (p_scrap_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct pscrap_mproductcategoryacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT pscrap_mproductcategoryacct FOREIGN KEY (p_scrap_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default pusagevariance_cacctschemadefa; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT pusagevariance_cacctschemadefa FOREIGN KEY (p_usagevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct pusagevariance_mproductacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT pusagevariance_mproductacct FOREIGN KEY (p_usagevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct pusagevariance_mproductcategor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT pusagevariance_mproductcategor FOREIGN KEY (p_usagevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default pwip_cacctschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT pwip_cacctschemadefault FOREIGN KEY (p_wip_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct pwip_mproductacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT pwip_mproductacct FOREIGN KEY (p_wip_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct pwip_mproductcategoryacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT pwip_mproductcategoryacct FOREIGN KEY (p_wip_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: qm_specificationline qmspecification_qmspecificatio; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.qm_specificationline
    ADD CONSTRAINT qmspecification_qmspecificatio FOREIGN KEY (qm_specification_id) REFERENCES adempiere.qm_specification(qm_specification_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_categoryupdates rcategory_rcategoryupdates; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_categoryupdates
    ADD CONSTRAINT rcategory_rcategoryupdates FOREIGN KEY (r_category_id) REFERENCES adempiere.r_category(r_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request rcategory_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT rcategory_rrequest FOREIGN KEY (r_category_id) REFERENCES adempiere.r_category(r_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction rcategory_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT rcategory_rrequestaction FOREIGN KEY (r_category_id) REFERENCES adempiere.r_category(r_category_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobapplication recruitedemployee_hrjobapplica; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobapplication
    ADD CONSTRAINT recruitedemployee_hrjobapplica FOREIGN KEY (recruitedemployee_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_table ref_tableclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_table
    ADD CONSTRAINT ref_tableclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ref_table ref_tableorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ref_table
    ADD CONSTRAINT ref_tableorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobapplication refbpartner_hrjobapplication; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobapplication
    ADD CONSTRAINT refbpartner_hrjobapplication FOREIGN KEY (ref_bpartner_id) REFERENCES adempiere.c_bpartner(c_bpartner_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_forecastrun refdefinitionperiod_ppforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_forecastrun
    ADD CONSTRAINT refdefinitionperiod_ppforecast FOREIGN KEY (ref_definitionperiod_id) REFERENCES adempiere.pp_perioddefinition(pp_perioddefinition_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_reference referenceclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reference
    ADD CONSTRAINT referenceclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_reference referenceorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_reference
    ADD CONSTRAINT referenceorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order reforder_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT reforder_ddorder FOREIGN KEY (ref_order_id) REFERENCES adempiere.dd_order(dd_order_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment refpayment_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT refpayment_cpayment FOREIGN KEY (ref_payment_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_rma refrma_mrma; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rma
    ADD CONSTRAINT refrma_mrma FOREIGN KEY (ref_rma_id) REFERENCES adempiere.m_rma(m_rma_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_rmaline refrmaline_mrmaline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rmaline
    ADD CONSTRAINT refrmaline_mrmaline FOREIGN KEY (ref_rmaline_id) REFERENCES adempiere.m_rmaline(m_rmaline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replication remoteclient_adreplication; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replication
    ADD CONSTRAINT remoteclient_adreplication FOREIGN KEY (remote_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_replication remoteorg_adreplication; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_replication
    ADD CONSTRAINT remoteorg_adreplication FOREIGN KEY (remote_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice reversal_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT reversal_cinvoice FOREIGN KEY (reversal_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment reversal_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT reversal_cpayment FOREIGN KEY (reversal_id) REFERENCES adempiere.c_payment(c_payment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journal reversal_gljournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journal
    ADD CONSTRAINT reversal_gljournal FOREIGN KEY (reversal_id) REFERENCES adempiere.gl_journal(gl_journal_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalbatch reversal_gljournalbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalbatch
    ADD CONSTRAINT reversal_gljournalbatch FOREIGN KEY (reversal_id) REFERENCES adempiere.gl_journalbatch(gl_journalbatch_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_process reversal_hrprocess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_process
    ADD CONSTRAINT reversal_hrprocess FOREIGN KEY (reversal_id) REFERENCES adempiere.hr_process(hr_process_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout reversal_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT reversal_minout FOREIGN KEY (reversal_id) REFERENCES adempiere.m_inout(m_inout_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventory reversal_minventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT reversal_minventory FOREIGN KEY (reversal_id) REFERENCES adempiere.m_inventory(m_inventory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement reversal_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT reversal_mmovement FOREIGN KEY (reversal_id) REFERENCES adempiere.m_movement(m_movement_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementconfirm reversal_mmovementconfirm; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementconfirm
    ADD CONSTRAINT reversal_mmovementconfirm FOREIGN KEY (reversal_id) REFERENCES adempiere.m_movementconfirm(m_movementconfirm_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production reversal_mproduction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT reversal_mproduction FOREIGN KEY (reversal_id) REFERENCES adempiere.m_production(m_production_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector reversal_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT reversal_ppcostcollector FOREIGN KEY (reversal_id) REFERENCES adempiere.pp_cost_collector(pp_cost_collector_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline reversalline_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT reversalline_minoutline FOREIGN KEY (reversalline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline reversalline_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT reversalline_minventoryline FOREIGN KEY (reversalline_id) REFERENCES adempiere.m_inventoryline(m_inventoryline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline reversalline_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT reversalline_mmovementline FOREIGN KEY (reversalline_id) REFERENCES adempiere.m_movementline(m_movementline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementlineconfirm reversalline_mmovementlineconf; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementlineconfirm
    ADD CONSTRAINT reversalline_mmovementlineconf FOREIGN KEY (reversalline_id) REFERENCES adempiere.m_movementlineconfirm(m_movementlineconfirm_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline reversalline_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT reversalline_mproductionline FOREIGN KEY (reversalline_id) REFERENCES adempiere.m_inoutline(m_inoutline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_groupupdates rgroup_rgroupupdates; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_groupupdates
    ADD CONSTRAINT rgroup_rgroupupdates FOREIGN KEY (r_group_id) REFERENCES adempiere.r_group(r_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request rgroup_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT rgroup_rrequest FOREIGN KEY (r_group_id) REFERENCES adempiere.r_group(r_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction rgroup_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT rgroup_rrequestaction FOREIGN KEY (r_group_id) REFERENCES adempiere.r_group(r_group_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_ldapaccess rinterestarea_adldapaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_ldapaccess
    ADD CONSTRAINT rinterestarea_adldapaccess FOREIGN KEY (r_interestarea_id) REFERENCES adempiere.r_interestarea(r_interestarea_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_bpartner rinterestarea_ibpartner; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_bpartner
    ADD CONSTRAINT rinterestarea_ibpartner FOREIGN KEY (r_interestarea_id) REFERENCES adempiere.r_interestarea(r_interestarea_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_contactinterest rinterestarea_rcontactinterest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_contactinterest
    ADD CONSTRAINT rinterestarea_rcontactinterest FOREIGN KEY (r_interestarea_id) REFERENCES adempiere.r_interestarea(r_interestarea_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request rinvoice_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT rinvoice_rrequest FOREIGN KEY (c_invoice_id) REFERENCES adempiere.c_invoice(c_invoice_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_issue rissueproject_adissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_issue
    ADD CONSTRAINT rissueproject_adissue FOREIGN KEY (r_issueproject_id) REFERENCES adempiere.r_issueproject(r_issueproject_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_issuesource rissueproject_rissuesource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issuesource
    ADD CONSTRAINT rissueproject_rissuesource FOREIGN KEY (r_issueproject_id) REFERENCES adempiere.r_issueproject(r_issueproject_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_issueknown rissuerecommendation_rissuekno; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issueknown
    ADD CONSTRAINT rissuerecommendation_rissuekno FOREIGN KEY (r_issuerecommendation_id) REFERENCES adempiere.r_issuerecommendation(r_issuerecommendation_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_issueknown rissuestatus_rissueknown; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issueknown
    ADD CONSTRAINT rissuestatus_rissueknown FOREIGN KEY (r_issuestatus_id) REFERENCES adempiere.r_issuestatus(r_issuestatus_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_issue rissuesystem_ad_issue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_issue
    ADD CONSTRAINT rissuesystem_ad_issue FOREIGN KEY (r_issuesystem_id) REFERENCES adempiere.r_issuesystem(r_issuesystem_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_issuesource rissuesystem_rissuesource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issuesource
    ADD CONSTRAINT rissuesystem_rissuesource FOREIGN KEY (r_issuesystem_id) REFERENCES adempiere.r_issuesystem(r_issuesystem_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_issue rissueuser_adissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_issue
    ADD CONSTRAINT rissueuser_adissue FOREIGN KEY (r_issueuser_id) REFERENCES adempiere.r_issueuser(r_issueuser_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_issuesource rissueuser_rissuesource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issuesource
    ADD CONSTRAINT rissueuser_rissuesource FOREIGN KEY (r_issueuser_id) REFERENCES adempiere.r_issueuser(r_issueuser_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_issue rknownissue_adissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_issue
    ADD CONSTRAINT rknownissue_adissue FOREIGN KEY (r_issueknown_id) REFERENCES adempiere.r_issueknown(r_issueknown_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_usermail rmailtext_adusermail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_usermail
    ADD CONSTRAINT rmailtext_adusermail FOREIGN KEY (r_mailtext_id) REFERENCES adempiere.r_mailtext(r_mailtext_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node rmailtext_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT rmailtext_adwfnode FOREIGN KEY (r_mailtext_id) REFERENCES adempiere.r_mailtext(r_mailtext_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform rmailtext_invoiceadprintform; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT rmailtext_invoiceadprintform FOREIGN KEY (invoice_mailtext_id) REFERENCES adempiere.r_mailtext(r_mailtext_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow rmailtext_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT rmailtext_iworkflow FOREIGN KEY (r_mailtext_id) REFERENCES adempiere.r_mailtext(r_mailtext_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product rmailtext_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT rmailtext_mproduct FOREIGN KEY (r_mailtext_id) REFERENCES adempiere.r_mailtext(r_mailtext_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform rmailtext_orderadprintform; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT rmailtext_orderadprintform FOREIGN KEY (order_mailtext_id) REFERENCES adempiere.r_mailtext(r_mailtext_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform rmailtext_projectadprintform; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT rmailtext_projectadprintform FOREIGN KEY (project_mailtext_id) REFERENCES adempiere.r_mailtext(r_mailtext_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform rmailtext_remitadprintform; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT rmailtext_remitadprintform FOREIGN KEY (remittance_mailtext_id) REFERENCES adempiere.r_mailtext(r_mailtext_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_mailtext_trl rmailtext_rmailtexttrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_mailtext_trl
    ADD CONSTRAINT rmailtext_rmailtexttrl FOREIGN KEY (r_mailtext_id) REFERENCES adempiere.r_mailtext(r_mailtext_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request rmailtext_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT rmailtext_rrequest FOREIGN KEY (r_mailtext_id) REFERENCES adempiere.r_mailtext(r_mailtext_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_printform rmailtext_shipadprintform; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_printform
    ADD CONSTRAINT rmailtext_shipadprintform FOREIGN KEY (shipment_mailtext_id) REFERENCES adempiere.r_mailtext(r_mailtext_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_issue rrequest_adissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_issue
    ADD CONSTRAINT rrequest_adissue FOREIGN KEY (r_request_id) REFERENCES adempiere.r_request(r_request_id) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request rrequest_related; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT rrequest_related FOREIGN KEY (r_requestrelated_id) REFERENCES adempiere.r_request(r_request_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_issueknown rrequest_rissueknown; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_issueknown
    ADD CONSTRAINT rrequest_rissueknown FOREIGN KEY (r_request_id) REFERENCES adempiere.r_request(r_request_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction rrequest_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT rrequest_rrequestaction FOREIGN KEY (r_request_id) REFERENCES adempiere.r_request(r_request_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestupdate rrequest_rrequestupdate; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestupdate
    ADD CONSTRAINT rrequest_rrequestupdate FOREIGN KEY (r_request_id) REFERENCES adempiere.r_request(r_request_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestupdates rrequest_rrupdates; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestupdates
    ADD CONSTRAINT rrequest_rrupdates FOREIGN KEY (r_request_id) REFERENCES adempiere.r_request(r_request_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestprocessorlog rrequestprocessor_log; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestprocessorlog
    ADD CONSTRAINT rrequestprocessor_log FOREIGN KEY (r_requestprocessor_id) REFERENCES adempiere.r_requestprocessor(r_requestprocessor_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestprocessor_route rrequestprocessor_route; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestprocessor_route
    ADD CONSTRAINT rrequestprocessor_route FOREIGN KEY (r_requestprocessor_id) REFERENCES adempiere.r_requestprocessor(r_requestprocessor_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_userbpaccess rrequesttype_aduserbpaccess; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_userbpaccess
    ADD CONSTRAINT rrequesttype_aduserbpaccess FOREIGN KEY (r_requesttype_id) REFERENCES adempiere.r_requesttype(r_requesttype_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_index rrequesttype_kindex; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_index
    ADD CONSTRAINT rrequesttype_kindex FOREIGN KEY (r_requesttype_id) REFERENCES adempiere.r_requesttype(r_requesttype_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: k_indexstop rrequesttype_kindexstop; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.k_indexstop
    ADD CONSTRAINT rrequesttype_kindexstop FOREIGN KEY (r_requesttype_id) REFERENCES adempiere.r_requesttype(r_requesttype_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_measure rrequesttype_pameasure; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_measure
    ADD CONSTRAINT rrequesttype_pameasure FOREIGN KEY (r_requesttype_id) REFERENCES adempiere.r_requesttype(r_requesttype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestprocessor_route rrequesttype_rprocessorrule; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestprocessor_route
    ADD CONSTRAINT rrequesttype_rprocessorrule FOREIGN KEY (r_requesttype_id) REFERENCES adempiere.r_requesttype(r_requesttype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request rrequesttype_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT rrequesttype_rrequest FOREIGN KEY (r_requesttype_id) REFERENCES adempiere.r_requesttype(r_requesttype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction rrequesttype_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT rrequesttype_rrequestaction FOREIGN KEY (r_requesttype_id) REFERENCES adempiere.r_requesttype(r_requesttype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestprocessor rrequesttype_rrequestprocessor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestprocessor
    ADD CONSTRAINT rrequesttype_rrequestprocessor FOREIGN KEY (r_requesttype_id) REFERENCES adempiere.r_requesttype(r_requesttype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requesttypeupdates rrequesttype_rrtupdates; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requesttypeupdates
    ADD CONSTRAINT rrequesttype_rrtupdates FOREIGN KEY (r_requesttype_id) REFERENCES adempiere.r_requesttype(r_requesttype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request rresolution_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT rresolution_rrequest FOREIGN KEY (r_resolution_id) REFERENCES adempiere.r_resolution(r_resolution_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction rresolution_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT rresolution_rrequestaction FOREIGN KEY (r_resolution_id) REFERENCES adempiere.r_resolution(r_resolution_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request rstandardresponse_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT rstandardresponse_rrequest FOREIGN KEY (r_standardresponse_id) REFERENCES adempiere.r_standardresponse(r_standardresponse_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request rstatus_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT rstatus_rrequest FOREIGN KEY (r_status_id) REFERENCES adempiere.r_status(r_status_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requestaction rstatus_rrequestaction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requestaction
    ADD CONSTRAINT rstatus_rrequestaction FOREIGN KEY (r_status_id) REFERENCES adempiere.r_status(r_status_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_requesttype rstatuscategory_rrequesttype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_requesttype
    ADD CONSTRAINT rstatuscategory_rrequesttype FOREIGN KEY (r_statuscategory_id) REFERENCES adempiere.r_statuscategory(r_statuscategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_status rstatuscategory_rstatus; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_status
    ADD CONSTRAINT rstatuscategory_rstatus FOREIGN KEY (r_statuscategory_id) REFERENCES adempiere.r_statuscategory(r_statuscategory_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_user salesrep_aduser; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_user
    ADD CONSTRAINT salesrep_aduser FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_contactactivity salesrep_ccontactactivity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_contactactivity
    ADD CONSTRAINT salesrep_ccontactactivity FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_dunningrunentry salesrep_cdunningrunentry; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_dunningrunentry
    ADD CONSTRAINT salesrep_cdunningrunentry FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_opportunity salesrep_copportunity; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_opportunity
    ADD CONSTRAINT salesrep_copportunity FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory salesrep_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT salesrep_csaleshistory FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_salesregion salesrep_csalesregion; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_salesregion
    ADD CONSTRAINT salesrep_csalesregion FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order salesrep_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT salesrep_ddorder FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_forecast salesrep_iforecast; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_forecast
    ADD CONSTRAINT salesrep_iforecast FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory salesrep_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT salesrep_isaleshistory FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_forecastline salesrep_mforecastline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_forecastline
    ADD CONSTRAINT salesrep_mforecastline FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement salesrep_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT salesrep_mmovement FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product salesrep_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT salesrep_mproduct FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_rma salesrep_mrma; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_rma
    ADD CONSTRAINT salesrep_mrma FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal salesrep_uposterminal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT salesrep_uposterminal FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound salesrep_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT salesrep_wminoutbound FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_store salesrep_wstore; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_store
    ADD CONSTRAINT salesrep_wstore FOREIGN KEY (salesrep_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_sequence_audit sequence_auditclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sequence_audit
    ADD CONSTRAINT sequence_auditclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_sequence_audit sequence_auditorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sequence_audit
    ADD CONSTRAINT sequence_auditorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_sequence_no sequence_noclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sequence_no
    ADD CONSTRAINT sequence_noclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_sequence_no sequence_noorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sequence_no
    ADD CONSTRAINT sequence_noorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_sequence sequenceclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sequence
    ADD CONSTRAINT sequenceclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_sequence sequenceorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_sequence
    ADD CONSTRAINT sequenceorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product sexpensetype_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT sexpensetype_mproduct FOREIGN KEY (s_expensetype_id) REFERENCES adempiere.s_expensetype(s_expensetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct so_campaign_fact_acct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT so_campaign_fact_acct FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_element socampaign_caschemaelement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_element
    ADD CONSTRAINT socampaign_caschemaelement FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination socampaign_vc; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT socampaign_vc FOREIGN KEY (c_campaign_id) REFERENCES adempiere.c_campaign(c_campaign_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_posterminal sopricelist_uposterminal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_posterminal
    ADD CONSTRAINT sopricelist_uposterminal FOREIGN KEY (so_pricelist_id) REFERENCES adempiere.m_pricelist(m_pricelist_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node sresource_adwfnode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT sresource_adwfnode FOREIGN KEY (s_resource_id) REFERENCES adempiere.s_resource(s_resource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow sresource_adworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow
    ADD CONSTRAINT sresource_adworkflow FOREIGN KEY (s_resource_id) REFERENCES adempiere.s_resource(s_resource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_productplanning sresource_iproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_productplanning
    ADD CONSTRAINT sresource_iproductplanning FOREIGN KEY (s_resource_id) REFERENCES adempiere.s_resource(s_resource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_workflow sresource_iworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_workflow
    ADD CONSTRAINT sresource_iworkflow FOREIGN KEY (s_resource_id) REFERENCES adempiere.s_resource(s_resource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product sresource_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product
    ADD CONSTRAINT sresource_mproduct FOREIGN KEY (s_resource_id) REFERENCES adempiere.s_resource(s_resource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector sresource_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT sresource_ppcostcollector FOREIGN KEY (s_resource_id) REFERENCES adempiere.s_resource(s_resource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_mrp sresource_ppmrp; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_mrp
    ADD CONSTRAINT sresource_ppmrp FOREIGN KEY (s_resource_id) REFERENCES adempiere.s_resource(s_resource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order sresource_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT sresource_pporder FOREIGN KEY (s_resource_id) REFERENCES adempiere.s_resource(s_resource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node sresource_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT sresource_ppordernode FOREIGN KEY (s_resource_id) REFERENCES adempiere.s_resource(s_resource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_workflow sresource_pporderworkflow; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_workflow
    ADD CONSTRAINT sresource_pporderworkflow FOREIGN KEY (s_resource_id) REFERENCES adempiere.s_resource(s_resource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_product_planning sresource_ppproductplanning; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_product_planning
    ADD CONSTRAINT sresource_ppproductplanning FOREIGN KEY (s_resource_id) REFERENCES adempiere.s_resource(s_resource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_resourceassignment sresource_sresourceassignment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_resourceassignment
    ADD CONSTRAINT sresource_sresourceassignment FOREIGN KEY (s_resource_id) REFERENCES adempiere.s_resource(s_resource_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_resourceunavailable sresource_sresunavailable; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_resourceunavailable
    ADD CONSTRAINT sresource_sresunavailable FOREIGN KEY (s_resource_id) REFERENCES adempiere.s_resource(s_resource_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline sresourceassign_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT sresourceassign_cinvoiceline FOREIGN KEY (s_resourceassignment_id) REFERENCES adempiere.s_resourceassignment(s_resourceassignment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline sresourceassign_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT sresourceassign_corderline FOREIGN KEY (s_resourceassignment_id) REFERENCES adempiere.s_resourceassignment(s_resourceassignment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline sresourceassign_steline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT sresourceassign_steline FOREIGN KEY (s_resourceassignment_id) REFERENCES adempiere.s_resourceassignment(s_resourceassignment_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_resource sresourcetype_sresource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_resource
    ADD CONSTRAINT sresourcetype_sresource FOREIGN KEY (s_resourcetype_id) REFERENCES adempiere.s_resourcetype(s_resourcetype_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline stimeexpense_line; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT stimeexpense_line FOREIGN KEY (s_timeexpense_id) REFERENCES adempiere.s_timeexpense(s_timeexpense_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_projectissue stimeexpline_cprojectissue; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_projectissue
    ADD CONSTRAINT stimeexpline_cprojectissue FOREIGN KEY (s_timeexpenseline_id) REFERENCES adempiere.s_timeexpenseline(s_timeexpenseline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_timeexpenseline stimetype_stimeexpenseline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_timeexpenseline
    ADD CONSTRAINT stimetype_stimeexpenseline FOREIGN KEY (s_timetype_id) REFERENCES adempiere.s_timetype(s_timetype_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: s_training_class straining_strainingclass; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.s_training_class
    ADD CONSTRAINT straining_strainingclass FOREIGN KEY (s_training_id) REFERENCES adempiere.s_training(s_training_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_poskey subkeylayout_cposkey; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_poskey
    ADD CONSTRAINT subkeylayout_cposkey FOREIGN KEY (subkeylayout_id) REFERENCES adempiere.c_poskeylayout(c_poskeylayout_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_job supervisor_hrjob; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_job
    ADD CONSTRAINT supervisor_hrjob FOREIGN KEY (supervisor_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_jobopening supervisor_hrjobopening; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_jobopening
    ADD CONSTRAINT supervisor_hrjobopening FOREIGN KEY (supervisor_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab tabclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab
    ADD CONSTRAINT tabclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table tableclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table
    ADD CONSTRAINT tableclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_table tableorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_table
    ADD CONSTRAINT tableorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_tab taborg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_tab
    ADD CONSTRAINT taborg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_task taskclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_task
    ADD CONSTRAINT taskclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_taskinstance taskinstanceclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_taskinstance
    ADD CONSTRAINT taskinstanceclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_taskinstance taskinstanceorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_taskinstance
    ADD CONSTRAINT taskinstanceorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_task taskorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_task
    ADD CONSTRAINT taskorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_status updatestatus_rstatus; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_status
    ADD CONSTRAINT updatestatus_rstatus FOREIGN KEY (update_status_id) REFERENCES adempiere.r_status(r_status_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept_acct use_hrconceptacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_acct
    ADD CONSTRAINT use_hrconceptacct FOREIGN KEY (user2_id) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory user1_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT user1_csaleshistory FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order user1_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT user1_ddorder FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline user1_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT user1_ddorderline FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary user1_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT user1_factacctsummary FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline user1_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT user1_gljournalline FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept_acct user1_hrconceptacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_acct
    ADD CONSTRAINT user1_hrconceptacct FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement user1_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT user1_hrmovement FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget user1_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT user1_ibudget FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal user1_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT user1_ifajournal FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory user1_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT user1_isaleshistory FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline user1_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT user1_minventoryline FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline user1_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT user1_mmovementline FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionbatch user1_mproductionbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionbatch
    ADD CONSTRAINT user1_mproductionbatch FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline user1_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT user1_mproductionline FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisition user1_mrequisition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisition
    ADD CONSTRAINT user1_mrequisition FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline user1_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT user1_mrequisitionline FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn user1_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT user1_pareportcolumn FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource user1_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT user1_pareportsource FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector user1_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT user1_ppcostcollector FOREIGN KEY (user1_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order user1_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT user1_pporder FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request user1_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT user1_rrequest FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound user1_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT user1_wminoutbound FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline user1_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT user1_wminoutboundline FOREIGN KEY (user1_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory user2_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT user2_csaleshistory FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order user2_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT user2_ddorder FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline user2_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT user2_ddorderline FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary user2_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT user2_factacctsummary FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline user2_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT user2_gljournalline FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement user2_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT user2_hrmovement FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_budget user2_ibudget; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_budget
    ADD CONSTRAINT user2_ibudget FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_fajournal user2_ifajournal; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_fajournal
    ADD CONSTRAINT user2_ifajournal FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: i_saleshistory user2_isaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.i_saleshistory
    ADD CONSTRAINT user2_isaleshistory FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline user2_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT user2_minventoryline FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline user2_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT user2_mmovementline FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionbatch user2_mproductionbatch; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionbatch
    ADD CONSTRAINT user2_mproductionbatch FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline user2_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT user2_mproductionline FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisition user2_mrequisition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisition
    ADD CONSTRAINT user2_mrequisition FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline user2_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT user2_mrequisitionline FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn user2_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT user2_pareportcolumn FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource user2_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT user2_pareportsource FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector user2_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT user2_ppcostcollector FOREIGN KEY (user2_id) REFERENCES adempiere.ad_user(ad_user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order user2_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT user2_pporder FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request user2_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT user2_rrequest FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutbound user2_wminoutbound; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutbound
    ADD CONSTRAINT user2_wminoutbound FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline user2_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT user2_wminoutboundline FOREIGN KEY (user2_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cash user3_ccash; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cash
    ADD CONSTRAINT user3_ccash FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice user3_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT user3_cinvoice FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline user3_cinvoicebatchline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT user3_cinvoicebatchline FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline user3_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT user3_cinvoiceline FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order user3_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT user3_corder FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline user3_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT user3_corderline FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment user3_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT user3_cpayment FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory user3_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT user3_csaleshistory FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination user3_cvalidcombination; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT user3_cvalidcombination FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order user3_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT user3_ddorder FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline user3_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT user3_ddorderline FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct user3_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT user3_factacct FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary user3_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT user3_factacctsummary FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution user3_gldistribution; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT user3_gldistribution FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline user3_gldistributionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT user3_gldistributionline FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline user3_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT user3_gljournalline FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept_acct user3_hrconceptacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_acct
    ADD CONSTRAINT user3_hrconceptacct FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement user3_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT user3_hrmovement FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout user3_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT user3_minout FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline user3_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT user3_minoutline FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventory user3_minventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT user3_minventory FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline user3_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT user3_minventoryline FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement user3_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT user3_mmovement FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline user3_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT user3_mmovementline FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production user3_mproduction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT user3_mproduction FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline user3_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT user3_mproductionline FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisition user3_mrequisition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisition
    ADD CONSTRAINT user3_mrequisition FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline user3_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT user3_mrequisitionline FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn user3_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT user3_pareportcolumn FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource user3_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT user3_pareportsource FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector user3_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT user3_ppcostcollector FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order user3_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT user3_pporder FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request user3_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT user3_rrequest FOREIGN KEY (user3_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cash user4_ccash; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cash
    ADD CONSTRAINT user4_ccash FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoice user4_cinvoice; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoice
    ADD CONSTRAINT user4_cinvoice FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoicebatchline user4_cinvoicebatchline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoicebatchline
    ADD CONSTRAINT user4_cinvoicebatchline FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_invoiceline user4_cinvoiceline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_invoiceline
    ADD CONSTRAINT user4_cinvoiceline FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_order user4_corder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_order
    ADD CONSTRAINT user4_corder FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_orderline user4_corderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_orderline
    ADD CONSTRAINT user4_corderline FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_payment user4_cpayment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_payment
    ADD CONSTRAINT user4_cpayment FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_saleshistory user4_csaleshistory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_saleshistory
    ADD CONSTRAINT user4_csaleshistory FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_validcombination user4_cvalidcombination; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_validcombination
    ADD CONSTRAINT user4_cvalidcombination FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_order user4_ddorder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_order
    ADD CONSTRAINT user4_ddorder FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline user4_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT user4_ddorderline FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct user4_factacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct
    ADD CONSTRAINT user4_factacct FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: fact_acct_summary user4_factacctsummary; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.fact_acct_summary
    ADD CONSTRAINT user4_factacctsummary FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distribution user4_gldistribution; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distribution
    ADD CONSTRAINT user4_gldistribution FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_distributionline user4_gldistributionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_distributionline
    ADD CONSTRAINT user4_gldistributionline FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: gl_journalline user4_gljournalline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.gl_journalline
    ADD CONSTRAINT user4_gljournalline FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_concept_acct user4_hrconceptacct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_concept_acct
    ADD CONSTRAINT user4_hrconceptacct FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hr_movement user4_hrmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.hr_movement
    ADD CONSTRAINT user4_hrmovement FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout user4_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT user4_minout FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inoutline user4_minoutline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inoutline
    ADD CONSTRAINT user4_minoutline FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventory user4_minventory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventory
    ADD CONSTRAINT user4_minventory FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inventoryline user4_minventoryline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inventoryline
    ADD CONSTRAINT user4_minventoryline FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movement user4_mmovement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movement
    ADD CONSTRAINT user4_mmovement FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_movementline user4_mmovementline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_movementline
    ADD CONSTRAINT user4_mmovementline FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_production user4_mproduction; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_production
    ADD CONSTRAINT user4_mproduction FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_productionline user4_mproductionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_productionline
    ADD CONSTRAINT user4_mproductionline FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisition user4_mrequisition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisition
    ADD CONSTRAINT user4_mrequisition FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_requisitionline user4_mrequisitionline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_requisitionline
    ADD CONSTRAINT user4_mrequisitionline FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportcolumn user4_pareportcolumn; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportcolumn
    ADD CONSTRAINT user4_pareportcolumn FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_reportsource user4_pareportsource; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_reportsource
    ADD CONSTRAINT user4_pareportsource FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_cost_collector user4_ppcostcollector; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_cost_collector
    ADD CONSTRAINT user4_ppcostcollector FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order user4_pporder; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order
    ADD CONSTRAINT user4_pporder FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: r_request user4_rrequest; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.r_request
    ADD CONSTRAINT user4_rrequest FOREIGN KEY (user4_id) REFERENCES adempiere.c_elementvalue(c_elementvalue_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: u_rolemenu uwebmenu_urolemenu; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.u_rolemenu
    ADD CONSTRAINT uwebmenu_urolemenu FOREIGN KEY (u_webmenu_id) REFERENCES adempiere.u_webmenu(u_webmenu_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_val_rule val_ruleclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_val_rule
    ADD CONSTRAINT val_ruleclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_val_rule val_ruleorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_val_rule
    ADD CONSTRAINT val_ruleorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_inout vbplocation_minout; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_inout
    ADD CONSTRAINT vbplocation_minout FOREIGN KEY (c_bpartner_location_id) REFERENCES adempiere.c_bpartner_location(c_bpartner_location_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: test vc_account_test; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.test
    ADD CONSTRAINT vc_account_test FOREIGN KEY (account_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct vc_basset_cbankaccount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT vc_basset_cbankaccount FOREIGN KEY (b_asset_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_basset_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_basset_cschemadefault FOREIGN KEY (b_asset_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct vc_bexpense_cbankaccount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT vc_bexpense_cbankaccount FOREIGN KEY (b_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_bexpense_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_bexpense_cschemadefault FOREIGN KEY (b_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct vc_binterestexp_cbankaccount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT vc_binterestexp_cbankaccount FOREIGN KEY (b_interestexp_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_binterestexp_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_binterestexp_cschemadefault FOREIGN KEY (b_interestexp_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct vc_binterestrev_cbankaccount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT vc_binterestrev_cbankaccount FOREIGN KEY (b_interestrev_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_binterestrev_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_binterestrev_cschemadefault FOREIGN KEY (b_interestrev_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct vc_bintransit_cbankaccount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT vc_bintransit_cbankaccount FOREIGN KEY (b_intransit_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_bintransit_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_bintransit_cschemadefault FOREIGN KEY (b_intransit_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct vc_bpaymentselect_cbankaccount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT vc_bpaymentselect_cbankaccount FOREIGN KEY (b_paymentselect_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_bpaymentselect_cschemadefau; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_bpaymentselect_cschemadefau FOREIGN KEY (b_paymentselect_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct vc_brevaluationgain_cbankaccou; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT vc_brevaluationgain_cbankaccou FOREIGN KEY (b_revaluationgain_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_brevaluationgain_cschemadef; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_brevaluationgain_cschemadef FOREIGN KEY (b_revaluationgain_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct vc_brevaluationloss_cbankaccou; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT vc_brevaluationloss_cbankaccou FOREIGN KEY (b_revaluationloss_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_brevaluationloss_cschemadef; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_brevaluationloss_cschemadef FOREIGN KEY (b_revaluationloss_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct vc_bsettlementgain_cbankaccoun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT vc_bsettlementgain_cbankaccoun FOREIGN KEY (b_settlementgain_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_bsettlementgain_cschemadefa; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_bsettlementgain_cschemadefa FOREIGN KEY (b_settlementgain_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct vc_bsettlementloss_cbankaccoun; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT vc_bsettlementloss_cbankaccoun FOREIGN KEY (b_settlementloss_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_bsettlementloss_cschemadefa; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_bsettlementloss_cschemadefa FOREIGN KEY (b_settlementloss_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct vc_bunallocatedcash_cbankaccou; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT vc_bunallocatedcash_cbankaccou FOREIGN KEY (b_unallocatedcash_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_bunallocatedcash_cschemadef; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_bunallocatedcash_cschemadef FOREIGN KEY (b_unallocatedcash_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bankaccount_acct vc_bunidentified_cbankaccount; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bankaccount_acct
    ADD CONSTRAINT vc_bunidentified_cbankaccount FOREIGN KEY (b_unidentified_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_bunidentified_cschemadefaul; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_bunidentified_cschemadefaul FOREIGN KEY (b_unidentified_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashbook_acct vc_cbasset_ccashbook; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashbook_acct
    ADD CONSTRAINT vc_cbasset_ccashbook FOREIGN KEY (cb_asset_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_cbasset_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_cbasset_cschemadefault FOREIGN KEY (cb_asset_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashbook_acct vc_cbcashtransfer_ccashbook; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashbook_acct
    ADD CONSTRAINT vc_cbcashtransfer_ccashbook FOREIGN KEY (cb_cashtransfer_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_cbcashtransfer_cschemadefau; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_cbcashtransfer_cschemadefau FOREIGN KEY (cb_cashtransfer_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashbook_acct vc_cbdifferences_ccashbook; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashbook_acct
    ADD CONSTRAINT vc_cbdifferences_ccashbook FOREIGN KEY (cb_differences_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_cbdifferences_cschemadefaul; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_cbdifferences_cschemadefaul FOREIGN KEY (cb_differences_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashbook_acct vc_cbexpense_ccashbook; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashbook_acct
    ADD CONSTRAINT vc_cbexpense_ccashbook FOREIGN KEY (cb_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_cbexpense_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_cbexpense_cschemadefault FOREIGN KEY (cb_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_cashbook_acct vc_cbreceipt_ccashbook; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_cashbook_acct
    ADD CONSTRAINT vc_cbreceipt_ccashbook FOREIGN KEY (cb_receipt_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_cbreceipt_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_cbreceipt_cschemadefault FOREIGN KEY (cb_receipt_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_charge_acct vc_chexpense_ccharge; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_charge_acct
    ADD CONSTRAINT vc_chexpense_ccharge FOREIGN KEY (ch_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_chexpense_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_chexpense_cschemadefault FOREIGN KEY (ch_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_charge_acct vc_chrevenue_ccharge; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_charge_acct
    ADD CONSTRAINT vc_chrevenue_ccharge FOREIGN KEY (ch_revenue_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_chrevenue_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_chrevenue_cschemadefault FOREIGN KEY (ch_revenue_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_customer_acct vc_cprepayment_cbpcustomer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_customer_acct
    ADD CONSTRAINT vc_cprepayment_cbpcustomer FOREIGN KEY (c_prepayment_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct vc_cprepayment_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT vc_cprepayment_cbpgroup FOREIGN KEY (c_prepayment_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_cprepayment_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_cprepayment_cschemadefault FOREIGN KEY (c_prepayment_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_customer_acct vc_creceivable_cbpcustomer; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_customer_acct
    ADD CONSTRAINT vc_creceivable_cbpcustomer FOREIGN KEY (c_receivable_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct vc_creceivable_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT vc_creceivable_cbpgroup FOREIGN KEY (c_receivable_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_creceivable_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_creceivable_cschemadefault FOREIGN KEY (c_receivable_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_gl vc_currencybalancing_cschemagl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_gl
    ADD CONSTRAINT vc_currencybalancing_cschemagl FOREIGN KEY (currencybalancing_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_employee_acct vc_eexpense_cbpemployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_employee_acct
    ADD CONSTRAINT vc_eexpense_cbpemployee FOREIGN KEY (e_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_eexpense_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_eexpense_cschemadefault FOREIGN KEY (e_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_employee_acct vc_eprepayment_cbpemployee; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_employee_acct
    ADD CONSTRAINT vc_eprepayment_cbpemployee FOREIGN KEY (e_prepayment_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_eprepayment_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_eprepayment_cschemadefault FOREIGN KEY (e_prepayment_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_gl vc_incomesummary_cschemagl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_gl
    ADD CONSTRAINT vc_incomesummary_cschemagl FOREIGN KEY (incomesummary_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_interorg_acct vc_intercompanyduefrom_cintero; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_interorg_acct
    ADD CONSTRAINT vc_intercompanyduefrom_cintero FOREIGN KEY (intercompanyduefrom_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_gl vc_intercompanyduefrom_cschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_gl
    ADD CONSTRAINT vc_intercompanyduefrom_cschema FOREIGN KEY (intercompanyduefrom_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_interorg_acct vc_intercompanydueto_cinterorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_interorg_acct
    ADD CONSTRAINT vc_intercompanydueto_cinterorg FOREIGN KEY (intercompanydueto_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_gl vc_intercompanydueto_cschemagl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_gl
    ADD CONSTRAINT vc_intercompanydueto_cschemagl FOREIGN KEY (intercompanydueto_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct vc_notinvoicedrec_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT vc_notinvoicedrec_cbpgroup FOREIGN KEY (notinvoicedreceivables_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_notinvoicedrec_cschemadefau; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_notinvoicedrec_cschemadefau FOREIGN KEY (notinvoicedreceivables_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct vc_notinvoicedreceipts_cbpgrou; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT vc_notinvoicedreceipts_cbpgrou FOREIGN KEY (notinvoicedreceipts_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_notinvoicedreceipts_cschema; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_notinvoicedreceipts_cschema FOREIGN KEY (notinvoicedreceipts_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct vc_notinvoicedrevenue_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT vc_notinvoicedrevenue_cbpgroup FOREIGN KEY (notinvoicedrevenue_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_notinvoicedrevenue_cschemad; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_notinvoicedrevenue_cschemad FOREIGN KEY (notinvoicedrevenue_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_passet_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_passet_cschemadefault FOREIGN KEY (p_asset_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct vc_passet_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT vc_passet_mproduct FOREIGN KEY (p_asset_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct vc_passet_mproductcategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT vc_passet_mproductcategory FOREIGN KEY (p_asset_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct vc_paydiscountexp_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT vc_paydiscountexp_cbpgroup FOREIGN KEY (paydiscount_exp_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_paydiscountexp_cschemadefau; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_paydiscountexp_cschemadefau FOREIGN KEY (paydiscount_exp_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct vc_paydiscountrev_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT vc_paydiscountrev_cbpgroup FOREIGN KEY (paydiscount_rev_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_paydiscountrev_cschemadefau; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_paydiscountrev_cschemadefau FOREIGN KEY (paydiscount_rev_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_pcogs_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_pcogs_cschemadefault FOREIGN KEY (p_cogs_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct vc_pcogs_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT vc_pcogs_mproduct FOREIGN KEY (p_cogs_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct vc_pcogs_mproductcategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT vc_pcogs_mproductcategory FOREIGN KEY (p_cogs_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_pexpense_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_pexpense_cschemadefault FOREIGN KEY (p_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct vc_pexpense_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT vc_pexpense_mproduct FOREIGN KEY (p_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct vc_pexpense_mproductcategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT vc_pexpense_mproductcategory FOREIGN KEY (p_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_pinvoicepv_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_pinvoicepv_cschemadefault FOREIGN KEY (p_invoicepricevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct vc_pinvoicepv_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT vc_pinvoicepv_mproduct FOREIGN KEY (p_invoicepricevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct vc_pinvoicepv_mproductcategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT vc_pinvoicepv_mproductcategory FOREIGN KEY (p_invoicepricevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project_acct vc_pjasset_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project_acct
    ADD CONSTRAINT vc_pjasset_cproject FOREIGN KEY (pj_asset_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_pjasset_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_pjasset_cschemadefault FOREIGN KEY (pj_asset_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_project_acct vc_pjwip_cproject; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_project_acct
    ADD CONSTRAINT vc_pjwip_cproject FOREIGN KEY (pj_wip_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_pjwip_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_pjwip_cschemadefault FOREIGN KEY (pj_wip_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_ppurchasepv_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_ppurchasepv_cschemadefault FOREIGN KEY (p_purchasepricevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct vc_ppurchasepv_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT vc_ppurchasepv_mproduct FOREIGN KEY (p_purchasepricevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct vc_ppurchasepv_mproductcategor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT vc_ppurchasepv_mproductcategor FOREIGN KEY (p_purchasepricevariance_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_gl vc_ppvoffset_cschemagl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_gl
    ADD CONSTRAINT vc_ppvoffset_cschemagl FOREIGN KEY (ppvoffset_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_revenuerecognition_plan vc_prevenue_crevenuerecognitio; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_revenuerecognition_plan
    ADD CONSTRAINT vc_prevenue_crevenuerecognitio FOREIGN KEY (p_revenue_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_prevenue_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_prevenue_cschemadefault FOREIGN KEY (p_revenue_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct vc_prevenue_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT vc_prevenue_mproduct FOREIGN KEY (p_revenue_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct vc_prevenue_mproductcategory; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT vc_prevenue_mproductcategory FOREIGN KEY (p_revenue_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_ptdiscountgrant_cschemadefa; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_ptdiscountgrant_cschemadefa FOREIGN KEY (p_tradediscountgrant_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct vc_ptdiscountgrant_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT vc_ptdiscountgrant_mproduct FOREIGN KEY (p_tradediscountgrant_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct vc_ptdiscountgrant_mproductcat; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT vc_ptdiscountgrant_mproductcat FOREIGN KEY (p_tradediscountgrant_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_ptdiscountrec_cschemadefaul; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_ptdiscountrec_cschemadefaul FOREIGN KEY (p_tradediscountrec_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_acct vc_ptdiscountrec_mproduct; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_acct
    ADD CONSTRAINT vc_ptdiscountrec_mproduct FOREIGN KEY (p_tradediscountrec_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_product_category_acct vc_ptdiscountrec_mproductcateg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_product_category_acct
    ADD CONSTRAINT vc_ptdiscountrec_mproductcateg FOREIGN KEY (p_tradediscountrec_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_currency_acct vc_realizedgain_ccurrency; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_currency_acct
    ADD CONSTRAINT vc_realizedgain_ccurrency FOREIGN KEY (realizedgain_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_realizedgain_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_realizedgain_cschemadefault FOREIGN KEY (realizedgain_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_currency_acct vc_realizedloss_ccurrency; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_currency_acct
    ADD CONSTRAINT vc_realizedloss_ccurrency FOREIGN KEY (realizedloss_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_realizedloss_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_realizedloss_cschemadefault FOREIGN KEY (realizedloss_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_gl vc_retainedearning_cschemagl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_gl
    ADD CONSTRAINT vc_retainedearning_cschemagl FOREIGN KEY (retainedearning_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_gl vc_suspensebalancing_cschemagl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_gl
    ADD CONSTRAINT vc_suspensebalancing_cschemagl FOREIGN KEY (suspensebalancing_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_gl vc_suspenseerror_cschemagl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_gl
    ADD CONSTRAINT vc_suspenseerror_cschemagl FOREIGN KEY (suspenseerror_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_tcredit_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_tcredit_cschemadefault FOREIGN KEY (t_credit_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax_acct vc_tcredit_ctax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax_acct
    ADD CONSTRAINT vc_tcredit_ctax FOREIGN KEY (t_credit_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_tdue_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_tdue_cschemadefault FOREIGN KEY (t_due_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax_acct vc_tdue_ctax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax_acct
    ADD CONSTRAINT vc_tdue_ctax FOREIGN KEY (t_due_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_texpense_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_texpense_cschemadefault FOREIGN KEY (t_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax_acct vc_texpense_ctax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax_acct
    ADD CONSTRAINT vc_texpense_ctax FOREIGN KEY (t_expense_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_tliability_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_tliability_cschemadefault FOREIGN KEY (t_liability_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax_acct vc_tliability_ctax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax_acct
    ADD CONSTRAINT vc_tliability_ctax FOREIGN KEY (t_liability_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_trec_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_trec_cschemadefault FOREIGN KEY (t_receivables_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_tax_acct vc_trec_ctax; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_tax_acct
    ADD CONSTRAINT vc_trec_ctax FOREIGN KEY (t_receivables_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct vc_unearnedrevenue_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT vc_unearnedrevenue_cbpgroup FOREIGN KEY (unearnedrevenue_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_revenuerecognition_plan vc_unearnedrevenue_crevenuerec; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_revenuerecognition_plan
    ADD CONSTRAINT vc_unearnedrevenue_crevenuerec FOREIGN KEY (unearnedrevenue_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_unearnedrevenue_cschemadefa; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_unearnedrevenue_cschemadefa FOREIGN KEY (unearnedrevenue_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_currency_acct vc_unrealizedgain_ccurrency; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_currency_acct
    ADD CONSTRAINT vc_unrealizedgain_ccurrency FOREIGN KEY (unrealizedgain_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_unrealizedgain_cschemadefau; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_unrealizedgain_cschemadefau FOREIGN KEY (unrealizedgain_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_currency_acct vc_unrealizedloss_ccurrency; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_currency_acct
    ADD CONSTRAINT vc_unrealizedloss_ccurrency FOREIGN KEY (unrealizedloss_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_unrealizedloss_cschemadefau; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_unrealizedloss_cschemadefau FOREIGN KEY (unrealizedloss_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct vc_vliability_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT vc_vliability_cbpgroup FOREIGN KEY (v_liability_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_vendor_acct vc_vliability_cbpvendor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_vendor_acct
    ADD CONSTRAINT vc_vliability_cbpvendor FOREIGN KEY (v_liability_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_vliability_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_vliability_cschemadefault FOREIGN KEY (v_liability_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct vc_vliabilityservices_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT vc_vliabilityservices_cbpgroup FOREIGN KEY (v_liability_services_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_vendor_acct vc_vliabilityservices_cbpvendo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_vendor_acct
    ADD CONSTRAINT vc_vliabilityservices_cbpvendo FOREIGN KEY (v_liability_services_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_vliabilityservices_cschemad; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_vliabilityservices_cschemad FOREIGN KEY (v_liability_services_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct vc_vprepayment_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT vc_vprepayment_cbpgroup FOREIGN KEY (v_prepayment_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_vendor_acct vc_vprepayment_cbpvendor; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_vendor_acct
    ADD CONSTRAINT vc_vprepayment_cbpvendor FOREIGN KEY (v_prepayment_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_vprepayment_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_vprepayment_cschemadefault FOREIGN KEY (v_prepayment_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_wdifferences_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_wdifferences_cschemadefault FOREIGN KEY (w_differences_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_warehouse_acct vc_wdifferences_mwarehouse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_warehouse_acct
    ADD CONSTRAINT vc_wdifferences_mwarehouse FOREIGN KEY (w_differences_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_winvactualadjust_cschemadef; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_winvactualadjust_cschemadef FOREIGN KEY (w_invactualadjust_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_warehouse_acct vc_winvactualadjust_mwarehouse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_warehouse_acct
    ADD CONSTRAINT vc_winvactualadjust_mwarehouse FOREIGN KEY (w_invactualadjust_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_winventory_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_winventory_cschemadefault FOREIGN KEY (w_inventory_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_warehouse_acct vc_winventory_mwarehouse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_warehouse_acct
    ADD CONSTRAINT vc_winventory_mwarehouse FOREIGN KEY (w_inventory_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_withholding_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_withholding_cschemadefault FOREIGN KEY (withholding_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_withholding_acct vc_withholding_cwithholding; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_withholding_acct
    ADD CONSTRAINT vc_withholding_cwithholding FOREIGN KEY (withholding_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_wrevaluation_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_wrevaluation_cschemadefault FOREIGN KEY (w_revaluation_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: m_warehouse_acct vc_wrevaluation_mwarehouse; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.m_warehouse_acct
    ADD CONSTRAINT vc_wrevaluation_mwarehouse FOREIGN KEY (w_revaluation_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_bp_group_acct vc_writeoff_cbpgroup; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_bp_group_acct
    ADD CONSTRAINT vc_writeoff_cbpgroup FOREIGN KEY (writeoff_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: c_acctschema_default vc_writeoff_cschemadefault; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.c_acctschema_default
    ADD CONSTRAINT vc_writeoff_cschemadefault FOREIGN KEY (writeoff_acct) REFERENCES adempiere.c_validcombination(c_validcombination_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_compartment volumeuom_ddcompartment; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_compartment
    ADD CONSTRAINT volumeuom_ddcompartment FOREIGN KEY (volume_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freightline volumeuom_ddfreightline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freightline
    ADD CONSTRAINT volumeuom_ddfreightline FOREIGN KEY (volume_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_transportunit volumeuom_ddtransportunit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportunit
    ADD CONSTRAINT volumeuom_ddtransportunit FOREIGN KEY (volume_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_transportunittype volumeuom_ddtransportunittype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportunittype
    ADD CONSTRAINT volumeuom_ddtransportunittype FOREIGN KEY (volume_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_vehicle volumeuom_ddvehicle; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_vehicle
    ADD CONSTRAINT volumeuom_ddvehicle FOREIGN KEY (volume_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_basketline wbasket_wbasketline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_basketline
    ADD CONSTRAINT wbasket_wbasketline FOREIGN KEY (w_basket_id) REFERENCES adempiere.w_basket(w_basket_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_advertisement wclickcount_wadvertisement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_advertisement
    ADD CONSTRAINT wclickcount_wadvertisement FOREIGN KEY (w_clickcount_id) REFERENCES adempiere.w_clickcount(w_clickcount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_click wclickcount_wclick; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_click
    ADD CONSTRAINT wclickcount_wclick FOREIGN KEY (w_clickcount_id) REFERENCES adempiere.w_clickcount(w_clickcount_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_advertisement wcountercount_wadvertisement; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_advertisement
    ADD CONSTRAINT wcountercount_wadvertisement FOREIGN KEY (w_countercount_id) REFERENCES adempiere.w_countercount(w_countercount_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_counter wcountercount_wcounter; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_counter
    ADD CONSTRAINT wcountercount_wcounter FOREIGN KEY (w_countercount_id) REFERENCES adempiere.w_countercount(w_countercount_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freightline weightuom_ddfreightline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freightline
    ADD CONSTRAINT weightuom_ddfreightline FOREIGN KEY (weight_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_transportunit weightuom_ddtransportunit; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportunit
    ADD CONSTRAINT weightuom_ddtransportunit FOREIGN KEY (weight_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_transportunittype weightuom_ddtransportunittype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_transportunittype
    ADD CONSTRAINT weightuom_ddtransportunittype FOREIGN KEY (weight_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_vehicle weightuom_ddvehicle; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_vehicle
    ADD CONSTRAINT weightuom_ddvehicle FOREIGN KEY (weight_uom_id) REFERENCES adempiere.c_uom(c_uom_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_process wf_instanceclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_process
    ADD CONSTRAINT wf_instanceclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_process wf_instanceorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_process
    ADD CONSTRAINT wf_instanceorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node wf_nodeclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT wf_nodeclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_nodenext wf_nodenextclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_nodenext
    ADD CONSTRAINT wf_nodenextclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_nodenext wf_nodenextorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_nodenext
    ADD CONSTRAINT wf_nodenextorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_wf_node wf_nodeorg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_wf_node
    ADD CONSTRAINT wf_nodeorg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_window windowclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window
    ADD CONSTRAINT windowclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_window windoworg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_window
    ADD CONSTRAINT windoworg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_usermail wmailmsg_adusermail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_usermail
    ADD CONSTRAINT wmailmsg_adusermail FOREIGN KEY (w_mailmsg_id) REFERENCES adempiere.w_mailmsg(w_mailmsg_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_mailmsg_trl wmailmsg_wmailmsgtrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_mailmsg_trl
    ADD CONSTRAINT wmailmsg_wmailmsgtrl FOREIGN KEY (w_mailmsg_id) REFERENCES adempiere.w_mailmsg(w_mailmsg_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_section wmarea_wmsection; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_section
    ADD CONSTRAINT wmarea_wmsection FOREIGN KEY (wm_area_id) REFERENCES adempiere.wm_area(wm_area_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_area wmareatype_wmarea; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_area
    ADD CONSTRAINT wmareatype_wmarea FOREIGN KEY (wm_area_type_id) REFERENCES adempiere.wm_area_type(wm_area_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_definition wmareatype_wmdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_definition
    ADD CONSTRAINT wmareatype_wmdefinition FOREIGN KEY (wm_area_type_id) REFERENCES adempiere.wm_area_type(wm_area_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_freight wminoutbound_ddfreight; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_freight
    ADD CONSTRAINT wminoutbound_ddfreight FOREIGN KEY (wm_inoutbound_id) REFERENCES adempiere.wm_inoutbound(wm_inoutbound_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundline wminoutbound_wminoutboundline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundline
    ADD CONSTRAINT wminoutbound_wminoutboundline FOREIGN KEY (wm_inoutbound_id) REFERENCES adempiere.wm_inoutbound(wm_inoutbound_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: dd_orderline wminoutboundline_ddorderline; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.dd_orderline
    ADD CONSTRAINT wminoutboundline_ddorderline FOREIGN KEY (wm_inoutboundline_id) REFERENCES adempiere.wm_inoutboundline(wm_inoutboundline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_inoutboundlinema wminoutboundline_wminoutboundl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_inoutboundlinema
    ADD CONSTRAINT wminoutboundline_wminoutboundl FOREIGN KEY (wm_inoutboundline_id) REFERENCES adempiere.wm_inoutboundline(wm_inoutboundline_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_strategy_detail wmrule_wmstrategydetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_strategy_detail
    ADD CONSTRAINT wmrule_wmstrategydetail FOREIGN KEY (wm_rule_id) REFERENCES adempiere.wm_rule(wm_rule_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_section_detail wmsection_wmsectiondetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_section_detail
    ADD CONSTRAINT wmsection_wmsectiondetail FOREIGN KEY (wm_section_id) REFERENCES adempiere.wm_section(wm_section_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_definition wmsectiontype_wmdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_definition
    ADD CONSTRAINT wmsectiontype_wmdefinition FOREIGN KEY (wm_section_type_id) REFERENCES adempiere.wm_section_type(wm_section_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_section wmsectiontype_wmsection; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_section
    ADD CONSTRAINT wmsectiontype_wmsection FOREIGN KEY (wm_section_type_id) REFERENCES adempiere.wm_section_type(wm_section_type_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_definition wmstrategy_wmdefinition; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_definition
    ADD CONSTRAINT wmstrategy_wmdefinition FOREIGN KEY (wm_strategy_id) REFERENCES adempiere.wm_strategy(wm_strategy_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wm_strategy_detail wmstrategy_wmstrategydetail; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.wm_strategy_detail
    ADD CONSTRAINT wmstrategy_wmstrategydetail FOREIGN KEY (wm_strategy_id) REFERENCES adempiere.wm_strategy(wm_strategy_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pp_order_node workflow_ppordernode; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pp_order_node
    ADD CONSTRAINT workflow_ppordernode FOREIGN KEY (workflow_id) REFERENCES adempiere.ad_workflow(ad_workflow_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow workflowclient; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow
    ADD CONSTRAINT workflowclient FOREIGN KEY (ad_client_id) REFERENCES adempiere.ad_client(ad_client_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ad_workflow workfloworg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ad_workflow
    ADD CONSTRAINT workfloworg FOREIGN KEY (ad_org_id) REFERENCES adempiere.ad_org(ad_org_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_mailmsg wstore_wmailmsg; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_mailmsg
    ADD CONSTRAINT wstore_wmailmsg FOREIGN KEY (w_store_id) REFERENCES adempiere.w_store(w_store_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_store_trl wstore_wstoretrl; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_store_trl
    ADD CONSTRAINT wstore_wstoretrl FOREIGN KEY (w_store_id) REFERENCES adempiere.w_store(w_store_id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: w_store_trl wstoretrl_adlangauge; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.w_store_trl
    ADD CONSTRAINT wstoretrl_adlangauge FOREIGN KEY (ad_language) REFERENCES adempiere.ad_language(ad_language) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ws_webservicemethod wswebservice_wswebservicemetho; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicemethod
    ADD CONSTRAINT wswebservice_wswebservicemetho FOREIGN KEY (ws_webservice_id) REFERENCES adempiere.ws_webservice(ws_webservice_id);


--
-- Name: ws_webservicetype wswebservice_wswebservicetype; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicetype
    ADD CONSTRAINT wswebservice_wswebservicetype FOREIGN KEY (ws_webservice_id) REFERENCES adempiere.ws_webservice(ws_webservice_id);


--
-- Name: ws_webservicetype wswebservicemethod_wswebservic; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicetype
    ADD CONSTRAINT wswebservicemethod_wswebservic FOREIGN KEY (ws_webservicemethod_id) REFERENCES adempiere.ws_webservicemethod(ws_webservicemethod_id);


--
-- Name: ws_webservice_para wswebservicetype_wswebservicep; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservice_para
    ADD CONSTRAINT wswebservicetype_wswebservicep FOREIGN KEY (ws_webservicetype_id) REFERENCES adempiere.ws_webservicetype(ws_webservicetype_id);


--
-- Name: ws_webservicetypeaccess wswebservicetype_wswebservicet; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicetypeaccess
    ADD CONSTRAINT wswebservicetype_wswebservicet FOREIGN KEY (ws_webservicetype_id) REFERENCES adempiere.ws_webservicetype(ws_webservicetype_id);


--
-- Name: ws_webservicefieldinput wswebservicetype_wswebservicfi; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicefieldinput
    ADD CONSTRAINT wswebservicetype_wswebservicfi FOREIGN KEY (ws_webservicetype_id) REFERENCES adempiere.ws_webservicetype(ws_webservicetype_id);


--
-- Name: ws_webservicefieldoutput wswebservicetype_wswebservicfo; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.ws_webservicefieldoutput
    ADD CONSTRAINT wswebservicetype_wswebservicfo FOREIGN KEY (ws_webservicetype_id) REFERENCES adempiere.ws_webservicetype(ws_webservicetype_id);


--
-- Name: pa_dashboardcontent zoomfield_padashboardcontent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_dashboardcontent
    ADD CONSTRAINT zoomfield_padashboardcontent FOREIGN KEY (zoom_field_id) REFERENCES adempiere.ad_browse_field(ad_browse_field_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_dashboardcontent zoomtab_padashboardcontent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_dashboardcontent
    ADD CONSTRAINT zoomtab_padashboardcontent FOREIGN KEY (zoom_tab_id) REFERENCES adempiere.ad_tab(ad_tab_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pa_dashboardcontent zoomwindow_padashboardcontent; Type: FK CONSTRAINT; Schema: adempiere; Owner: adempiere
--

ALTER TABLE ONLY adempiere.pa_dashboardcontent
    ADD CONSTRAINT zoomwindow_padashboardcontent FOREIGN KEY (zoom_window_id) REFERENCES adempiere.ad_window(ad_window_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

